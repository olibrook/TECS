// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/02/Inc16.hdl

/**
 * 16-bit incrementer: out = in + 1 (arithmetic addition)
 */

CHIP Inc16 {
    IN in[16];
    OUT out[16];

    PARTS:
        // Generate a signal we know will always be a '1' and feed that into
        // the carry in of a sixteen-bit adder.
        //
        // It might be nicer to modify the interface of the 16-bit adder we have
        // to allow carry in and carry out.
        
        Not(in=in[0], out=notin0);
        And(a=in[0], b=notin0, out=zero);
        Not(in=zero, out=one);
        
        FullAdder(a=in[0], b=zero, c=one, sum=out[0], carry=c0);
        FullAdder(a=in[1], b=zero, c=c0, sum=out[1], carry=c1);
        FullAdder(a=in[2], b=zero, c=c1, sum=out[2], carry=c2);
        FullAdder(a=in[3], b=zero, c=c2, sum=out[3], carry=c3);
        FullAdder(a=in[4], b=zero, c=c3, sum=out[4], carry=c4);
        FullAdder(a=in[5], b=zero, c=c4, sum=out[5], carry=c5);
        FullAdder(a=in[6], b=zero, c=c5, sum=out[6], carry=c6);
        FullAdder(a=in[7], b=zero, c=c6, sum=out[7], carry=c7);
        FullAdder(a=in[8], b=zero, c=c7, sum=out[8], carry=c8);
        FullAdder(a=in[9], b=zero, c=c8, sum=out[9], carry=c9);
        FullAdder(a=in[10], b=zero, c=c9, sum=out[10], carry=c10);
        FullAdder(a=in[11], b=zero, c=c10, sum=out[11], carry=c11);
        FullAdder(a=in[12], b=zero, c=c11, sum=out[12], carry=c12);
        FullAdder(a=in[13], b=zero, c=c12, sum=out[13], carry=c13);
        FullAdder(a=in[14], b=zero, c=c13, sum=out[14], carry=c14);
        FullAdder(a=in[15], b=zero, c=c14, sum=out[15]);
}
