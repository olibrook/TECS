@256                                                         // [0    ] Init
D=A                                                          // [1    ] Init
@SP                                                          // [2    ] Init
M=D                                                          // [3    ] Init
@0                                                           // [4    ] Init
D=A                                                          // [5    ] Init
@R13                                                         // [6    ] Init
M=D                                                          // [7    ] Init
@Sys.init                                                    // [8    ] Init
D=A                                                          // [9    ] Init
@R14                                                         // [10   ] Init
M=D                                                          // [11   ] Init
@return-0                                                    // [12   ] Init
D=A                                                          // [13   ] Init
@CALL                                                        // [14   ] Init
0;JEQ                                                        // [15   ] Init
(return-0)                                                   // [     ] Init
@END_INTERNAL_FUNCTIONS                                      // [16   ] VM Internals
0;JEQ                                                        // [17   ] VM Internals
(CALL)                                                       // [     ] VM Internals
@SP                                                          // [18   ] VM Internals
M=M+1                                                        // [19   ] VM Internals
A=M-1                                                        // [20   ] VM Internals
M=D                                                          // [21   ] VM Internals
@LCL                                                         // [22   ] VM Internals
D=M                                                          // [23   ] VM Internals
@SP                                                          // [24   ] VM Internals
M=M+1                                                        // [25   ] VM Internals
A=M-1                                                        // [26   ] VM Internals
M=D                                                          // [27   ] VM Internals
@ARG                                                         // [28   ] VM Internals
D=M                                                          // [29   ] VM Internals
@SP                                                          // [30   ] VM Internals
M=M+1                                                        // [31   ] VM Internals
A=M-1                                                        // [32   ] VM Internals
M=D                                                          // [33   ] VM Internals
@THIS                                                        // [34   ] VM Internals
D=M                                                          // [35   ] VM Internals
@SP                                                          // [36   ] VM Internals
M=M+1                                                        // [37   ] VM Internals
A=M-1                                                        // [38   ] VM Internals
M=D                                                          // [39   ] VM Internals
@THAT                                                        // [40   ] VM Internals
D=M                                                          // [41   ] VM Internals
@SP                                                          // [42   ] VM Internals
M=M+1                                                        // [43   ] VM Internals
A=M-1                                                        // [44   ] VM Internals
M=D                                                          // [45   ] VM Internals
@SP                                                          // [46   ] VM Internals
D=M                                                          // [47   ] VM Internals
@13                                                          // [48   ] VM Internals
D=D-M                                                        // [49   ] VM Internals
@5                                                           // [50   ] VM Internals
D=D-A                                                        // [51   ] VM Internals
@ARG                                                         // [52   ] VM Internals
M=D                                                          // [53   ] VM Internals
@SP                                                          // [54   ] VM Internals
D=M                                                          // [55   ] VM Internals
@LCL                                                         // [56   ] VM Internals
M=D                                                          // [57   ] VM Internals
@14                                                          // [58   ] VM Internals
A=M                                                          // [59   ] VM Internals
0;JEQ                                                        // [60   ] VM Internals
(RETURN)                                                     // [     ] VM Internals
@LCL                                                         // [61   ] VM Internals
D=M                                                          // [62   ] VM Internals
@R13                                                         // [63   ] VM Internals
M=D                                                          // [64   ] VM Internals
@5                                                           // [65   ] VM Internals
A=D-A                                                        // [66   ] VM Internals
D=M                                                          // [67   ] VM Internals
@R14                                                         // [68   ] VM Internals
M=D                                                          // [69   ] VM Internals
@SP                                                          // [70   ] VM Internals
AM=M-1                                                       // [71   ] VM Internals
D=M                                                          // [72   ] VM Internals
@ARG                                                         // [73   ] VM Internals
A=M                                                          // [74   ] VM Internals
M=D                                                          // [75   ] VM Internals
@ARG                                                         // [76   ] VM Internals
A=M+1                                                        // [77   ] VM Internals
D=A                                                          // [78   ] VM Internals
@SP                                                          // [79   ] VM Internals
M=D                                                          // [80   ] VM Internals
@R13                                                         // [81   ] VM Internals
D=M                                                          // [82   ] VM Internals
@1                                                           // [83   ] VM Internals
A=D-A                                                        // [84   ] VM Internals
D=M                                                          // [85   ] VM Internals
@THAT                                                        // [86   ] VM Internals
M=D                                                          // [87   ] VM Internals
@R13                                                         // [88   ] VM Internals
D=M                                                          // [89   ] VM Internals
@2                                                           // [90   ] VM Internals
A=D-A                                                        // [91   ] VM Internals
D=M                                                          // [92   ] VM Internals
@THIS                                                        // [93   ] VM Internals
M=D                                                          // [94   ] VM Internals
@R13                                                         // [95   ] VM Internals
D=M                                                          // [96   ] VM Internals
@3                                                           // [97   ] VM Internals
A=D-A                                                        // [98   ] VM Internals
D=M                                                          // [99   ] VM Internals
@ARG                                                         // [100  ] VM Internals
M=D                                                          // [101  ] VM Internals
@R13                                                         // [102  ] VM Internals
D=M                                                          // [103  ] VM Internals
@4                                                           // [104  ] VM Internals
A=D-A                                                        // [105  ] VM Internals
D=M                                                          // [106  ] VM Internals
@LCL                                                         // [107  ] VM Internals
M=D                                                          // [108  ] VM Internals
@R14                                                         // [109  ] VM Internals
A=M                                                          // [110  ] VM Internals
0;JEQ                                                        // [111  ] VM Internals
(INTERNAL_EQ)                                                // [     ] VM Internals
@IF_EQ                                                       // [112  ] VM Internals
D;JEQ                                                        // [113  ] VM Internals
@SP                                                          // [114  ] VM Internals
A=M-1                                                        // [115  ] VM Internals
M=0                                                          // [116  ] VM Internals
@EQ_END                                                      // [117  ] VM Internals
0;JMP                                                        // [118  ] VM Internals
(IF_EQ)                                                      // [     ] VM Internals
@SP                                                          // [119  ] VM Internals
A=M-1                                                        // [120  ] VM Internals
M=-1                                                         // [121  ] VM Internals
(EQ_END)                                                     // [     ] VM Internals
@R13                                                         // [122  ] VM Internals
A=M                                                          // [123  ] VM Internals
0;JEQ                                                        // [124  ] VM Internals
(INTERNAL_GT)                                                // [     ] VM Internals
@IF_GT                                                       // [125  ] VM Internals
D;JLT                                                        // [126  ] VM Internals
@SP                                                          // [127  ] VM Internals
A=M-1                                                        // [128  ] VM Internals
M=0                                                          // [129  ] VM Internals
@GT_END                                                      // [130  ] VM Internals
0;JMP                                                        // [131  ] VM Internals
(IF_GT)                                                      // [     ] VM Internals
@SP                                                          // [132  ] VM Internals
A=M-1                                                        // [133  ] VM Internals
M=-1                                                         // [134  ] VM Internals
(GT_END)                                                     // [     ] VM Internals
@R13                                                         // [135  ] VM Internals
A=M                                                          // [136  ] VM Internals
0;JEQ                                                        // [137  ] VM Internals
(INTERNAL_LT)                                                // [     ] VM Internals
@IF_LT                                                       // [138  ] VM Internals
D;JGT                                                        // [139  ] VM Internals
@SP                                                          // [140  ] VM Internals
A=M-1                                                        // [141  ] VM Internals
M=0                                                          // [142  ] VM Internals
@LT_END                                                      // [143  ] VM Internals
0;JMP                                                        // [144  ] VM Internals
(IF_LT)                                                      // [     ] VM Internals
@SP                                                          // [145  ] VM Internals
A=M-1                                                        // [146  ] VM Internals
M=-1                                                         // [147  ] VM Internals
(LT_END)                                                     // [     ] VM Internals
@R13                                                         // [148  ] VM Internals
A=M                                                          // [149  ] VM Internals
0;JEQ                                                        // [150  ] VM Internals
(END_INTERNAL_FUNCTIONS)                                     // [     ] VM Internals
(Array.new)                                                  // [     ] function Array.new 0
@ARG                                                         // [151  ] push argument 0
D=M                                                          // [152  ] push argument 0
@0                                                           // [153  ] push argument 0
A=D+A                                                        // [154  ] push argument 0
D=M                                                          // [155  ] push argument 0
@SP                                                          // [156  ] push argument 0
M=M+1                                                        // [157  ] push argument 0
A=M-1                                                        // [158  ] push argument 0
M=D                                                          // [159  ] push argument 0
@SP                                                          // [160  ] push constant 0
M=M+1                                                        // [161  ] push constant 0
A=M-1                                                        // [162  ] push constant 0
M=0                                                          // [163  ] push constant 0
@CONTINUE_GT_0                                               // [164  ] gt
D=A                                                          // [165  ] gt
@R13                                                         // [166  ] gt
M=D                                                          // [167  ] gt
@SP                                                          // [168  ] gt
AM=M-1                                                       // [169  ] gt
D=M                                                          // [170  ] gt
A=A-1                                                        // [171  ] gt
D=D-M                                                        // [172  ] gt
@INTERNAL_GT                                                 // [173  ] gt
0;JEQ                                                        // [174  ] gt
(CONTINUE_GT_0)                                              // [     ] gt
@SP                                                          // [175  ] not
A=M-1                                                        // [176  ] not
D=M                                                          // [177  ] not
M=!D                                                         // [178  ] not
@SP                                                          // [179  ] if-goto IF_TRUE0
AM=M-1                                                       // [180  ] if-goto IF_TRUE0
D=M                                                          // [181  ] if-goto IF_TRUE0
@Array.new$IF_TRUE0                                          // [182  ] if-goto IF_TRUE0
D;JNE                                                        // [183  ] if-goto IF_TRUE0
@Array.new$IF_FALSE0                                         // [184  ] goto IF_FALSE0
0;JEQ                                                        // [185  ] goto IF_FALSE0
(Array.new$IF_TRUE0)                                         // [     ] label IF_TRUE0
@SP                                                          // [186  ] push constant 2
M=M+1                                                        // [187  ] push constant 2
A=M-1                                                        // [188  ] push constant 2
M=1                                                          // [189  ] push constant 2
M=M+1                                                        // [190  ] push constant 2
@1                                                           // [191  ] call Sys.error 1
D=A                                                          // [192  ] call Sys.error 1
@R13                                                         // [193  ] call Sys.error 1
M=D                                                          // [194  ] call Sys.error 1
@Sys.error                                                   // [195  ] call Sys.error 1
D=A                                                          // [196  ] call Sys.error 1
@R14                                                         // [197  ] call Sys.error 1
M=D                                                          // [198  ] call Sys.error 1
@return-1                                                    // [199  ] call Sys.error 1
D=A                                                          // [200  ] call Sys.error 1
@CALL                                                        // [201  ] call Sys.error 1
0;JEQ                                                        // [202  ] call Sys.error 1
(return-1)                                                   // [     ] call Sys.error 1
@SP                                                          // [203  ] pop temp 0
AM=M-1                                                       // [204  ] pop temp 0
D=M                                                          // [205  ] pop temp 0
@5                                                           // [206  ] pop temp 0
M=D                                                          // [207  ] pop temp 0
(Array.new$IF_FALSE0)                                        // [     ] label IF_FALSE0
@ARG                                                         // [208  ] push argument 0
D=M                                                          // [209  ] push argument 0
@0                                                           // [210  ] push argument 0
A=D+A                                                        // [211  ] push argument 0
D=M                                                          // [212  ] push argument 0
@SP                                                          // [213  ] push argument 0
M=M+1                                                        // [214  ] push argument 0
A=M-1                                                        // [215  ] push argument 0
M=D                                                          // [216  ] push argument 0
@1                                                           // [217  ] call Memory.alloc 1
D=A                                                          // [218  ] call Memory.alloc 1
@R13                                                         // [219  ] call Memory.alloc 1
M=D                                                          // [220  ] call Memory.alloc 1
@Memory.alloc                                                // [221  ] call Memory.alloc 1
D=A                                                          // [222  ] call Memory.alloc 1
@R14                                                         // [223  ] call Memory.alloc 1
M=D                                                          // [224  ] call Memory.alloc 1
@return-2                                                    // [225  ] call Memory.alloc 1
D=A                                                          // [226  ] call Memory.alloc 1
@CALL                                                        // [227  ] call Memory.alloc 1
0;JEQ                                                        // [228  ] call Memory.alloc 1
(return-2)                                                   // [     ] call Memory.alloc 1
@RETURN                                                      // [229  ] return
0;JEQ                                                        // [230  ] return
(Array.dispose)                                              // [     ] function Array.dispose 0
@ARG                                                         // [231  ] push argument 0
D=M                                                          // [232  ] push argument 0
@0                                                           // [233  ] push argument 0
A=D+A                                                        // [234  ] push argument 0
D=M                                                          // [235  ] push argument 0
@SP                                                          // [236  ] push argument 0
M=M+1                                                        // [237  ] push argument 0
A=M-1                                                        // [238  ] push argument 0
M=D                                                          // [239  ] push argument 0
@SP                                                          // [240  ] pop pointer 0
AM=M-1                                                       // [241  ] pop pointer 0
D=M                                                          // [242  ] pop pointer 0
@3                                                           // [243  ] pop pointer 0
M=D                                                          // [244  ] pop pointer 0
@3                                                           // [245  ] push pointer 0
D=M                                                          // [246  ] push pointer 0
@SP                                                          // [247  ] push pointer 0
M=M+1                                                        // [248  ] push pointer 0
A=M-1                                                        // [249  ] push pointer 0
M=D                                                          // [250  ] push pointer 0
@1                                                           // [251  ] call Memory.deAlloc 1
D=A                                                          // [252  ] call Memory.deAlloc 1
@R13                                                         // [253  ] call Memory.deAlloc 1
M=D                                                          // [254  ] call Memory.deAlloc 1
@Memory.deAlloc                                              // [255  ] call Memory.deAlloc 1
D=A                                                          // [256  ] call Memory.deAlloc 1
@R14                                                         // [257  ] call Memory.deAlloc 1
M=D                                                          // [258  ] call Memory.deAlloc 1
@return-3                                                    // [259  ] call Memory.deAlloc 1
D=A                                                          // [260  ] call Memory.deAlloc 1
@CALL                                                        // [261  ] call Memory.deAlloc 1
0;JEQ                                                        // [262  ] call Memory.deAlloc 1
(return-3)                                                   // [     ] call Memory.deAlloc 1
@SP                                                          // [263  ] pop temp 0
AM=M-1                                                       // [264  ] pop temp 0
D=M                                                          // [265  ] pop temp 0
@5                                                           // [266  ] pop temp 0
M=D                                                          // [267  ] pop temp 0
@SP                                                          // [268  ] push constant 0
M=M+1                                                        // [269  ] push constant 0
A=M-1                                                        // [270  ] push constant 0
M=0                                                          // [271  ] push constant 0
@RETURN                                                      // [272  ] return
0;JEQ                                                        // [273  ] return
(Ball.new)                                                   // [     ] function Ball.new 0
@15                                                          // [274  ] push constant 15
D=A                                                          // [275  ] push constant 15
@SP                                                          // [276  ] push constant 15
M=M+1                                                        // [277  ] push constant 15
A=M-1                                                        // [278  ] push constant 15
M=D                                                          // [279  ] push constant 15
@1                                                           // [280  ] call Memory.alloc 1
D=A                                                          // [281  ] call Memory.alloc 1
@R13                                                         // [282  ] call Memory.alloc 1
M=D                                                          // [283  ] call Memory.alloc 1
@Memory.alloc                                                // [284  ] call Memory.alloc 1
D=A                                                          // [285  ] call Memory.alloc 1
@R14                                                         // [286  ] call Memory.alloc 1
M=D                                                          // [287  ] call Memory.alloc 1
@return-4                                                    // [288  ] call Memory.alloc 1
D=A                                                          // [289  ] call Memory.alloc 1
@CALL                                                        // [290  ] call Memory.alloc 1
0;JEQ                                                        // [291  ] call Memory.alloc 1
(return-4)                                                   // [     ] call Memory.alloc 1
@SP                                                          // [292  ] pop pointer 0
AM=M-1                                                       // [293  ] pop pointer 0
D=M                                                          // [294  ] pop pointer 0
@3                                                           // [295  ] pop pointer 0
M=D                                                          // [296  ] pop pointer 0
@ARG                                                         // [297  ] push argument 0
D=M                                                          // [298  ] push argument 0
@0                                                           // [299  ] push argument 0
A=D+A                                                        // [300  ] push argument 0
D=M                                                          // [301  ] push argument 0
@SP                                                          // [302  ] push argument 0
M=M+1                                                        // [303  ] push argument 0
A=M-1                                                        // [304  ] push argument 0
M=D                                                          // [305  ] push argument 0
@SP                                                          // [306  ] pop this 0
AM=M-1                                                       // [307  ] pop this 0
D=M                                                          // [308  ] pop this 0
@R13                                                         // [309  ] pop this 0
M=D                                                          // [310  ] pop this 0
@THIS                                                        // [311  ] pop this 0
D=M                                                          // [312  ] pop this 0
@0                                                           // [313  ] pop this 0
D=D+A                                                        // [314  ] pop this 0
@R14                                                         // [315  ] pop this 0
M=D                                                          // [316  ] pop this 0
@R13                                                         // [317  ] pop this 0
D=M                                                          // [318  ] pop this 0
@R14                                                         // [319  ] pop this 0
A=M                                                          // [320  ] pop this 0
M=D                                                          // [321  ] pop this 0
@ARG                                                         // [322  ] push argument 1
D=M                                                          // [323  ] push argument 1
@1                                                           // [324  ] push argument 1
A=D+A                                                        // [325  ] push argument 1
D=M                                                          // [326  ] push argument 1
@SP                                                          // [327  ] push argument 1
M=M+1                                                        // [328  ] push argument 1
A=M-1                                                        // [329  ] push argument 1
M=D                                                          // [330  ] push argument 1
@SP                                                          // [331  ] pop this 1
AM=M-1                                                       // [332  ] pop this 1
D=M                                                          // [333  ] pop this 1
@R13                                                         // [334  ] pop this 1
M=D                                                          // [335  ] pop this 1
@THIS                                                        // [336  ] pop this 1
D=M                                                          // [337  ] pop this 1
@1                                                           // [338  ] pop this 1
D=D+A                                                        // [339  ] pop this 1
@R14                                                         // [340  ] pop this 1
M=D                                                          // [341  ] pop this 1
@R13                                                         // [342  ] pop this 1
D=M                                                          // [343  ] pop this 1
@R14                                                         // [344  ] pop this 1
A=M                                                          // [345  ] pop this 1
M=D                                                          // [346  ] pop this 1
@ARG                                                         // [347  ] push argument 2
D=M                                                          // [348  ] push argument 2
@2                                                           // [349  ] push argument 2
A=D+A                                                        // [350  ] push argument 2
D=M                                                          // [351  ] push argument 2
@SP                                                          // [352  ] push argument 2
M=M+1                                                        // [353  ] push argument 2
A=M-1                                                        // [354  ] push argument 2
M=D                                                          // [355  ] push argument 2
@SP                                                          // [356  ] pop this 10
AM=M-1                                                       // [357  ] pop this 10
D=M                                                          // [358  ] pop this 10
@R13                                                         // [359  ] pop this 10
M=D                                                          // [360  ] pop this 10
@THIS                                                        // [361  ] pop this 10
D=M                                                          // [362  ] pop this 10
@10                                                          // [363  ] pop this 10
D=D+A                                                        // [364  ] pop this 10
@R14                                                         // [365  ] pop this 10
M=D                                                          // [366  ] pop this 10
@R13                                                         // [367  ] pop this 10
D=M                                                          // [368  ] pop this 10
@R14                                                         // [369  ] pop this 10
A=M                                                          // [370  ] pop this 10
M=D                                                          // [371  ] pop this 10
@ARG                                                         // [372  ] push argument 3
D=M                                                          // [373  ] push argument 3
@3                                                           // [374  ] push argument 3
A=D+A                                                        // [375  ] push argument 3
D=M                                                          // [376  ] push argument 3
@SP                                                          // [377  ] push argument 3
M=M+1                                                        // [378  ] push argument 3
A=M-1                                                        // [379  ] push argument 3
M=D                                                          // [380  ] push argument 3
@6                                                           // [381  ] push constant 6
D=A                                                          // [382  ] push constant 6
@SP                                                          // [383  ] push constant 6
M=M+1                                                        // [384  ] push constant 6
A=M-1                                                        // [385  ] push constant 6
M=D                                                          // [386  ] push constant 6
@SP                                                          // [387  ] sub
AM=M-1                                                       // [388  ] sub
D=M                                                          // [389  ] sub
A=A-1                                                        // [390  ] sub
M=M-D                                                        // [391  ] sub
@SP                                                          // [392  ] pop this 11
AM=M-1                                                       // [393  ] pop this 11
D=M                                                          // [394  ] pop this 11
@R13                                                         // [395  ] pop this 11
M=D                                                          // [396  ] pop this 11
@THIS                                                        // [397  ] pop this 11
D=M                                                          // [398  ] pop this 11
@11                                                          // [399  ] pop this 11
D=D+A                                                        // [400  ] pop this 11
@R14                                                         // [401  ] pop this 11
M=D                                                          // [402  ] pop this 11
@R13                                                         // [403  ] pop this 11
D=M                                                          // [404  ] pop this 11
@R14                                                         // [405  ] pop this 11
A=M                                                          // [406  ] pop this 11
M=D                                                          // [407  ] pop this 11
@ARG                                                         // [408  ] push argument 4
D=M                                                          // [409  ] push argument 4
@4                                                           // [410  ] push argument 4
A=D+A                                                        // [411  ] push argument 4
D=M                                                          // [412  ] push argument 4
@SP                                                          // [413  ] push argument 4
M=M+1                                                        // [414  ] push argument 4
A=M-1                                                        // [415  ] push argument 4
M=D                                                          // [416  ] push argument 4
@SP                                                          // [417  ] pop this 12
AM=M-1                                                       // [418  ] pop this 12
D=M                                                          // [419  ] pop this 12
@R13                                                         // [420  ] pop this 12
M=D                                                          // [421  ] pop this 12
@THIS                                                        // [422  ] pop this 12
D=M                                                          // [423  ] pop this 12
@12                                                          // [424  ] pop this 12
D=D+A                                                        // [425  ] pop this 12
@R14                                                         // [426  ] pop this 12
M=D                                                          // [427  ] pop this 12
@R13                                                         // [428  ] pop this 12
D=M                                                          // [429  ] pop this 12
@R14                                                         // [430  ] pop this 12
A=M                                                          // [431  ] pop this 12
M=D                                                          // [432  ] pop this 12
@ARG                                                         // [433  ] push argument 5
D=M                                                          // [434  ] push argument 5
@5                                                           // [435  ] push argument 5
A=D+A                                                        // [436  ] push argument 5
D=M                                                          // [437  ] push argument 5
@SP                                                          // [438  ] push argument 5
M=M+1                                                        // [439  ] push argument 5
A=M-1                                                        // [440  ] push argument 5
M=D                                                          // [441  ] push argument 5
@6                                                           // [442  ] push constant 6
D=A                                                          // [443  ] push constant 6
@SP                                                          // [444  ] push constant 6
M=M+1                                                        // [445  ] push constant 6
A=M-1                                                        // [446  ] push constant 6
M=D                                                          // [447  ] push constant 6
@SP                                                          // [448  ] sub
AM=M-1                                                       // [449  ] sub
D=M                                                          // [450  ] sub
A=A-1                                                        // [451  ] sub
M=M-D                                                        // [452  ] sub
@SP                                                          // [453  ] pop this 13
AM=M-1                                                       // [454  ] pop this 13
D=M                                                          // [455  ] pop this 13
@R13                                                         // [456  ] pop this 13
M=D                                                          // [457  ] pop this 13
@THIS                                                        // [458  ] pop this 13
D=M                                                          // [459  ] pop this 13
@13                                                          // [460  ] pop this 13
D=D+A                                                        // [461  ] pop this 13
@R14                                                         // [462  ] pop this 13
M=D                                                          // [463  ] pop this 13
@R13                                                         // [464  ] pop this 13
D=M                                                          // [465  ] pop this 13
@R14                                                         // [466  ] pop this 13
A=M                                                          // [467  ] pop this 13
M=D                                                          // [468  ] pop this 13
@SP                                                          // [469  ] push constant 0
M=M+1                                                        // [470  ] push constant 0
A=M-1                                                        // [471  ] push constant 0
M=0                                                          // [472  ] push constant 0
@SP                                                          // [473  ] pop this 14
AM=M-1                                                       // [474  ] pop this 14
D=M                                                          // [475  ] pop this 14
@R13                                                         // [476  ] pop this 14
M=D                                                          // [477  ] pop this 14
@THIS                                                        // [478  ] pop this 14
D=M                                                          // [479  ] pop this 14
@14                                                          // [480  ] pop this 14
D=D+A                                                        // [481  ] pop this 14
@R14                                                         // [482  ] pop this 14
M=D                                                          // [483  ] pop this 14
@R13                                                         // [484  ] pop this 14
D=M                                                          // [485  ] pop this 14
@R14                                                         // [486  ] pop this 14
A=M                                                          // [487  ] pop this 14
M=D                                                          // [488  ] pop this 14
@3                                                           // [489  ] push pointer 0
D=M                                                          // [490  ] push pointer 0
@SP                                                          // [491  ] push pointer 0
M=M+1                                                        // [492  ] push pointer 0
A=M-1                                                        // [493  ] push pointer 0
M=D                                                          // [494  ] push pointer 0
@1                                                           // [495  ] call Ball.show 1
D=A                                                          // [496  ] call Ball.show 1
@R13                                                         // [497  ] call Ball.show 1
M=D                                                          // [498  ] call Ball.show 1
@Ball.show                                                   // [499  ] call Ball.show 1
D=A                                                          // [500  ] call Ball.show 1
@R14                                                         // [501  ] call Ball.show 1
M=D                                                          // [502  ] call Ball.show 1
@return-5                                                    // [503  ] call Ball.show 1
D=A                                                          // [504  ] call Ball.show 1
@CALL                                                        // [505  ] call Ball.show 1
0;JEQ                                                        // [506  ] call Ball.show 1
(return-5)                                                   // [     ] call Ball.show 1
@SP                                                          // [507  ] pop temp 0
AM=M-1                                                       // [508  ] pop temp 0
D=M                                                          // [509  ] pop temp 0
@5                                                           // [510  ] pop temp 0
M=D                                                          // [511  ] pop temp 0
@3                                                           // [512  ] push pointer 0
D=M                                                          // [513  ] push pointer 0
@SP                                                          // [514  ] push pointer 0
M=M+1                                                        // [515  ] push pointer 0
A=M-1                                                        // [516  ] push pointer 0
M=D                                                          // [517  ] push pointer 0
@RETURN                                                      // [518  ] return
0;JEQ                                                        // [519  ] return
(Ball.dispose)                                               // [     ] function Ball.dispose 0
@ARG                                                         // [520  ] push argument 0
D=M                                                          // [521  ] push argument 0
@0                                                           // [522  ] push argument 0
A=D+A                                                        // [523  ] push argument 0
D=M                                                          // [524  ] push argument 0
@SP                                                          // [525  ] push argument 0
M=M+1                                                        // [526  ] push argument 0
A=M-1                                                        // [527  ] push argument 0
M=D                                                          // [528  ] push argument 0
@SP                                                          // [529  ] pop pointer 0
AM=M-1                                                       // [530  ] pop pointer 0
D=M                                                          // [531  ] pop pointer 0
@3                                                           // [532  ] pop pointer 0
M=D                                                          // [533  ] pop pointer 0
@3                                                           // [534  ] push pointer 0
D=M                                                          // [535  ] push pointer 0
@SP                                                          // [536  ] push pointer 0
M=M+1                                                        // [537  ] push pointer 0
A=M-1                                                        // [538  ] push pointer 0
M=D                                                          // [539  ] push pointer 0
@1                                                           // [540  ] call Memory.deAlloc 1
D=A                                                          // [541  ] call Memory.deAlloc 1
@R13                                                         // [542  ] call Memory.deAlloc 1
M=D                                                          // [543  ] call Memory.deAlloc 1
@Memory.deAlloc                                              // [544  ] call Memory.deAlloc 1
D=A                                                          // [545  ] call Memory.deAlloc 1
@R14                                                         // [546  ] call Memory.deAlloc 1
M=D                                                          // [547  ] call Memory.deAlloc 1
@return-6                                                    // [548  ] call Memory.deAlloc 1
D=A                                                          // [549  ] call Memory.deAlloc 1
@CALL                                                        // [550  ] call Memory.deAlloc 1
0;JEQ                                                        // [551  ] call Memory.deAlloc 1
(return-6)                                                   // [     ] call Memory.deAlloc 1
@SP                                                          // [552  ] pop temp 0
AM=M-1                                                       // [553  ] pop temp 0
D=M                                                          // [554  ] pop temp 0
@5                                                           // [555  ] pop temp 0
M=D                                                          // [556  ] pop temp 0
@SP                                                          // [557  ] push constant 0
M=M+1                                                        // [558  ] push constant 0
A=M-1                                                        // [559  ] push constant 0
M=0                                                          // [560  ] push constant 0
@RETURN                                                      // [561  ] return
0;JEQ                                                        // [562  ] return
(Ball.show)                                                  // [     ] function Ball.show 0
@ARG                                                         // [563  ] push argument 0
D=M                                                          // [564  ] push argument 0
@0                                                           // [565  ] push argument 0
A=D+A                                                        // [566  ] push argument 0
D=M                                                          // [567  ] push argument 0
@SP                                                          // [568  ] push argument 0
M=M+1                                                        // [569  ] push argument 0
A=M-1                                                        // [570  ] push argument 0
M=D                                                          // [571  ] push argument 0
@SP                                                          // [572  ] pop pointer 0
AM=M-1                                                       // [573  ] pop pointer 0
D=M                                                          // [574  ] pop pointer 0
@3                                                           // [575  ] pop pointer 0
M=D                                                          // [576  ] pop pointer 0
@SP                                                          // [577  ] push constant 0
M=M+1                                                        // [578  ] push constant 0
A=M-1                                                        // [579  ] push constant 0
M=0                                                          // [580  ] push constant 0
@SP                                                          // [581  ] not
A=M-1                                                        // [582  ] not
D=M                                                          // [583  ] not
M=!D                                                         // [584  ] not
@1                                                           // [585  ] call Screen.setColor 1
D=A                                                          // [586  ] call Screen.setColor 1
@R13                                                         // [587  ] call Screen.setColor 1
M=D                                                          // [588  ] call Screen.setColor 1
@Screen.setColor                                             // [589  ] call Screen.setColor 1
D=A                                                          // [590  ] call Screen.setColor 1
@R14                                                         // [591  ] call Screen.setColor 1
M=D                                                          // [592  ] call Screen.setColor 1
@return-7                                                    // [593  ] call Screen.setColor 1
D=A                                                          // [594  ] call Screen.setColor 1
@CALL                                                        // [595  ] call Screen.setColor 1
0;JEQ                                                        // [596  ] call Screen.setColor 1
(return-7)                                                   // [     ] call Screen.setColor 1
@SP                                                          // [597  ] pop temp 0
AM=M-1                                                       // [598  ] pop temp 0
D=M                                                          // [599  ] pop temp 0
@5                                                           // [600  ] pop temp 0
M=D                                                          // [601  ] pop temp 0
@3                                                           // [602  ] push pointer 0
D=M                                                          // [603  ] push pointer 0
@SP                                                          // [604  ] push pointer 0
M=M+1                                                        // [605  ] push pointer 0
A=M-1                                                        // [606  ] push pointer 0
M=D                                                          // [607  ] push pointer 0
@1                                                           // [608  ] call Ball.draw 1
D=A                                                          // [609  ] call Ball.draw 1
@R13                                                         // [610  ] call Ball.draw 1
M=D                                                          // [611  ] call Ball.draw 1
@Ball.draw                                                   // [612  ] call Ball.draw 1
D=A                                                          // [613  ] call Ball.draw 1
@R14                                                         // [614  ] call Ball.draw 1
M=D                                                          // [615  ] call Ball.draw 1
@return-8                                                    // [616  ] call Ball.draw 1
D=A                                                          // [617  ] call Ball.draw 1
@CALL                                                        // [618  ] call Ball.draw 1
0;JEQ                                                        // [619  ] call Ball.draw 1
(return-8)                                                   // [     ] call Ball.draw 1
@SP                                                          // [620  ] pop temp 0
AM=M-1                                                       // [621  ] pop temp 0
D=M                                                          // [622  ] pop temp 0
@5                                                           // [623  ] pop temp 0
M=D                                                          // [624  ] pop temp 0
@SP                                                          // [625  ] push constant 0
M=M+1                                                        // [626  ] push constant 0
A=M-1                                                        // [627  ] push constant 0
M=0                                                          // [628  ] push constant 0
@RETURN                                                      // [629  ] return
0;JEQ                                                        // [630  ] return
(Ball.hide)                                                  // [     ] function Ball.hide 0
@ARG                                                         // [631  ] push argument 0
D=M                                                          // [632  ] push argument 0
@0                                                           // [633  ] push argument 0
A=D+A                                                        // [634  ] push argument 0
D=M                                                          // [635  ] push argument 0
@SP                                                          // [636  ] push argument 0
M=M+1                                                        // [637  ] push argument 0
A=M-1                                                        // [638  ] push argument 0
M=D                                                          // [639  ] push argument 0
@SP                                                          // [640  ] pop pointer 0
AM=M-1                                                       // [641  ] pop pointer 0
D=M                                                          // [642  ] pop pointer 0
@3                                                           // [643  ] pop pointer 0
M=D                                                          // [644  ] pop pointer 0
@SP                                                          // [645  ] push constant 0
M=M+1                                                        // [646  ] push constant 0
A=M-1                                                        // [647  ] push constant 0
M=0                                                          // [648  ] push constant 0
@1                                                           // [649  ] call Screen.setColor 1
D=A                                                          // [650  ] call Screen.setColor 1
@R13                                                         // [651  ] call Screen.setColor 1
M=D                                                          // [652  ] call Screen.setColor 1
@Screen.setColor                                             // [653  ] call Screen.setColor 1
D=A                                                          // [654  ] call Screen.setColor 1
@R14                                                         // [655  ] call Screen.setColor 1
M=D                                                          // [656  ] call Screen.setColor 1
@return-9                                                    // [657  ] call Screen.setColor 1
D=A                                                          // [658  ] call Screen.setColor 1
@CALL                                                        // [659  ] call Screen.setColor 1
0;JEQ                                                        // [660  ] call Screen.setColor 1
(return-9)                                                   // [     ] call Screen.setColor 1
@SP                                                          // [661  ] pop temp 0
AM=M-1                                                       // [662  ] pop temp 0
D=M                                                          // [663  ] pop temp 0
@5                                                           // [664  ] pop temp 0
M=D                                                          // [665  ] pop temp 0
@3                                                           // [666  ] push pointer 0
D=M                                                          // [667  ] push pointer 0
@SP                                                          // [668  ] push pointer 0
M=M+1                                                        // [669  ] push pointer 0
A=M-1                                                        // [670  ] push pointer 0
M=D                                                          // [671  ] push pointer 0
@1                                                           // [672  ] call Ball.draw 1
D=A                                                          // [673  ] call Ball.draw 1
@R13                                                         // [674  ] call Ball.draw 1
M=D                                                          // [675  ] call Ball.draw 1
@Ball.draw                                                   // [676  ] call Ball.draw 1
D=A                                                          // [677  ] call Ball.draw 1
@R14                                                         // [678  ] call Ball.draw 1
M=D                                                          // [679  ] call Ball.draw 1
@return-10                                                   // [680  ] call Ball.draw 1
D=A                                                          // [681  ] call Ball.draw 1
@CALL                                                        // [682  ] call Ball.draw 1
0;JEQ                                                        // [683  ] call Ball.draw 1
(return-10)                                                  // [     ] call Ball.draw 1
@SP                                                          // [684  ] pop temp 0
AM=M-1                                                       // [685  ] pop temp 0
D=M                                                          // [686  ] pop temp 0
@5                                                           // [687  ] pop temp 0
M=D                                                          // [688  ] pop temp 0
@SP                                                          // [689  ] push constant 0
M=M+1                                                        // [690  ] push constant 0
A=M-1                                                        // [691  ] push constant 0
M=0                                                          // [692  ] push constant 0
@RETURN                                                      // [693  ] return
0;JEQ                                                        // [694  ] return
(Ball.draw)                                                  // [     ] function Ball.draw 0
@ARG                                                         // [695  ] push argument 0
D=M                                                          // [696  ] push argument 0
@0                                                           // [697  ] push argument 0
A=D+A                                                        // [698  ] push argument 0
D=M                                                          // [699  ] push argument 0
@SP                                                          // [700  ] push argument 0
M=M+1                                                        // [701  ] push argument 0
A=M-1                                                        // [702  ] push argument 0
M=D                                                          // [703  ] push argument 0
@SP                                                          // [704  ] pop pointer 0
AM=M-1                                                       // [705  ] pop pointer 0
D=M                                                          // [706  ] pop pointer 0
@3                                                           // [707  ] pop pointer 0
M=D                                                          // [708  ] pop pointer 0
@THIS                                                        // [709  ] push this 0
D=M                                                          // [710  ] push this 0
@0                                                           // [711  ] push this 0
A=D+A                                                        // [712  ] push this 0
D=M                                                          // [713  ] push this 0
@SP                                                          // [714  ] push this 0
M=M+1                                                        // [715  ] push this 0
A=M-1                                                        // [716  ] push this 0
M=D                                                          // [717  ] push this 0
@THIS                                                        // [718  ] push this 1
D=M                                                          // [719  ] push this 1
@1                                                           // [720  ] push this 1
A=D+A                                                        // [721  ] push this 1
D=M                                                          // [722  ] push this 1
@SP                                                          // [723  ] push this 1
M=M+1                                                        // [724  ] push this 1
A=M-1                                                        // [725  ] push this 1
M=D                                                          // [726  ] push this 1
@THIS                                                        // [727  ] push this 0
D=M                                                          // [728  ] push this 0
@0                                                           // [729  ] push this 0
A=D+A                                                        // [730  ] push this 0
D=M                                                          // [731  ] push this 0
@SP                                                          // [732  ] push this 0
M=M+1                                                        // [733  ] push this 0
A=M-1                                                        // [734  ] push this 0
M=D                                                          // [735  ] push this 0
@5                                                           // [736  ] push constant 5
D=A                                                          // [737  ] push constant 5
@SP                                                          // [738  ] push constant 5
M=M+1                                                        // [739  ] push constant 5
A=M-1                                                        // [740  ] push constant 5
M=D                                                          // [741  ] push constant 5
@SP                                                          // [742  ] add
AM=M-1                                                       // [743  ] add
D=M                                                          // [744  ] add
A=A-1                                                        // [745  ] add
M=D+M                                                        // [746  ] add
@THIS                                                        // [747  ] push this 1
D=M                                                          // [748  ] push this 1
@1                                                           // [749  ] push this 1
A=D+A                                                        // [750  ] push this 1
D=M                                                          // [751  ] push this 1
@SP                                                          // [752  ] push this 1
M=M+1                                                        // [753  ] push this 1
A=M-1                                                        // [754  ] push this 1
M=D                                                          // [755  ] push this 1
@5                                                           // [756  ] push constant 5
D=A                                                          // [757  ] push constant 5
@SP                                                          // [758  ] push constant 5
M=M+1                                                        // [759  ] push constant 5
A=M-1                                                        // [760  ] push constant 5
M=D                                                          // [761  ] push constant 5
@SP                                                          // [762  ] add
AM=M-1                                                       // [763  ] add
D=M                                                          // [764  ] add
A=A-1                                                        // [765  ] add
M=D+M                                                        // [766  ] add
@4                                                           // [767  ] call Screen.drawRectangle 4
D=A                                                          // [768  ] call Screen.drawRectangle 4
@R13                                                         // [769  ] call Screen.drawRectangle 4
M=D                                                          // [770  ] call Screen.drawRectangle 4
@Screen.drawRectangle                                        // [771  ] call Screen.drawRectangle 4
D=A                                                          // [772  ] call Screen.drawRectangle 4
@R14                                                         // [773  ] call Screen.drawRectangle 4
M=D                                                          // [774  ] call Screen.drawRectangle 4
@return-11                                                   // [775  ] call Screen.drawRectangle 4
D=A                                                          // [776  ] call Screen.drawRectangle 4
@CALL                                                        // [777  ] call Screen.drawRectangle 4
0;JEQ                                                        // [778  ] call Screen.drawRectangle 4
(return-11)                                                  // [     ] call Screen.drawRectangle 4
@SP                                                          // [779  ] pop temp 0
AM=M-1                                                       // [780  ] pop temp 0
D=M                                                          // [781  ] pop temp 0
@5                                                           // [782  ] pop temp 0
M=D                                                          // [783  ] pop temp 0
@SP                                                          // [784  ] push constant 0
M=M+1                                                        // [785  ] push constant 0
A=M-1                                                        // [786  ] push constant 0
M=0                                                          // [787  ] push constant 0
@RETURN                                                      // [788  ] return
0;JEQ                                                        // [789  ] return
(Ball.getLeft)                                               // [     ] function Ball.getLeft 0
@ARG                                                         // [790  ] push argument 0
D=M                                                          // [791  ] push argument 0
@0                                                           // [792  ] push argument 0
A=D+A                                                        // [793  ] push argument 0
D=M                                                          // [794  ] push argument 0
@SP                                                          // [795  ] push argument 0
M=M+1                                                        // [796  ] push argument 0
A=M-1                                                        // [797  ] push argument 0
M=D                                                          // [798  ] push argument 0
@SP                                                          // [799  ] pop pointer 0
AM=M-1                                                       // [800  ] pop pointer 0
D=M                                                          // [801  ] pop pointer 0
@3                                                           // [802  ] pop pointer 0
M=D                                                          // [803  ] pop pointer 0
@THIS                                                        // [804  ] push this 0
D=M                                                          // [805  ] push this 0
@0                                                           // [806  ] push this 0
A=D+A                                                        // [807  ] push this 0
D=M                                                          // [808  ] push this 0
@SP                                                          // [809  ] push this 0
M=M+1                                                        // [810  ] push this 0
A=M-1                                                        // [811  ] push this 0
M=D                                                          // [812  ] push this 0
@RETURN                                                      // [813  ] return
0;JEQ                                                        // [814  ] return
(Ball.getRight)                                              // [     ] function Ball.getRight 0
@ARG                                                         // [815  ] push argument 0
D=M                                                          // [816  ] push argument 0
@0                                                           // [817  ] push argument 0
A=D+A                                                        // [818  ] push argument 0
D=M                                                          // [819  ] push argument 0
@SP                                                          // [820  ] push argument 0
M=M+1                                                        // [821  ] push argument 0
A=M-1                                                        // [822  ] push argument 0
M=D                                                          // [823  ] push argument 0
@SP                                                          // [824  ] pop pointer 0
AM=M-1                                                       // [825  ] pop pointer 0
D=M                                                          // [826  ] pop pointer 0
@3                                                           // [827  ] pop pointer 0
M=D                                                          // [828  ] pop pointer 0
@THIS                                                        // [829  ] push this 0
D=M                                                          // [830  ] push this 0
@0                                                           // [831  ] push this 0
A=D+A                                                        // [832  ] push this 0
D=M                                                          // [833  ] push this 0
@SP                                                          // [834  ] push this 0
M=M+1                                                        // [835  ] push this 0
A=M-1                                                        // [836  ] push this 0
M=D                                                          // [837  ] push this 0
@5                                                           // [838  ] push constant 5
D=A                                                          // [839  ] push constant 5
@SP                                                          // [840  ] push constant 5
M=M+1                                                        // [841  ] push constant 5
A=M-1                                                        // [842  ] push constant 5
M=D                                                          // [843  ] push constant 5
@SP                                                          // [844  ] add
AM=M-1                                                       // [845  ] add
D=M                                                          // [846  ] add
A=A-1                                                        // [847  ] add
M=D+M                                                        // [848  ] add
@RETURN                                                      // [849  ] return
0;JEQ                                                        // [850  ] return
(Ball.setDestination)                                        // [     ] function Ball.setDestination 3
@SP                                                          // [851  ] function Ball.setDestination 3
A=M                                                          // [852  ] function Ball.setDestination 3
M=0                                                          // [853  ] function Ball.setDestination 3
@SP                                                          // [854  ] function Ball.setDestination 3
M=M+1                                                        // [855  ] function Ball.setDestination 3
@SP                                                          // [856  ] function Ball.setDestination 3
A=M                                                          // [857  ] function Ball.setDestination 3
M=0                                                          // [858  ] function Ball.setDestination 3
@SP                                                          // [859  ] function Ball.setDestination 3
M=M+1                                                        // [860  ] function Ball.setDestination 3
@SP                                                          // [861  ] function Ball.setDestination 3
A=M                                                          // [862  ] function Ball.setDestination 3
M=0                                                          // [863  ] function Ball.setDestination 3
@SP                                                          // [864  ] function Ball.setDestination 3
M=M+1                                                        // [865  ] function Ball.setDestination 3
@ARG                                                         // [866  ] push argument 0
D=M                                                          // [867  ] push argument 0
@0                                                           // [868  ] push argument 0
A=D+A                                                        // [869  ] push argument 0
D=M                                                          // [870  ] push argument 0
@SP                                                          // [871  ] push argument 0
M=M+1                                                        // [872  ] push argument 0
A=M-1                                                        // [873  ] push argument 0
M=D                                                          // [874  ] push argument 0
@SP                                                          // [875  ] pop pointer 0
AM=M-1                                                       // [876  ] pop pointer 0
D=M                                                          // [877  ] pop pointer 0
@3                                                           // [878  ] pop pointer 0
M=D                                                          // [879  ] pop pointer 0
@ARG                                                         // [880  ] push argument 1
D=M                                                          // [881  ] push argument 1
@1                                                           // [882  ] push argument 1
A=D+A                                                        // [883  ] push argument 1
D=M                                                          // [884  ] push argument 1
@SP                                                          // [885  ] push argument 1
M=M+1                                                        // [886  ] push argument 1
A=M-1                                                        // [887  ] push argument 1
M=D                                                          // [888  ] push argument 1
@THIS                                                        // [889  ] push this 0
D=M                                                          // [890  ] push this 0
@0                                                           // [891  ] push this 0
A=D+A                                                        // [892  ] push this 0
D=M                                                          // [893  ] push this 0
@SP                                                          // [894  ] push this 0
M=M+1                                                        // [895  ] push this 0
A=M-1                                                        // [896  ] push this 0
M=D                                                          // [897  ] push this 0
@SP                                                          // [898  ] sub
AM=M-1                                                       // [899  ] sub
D=M                                                          // [900  ] sub
A=A-1                                                        // [901  ] sub
M=M-D                                                        // [902  ] sub
@SP                                                          // [903  ] pop this 2
AM=M-1                                                       // [904  ] pop this 2
D=M                                                          // [905  ] pop this 2
@R13                                                         // [906  ] pop this 2
M=D                                                          // [907  ] pop this 2
@THIS                                                        // [908  ] pop this 2
D=M                                                          // [909  ] pop this 2
@2                                                           // [910  ] pop this 2
D=D+A                                                        // [911  ] pop this 2
@R14                                                         // [912  ] pop this 2
M=D                                                          // [913  ] pop this 2
@R13                                                         // [914  ] pop this 2
D=M                                                          // [915  ] pop this 2
@R14                                                         // [916  ] pop this 2
A=M                                                          // [917  ] pop this 2
M=D                                                          // [918  ] pop this 2
@ARG                                                         // [919  ] push argument 2
D=M                                                          // [920  ] push argument 2
@2                                                           // [921  ] push argument 2
A=D+A                                                        // [922  ] push argument 2
D=M                                                          // [923  ] push argument 2
@SP                                                          // [924  ] push argument 2
M=M+1                                                        // [925  ] push argument 2
A=M-1                                                        // [926  ] push argument 2
M=D                                                          // [927  ] push argument 2
@THIS                                                        // [928  ] push this 1
D=M                                                          // [929  ] push this 1
@1                                                           // [930  ] push this 1
A=D+A                                                        // [931  ] push this 1
D=M                                                          // [932  ] push this 1
@SP                                                          // [933  ] push this 1
M=M+1                                                        // [934  ] push this 1
A=M-1                                                        // [935  ] push this 1
M=D                                                          // [936  ] push this 1
@SP                                                          // [937  ] sub
AM=M-1                                                       // [938  ] sub
D=M                                                          // [939  ] sub
A=A-1                                                        // [940  ] sub
M=M-D                                                        // [941  ] sub
@SP                                                          // [942  ] pop this 3
AM=M-1                                                       // [943  ] pop this 3
D=M                                                          // [944  ] pop this 3
@R13                                                         // [945  ] pop this 3
M=D                                                          // [946  ] pop this 3
@THIS                                                        // [947  ] pop this 3
D=M                                                          // [948  ] pop this 3
@3                                                           // [949  ] pop this 3
D=D+A                                                        // [950  ] pop this 3
@R14                                                         // [951  ] pop this 3
M=D                                                          // [952  ] pop this 3
@R13                                                         // [953  ] pop this 3
D=M                                                          // [954  ] pop this 3
@R14                                                         // [955  ] pop this 3
A=M                                                          // [956  ] pop this 3
M=D                                                          // [957  ] pop this 3
@THIS                                                        // [958  ] push this 2
D=M                                                          // [959  ] push this 2
@2                                                           // [960  ] push this 2
A=D+A                                                        // [961  ] push this 2
D=M                                                          // [962  ] push this 2
@SP                                                          // [963  ] push this 2
M=M+1                                                        // [964  ] push this 2
A=M-1                                                        // [965  ] push this 2
M=D                                                          // [966  ] push this 2
@1                                                           // [967  ] call Math.abs 1
D=A                                                          // [968  ] call Math.abs 1
@R13                                                         // [969  ] call Math.abs 1
M=D                                                          // [970  ] call Math.abs 1
@Math.abs                                                    // [971  ] call Math.abs 1
D=A                                                          // [972  ] call Math.abs 1
@R14                                                         // [973  ] call Math.abs 1
M=D                                                          // [974  ] call Math.abs 1
@return-12                                                   // [975  ] call Math.abs 1
D=A                                                          // [976  ] call Math.abs 1
@CALL                                                        // [977  ] call Math.abs 1
0;JEQ                                                        // [978  ] call Math.abs 1
(return-12)                                                  // [     ] call Math.abs 1
@SP                                                          // [979  ] pop local 0
AM=M-1                                                       // [980  ] pop local 0
D=M                                                          // [981  ] pop local 0
@R13                                                         // [982  ] pop local 0
M=D                                                          // [983  ] pop local 0
@LCL                                                         // [984  ] pop local 0
D=M                                                          // [985  ] pop local 0
@0                                                           // [986  ] pop local 0
D=D+A                                                        // [987  ] pop local 0
@R14                                                         // [988  ] pop local 0
M=D                                                          // [989  ] pop local 0
@R13                                                         // [990  ] pop local 0
D=M                                                          // [991  ] pop local 0
@R14                                                         // [992  ] pop local 0
A=M                                                          // [993  ] pop local 0
M=D                                                          // [994  ] pop local 0
@THIS                                                        // [995  ] push this 3
D=M                                                          // [996  ] push this 3
@3                                                           // [997  ] push this 3
A=D+A                                                        // [998  ] push this 3
D=M                                                          // [999  ] push this 3
@SP                                                          // [1000 ] push this 3
M=M+1                                                        // [1001 ] push this 3
A=M-1                                                        // [1002 ] push this 3
M=D                                                          // [1003 ] push this 3
@1                                                           // [1004 ] call Math.abs 1
D=A                                                          // [1005 ] call Math.abs 1
@R13                                                         // [1006 ] call Math.abs 1
M=D                                                          // [1007 ] call Math.abs 1
@Math.abs                                                    // [1008 ] call Math.abs 1
D=A                                                          // [1009 ] call Math.abs 1
@R14                                                         // [1010 ] call Math.abs 1
M=D                                                          // [1011 ] call Math.abs 1
@return-13                                                   // [1012 ] call Math.abs 1
D=A                                                          // [1013 ] call Math.abs 1
@CALL                                                        // [1014 ] call Math.abs 1
0;JEQ                                                        // [1015 ] call Math.abs 1
(return-13)                                                  // [     ] call Math.abs 1
@SP                                                          // [1016 ] pop local 1
AM=M-1                                                       // [1017 ] pop local 1
D=M                                                          // [1018 ] pop local 1
@R13                                                         // [1019 ] pop local 1
M=D                                                          // [1020 ] pop local 1
@LCL                                                         // [1021 ] pop local 1
D=M                                                          // [1022 ] pop local 1
@1                                                           // [1023 ] pop local 1
D=D+A                                                        // [1024 ] pop local 1
@R14                                                         // [1025 ] pop local 1
M=D                                                          // [1026 ] pop local 1
@R13                                                         // [1027 ] pop local 1
D=M                                                          // [1028 ] pop local 1
@R14                                                         // [1029 ] pop local 1
A=M                                                          // [1030 ] pop local 1
M=D                                                          // [1031 ] pop local 1
@LCL                                                         // [1032 ] push local 0
D=M                                                          // [1033 ] push local 0
@0                                                           // [1034 ] push local 0
A=D+A                                                        // [1035 ] push local 0
D=M                                                          // [1036 ] push local 0
@SP                                                          // [1037 ] push local 0
M=M+1                                                        // [1038 ] push local 0
A=M-1                                                        // [1039 ] push local 0
M=D                                                          // [1040 ] push local 0
@LCL                                                         // [1041 ] push local 1
D=M                                                          // [1042 ] push local 1
@1                                                           // [1043 ] push local 1
A=D+A                                                        // [1044 ] push local 1
D=M                                                          // [1045 ] push local 1
@SP                                                          // [1046 ] push local 1
M=M+1                                                        // [1047 ] push local 1
A=M-1                                                        // [1048 ] push local 1
M=D                                                          // [1049 ] push local 1
@CONTINUE_LT_0                                               // [1050 ] lt
D=A                                                          // [1051 ] lt
@R13                                                         // [1052 ] lt
M=D                                                          // [1053 ] lt
@SP                                                          // [1054 ] lt
AM=M-1                                                       // [1055 ] lt
D=M                                                          // [1056 ] lt
A=A-1                                                        // [1057 ] lt
D=D-M                                                        // [1058 ] lt
@INTERNAL_LT                                                 // [1059 ] lt
0;JEQ                                                        // [1060 ] lt
(CONTINUE_LT_0)                                              // [     ] lt
@SP                                                          // [1061 ] pop this 7
AM=M-1                                                       // [1062 ] pop this 7
D=M                                                          // [1063 ] pop this 7
@R13                                                         // [1064 ] pop this 7
M=D                                                          // [1065 ] pop this 7
@THIS                                                        // [1066 ] pop this 7
D=M                                                          // [1067 ] pop this 7
@7                                                           // [1068 ] pop this 7
D=D+A                                                        // [1069 ] pop this 7
@R14                                                         // [1070 ] pop this 7
M=D                                                          // [1071 ] pop this 7
@R13                                                         // [1072 ] pop this 7
D=M                                                          // [1073 ] pop this 7
@R14                                                         // [1074 ] pop this 7
A=M                                                          // [1075 ] pop this 7
M=D                                                          // [1076 ] pop this 7
@THIS                                                        // [1077 ] push this 7
D=M                                                          // [1078 ] push this 7
@7                                                           // [1079 ] push this 7
A=D+A                                                        // [1080 ] push this 7
D=M                                                          // [1081 ] push this 7
@SP                                                          // [1082 ] push this 7
M=M+1                                                        // [1083 ] push this 7
A=M-1                                                        // [1084 ] push this 7
M=D                                                          // [1085 ] push this 7
@SP                                                          // [1086 ] if-goto IF_TRUE0
AM=M-1                                                       // [1087 ] if-goto IF_TRUE0
D=M                                                          // [1088 ] if-goto IF_TRUE0
@Ball.setDestination$IF_TRUE0                                // [1089 ] if-goto IF_TRUE0
D;JNE                                                        // [1090 ] if-goto IF_TRUE0
@Ball.setDestination$IF_FALSE0                               // [1091 ] goto IF_FALSE0
0;JEQ                                                        // [1092 ] goto IF_FALSE0
(Ball.setDestination$IF_TRUE0)                               // [     ] label IF_TRUE0
@LCL                                                         // [1093 ] push local 0
D=M                                                          // [1094 ] push local 0
@0                                                           // [1095 ] push local 0
A=D+A                                                        // [1096 ] push local 0
D=M                                                          // [1097 ] push local 0
@SP                                                          // [1098 ] push local 0
M=M+1                                                        // [1099 ] push local 0
A=M-1                                                        // [1100 ] push local 0
M=D                                                          // [1101 ] push local 0
@SP                                                          // [1102 ] pop local 2
AM=M-1                                                       // [1103 ] pop local 2
D=M                                                          // [1104 ] pop local 2
@R13                                                         // [1105 ] pop local 2
M=D                                                          // [1106 ] pop local 2
@LCL                                                         // [1107 ] pop local 2
D=M                                                          // [1108 ] pop local 2
@2                                                           // [1109 ] pop local 2
D=D+A                                                        // [1110 ] pop local 2
@R14                                                         // [1111 ] pop local 2
M=D                                                          // [1112 ] pop local 2
@R13                                                         // [1113 ] pop local 2
D=M                                                          // [1114 ] pop local 2
@R14                                                         // [1115 ] pop local 2
A=M                                                          // [1116 ] pop local 2
M=D                                                          // [1117 ] pop local 2
@LCL                                                         // [1118 ] push local 1
D=M                                                          // [1119 ] push local 1
@1                                                           // [1120 ] push local 1
A=D+A                                                        // [1121 ] push local 1
D=M                                                          // [1122 ] push local 1
@SP                                                          // [1123 ] push local 1
M=M+1                                                        // [1124 ] push local 1
A=M-1                                                        // [1125 ] push local 1
M=D                                                          // [1126 ] push local 1
@SP                                                          // [1127 ] pop local 0
AM=M-1                                                       // [1128 ] pop local 0
D=M                                                          // [1129 ] pop local 0
@R13                                                         // [1130 ] pop local 0
M=D                                                          // [1131 ] pop local 0
@LCL                                                         // [1132 ] pop local 0
D=M                                                          // [1133 ] pop local 0
@0                                                           // [1134 ] pop local 0
D=D+A                                                        // [1135 ] pop local 0
@R14                                                         // [1136 ] pop local 0
M=D                                                          // [1137 ] pop local 0
@R13                                                         // [1138 ] pop local 0
D=M                                                          // [1139 ] pop local 0
@R14                                                         // [1140 ] pop local 0
A=M                                                          // [1141 ] pop local 0
M=D                                                          // [1142 ] pop local 0
@LCL                                                         // [1143 ] push local 2
D=M                                                          // [1144 ] push local 2
@2                                                           // [1145 ] push local 2
A=D+A                                                        // [1146 ] push local 2
D=M                                                          // [1147 ] push local 2
@SP                                                          // [1148 ] push local 2
M=M+1                                                        // [1149 ] push local 2
A=M-1                                                        // [1150 ] push local 2
M=D                                                          // [1151 ] push local 2
@SP                                                          // [1152 ] pop local 1
AM=M-1                                                       // [1153 ] pop local 1
D=M                                                          // [1154 ] pop local 1
@R13                                                         // [1155 ] pop local 1
M=D                                                          // [1156 ] pop local 1
@LCL                                                         // [1157 ] pop local 1
D=M                                                          // [1158 ] pop local 1
@1                                                           // [1159 ] pop local 1
D=D+A                                                        // [1160 ] pop local 1
@R14                                                         // [1161 ] pop local 1
M=D                                                          // [1162 ] pop local 1
@R13                                                         // [1163 ] pop local 1
D=M                                                          // [1164 ] pop local 1
@R14                                                         // [1165 ] pop local 1
A=M                                                          // [1166 ] pop local 1
M=D                                                          // [1167 ] pop local 1
@THIS                                                        // [1168 ] push this 1
D=M                                                          // [1169 ] push this 1
@1                                                           // [1170 ] push this 1
A=D+A                                                        // [1171 ] push this 1
D=M                                                          // [1172 ] push this 1
@SP                                                          // [1173 ] push this 1
M=M+1                                                        // [1174 ] push this 1
A=M-1                                                        // [1175 ] push this 1
M=D                                                          // [1176 ] push this 1
@ARG                                                         // [1177 ] push argument 2
D=M                                                          // [1178 ] push argument 2
@2                                                           // [1179 ] push argument 2
A=D+A                                                        // [1180 ] push argument 2
D=M                                                          // [1181 ] push argument 2
@SP                                                          // [1182 ] push argument 2
M=M+1                                                        // [1183 ] push argument 2
A=M-1                                                        // [1184 ] push argument 2
M=D                                                          // [1185 ] push argument 2
@CONTINUE_LT_1                                               // [1186 ] lt
D=A                                                          // [1187 ] lt
@R13                                                         // [1188 ] lt
M=D                                                          // [1189 ] lt
@SP                                                          // [1190 ] lt
AM=M-1                                                       // [1191 ] lt
D=M                                                          // [1192 ] lt
A=A-1                                                        // [1193 ] lt
D=D-M                                                        // [1194 ] lt
@INTERNAL_LT                                                 // [1195 ] lt
0;JEQ                                                        // [1196 ] lt
(CONTINUE_LT_1)                                              // [     ] lt
@SP                                                          // [1197 ] pop this 8
AM=M-1                                                       // [1198 ] pop this 8
D=M                                                          // [1199 ] pop this 8
@R13                                                         // [1200 ] pop this 8
M=D                                                          // [1201 ] pop this 8
@THIS                                                        // [1202 ] pop this 8
D=M                                                          // [1203 ] pop this 8
@8                                                           // [1204 ] pop this 8
D=D+A                                                        // [1205 ] pop this 8
@R14                                                         // [1206 ] pop this 8
M=D                                                          // [1207 ] pop this 8
@R13                                                         // [1208 ] pop this 8
D=M                                                          // [1209 ] pop this 8
@R14                                                         // [1210 ] pop this 8
A=M                                                          // [1211 ] pop this 8
M=D                                                          // [1212 ] pop this 8
@THIS                                                        // [1213 ] push this 0
D=M                                                          // [1214 ] push this 0
@0                                                           // [1215 ] push this 0
A=D+A                                                        // [1216 ] push this 0
D=M                                                          // [1217 ] push this 0
@SP                                                          // [1218 ] push this 0
M=M+1                                                        // [1219 ] push this 0
A=M-1                                                        // [1220 ] push this 0
M=D                                                          // [1221 ] push this 0
@ARG                                                         // [1222 ] push argument 1
D=M                                                          // [1223 ] push argument 1
@1                                                           // [1224 ] push argument 1
A=D+A                                                        // [1225 ] push argument 1
D=M                                                          // [1226 ] push argument 1
@SP                                                          // [1227 ] push argument 1
M=M+1                                                        // [1228 ] push argument 1
A=M-1                                                        // [1229 ] push argument 1
M=D                                                          // [1230 ] push argument 1
@CONTINUE_LT_2                                               // [1231 ] lt
D=A                                                          // [1232 ] lt
@R13                                                         // [1233 ] lt
M=D                                                          // [1234 ] lt
@SP                                                          // [1235 ] lt
AM=M-1                                                       // [1236 ] lt
D=M                                                          // [1237 ] lt
A=A-1                                                        // [1238 ] lt
D=D-M                                                        // [1239 ] lt
@INTERNAL_LT                                                 // [1240 ] lt
0;JEQ                                                        // [1241 ] lt
(CONTINUE_LT_2)                                              // [     ] lt
@SP                                                          // [1242 ] pop this 9
AM=M-1                                                       // [1243 ] pop this 9
D=M                                                          // [1244 ] pop this 9
@R13                                                         // [1245 ] pop this 9
M=D                                                          // [1246 ] pop this 9
@THIS                                                        // [1247 ] pop this 9
D=M                                                          // [1248 ] pop this 9
@9                                                           // [1249 ] pop this 9
D=D+A                                                        // [1250 ] pop this 9
@R14                                                         // [1251 ] pop this 9
M=D                                                          // [1252 ] pop this 9
@R13                                                         // [1253 ] pop this 9
D=M                                                          // [1254 ] pop this 9
@R14                                                         // [1255 ] pop this 9
A=M                                                          // [1256 ] pop this 9
M=D                                                          // [1257 ] pop this 9
@Ball.setDestination$IF_END0                                 // [1258 ] goto IF_END0
0;JEQ                                                        // [1259 ] goto IF_END0
(Ball.setDestination$IF_FALSE0)                              // [     ] label IF_FALSE0
@THIS                                                        // [1260 ] push this 0
D=M                                                          // [1261 ] push this 0
@0                                                           // [1262 ] push this 0
A=D+A                                                        // [1263 ] push this 0
D=M                                                          // [1264 ] push this 0
@SP                                                          // [1265 ] push this 0
M=M+1                                                        // [1266 ] push this 0
A=M-1                                                        // [1267 ] push this 0
M=D                                                          // [1268 ] push this 0
@ARG                                                         // [1269 ] push argument 1
D=M                                                          // [1270 ] push argument 1
@1                                                           // [1271 ] push argument 1
A=D+A                                                        // [1272 ] push argument 1
D=M                                                          // [1273 ] push argument 1
@SP                                                          // [1274 ] push argument 1
M=M+1                                                        // [1275 ] push argument 1
A=M-1                                                        // [1276 ] push argument 1
M=D                                                          // [1277 ] push argument 1
@CONTINUE_LT_3                                               // [1278 ] lt
D=A                                                          // [1279 ] lt
@R13                                                         // [1280 ] lt
M=D                                                          // [1281 ] lt
@SP                                                          // [1282 ] lt
AM=M-1                                                       // [1283 ] lt
D=M                                                          // [1284 ] lt
A=A-1                                                        // [1285 ] lt
D=D-M                                                        // [1286 ] lt
@INTERNAL_LT                                                 // [1287 ] lt
0;JEQ                                                        // [1288 ] lt
(CONTINUE_LT_3)                                              // [     ] lt
@SP                                                          // [1289 ] pop this 8
AM=M-1                                                       // [1290 ] pop this 8
D=M                                                          // [1291 ] pop this 8
@R13                                                         // [1292 ] pop this 8
M=D                                                          // [1293 ] pop this 8
@THIS                                                        // [1294 ] pop this 8
D=M                                                          // [1295 ] pop this 8
@8                                                           // [1296 ] pop this 8
D=D+A                                                        // [1297 ] pop this 8
@R14                                                         // [1298 ] pop this 8
M=D                                                          // [1299 ] pop this 8
@R13                                                         // [1300 ] pop this 8
D=M                                                          // [1301 ] pop this 8
@R14                                                         // [1302 ] pop this 8
A=M                                                          // [1303 ] pop this 8
M=D                                                          // [1304 ] pop this 8
@THIS                                                        // [1305 ] push this 1
D=M                                                          // [1306 ] push this 1
@1                                                           // [1307 ] push this 1
A=D+A                                                        // [1308 ] push this 1
D=M                                                          // [1309 ] push this 1
@SP                                                          // [1310 ] push this 1
M=M+1                                                        // [1311 ] push this 1
A=M-1                                                        // [1312 ] push this 1
M=D                                                          // [1313 ] push this 1
@ARG                                                         // [1314 ] push argument 2
D=M                                                          // [1315 ] push argument 2
@2                                                           // [1316 ] push argument 2
A=D+A                                                        // [1317 ] push argument 2
D=M                                                          // [1318 ] push argument 2
@SP                                                          // [1319 ] push argument 2
M=M+1                                                        // [1320 ] push argument 2
A=M-1                                                        // [1321 ] push argument 2
M=D                                                          // [1322 ] push argument 2
@CONTINUE_LT_4                                               // [1323 ] lt
D=A                                                          // [1324 ] lt
@R13                                                         // [1325 ] lt
M=D                                                          // [1326 ] lt
@SP                                                          // [1327 ] lt
AM=M-1                                                       // [1328 ] lt
D=M                                                          // [1329 ] lt
A=A-1                                                        // [1330 ] lt
D=D-M                                                        // [1331 ] lt
@INTERNAL_LT                                                 // [1332 ] lt
0;JEQ                                                        // [1333 ] lt
(CONTINUE_LT_4)                                              // [     ] lt
@SP                                                          // [1334 ] pop this 9
AM=M-1                                                       // [1335 ] pop this 9
D=M                                                          // [1336 ] pop this 9
@R13                                                         // [1337 ] pop this 9
M=D                                                          // [1338 ] pop this 9
@THIS                                                        // [1339 ] pop this 9
D=M                                                          // [1340 ] pop this 9
@9                                                           // [1341 ] pop this 9
D=D+A                                                        // [1342 ] pop this 9
@R14                                                         // [1343 ] pop this 9
M=D                                                          // [1344 ] pop this 9
@R13                                                         // [1345 ] pop this 9
D=M                                                          // [1346 ] pop this 9
@R14                                                         // [1347 ] pop this 9
A=M                                                          // [1348 ] pop this 9
M=D                                                          // [1349 ] pop this 9
(Ball.setDestination$IF_END0)                                // [     ] label IF_END0
@SP                                                          // [1350 ] push constant 2
M=M+1                                                        // [1351 ] push constant 2
A=M-1                                                        // [1352 ] push constant 2
M=1                                                          // [1353 ] push constant 2
M=M+1                                                        // [1354 ] push constant 2
@LCL                                                         // [1355 ] push local 1
D=M                                                          // [1356 ] push local 1
@1                                                           // [1357 ] push local 1
A=D+A                                                        // [1358 ] push local 1
D=M                                                          // [1359 ] push local 1
@SP                                                          // [1360 ] push local 1
M=M+1                                                        // [1361 ] push local 1
A=M-1                                                        // [1362 ] push local 1
M=D                                                          // [1363 ] push local 1
@2                                                           // [1364 ] call Math.multiply 2
D=A                                                          // [1365 ] call Math.multiply 2
@R13                                                         // [1366 ] call Math.multiply 2
M=D                                                          // [1367 ] call Math.multiply 2
@Math.multiply                                               // [1368 ] call Math.multiply 2
D=A                                                          // [1369 ] call Math.multiply 2
@R14                                                         // [1370 ] call Math.multiply 2
M=D                                                          // [1371 ] call Math.multiply 2
@return-14                                                   // [1372 ] call Math.multiply 2
D=A                                                          // [1373 ] call Math.multiply 2
@CALL                                                        // [1374 ] call Math.multiply 2
0;JEQ                                                        // [1375 ] call Math.multiply 2
(return-14)                                                  // [     ] call Math.multiply 2
@LCL                                                         // [1376 ] push local 0
D=M                                                          // [1377 ] push local 0
@0                                                           // [1378 ] push local 0
A=D+A                                                        // [1379 ] push local 0
D=M                                                          // [1380 ] push local 0
@SP                                                          // [1381 ] push local 0
M=M+1                                                        // [1382 ] push local 0
A=M-1                                                        // [1383 ] push local 0
M=D                                                          // [1384 ] push local 0
@SP                                                          // [1385 ] sub
AM=M-1                                                       // [1386 ] sub
D=M                                                          // [1387 ] sub
A=A-1                                                        // [1388 ] sub
M=M-D                                                        // [1389 ] sub
@SP                                                          // [1390 ] pop this 4
AM=M-1                                                       // [1391 ] pop this 4
D=M                                                          // [1392 ] pop this 4
@R13                                                         // [1393 ] pop this 4
M=D                                                          // [1394 ] pop this 4
@THIS                                                        // [1395 ] pop this 4
D=M                                                          // [1396 ] pop this 4
@4                                                           // [1397 ] pop this 4
D=D+A                                                        // [1398 ] pop this 4
@R14                                                         // [1399 ] pop this 4
M=D                                                          // [1400 ] pop this 4
@R13                                                         // [1401 ] pop this 4
D=M                                                          // [1402 ] pop this 4
@R14                                                         // [1403 ] pop this 4
A=M                                                          // [1404 ] pop this 4
M=D                                                          // [1405 ] pop this 4
@SP                                                          // [1406 ] push constant 2
M=M+1                                                        // [1407 ] push constant 2
A=M-1                                                        // [1408 ] push constant 2
M=1                                                          // [1409 ] push constant 2
M=M+1                                                        // [1410 ] push constant 2
@LCL                                                         // [1411 ] push local 1
D=M                                                          // [1412 ] push local 1
@1                                                           // [1413 ] push local 1
A=D+A                                                        // [1414 ] push local 1
D=M                                                          // [1415 ] push local 1
@SP                                                          // [1416 ] push local 1
M=M+1                                                        // [1417 ] push local 1
A=M-1                                                        // [1418 ] push local 1
M=D                                                          // [1419 ] push local 1
@2                                                           // [1420 ] call Math.multiply 2
D=A                                                          // [1421 ] call Math.multiply 2
@R13                                                         // [1422 ] call Math.multiply 2
M=D                                                          // [1423 ] call Math.multiply 2
@Math.multiply                                               // [1424 ] call Math.multiply 2
D=A                                                          // [1425 ] call Math.multiply 2
@R14                                                         // [1426 ] call Math.multiply 2
M=D                                                          // [1427 ] call Math.multiply 2
@return-15                                                   // [1428 ] call Math.multiply 2
D=A                                                          // [1429 ] call Math.multiply 2
@CALL                                                        // [1430 ] call Math.multiply 2
0;JEQ                                                        // [1431 ] call Math.multiply 2
(return-15)                                                  // [     ] call Math.multiply 2
@SP                                                          // [1432 ] pop this 5
AM=M-1                                                       // [1433 ] pop this 5
D=M                                                          // [1434 ] pop this 5
@R13                                                         // [1435 ] pop this 5
M=D                                                          // [1436 ] pop this 5
@THIS                                                        // [1437 ] pop this 5
D=M                                                          // [1438 ] pop this 5
@5                                                           // [1439 ] pop this 5
D=D+A                                                        // [1440 ] pop this 5
@R14                                                         // [1441 ] pop this 5
M=D                                                          // [1442 ] pop this 5
@R13                                                         // [1443 ] pop this 5
D=M                                                          // [1444 ] pop this 5
@R14                                                         // [1445 ] pop this 5
A=M                                                          // [1446 ] pop this 5
M=D                                                          // [1447 ] pop this 5
@SP                                                          // [1448 ] push constant 2
M=M+1                                                        // [1449 ] push constant 2
A=M-1                                                        // [1450 ] push constant 2
M=1                                                          // [1451 ] push constant 2
M=M+1                                                        // [1452 ] push constant 2
@LCL                                                         // [1453 ] push local 1
D=M                                                          // [1454 ] push local 1
@1                                                           // [1455 ] push local 1
A=D+A                                                        // [1456 ] push local 1
D=M                                                          // [1457 ] push local 1
@SP                                                          // [1458 ] push local 1
M=M+1                                                        // [1459 ] push local 1
A=M-1                                                        // [1460 ] push local 1
M=D                                                          // [1461 ] push local 1
@LCL                                                         // [1462 ] push local 0
D=M                                                          // [1463 ] push local 0
@0                                                           // [1464 ] push local 0
A=D+A                                                        // [1465 ] push local 0
D=M                                                          // [1466 ] push local 0
@SP                                                          // [1467 ] push local 0
M=M+1                                                        // [1468 ] push local 0
A=M-1                                                        // [1469 ] push local 0
M=D                                                          // [1470 ] push local 0
@SP                                                          // [1471 ] sub
AM=M-1                                                       // [1472 ] sub
D=M                                                          // [1473 ] sub
A=A-1                                                        // [1474 ] sub
M=M-D                                                        // [1475 ] sub
@2                                                           // [1476 ] call Math.multiply 2
D=A                                                          // [1477 ] call Math.multiply 2
@R13                                                         // [1478 ] call Math.multiply 2
M=D                                                          // [1479 ] call Math.multiply 2
@Math.multiply                                               // [1480 ] call Math.multiply 2
D=A                                                          // [1481 ] call Math.multiply 2
@R14                                                         // [1482 ] call Math.multiply 2
M=D                                                          // [1483 ] call Math.multiply 2
@return-16                                                   // [1484 ] call Math.multiply 2
D=A                                                          // [1485 ] call Math.multiply 2
@CALL                                                        // [1486 ] call Math.multiply 2
0;JEQ                                                        // [1487 ] call Math.multiply 2
(return-16)                                                  // [     ] call Math.multiply 2
@SP                                                          // [1488 ] pop this 6
AM=M-1                                                       // [1489 ] pop this 6
D=M                                                          // [1490 ] pop this 6
@R13                                                         // [1491 ] pop this 6
M=D                                                          // [1492 ] pop this 6
@THIS                                                        // [1493 ] pop this 6
D=M                                                          // [1494 ] pop this 6
@6                                                           // [1495 ] pop this 6
D=D+A                                                        // [1496 ] pop this 6
@R14                                                         // [1497 ] pop this 6
M=D                                                          // [1498 ] pop this 6
@R13                                                         // [1499 ] pop this 6
D=M                                                          // [1500 ] pop this 6
@R14                                                         // [1501 ] pop this 6
A=M                                                          // [1502 ] pop this 6
M=D                                                          // [1503 ] pop this 6
@SP                                                          // [1504 ] push constant 0
M=M+1                                                        // [1505 ] push constant 0
A=M-1                                                        // [1506 ] push constant 0
M=0                                                          // [1507 ] push constant 0
@RETURN                                                      // [1508 ] return
0;JEQ                                                        // [1509 ] return
(Ball.move)                                                  // [     ] function Ball.move 0
@ARG                                                         // [1510 ] push argument 0
D=M                                                          // [1511 ] push argument 0
@0                                                           // [1512 ] push argument 0
A=D+A                                                        // [1513 ] push argument 0
D=M                                                          // [1514 ] push argument 0
@SP                                                          // [1515 ] push argument 0
M=M+1                                                        // [1516 ] push argument 0
A=M-1                                                        // [1517 ] push argument 0
M=D                                                          // [1518 ] push argument 0
@SP                                                          // [1519 ] pop pointer 0
AM=M-1                                                       // [1520 ] pop pointer 0
D=M                                                          // [1521 ] pop pointer 0
@3                                                           // [1522 ] pop pointer 0
M=D                                                          // [1523 ] pop pointer 0
@3                                                           // [1524 ] push pointer 0
D=M                                                          // [1525 ] push pointer 0
@SP                                                          // [1526 ] push pointer 0
M=M+1                                                        // [1527 ] push pointer 0
A=M-1                                                        // [1528 ] push pointer 0
M=D                                                          // [1529 ] push pointer 0
@1                                                           // [1530 ] call Ball.hide 1
D=A                                                          // [1531 ] call Ball.hide 1
@R13                                                         // [1532 ] call Ball.hide 1
M=D                                                          // [1533 ] call Ball.hide 1
@Ball.hide                                                   // [1534 ] call Ball.hide 1
D=A                                                          // [1535 ] call Ball.hide 1
@R14                                                         // [1536 ] call Ball.hide 1
M=D                                                          // [1537 ] call Ball.hide 1
@return-17                                                   // [1538 ] call Ball.hide 1
D=A                                                          // [1539 ] call Ball.hide 1
@CALL                                                        // [1540 ] call Ball.hide 1
0;JEQ                                                        // [1541 ] call Ball.hide 1
(return-17)                                                  // [     ] call Ball.hide 1
@SP                                                          // [1542 ] pop temp 0
AM=M-1                                                       // [1543 ] pop temp 0
D=M                                                          // [1544 ] pop temp 0
@5                                                           // [1545 ] pop temp 0
M=D                                                          // [1546 ] pop temp 0
@THIS                                                        // [1547 ] push this 4
D=M                                                          // [1548 ] push this 4
@4                                                           // [1549 ] push this 4
A=D+A                                                        // [1550 ] push this 4
D=M                                                          // [1551 ] push this 4
@SP                                                          // [1552 ] push this 4
M=M+1                                                        // [1553 ] push this 4
A=M-1                                                        // [1554 ] push this 4
M=D                                                          // [1555 ] push this 4
@SP                                                          // [1556 ] push constant 0
M=M+1                                                        // [1557 ] push constant 0
A=M-1                                                        // [1558 ] push constant 0
M=0                                                          // [1559 ] push constant 0
@CONTINUE_LT_5                                               // [1560 ] lt
D=A                                                          // [1561 ] lt
@R13                                                         // [1562 ] lt
M=D                                                          // [1563 ] lt
@SP                                                          // [1564 ] lt
AM=M-1                                                       // [1565 ] lt
D=M                                                          // [1566 ] lt
A=A-1                                                        // [1567 ] lt
D=D-M                                                        // [1568 ] lt
@INTERNAL_LT                                                 // [1569 ] lt
0;JEQ                                                        // [1570 ] lt
(CONTINUE_LT_5)                                              // [     ] lt
@SP                                                          // [1571 ] if-goto IF_TRUE0
AM=M-1                                                       // [1572 ] if-goto IF_TRUE0
D=M                                                          // [1573 ] if-goto IF_TRUE0
@Ball.move$IF_TRUE0                                          // [1574 ] if-goto IF_TRUE0
D;JNE                                                        // [1575 ] if-goto IF_TRUE0
@Ball.move$IF_FALSE0                                         // [1576 ] goto IF_FALSE0
0;JEQ                                                        // [1577 ] goto IF_FALSE0
(Ball.move$IF_TRUE0)                                         // [     ] label IF_TRUE0
@THIS                                                        // [1578 ] push this 4
D=M                                                          // [1579 ] push this 4
@4                                                           // [1580 ] push this 4
A=D+A                                                        // [1581 ] push this 4
D=M                                                          // [1582 ] push this 4
@SP                                                          // [1583 ] push this 4
M=M+1                                                        // [1584 ] push this 4
A=M-1                                                        // [1585 ] push this 4
M=D                                                          // [1586 ] push this 4
@THIS                                                        // [1587 ] push this 5
D=M                                                          // [1588 ] push this 5
@5                                                           // [1589 ] push this 5
A=D+A                                                        // [1590 ] push this 5
D=M                                                          // [1591 ] push this 5
@SP                                                          // [1592 ] push this 5
M=M+1                                                        // [1593 ] push this 5
A=M-1                                                        // [1594 ] push this 5
M=D                                                          // [1595 ] push this 5
@SP                                                          // [1596 ] add
AM=M-1                                                       // [1597 ] add
D=M                                                          // [1598 ] add
A=A-1                                                        // [1599 ] add
M=D+M                                                        // [1600 ] add
@SP                                                          // [1601 ] pop this 4
AM=M-1                                                       // [1602 ] pop this 4
D=M                                                          // [1603 ] pop this 4
@R13                                                         // [1604 ] pop this 4
M=D                                                          // [1605 ] pop this 4
@THIS                                                        // [1606 ] pop this 4
D=M                                                          // [1607 ] pop this 4
@4                                                           // [1608 ] pop this 4
D=D+A                                                        // [1609 ] pop this 4
@R14                                                         // [1610 ] pop this 4
M=D                                                          // [1611 ] pop this 4
@R13                                                         // [1612 ] pop this 4
D=M                                                          // [1613 ] pop this 4
@R14                                                         // [1614 ] pop this 4
A=M                                                          // [1615 ] pop this 4
M=D                                                          // [1616 ] pop this 4
@Ball.move$IF_END0                                           // [1617 ] goto IF_END0
0;JEQ                                                        // [1618 ] goto IF_END0
(Ball.move$IF_FALSE0)                                        // [     ] label IF_FALSE0
@THIS                                                        // [1619 ] push this 4
D=M                                                          // [1620 ] push this 4
@4                                                           // [1621 ] push this 4
A=D+A                                                        // [1622 ] push this 4
D=M                                                          // [1623 ] push this 4
@SP                                                          // [1624 ] push this 4
M=M+1                                                        // [1625 ] push this 4
A=M-1                                                        // [1626 ] push this 4
M=D                                                          // [1627 ] push this 4
@THIS                                                        // [1628 ] push this 6
D=M                                                          // [1629 ] push this 6
@6                                                           // [1630 ] push this 6
A=D+A                                                        // [1631 ] push this 6
D=M                                                          // [1632 ] push this 6
@SP                                                          // [1633 ] push this 6
M=M+1                                                        // [1634 ] push this 6
A=M-1                                                        // [1635 ] push this 6
M=D                                                          // [1636 ] push this 6
@SP                                                          // [1637 ] add
AM=M-1                                                       // [1638 ] add
D=M                                                          // [1639 ] add
A=A-1                                                        // [1640 ] add
M=D+M                                                        // [1641 ] add
@SP                                                          // [1642 ] pop this 4
AM=M-1                                                       // [1643 ] pop this 4
D=M                                                          // [1644 ] pop this 4
@R13                                                         // [1645 ] pop this 4
M=D                                                          // [1646 ] pop this 4
@THIS                                                        // [1647 ] pop this 4
D=M                                                          // [1648 ] pop this 4
@4                                                           // [1649 ] pop this 4
D=D+A                                                        // [1650 ] pop this 4
@R14                                                         // [1651 ] pop this 4
M=D                                                          // [1652 ] pop this 4
@R13                                                         // [1653 ] pop this 4
D=M                                                          // [1654 ] pop this 4
@R14                                                         // [1655 ] pop this 4
A=M                                                          // [1656 ] pop this 4
M=D                                                          // [1657 ] pop this 4
@THIS                                                        // [1658 ] push this 9
D=M                                                          // [1659 ] push this 9
@9                                                           // [1660 ] push this 9
A=D+A                                                        // [1661 ] push this 9
D=M                                                          // [1662 ] push this 9
@SP                                                          // [1663 ] push this 9
M=M+1                                                        // [1664 ] push this 9
A=M-1                                                        // [1665 ] push this 9
M=D                                                          // [1666 ] push this 9
@SP                                                          // [1667 ] if-goto IF_TRUE1
AM=M-1                                                       // [1668 ] if-goto IF_TRUE1
D=M                                                          // [1669 ] if-goto IF_TRUE1
@Ball.move$IF_TRUE1                                          // [1670 ] if-goto IF_TRUE1
D;JNE                                                        // [1671 ] if-goto IF_TRUE1
@Ball.move$IF_FALSE1                                         // [1672 ] goto IF_FALSE1
0;JEQ                                                        // [1673 ] goto IF_FALSE1
(Ball.move$IF_TRUE1)                                         // [     ] label IF_TRUE1
@THIS                                                        // [1674 ] push this 7
D=M                                                          // [1675 ] push this 7
@7                                                           // [1676 ] push this 7
A=D+A                                                        // [1677 ] push this 7
D=M                                                          // [1678 ] push this 7
@SP                                                          // [1679 ] push this 7
M=M+1                                                        // [1680 ] push this 7
A=M-1                                                        // [1681 ] push this 7
M=D                                                          // [1682 ] push this 7
@SP                                                          // [1683 ] if-goto IF_TRUE2
AM=M-1                                                       // [1684 ] if-goto IF_TRUE2
D=M                                                          // [1685 ] if-goto IF_TRUE2
@Ball.move$IF_TRUE2                                          // [1686 ] if-goto IF_TRUE2
D;JNE                                                        // [1687 ] if-goto IF_TRUE2
@Ball.move$IF_FALSE2                                         // [1688 ] goto IF_FALSE2
0;JEQ                                                        // [1689 ] goto IF_FALSE2
(Ball.move$IF_TRUE2)                                         // [     ] label IF_TRUE2
@THIS                                                        // [1690 ] push this 0
D=M                                                          // [1691 ] push this 0
@0                                                           // [1692 ] push this 0
A=D+A                                                        // [1693 ] push this 0
D=M                                                          // [1694 ] push this 0
@SP                                                          // [1695 ] push this 0
M=M+1                                                        // [1696 ] push this 0
A=M-1                                                        // [1697 ] push this 0
M=D                                                          // [1698 ] push this 0
@4                                                           // [1699 ] push constant 4
D=A                                                          // [1700 ] push constant 4
@SP                                                          // [1701 ] push constant 4
M=M+1                                                        // [1702 ] push constant 4
A=M-1                                                        // [1703 ] push constant 4
M=D                                                          // [1704 ] push constant 4
@SP                                                          // [1705 ] add
AM=M-1                                                       // [1706 ] add
D=M                                                          // [1707 ] add
A=A-1                                                        // [1708 ] add
M=D+M                                                        // [1709 ] add
@SP                                                          // [1710 ] pop this 0
AM=M-1                                                       // [1711 ] pop this 0
D=M                                                          // [1712 ] pop this 0
@R13                                                         // [1713 ] pop this 0
M=D                                                          // [1714 ] pop this 0
@THIS                                                        // [1715 ] pop this 0
D=M                                                          // [1716 ] pop this 0
@0                                                           // [1717 ] pop this 0
D=D+A                                                        // [1718 ] pop this 0
@R14                                                         // [1719 ] pop this 0
M=D                                                          // [1720 ] pop this 0
@R13                                                         // [1721 ] pop this 0
D=M                                                          // [1722 ] pop this 0
@R14                                                         // [1723 ] pop this 0
A=M                                                          // [1724 ] pop this 0
M=D                                                          // [1725 ] pop this 0
@Ball.move$IF_END2                                           // [1726 ] goto IF_END2
0;JEQ                                                        // [1727 ] goto IF_END2
(Ball.move$IF_FALSE2)                                        // [     ] label IF_FALSE2
@THIS                                                        // [1728 ] push this 1
D=M                                                          // [1729 ] push this 1
@1                                                           // [1730 ] push this 1
A=D+A                                                        // [1731 ] push this 1
D=M                                                          // [1732 ] push this 1
@SP                                                          // [1733 ] push this 1
M=M+1                                                        // [1734 ] push this 1
A=M-1                                                        // [1735 ] push this 1
M=D                                                          // [1736 ] push this 1
@4                                                           // [1737 ] push constant 4
D=A                                                          // [1738 ] push constant 4
@SP                                                          // [1739 ] push constant 4
M=M+1                                                        // [1740 ] push constant 4
A=M-1                                                        // [1741 ] push constant 4
M=D                                                          // [1742 ] push constant 4
@SP                                                          // [1743 ] add
AM=M-1                                                       // [1744 ] add
D=M                                                          // [1745 ] add
A=A-1                                                        // [1746 ] add
M=D+M                                                        // [1747 ] add
@SP                                                          // [1748 ] pop this 1
AM=M-1                                                       // [1749 ] pop this 1
D=M                                                          // [1750 ] pop this 1
@R13                                                         // [1751 ] pop this 1
M=D                                                          // [1752 ] pop this 1
@THIS                                                        // [1753 ] pop this 1
D=M                                                          // [1754 ] pop this 1
@1                                                           // [1755 ] pop this 1
D=D+A                                                        // [1756 ] pop this 1
@R14                                                         // [1757 ] pop this 1
M=D                                                          // [1758 ] pop this 1
@R13                                                         // [1759 ] pop this 1
D=M                                                          // [1760 ] pop this 1
@R14                                                         // [1761 ] pop this 1
A=M                                                          // [1762 ] pop this 1
M=D                                                          // [1763 ] pop this 1
(Ball.move$IF_END2)                                          // [     ] label IF_END2
@Ball.move$IF_END1                                           // [1764 ] goto IF_END1
0;JEQ                                                        // [1765 ] goto IF_END1
(Ball.move$IF_FALSE1)                                        // [     ] label IF_FALSE1
@THIS                                                        // [1766 ] push this 7
D=M                                                          // [1767 ] push this 7
@7                                                           // [1768 ] push this 7
A=D+A                                                        // [1769 ] push this 7
D=M                                                          // [1770 ] push this 7
@SP                                                          // [1771 ] push this 7
M=M+1                                                        // [1772 ] push this 7
A=M-1                                                        // [1773 ] push this 7
M=D                                                          // [1774 ] push this 7
@SP                                                          // [1775 ] if-goto IF_TRUE3
AM=M-1                                                       // [1776 ] if-goto IF_TRUE3
D=M                                                          // [1777 ] if-goto IF_TRUE3
@Ball.move$IF_TRUE3                                          // [1778 ] if-goto IF_TRUE3
D;JNE                                                        // [1779 ] if-goto IF_TRUE3
@Ball.move$IF_FALSE3                                         // [1780 ] goto IF_FALSE3
0;JEQ                                                        // [1781 ] goto IF_FALSE3
(Ball.move$IF_TRUE3)                                         // [     ] label IF_TRUE3
@THIS                                                        // [1782 ] push this 0
D=M                                                          // [1783 ] push this 0
@0                                                           // [1784 ] push this 0
A=D+A                                                        // [1785 ] push this 0
D=M                                                          // [1786 ] push this 0
@SP                                                          // [1787 ] push this 0
M=M+1                                                        // [1788 ] push this 0
A=M-1                                                        // [1789 ] push this 0
M=D                                                          // [1790 ] push this 0
@4                                                           // [1791 ] push constant 4
D=A                                                          // [1792 ] push constant 4
@SP                                                          // [1793 ] push constant 4
M=M+1                                                        // [1794 ] push constant 4
A=M-1                                                        // [1795 ] push constant 4
M=D                                                          // [1796 ] push constant 4
@SP                                                          // [1797 ] sub
AM=M-1                                                       // [1798 ] sub
D=M                                                          // [1799 ] sub
A=A-1                                                        // [1800 ] sub
M=M-D                                                        // [1801 ] sub
@SP                                                          // [1802 ] pop this 0
AM=M-1                                                       // [1803 ] pop this 0
D=M                                                          // [1804 ] pop this 0
@R13                                                         // [1805 ] pop this 0
M=D                                                          // [1806 ] pop this 0
@THIS                                                        // [1807 ] pop this 0
D=M                                                          // [1808 ] pop this 0
@0                                                           // [1809 ] pop this 0
D=D+A                                                        // [1810 ] pop this 0
@R14                                                         // [1811 ] pop this 0
M=D                                                          // [1812 ] pop this 0
@R13                                                         // [1813 ] pop this 0
D=M                                                          // [1814 ] pop this 0
@R14                                                         // [1815 ] pop this 0
A=M                                                          // [1816 ] pop this 0
M=D                                                          // [1817 ] pop this 0
@Ball.move$IF_END3                                           // [1818 ] goto IF_END3
0;JEQ                                                        // [1819 ] goto IF_END3
(Ball.move$IF_FALSE3)                                        // [     ] label IF_FALSE3
@THIS                                                        // [1820 ] push this 1
D=M                                                          // [1821 ] push this 1
@1                                                           // [1822 ] push this 1
A=D+A                                                        // [1823 ] push this 1
D=M                                                          // [1824 ] push this 1
@SP                                                          // [1825 ] push this 1
M=M+1                                                        // [1826 ] push this 1
A=M-1                                                        // [1827 ] push this 1
M=D                                                          // [1828 ] push this 1
@4                                                           // [1829 ] push constant 4
D=A                                                          // [1830 ] push constant 4
@SP                                                          // [1831 ] push constant 4
M=M+1                                                        // [1832 ] push constant 4
A=M-1                                                        // [1833 ] push constant 4
M=D                                                          // [1834 ] push constant 4
@SP                                                          // [1835 ] sub
AM=M-1                                                       // [1836 ] sub
D=M                                                          // [1837 ] sub
A=A-1                                                        // [1838 ] sub
M=M-D                                                        // [1839 ] sub
@SP                                                          // [1840 ] pop this 1
AM=M-1                                                       // [1841 ] pop this 1
D=M                                                          // [1842 ] pop this 1
@R13                                                         // [1843 ] pop this 1
M=D                                                          // [1844 ] pop this 1
@THIS                                                        // [1845 ] pop this 1
D=M                                                          // [1846 ] pop this 1
@1                                                           // [1847 ] pop this 1
D=D+A                                                        // [1848 ] pop this 1
@R14                                                         // [1849 ] pop this 1
M=D                                                          // [1850 ] pop this 1
@R13                                                         // [1851 ] pop this 1
D=M                                                          // [1852 ] pop this 1
@R14                                                         // [1853 ] pop this 1
A=M                                                          // [1854 ] pop this 1
M=D                                                          // [1855 ] pop this 1
(Ball.move$IF_END3)                                          // [     ] label IF_END3
(Ball.move$IF_END1)                                          // [     ] label IF_END1
(Ball.move$IF_END0)                                          // [     ] label IF_END0
@THIS                                                        // [1856 ] push this 8
D=M                                                          // [1857 ] push this 8
@8                                                           // [1858 ] push this 8
A=D+A                                                        // [1859 ] push this 8
D=M                                                          // [1860 ] push this 8
@SP                                                          // [1861 ] push this 8
M=M+1                                                        // [1862 ] push this 8
A=M-1                                                        // [1863 ] push this 8
M=D                                                          // [1864 ] push this 8
@SP                                                          // [1865 ] if-goto IF_TRUE4
AM=M-1                                                       // [1866 ] if-goto IF_TRUE4
D=M                                                          // [1867 ] if-goto IF_TRUE4
@Ball.move$IF_TRUE4                                          // [1868 ] if-goto IF_TRUE4
D;JNE                                                        // [1869 ] if-goto IF_TRUE4
@Ball.move$IF_FALSE4                                         // [1870 ] goto IF_FALSE4
0;JEQ                                                        // [1871 ] goto IF_FALSE4
(Ball.move$IF_TRUE4)                                         // [     ] label IF_TRUE4
@THIS                                                        // [1872 ] push this 7
D=M                                                          // [1873 ] push this 7
@7                                                           // [1874 ] push this 7
A=D+A                                                        // [1875 ] push this 7
D=M                                                          // [1876 ] push this 7
@SP                                                          // [1877 ] push this 7
M=M+1                                                        // [1878 ] push this 7
A=M-1                                                        // [1879 ] push this 7
M=D                                                          // [1880 ] push this 7
@SP                                                          // [1881 ] if-goto IF_TRUE5
AM=M-1                                                       // [1882 ] if-goto IF_TRUE5
D=M                                                          // [1883 ] if-goto IF_TRUE5
@Ball.move$IF_TRUE5                                          // [1884 ] if-goto IF_TRUE5
D;JNE                                                        // [1885 ] if-goto IF_TRUE5
@Ball.move$IF_FALSE5                                         // [1886 ] goto IF_FALSE5
0;JEQ                                                        // [1887 ] goto IF_FALSE5
(Ball.move$IF_TRUE5)                                         // [     ] label IF_TRUE5
@THIS                                                        // [1888 ] push this 1
D=M                                                          // [1889 ] push this 1
@1                                                           // [1890 ] push this 1
A=D+A                                                        // [1891 ] push this 1
D=M                                                          // [1892 ] push this 1
@SP                                                          // [1893 ] push this 1
M=M+1                                                        // [1894 ] push this 1
A=M-1                                                        // [1895 ] push this 1
M=D                                                          // [1896 ] push this 1
@4                                                           // [1897 ] push constant 4
D=A                                                          // [1898 ] push constant 4
@SP                                                          // [1899 ] push constant 4
M=M+1                                                        // [1900 ] push constant 4
A=M-1                                                        // [1901 ] push constant 4
M=D                                                          // [1902 ] push constant 4
@SP                                                          // [1903 ] add
AM=M-1                                                       // [1904 ] add
D=M                                                          // [1905 ] add
A=A-1                                                        // [1906 ] add
M=D+M                                                        // [1907 ] add
@SP                                                          // [1908 ] pop this 1
AM=M-1                                                       // [1909 ] pop this 1
D=M                                                          // [1910 ] pop this 1
@R13                                                         // [1911 ] pop this 1
M=D                                                          // [1912 ] pop this 1
@THIS                                                        // [1913 ] pop this 1
D=M                                                          // [1914 ] pop this 1
@1                                                           // [1915 ] pop this 1
D=D+A                                                        // [1916 ] pop this 1
@R14                                                         // [1917 ] pop this 1
M=D                                                          // [1918 ] pop this 1
@R13                                                         // [1919 ] pop this 1
D=M                                                          // [1920 ] pop this 1
@R14                                                         // [1921 ] pop this 1
A=M                                                          // [1922 ] pop this 1
M=D                                                          // [1923 ] pop this 1
@Ball.move$IF_END5                                           // [1924 ] goto IF_END5
0;JEQ                                                        // [1925 ] goto IF_END5
(Ball.move$IF_FALSE5)                                        // [     ] label IF_FALSE5
@THIS                                                        // [1926 ] push this 0
D=M                                                          // [1927 ] push this 0
@0                                                           // [1928 ] push this 0
A=D+A                                                        // [1929 ] push this 0
D=M                                                          // [1930 ] push this 0
@SP                                                          // [1931 ] push this 0
M=M+1                                                        // [1932 ] push this 0
A=M-1                                                        // [1933 ] push this 0
M=D                                                          // [1934 ] push this 0
@4                                                           // [1935 ] push constant 4
D=A                                                          // [1936 ] push constant 4
@SP                                                          // [1937 ] push constant 4
M=M+1                                                        // [1938 ] push constant 4
A=M-1                                                        // [1939 ] push constant 4
M=D                                                          // [1940 ] push constant 4
@SP                                                          // [1941 ] add
AM=M-1                                                       // [1942 ] add
D=M                                                          // [1943 ] add
A=A-1                                                        // [1944 ] add
M=D+M                                                        // [1945 ] add
@SP                                                          // [1946 ] pop this 0
AM=M-1                                                       // [1947 ] pop this 0
D=M                                                          // [1948 ] pop this 0
@R13                                                         // [1949 ] pop this 0
M=D                                                          // [1950 ] pop this 0
@THIS                                                        // [1951 ] pop this 0
D=M                                                          // [1952 ] pop this 0
@0                                                           // [1953 ] pop this 0
D=D+A                                                        // [1954 ] pop this 0
@R14                                                         // [1955 ] pop this 0
M=D                                                          // [1956 ] pop this 0
@R13                                                         // [1957 ] pop this 0
D=M                                                          // [1958 ] pop this 0
@R14                                                         // [1959 ] pop this 0
A=M                                                          // [1960 ] pop this 0
M=D                                                          // [1961 ] pop this 0
(Ball.move$IF_END5)                                          // [     ] label IF_END5
@Ball.move$IF_END4                                           // [1962 ] goto IF_END4
0;JEQ                                                        // [1963 ] goto IF_END4
(Ball.move$IF_FALSE4)                                        // [     ] label IF_FALSE4
@THIS                                                        // [1964 ] push this 7
D=M                                                          // [1965 ] push this 7
@7                                                           // [1966 ] push this 7
A=D+A                                                        // [1967 ] push this 7
D=M                                                          // [1968 ] push this 7
@SP                                                          // [1969 ] push this 7
M=M+1                                                        // [1970 ] push this 7
A=M-1                                                        // [1971 ] push this 7
M=D                                                          // [1972 ] push this 7
@SP                                                          // [1973 ] if-goto IF_TRUE6
AM=M-1                                                       // [1974 ] if-goto IF_TRUE6
D=M                                                          // [1975 ] if-goto IF_TRUE6
@Ball.move$IF_TRUE6                                          // [1976 ] if-goto IF_TRUE6
D;JNE                                                        // [1977 ] if-goto IF_TRUE6
@Ball.move$IF_FALSE6                                         // [1978 ] goto IF_FALSE6
0;JEQ                                                        // [1979 ] goto IF_FALSE6
(Ball.move$IF_TRUE6)                                         // [     ] label IF_TRUE6
@THIS                                                        // [1980 ] push this 1
D=M                                                          // [1981 ] push this 1
@1                                                           // [1982 ] push this 1
A=D+A                                                        // [1983 ] push this 1
D=M                                                          // [1984 ] push this 1
@SP                                                          // [1985 ] push this 1
M=M+1                                                        // [1986 ] push this 1
A=M-1                                                        // [1987 ] push this 1
M=D                                                          // [1988 ] push this 1
@4                                                           // [1989 ] push constant 4
D=A                                                          // [1990 ] push constant 4
@SP                                                          // [1991 ] push constant 4
M=M+1                                                        // [1992 ] push constant 4
A=M-1                                                        // [1993 ] push constant 4
M=D                                                          // [1994 ] push constant 4
@SP                                                          // [1995 ] sub
AM=M-1                                                       // [1996 ] sub
D=M                                                          // [1997 ] sub
A=A-1                                                        // [1998 ] sub
M=M-D                                                        // [1999 ] sub
@SP                                                          // [2000 ] pop this 1
AM=M-1                                                       // [2001 ] pop this 1
D=M                                                          // [2002 ] pop this 1
@R13                                                         // [2003 ] pop this 1
M=D                                                          // [2004 ] pop this 1
@THIS                                                        // [2005 ] pop this 1
D=M                                                          // [2006 ] pop this 1
@1                                                           // [2007 ] pop this 1
D=D+A                                                        // [2008 ] pop this 1
@R14                                                         // [2009 ] pop this 1
M=D                                                          // [2010 ] pop this 1
@R13                                                         // [2011 ] pop this 1
D=M                                                          // [2012 ] pop this 1
@R14                                                         // [2013 ] pop this 1
A=M                                                          // [2014 ] pop this 1
M=D                                                          // [2015 ] pop this 1
@Ball.move$IF_END6                                           // [2016 ] goto IF_END6
0;JEQ                                                        // [2017 ] goto IF_END6
(Ball.move$IF_FALSE6)                                        // [     ] label IF_FALSE6
@THIS                                                        // [2018 ] push this 0
D=M                                                          // [2019 ] push this 0
@0                                                           // [2020 ] push this 0
A=D+A                                                        // [2021 ] push this 0
D=M                                                          // [2022 ] push this 0
@SP                                                          // [2023 ] push this 0
M=M+1                                                        // [2024 ] push this 0
A=M-1                                                        // [2025 ] push this 0
M=D                                                          // [2026 ] push this 0
@4                                                           // [2027 ] push constant 4
D=A                                                          // [2028 ] push constant 4
@SP                                                          // [2029 ] push constant 4
M=M+1                                                        // [2030 ] push constant 4
A=M-1                                                        // [2031 ] push constant 4
M=D                                                          // [2032 ] push constant 4
@SP                                                          // [2033 ] sub
AM=M-1                                                       // [2034 ] sub
D=M                                                          // [2035 ] sub
A=A-1                                                        // [2036 ] sub
M=M-D                                                        // [2037 ] sub
@SP                                                          // [2038 ] pop this 0
AM=M-1                                                       // [2039 ] pop this 0
D=M                                                          // [2040 ] pop this 0
@R13                                                         // [2041 ] pop this 0
M=D                                                          // [2042 ] pop this 0
@THIS                                                        // [2043 ] pop this 0
D=M                                                          // [2044 ] pop this 0
@0                                                           // [2045 ] pop this 0
D=D+A                                                        // [2046 ] pop this 0
@R14                                                         // [2047 ] pop this 0
M=D                                                          // [2048 ] pop this 0
@R13                                                         // [2049 ] pop this 0
D=M                                                          // [2050 ] pop this 0
@R14                                                         // [2051 ] pop this 0
A=M                                                          // [2052 ] pop this 0
M=D                                                          // [2053 ] pop this 0
(Ball.move$IF_END6)                                          // [     ] label IF_END6
(Ball.move$IF_END4)                                          // [     ] label IF_END4
@THIS                                                        // [2054 ] push this 0
D=M                                                          // [2055 ] push this 0
@0                                                           // [2056 ] push this 0
A=D+A                                                        // [2057 ] push this 0
D=M                                                          // [2058 ] push this 0
@SP                                                          // [2059 ] push this 0
M=M+1                                                        // [2060 ] push this 0
A=M-1                                                        // [2061 ] push this 0
M=D                                                          // [2062 ] push this 0
@THIS                                                        // [2063 ] push this 10
D=M                                                          // [2064 ] push this 10
@10                                                          // [2065 ] push this 10
A=D+A                                                        // [2066 ] push this 10
D=M                                                          // [2067 ] push this 10
@SP                                                          // [2068 ] push this 10
M=M+1                                                        // [2069 ] push this 10
A=M-1                                                        // [2070 ] push this 10
M=D                                                          // [2071 ] push this 10
@CONTINUE_GT_1                                               // [2072 ] gt
D=A                                                          // [2073 ] gt
@R13                                                         // [2074 ] gt
M=D                                                          // [2075 ] gt
@SP                                                          // [2076 ] gt
AM=M-1                                                       // [2077 ] gt
D=M                                                          // [2078 ] gt
A=A-1                                                        // [2079 ] gt
D=D-M                                                        // [2080 ] gt
@INTERNAL_GT                                                 // [2081 ] gt
0;JEQ                                                        // [2082 ] gt
(CONTINUE_GT_1)                                              // [     ] gt
@SP                                                          // [2083 ] not
A=M-1                                                        // [2084 ] not
D=M                                                          // [2085 ] not
M=!D                                                         // [2086 ] not
@SP                                                          // [2087 ] if-goto IF_TRUE7
AM=M-1                                                       // [2088 ] if-goto IF_TRUE7
D=M                                                          // [2089 ] if-goto IF_TRUE7
@Ball.move$IF_TRUE7                                          // [2090 ] if-goto IF_TRUE7
D;JNE                                                        // [2091 ] if-goto IF_TRUE7
@Ball.move$IF_FALSE7                                         // [2092 ] goto IF_FALSE7
0;JEQ                                                        // [2093 ] goto IF_FALSE7
(Ball.move$IF_TRUE7)                                         // [     ] label IF_TRUE7
@SP                                                          // [2094 ] push constant 1
M=M+1                                                        // [2095 ] push constant 1
A=M-1                                                        // [2096 ] push constant 1
M=1                                                          // [2097 ] push constant 1
@SP                                                          // [2098 ] pop this 14
AM=M-1                                                       // [2099 ] pop this 14
D=M                                                          // [2100 ] pop this 14
@R13                                                         // [2101 ] pop this 14
M=D                                                          // [2102 ] pop this 14
@THIS                                                        // [2103 ] pop this 14
D=M                                                          // [2104 ] pop this 14
@14                                                          // [2105 ] pop this 14
D=D+A                                                        // [2106 ] pop this 14
@R14                                                         // [2107 ] pop this 14
M=D                                                          // [2108 ] pop this 14
@R13                                                         // [2109 ] pop this 14
D=M                                                          // [2110 ] pop this 14
@R14                                                         // [2111 ] pop this 14
A=M                                                          // [2112 ] pop this 14
M=D                                                          // [2113 ] pop this 14
@THIS                                                        // [2114 ] push this 10
D=M                                                          // [2115 ] push this 10
@10                                                          // [2116 ] push this 10
A=D+A                                                        // [2117 ] push this 10
D=M                                                          // [2118 ] push this 10
@SP                                                          // [2119 ] push this 10
M=M+1                                                        // [2120 ] push this 10
A=M-1                                                        // [2121 ] push this 10
M=D                                                          // [2122 ] push this 10
@SP                                                          // [2123 ] pop this 0
AM=M-1                                                       // [2124 ] pop this 0
D=M                                                          // [2125 ] pop this 0
@R13                                                         // [2126 ] pop this 0
M=D                                                          // [2127 ] pop this 0
@THIS                                                        // [2128 ] pop this 0
D=M                                                          // [2129 ] pop this 0
@0                                                           // [2130 ] pop this 0
D=D+A                                                        // [2131 ] pop this 0
@R14                                                         // [2132 ] pop this 0
M=D                                                          // [2133 ] pop this 0
@R13                                                         // [2134 ] pop this 0
D=M                                                          // [2135 ] pop this 0
@R14                                                         // [2136 ] pop this 0
A=M                                                          // [2137 ] pop this 0
M=D                                                          // [2138 ] pop this 0
(Ball.move$IF_FALSE7)                                        // [     ] label IF_FALSE7
@THIS                                                        // [2139 ] push this 0
D=M                                                          // [2140 ] push this 0
@0                                                           // [2141 ] push this 0
A=D+A                                                        // [2142 ] push this 0
D=M                                                          // [2143 ] push this 0
@SP                                                          // [2144 ] push this 0
M=M+1                                                        // [2145 ] push this 0
A=M-1                                                        // [2146 ] push this 0
M=D                                                          // [2147 ] push this 0
@THIS                                                        // [2148 ] push this 11
D=M                                                          // [2149 ] push this 11
@11                                                          // [2150 ] push this 11
A=D+A                                                        // [2151 ] push this 11
D=M                                                          // [2152 ] push this 11
@SP                                                          // [2153 ] push this 11
M=M+1                                                        // [2154 ] push this 11
A=M-1                                                        // [2155 ] push this 11
M=D                                                          // [2156 ] push this 11
@CONTINUE_LT_6                                               // [2157 ] lt
D=A                                                          // [2158 ] lt
@R13                                                         // [2159 ] lt
M=D                                                          // [2160 ] lt
@SP                                                          // [2161 ] lt
AM=M-1                                                       // [2162 ] lt
D=M                                                          // [2163 ] lt
A=A-1                                                        // [2164 ] lt
D=D-M                                                        // [2165 ] lt
@INTERNAL_LT                                                 // [2166 ] lt
0;JEQ                                                        // [2167 ] lt
(CONTINUE_LT_6)                                              // [     ] lt
@SP                                                          // [2168 ] not
A=M-1                                                        // [2169 ] not
D=M                                                          // [2170 ] not
M=!D                                                         // [2171 ] not
@SP                                                          // [2172 ] if-goto IF_TRUE8
AM=M-1                                                       // [2173 ] if-goto IF_TRUE8
D=M                                                          // [2174 ] if-goto IF_TRUE8
@Ball.move$IF_TRUE8                                          // [2175 ] if-goto IF_TRUE8
D;JNE                                                        // [2176 ] if-goto IF_TRUE8
@Ball.move$IF_FALSE8                                         // [2177 ] goto IF_FALSE8
0;JEQ                                                        // [2178 ] goto IF_FALSE8
(Ball.move$IF_TRUE8)                                         // [     ] label IF_TRUE8
@SP                                                          // [2179 ] push constant 2
M=M+1                                                        // [2180 ] push constant 2
A=M-1                                                        // [2181 ] push constant 2
M=1                                                          // [2182 ] push constant 2
M=M+1                                                        // [2183 ] push constant 2
@SP                                                          // [2184 ] pop this 14
AM=M-1                                                       // [2185 ] pop this 14
D=M                                                          // [2186 ] pop this 14
@R13                                                         // [2187 ] pop this 14
M=D                                                          // [2188 ] pop this 14
@THIS                                                        // [2189 ] pop this 14
D=M                                                          // [2190 ] pop this 14
@14                                                          // [2191 ] pop this 14
D=D+A                                                        // [2192 ] pop this 14
@R14                                                         // [2193 ] pop this 14
M=D                                                          // [2194 ] pop this 14
@R13                                                         // [2195 ] pop this 14
D=M                                                          // [2196 ] pop this 14
@R14                                                         // [2197 ] pop this 14
A=M                                                          // [2198 ] pop this 14
M=D                                                          // [2199 ] pop this 14
@THIS                                                        // [2200 ] push this 11
D=M                                                          // [2201 ] push this 11
@11                                                          // [2202 ] push this 11
A=D+A                                                        // [2203 ] push this 11
D=M                                                          // [2204 ] push this 11
@SP                                                          // [2205 ] push this 11
M=M+1                                                        // [2206 ] push this 11
A=M-1                                                        // [2207 ] push this 11
M=D                                                          // [2208 ] push this 11
@SP                                                          // [2209 ] pop this 0
AM=M-1                                                       // [2210 ] pop this 0
D=M                                                          // [2211 ] pop this 0
@R13                                                         // [2212 ] pop this 0
M=D                                                          // [2213 ] pop this 0
@THIS                                                        // [2214 ] pop this 0
D=M                                                          // [2215 ] pop this 0
@0                                                           // [2216 ] pop this 0
D=D+A                                                        // [2217 ] pop this 0
@R14                                                         // [2218 ] pop this 0
M=D                                                          // [2219 ] pop this 0
@R13                                                         // [2220 ] pop this 0
D=M                                                          // [2221 ] pop this 0
@R14                                                         // [2222 ] pop this 0
A=M                                                          // [2223 ] pop this 0
M=D                                                          // [2224 ] pop this 0
(Ball.move$IF_FALSE8)                                        // [     ] label IF_FALSE8
@THIS                                                        // [2225 ] push this 1
D=M                                                          // [2226 ] push this 1
@1                                                           // [2227 ] push this 1
A=D+A                                                        // [2228 ] push this 1
D=M                                                          // [2229 ] push this 1
@SP                                                          // [2230 ] push this 1
M=M+1                                                        // [2231 ] push this 1
A=M-1                                                        // [2232 ] push this 1
M=D                                                          // [2233 ] push this 1
@THIS                                                        // [2234 ] push this 12
D=M                                                          // [2235 ] push this 12
@12                                                          // [2236 ] push this 12
A=D+A                                                        // [2237 ] push this 12
D=M                                                          // [2238 ] push this 12
@SP                                                          // [2239 ] push this 12
M=M+1                                                        // [2240 ] push this 12
A=M-1                                                        // [2241 ] push this 12
M=D                                                          // [2242 ] push this 12
@CONTINUE_GT_2                                               // [2243 ] gt
D=A                                                          // [2244 ] gt
@R13                                                         // [2245 ] gt
M=D                                                          // [2246 ] gt
@SP                                                          // [2247 ] gt
AM=M-1                                                       // [2248 ] gt
D=M                                                          // [2249 ] gt
A=A-1                                                        // [2250 ] gt
D=D-M                                                        // [2251 ] gt
@INTERNAL_GT                                                 // [2252 ] gt
0;JEQ                                                        // [2253 ] gt
(CONTINUE_GT_2)                                              // [     ] gt
@SP                                                          // [2254 ] not
A=M-1                                                        // [2255 ] not
D=M                                                          // [2256 ] not
M=!D                                                         // [2257 ] not
@SP                                                          // [2258 ] if-goto IF_TRUE9
AM=M-1                                                       // [2259 ] if-goto IF_TRUE9
D=M                                                          // [2260 ] if-goto IF_TRUE9
@Ball.move$IF_TRUE9                                          // [2261 ] if-goto IF_TRUE9
D;JNE                                                        // [2262 ] if-goto IF_TRUE9
@Ball.move$IF_FALSE9                                         // [2263 ] goto IF_FALSE9
0;JEQ                                                        // [2264 ] goto IF_FALSE9
(Ball.move$IF_TRUE9)                                         // [     ] label IF_TRUE9
@3                                                           // [2265 ] push constant 3
D=A                                                          // [2266 ] push constant 3
@SP                                                          // [2267 ] push constant 3
M=M+1                                                        // [2268 ] push constant 3
A=M-1                                                        // [2269 ] push constant 3
M=D                                                          // [2270 ] push constant 3
@SP                                                          // [2271 ] pop this 14
AM=M-1                                                       // [2272 ] pop this 14
D=M                                                          // [2273 ] pop this 14
@R13                                                         // [2274 ] pop this 14
M=D                                                          // [2275 ] pop this 14
@THIS                                                        // [2276 ] pop this 14
D=M                                                          // [2277 ] pop this 14
@14                                                          // [2278 ] pop this 14
D=D+A                                                        // [2279 ] pop this 14
@R14                                                         // [2280 ] pop this 14
M=D                                                          // [2281 ] pop this 14
@R13                                                         // [2282 ] pop this 14
D=M                                                          // [2283 ] pop this 14
@R14                                                         // [2284 ] pop this 14
A=M                                                          // [2285 ] pop this 14
M=D                                                          // [2286 ] pop this 14
@THIS                                                        // [2287 ] push this 12
D=M                                                          // [2288 ] push this 12
@12                                                          // [2289 ] push this 12
A=D+A                                                        // [2290 ] push this 12
D=M                                                          // [2291 ] push this 12
@SP                                                          // [2292 ] push this 12
M=M+1                                                        // [2293 ] push this 12
A=M-1                                                        // [2294 ] push this 12
M=D                                                          // [2295 ] push this 12
@SP                                                          // [2296 ] pop this 1
AM=M-1                                                       // [2297 ] pop this 1
D=M                                                          // [2298 ] pop this 1
@R13                                                         // [2299 ] pop this 1
M=D                                                          // [2300 ] pop this 1
@THIS                                                        // [2301 ] pop this 1
D=M                                                          // [2302 ] pop this 1
@1                                                           // [2303 ] pop this 1
D=D+A                                                        // [2304 ] pop this 1
@R14                                                         // [2305 ] pop this 1
M=D                                                          // [2306 ] pop this 1
@R13                                                         // [2307 ] pop this 1
D=M                                                          // [2308 ] pop this 1
@R14                                                         // [2309 ] pop this 1
A=M                                                          // [2310 ] pop this 1
M=D                                                          // [2311 ] pop this 1
(Ball.move$IF_FALSE9)                                        // [     ] label IF_FALSE9
@THIS                                                        // [2312 ] push this 1
D=M                                                          // [2313 ] push this 1
@1                                                           // [2314 ] push this 1
A=D+A                                                        // [2315 ] push this 1
D=M                                                          // [2316 ] push this 1
@SP                                                          // [2317 ] push this 1
M=M+1                                                        // [2318 ] push this 1
A=M-1                                                        // [2319 ] push this 1
M=D                                                          // [2320 ] push this 1
@THIS                                                        // [2321 ] push this 13
D=M                                                          // [2322 ] push this 13
@13                                                          // [2323 ] push this 13
A=D+A                                                        // [2324 ] push this 13
D=M                                                          // [2325 ] push this 13
@SP                                                          // [2326 ] push this 13
M=M+1                                                        // [2327 ] push this 13
A=M-1                                                        // [2328 ] push this 13
M=D                                                          // [2329 ] push this 13
@CONTINUE_LT_7                                               // [2330 ] lt
D=A                                                          // [2331 ] lt
@R13                                                         // [2332 ] lt
M=D                                                          // [2333 ] lt
@SP                                                          // [2334 ] lt
AM=M-1                                                       // [2335 ] lt
D=M                                                          // [2336 ] lt
A=A-1                                                        // [2337 ] lt
D=D-M                                                        // [2338 ] lt
@INTERNAL_LT                                                 // [2339 ] lt
0;JEQ                                                        // [2340 ] lt
(CONTINUE_LT_7)                                              // [     ] lt
@SP                                                          // [2341 ] not
A=M-1                                                        // [2342 ] not
D=M                                                          // [2343 ] not
M=!D                                                         // [2344 ] not
@SP                                                          // [2345 ] if-goto IF_TRUE10
AM=M-1                                                       // [2346 ] if-goto IF_TRUE10
D=M                                                          // [2347 ] if-goto IF_TRUE10
@Ball.move$IF_TRUE10                                         // [2348 ] if-goto IF_TRUE10
D;JNE                                                        // [2349 ] if-goto IF_TRUE10
@Ball.move$IF_FALSE10                                        // [2350 ] goto IF_FALSE10
0;JEQ                                                        // [2351 ] goto IF_FALSE10
(Ball.move$IF_TRUE10)                                        // [     ] label IF_TRUE10
@4                                                           // [2352 ] push constant 4
D=A                                                          // [2353 ] push constant 4
@SP                                                          // [2354 ] push constant 4
M=M+1                                                        // [2355 ] push constant 4
A=M-1                                                        // [2356 ] push constant 4
M=D                                                          // [2357 ] push constant 4
@SP                                                          // [2358 ] pop this 14
AM=M-1                                                       // [2359 ] pop this 14
D=M                                                          // [2360 ] pop this 14
@R13                                                         // [2361 ] pop this 14
M=D                                                          // [2362 ] pop this 14
@THIS                                                        // [2363 ] pop this 14
D=M                                                          // [2364 ] pop this 14
@14                                                          // [2365 ] pop this 14
D=D+A                                                        // [2366 ] pop this 14
@R14                                                         // [2367 ] pop this 14
M=D                                                          // [2368 ] pop this 14
@R13                                                         // [2369 ] pop this 14
D=M                                                          // [2370 ] pop this 14
@R14                                                         // [2371 ] pop this 14
A=M                                                          // [2372 ] pop this 14
M=D                                                          // [2373 ] pop this 14
@THIS                                                        // [2374 ] push this 13
D=M                                                          // [2375 ] push this 13
@13                                                          // [2376 ] push this 13
A=D+A                                                        // [2377 ] push this 13
D=M                                                          // [2378 ] push this 13
@SP                                                          // [2379 ] push this 13
M=M+1                                                        // [2380 ] push this 13
A=M-1                                                        // [2381 ] push this 13
M=D                                                          // [2382 ] push this 13
@SP                                                          // [2383 ] pop this 1
AM=M-1                                                       // [2384 ] pop this 1
D=M                                                          // [2385 ] pop this 1
@R13                                                         // [2386 ] pop this 1
M=D                                                          // [2387 ] pop this 1
@THIS                                                        // [2388 ] pop this 1
D=M                                                          // [2389 ] pop this 1
@1                                                           // [2390 ] pop this 1
D=D+A                                                        // [2391 ] pop this 1
@R14                                                         // [2392 ] pop this 1
M=D                                                          // [2393 ] pop this 1
@R13                                                         // [2394 ] pop this 1
D=M                                                          // [2395 ] pop this 1
@R14                                                         // [2396 ] pop this 1
A=M                                                          // [2397 ] pop this 1
M=D                                                          // [2398 ] pop this 1
(Ball.move$IF_FALSE10)                                       // [     ] label IF_FALSE10
@3                                                           // [2399 ] push pointer 0
D=M                                                          // [2400 ] push pointer 0
@SP                                                          // [2401 ] push pointer 0
M=M+1                                                        // [2402 ] push pointer 0
A=M-1                                                        // [2403 ] push pointer 0
M=D                                                          // [2404 ] push pointer 0
@1                                                           // [2405 ] call Ball.show 1
D=A                                                          // [2406 ] call Ball.show 1
@R13                                                         // [2407 ] call Ball.show 1
M=D                                                          // [2408 ] call Ball.show 1
@Ball.show                                                   // [2409 ] call Ball.show 1
D=A                                                          // [2410 ] call Ball.show 1
@R14                                                         // [2411 ] call Ball.show 1
M=D                                                          // [2412 ] call Ball.show 1
@return-18                                                   // [2413 ] call Ball.show 1
D=A                                                          // [2414 ] call Ball.show 1
@CALL                                                        // [2415 ] call Ball.show 1
0;JEQ                                                        // [2416 ] call Ball.show 1
(return-18)                                                  // [     ] call Ball.show 1
@SP                                                          // [2417 ] pop temp 0
AM=M-1                                                       // [2418 ] pop temp 0
D=M                                                          // [2419 ] pop temp 0
@5                                                           // [2420 ] pop temp 0
M=D                                                          // [2421 ] pop temp 0
@THIS                                                        // [2422 ] push this 14
D=M                                                          // [2423 ] push this 14
@14                                                          // [2424 ] push this 14
A=D+A                                                        // [2425 ] push this 14
D=M                                                          // [2426 ] push this 14
@SP                                                          // [2427 ] push this 14
M=M+1                                                        // [2428 ] push this 14
A=M-1                                                        // [2429 ] push this 14
M=D                                                          // [2430 ] push this 14
@RETURN                                                      // [2431 ] return
0;JEQ                                                        // [2432 ] return
(Ball.bounce)                                                // [     ] function Ball.bounce 5
@SP                                                          // [2433 ] function Ball.bounce 5
A=M                                                          // [2434 ] function Ball.bounce 5
M=0                                                          // [2435 ] function Ball.bounce 5
@SP                                                          // [2436 ] function Ball.bounce 5
M=M+1                                                        // [2437 ] function Ball.bounce 5
@SP                                                          // [2438 ] function Ball.bounce 5
A=M                                                          // [2439 ] function Ball.bounce 5
M=0                                                          // [2440 ] function Ball.bounce 5
@SP                                                          // [2441 ] function Ball.bounce 5
M=M+1                                                        // [2442 ] function Ball.bounce 5
@SP                                                          // [2443 ] function Ball.bounce 5
A=M                                                          // [2444 ] function Ball.bounce 5
M=0                                                          // [2445 ] function Ball.bounce 5
@SP                                                          // [2446 ] function Ball.bounce 5
M=M+1                                                        // [2447 ] function Ball.bounce 5
@SP                                                          // [2448 ] function Ball.bounce 5
A=M                                                          // [2449 ] function Ball.bounce 5
M=0                                                          // [2450 ] function Ball.bounce 5
@SP                                                          // [2451 ] function Ball.bounce 5
M=M+1                                                        // [2452 ] function Ball.bounce 5
@SP                                                          // [2453 ] function Ball.bounce 5
A=M                                                          // [2454 ] function Ball.bounce 5
M=0                                                          // [2455 ] function Ball.bounce 5
@SP                                                          // [2456 ] function Ball.bounce 5
M=M+1                                                        // [2457 ] function Ball.bounce 5
@ARG                                                         // [2458 ] push argument 0
D=M                                                          // [2459 ] push argument 0
@0                                                           // [2460 ] push argument 0
A=D+A                                                        // [2461 ] push argument 0
D=M                                                          // [2462 ] push argument 0
@SP                                                          // [2463 ] push argument 0
M=M+1                                                        // [2464 ] push argument 0
A=M-1                                                        // [2465 ] push argument 0
M=D                                                          // [2466 ] push argument 0
@SP                                                          // [2467 ] pop pointer 0
AM=M-1                                                       // [2468 ] pop pointer 0
D=M                                                          // [2469 ] pop pointer 0
@3                                                           // [2470 ] pop pointer 0
M=D                                                          // [2471 ] pop pointer 0
@THIS                                                        // [2472 ] push this 2
D=M                                                          // [2473 ] push this 2
@2                                                           // [2474 ] push this 2
A=D+A                                                        // [2475 ] push this 2
D=M                                                          // [2476 ] push this 2
@SP                                                          // [2477 ] push this 2
M=M+1                                                        // [2478 ] push this 2
A=M-1                                                        // [2479 ] push this 2
M=D                                                          // [2480 ] push this 2
@10                                                          // [2481 ] push constant 10
D=A                                                          // [2482 ] push constant 10
@SP                                                          // [2483 ] push constant 10
M=M+1                                                        // [2484 ] push constant 10
A=M-1                                                        // [2485 ] push constant 10
M=D                                                          // [2486 ] push constant 10
@2                                                           // [2487 ] call Math.divide 2
D=A                                                          // [2488 ] call Math.divide 2
@R13                                                         // [2489 ] call Math.divide 2
M=D                                                          // [2490 ] call Math.divide 2
@Math.divide                                                 // [2491 ] call Math.divide 2
D=A                                                          // [2492 ] call Math.divide 2
@R14                                                         // [2493 ] call Math.divide 2
M=D                                                          // [2494 ] call Math.divide 2
@return-19                                                   // [2495 ] call Math.divide 2
D=A                                                          // [2496 ] call Math.divide 2
@CALL                                                        // [2497 ] call Math.divide 2
0;JEQ                                                        // [2498 ] call Math.divide 2
(return-19)                                                  // [     ] call Math.divide 2
@SP                                                          // [2499 ] pop local 2
AM=M-1                                                       // [2500 ] pop local 2
D=M                                                          // [2501 ] pop local 2
@R13                                                         // [2502 ] pop local 2
M=D                                                          // [2503 ] pop local 2
@LCL                                                         // [2504 ] pop local 2
D=M                                                          // [2505 ] pop local 2
@2                                                           // [2506 ] pop local 2
D=D+A                                                        // [2507 ] pop local 2
@R14                                                         // [2508 ] pop local 2
M=D                                                          // [2509 ] pop local 2
@R13                                                         // [2510 ] pop local 2
D=M                                                          // [2511 ] pop local 2
@R14                                                         // [2512 ] pop local 2
A=M                                                          // [2513 ] pop local 2
M=D                                                          // [2514 ] pop local 2
@THIS                                                        // [2515 ] push this 3
D=M                                                          // [2516 ] push this 3
@3                                                           // [2517 ] push this 3
A=D+A                                                        // [2518 ] push this 3
D=M                                                          // [2519 ] push this 3
@SP                                                          // [2520 ] push this 3
M=M+1                                                        // [2521 ] push this 3
A=M-1                                                        // [2522 ] push this 3
M=D                                                          // [2523 ] push this 3
@10                                                          // [2524 ] push constant 10
D=A                                                          // [2525 ] push constant 10
@SP                                                          // [2526 ] push constant 10
M=M+1                                                        // [2527 ] push constant 10
A=M-1                                                        // [2528 ] push constant 10
M=D                                                          // [2529 ] push constant 10
@2                                                           // [2530 ] call Math.divide 2
D=A                                                          // [2531 ] call Math.divide 2
@R13                                                         // [2532 ] call Math.divide 2
M=D                                                          // [2533 ] call Math.divide 2
@Math.divide                                                 // [2534 ] call Math.divide 2
D=A                                                          // [2535 ] call Math.divide 2
@R14                                                         // [2536 ] call Math.divide 2
M=D                                                          // [2537 ] call Math.divide 2
@return-20                                                   // [2538 ] call Math.divide 2
D=A                                                          // [2539 ] call Math.divide 2
@CALL                                                        // [2540 ] call Math.divide 2
0;JEQ                                                        // [2541 ] call Math.divide 2
(return-20)                                                  // [     ] call Math.divide 2
@SP                                                          // [2542 ] pop local 3
AM=M-1                                                       // [2543 ] pop local 3
D=M                                                          // [2544 ] pop local 3
@R13                                                         // [2545 ] pop local 3
M=D                                                          // [2546 ] pop local 3
@LCL                                                         // [2547 ] pop local 3
D=M                                                          // [2548 ] pop local 3
@3                                                           // [2549 ] pop local 3
D=D+A                                                        // [2550 ] pop local 3
@R14                                                         // [2551 ] pop local 3
M=D                                                          // [2552 ] pop local 3
@R13                                                         // [2553 ] pop local 3
D=M                                                          // [2554 ] pop local 3
@R14                                                         // [2555 ] pop local 3
A=M                                                          // [2556 ] pop local 3
M=D                                                          // [2557 ] pop local 3
@ARG                                                         // [2558 ] push argument 1
D=M                                                          // [2559 ] push argument 1
@1                                                           // [2560 ] push argument 1
A=D+A                                                        // [2561 ] push argument 1
D=M                                                          // [2562 ] push argument 1
@SP                                                          // [2563 ] push argument 1
M=M+1                                                        // [2564 ] push argument 1
A=M-1                                                        // [2565 ] push argument 1
M=D                                                          // [2566 ] push argument 1
@SP                                                          // [2567 ] push constant 0
M=M+1                                                        // [2568 ] push constant 0
A=M-1                                                        // [2569 ] push constant 0
M=0                                                          // [2570 ] push constant 0
@CONTINUE_EQ_0                                               // [2571 ] eq
D=A                                                          // [2572 ] eq
@R13                                                         // [2573 ] eq
M=D                                                          // [2574 ] eq
@SP                                                          // [2575 ] eq
AM=M-1                                                       // [2576 ] eq
D=M                                                          // [2577 ] eq
A=A-1                                                        // [2578 ] eq
D=D-M                                                        // [2579 ] eq
@INTERNAL_EQ                                                 // [2580 ] eq
0;JEQ                                                        // [2581 ] eq
(CONTINUE_EQ_0)                                              // [     ] eq
@SP                                                          // [2582 ] if-goto IF_TRUE0
AM=M-1                                                       // [2583 ] if-goto IF_TRUE0
D=M                                                          // [2584 ] if-goto IF_TRUE0
@Ball.bounce$IF_TRUE0                                        // [2585 ] if-goto IF_TRUE0
D;JNE                                                        // [2586 ] if-goto IF_TRUE0
@Ball.bounce$IF_FALSE0                                       // [2587 ] goto IF_FALSE0
0;JEQ                                                        // [2588 ] goto IF_FALSE0
(Ball.bounce$IF_TRUE0)                                       // [     ] label IF_TRUE0
@10                                                          // [2589 ] push constant 10
D=A                                                          // [2590 ] push constant 10
@SP                                                          // [2591 ] push constant 10
M=M+1                                                        // [2592 ] push constant 10
A=M-1                                                        // [2593 ] push constant 10
M=D                                                          // [2594 ] push constant 10
@SP                                                          // [2595 ] pop local 4
AM=M-1                                                       // [2596 ] pop local 4
D=M                                                          // [2597 ] pop local 4
@R13                                                         // [2598 ] pop local 4
M=D                                                          // [2599 ] pop local 4
@LCL                                                         // [2600 ] pop local 4
D=M                                                          // [2601 ] pop local 4
@4                                                           // [2602 ] pop local 4
D=D+A                                                        // [2603 ] pop local 4
@R14                                                         // [2604 ] pop local 4
M=D                                                          // [2605 ] pop local 4
@R13                                                         // [2606 ] pop local 4
D=M                                                          // [2607 ] pop local 4
@R14                                                         // [2608 ] pop local 4
A=M                                                          // [2609 ] pop local 4
M=D                                                          // [2610 ] pop local 4
@Ball.bounce$IF_END0                                         // [2611 ] goto IF_END0
0;JEQ                                                        // [2612 ] goto IF_END0
(Ball.bounce$IF_FALSE0)                                      // [     ] label IF_FALSE0
@THIS                                                        // [2613 ] push this 2
D=M                                                          // [2614 ] push this 2
@2                                                           // [2615 ] push this 2
A=D+A                                                        // [2616 ] push this 2
D=M                                                          // [2617 ] push this 2
@SP                                                          // [2618 ] push this 2
M=M+1                                                        // [2619 ] push this 2
A=M-1                                                        // [2620 ] push this 2
M=D                                                          // [2621 ] push this 2
@SP                                                          // [2622 ] push constant 0
M=M+1                                                        // [2623 ] push constant 0
A=M-1                                                        // [2624 ] push constant 0
M=0                                                          // [2625 ] push constant 0
@CONTINUE_LT_8                                               // [2626 ] lt
D=A                                                          // [2627 ] lt
@R13                                                         // [2628 ] lt
M=D                                                          // [2629 ] lt
@SP                                                          // [2630 ] lt
AM=M-1                                                       // [2631 ] lt
D=M                                                          // [2632 ] lt
A=A-1                                                        // [2633 ] lt
D=D-M                                                        // [2634 ] lt
@INTERNAL_LT                                                 // [2635 ] lt
0;JEQ                                                        // [2636 ] lt
(CONTINUE_LT_8)                                              // [     ] lt
@SP                                                          // [2637 ] not
A=M-1                                                        // [2638 ] not
D=M                                                          // [2639 ] not
M=!D                                                         // [2640 ] not
@ARG                                                         // [2641 ] push argument 1
D=M                                                          // [2642 ] push argument 1
@1                                                           // [2643 ] push argument 1
A=D+A                                                        // [2644 ] push argument 1
D=M                                                          // [2645 ] push argument 1
@SP                                                          // [2646 ] push argument 1
M=M+1                                                        // [2647 ] push argument 1
A=M-1                                                        // [2648 ] push argument 1
M=D                                                          // [2649 ] push argument 1
@SP                                                          // [2650 ] push constant 1
M=M+1                                                        // [2651 ] push constant 1
A=M-1                                                        // [2652 ] push constant 1
M=1                                                          // [2653 ] push constant 1
@CONTINUE_EQ_1                                               // [2654 ] eq
D=A                                                          // [2655 ] eq
@R13                                                         // [2656 ] eq
M=D                                                          // [2657 ] eq
@SP                                                          // [2658 ] eq
AM=M-1                                                       // [2659 ] eq
D=M                                                          // [2660 ] eq
A=A-1                                                        // [2661 ] eq
D=D-M                                                        // [2662 ] eq
@INTERNAL_EQ                                                 // [2663 ] eq
0;JEQ                                                        // [2664 ] eq
(CONTINUE_EQ_1)                                              // [     ] eq
@SP                                                          // [2665 ] and
AM=M-1                                                       // [2666 ] and
D=M                                                          // [2667 ] and
A=A-1                                                        // [2668 ] and
M=D&M                                                        // [2669 ] and
@THIS                                                        // [2670 ] push this 2
D=M                                                          // [2671 ] push this 2
@2                                                           // [2672 ] push this 2
A=D+A                                                        // [2673 ] push this 2
D=M                                                          // [2674 ] push this 2
@SP                                                          // [2675 ] push this 2
M=M+1                                                        // [2676 ] push this 2
A=M-1                                                        // [2677 ] push this 2
M=D                                                          // [2678 ] push this 2
@SP                                                          // [2679 ] push constant 0
M=M+1                                                        // [2680 ] push constant 0
A=M-1                                                        // [2681 ] push constant 0
M=0                                                          // [2682 ] push constant 0
@CONTINUE_LT_9                                               // [2683 ] lt
D=A                                                          // [2684 ] lt
@R13                                                         // [2685 ] lt
M=D                                                          // [2686 ] lt
@SP                                                          // [2687 ] lt
AM=M-1                                                       // [2688 ] lt
D=M                                                          // [2689 ] lt
A=A-1                                                        // [2690 ] lt
D=D-M                                                        // [2691 ] lt
@INTERNAL_LT                                                 // [2692 ] lt
0;JEQ                                                        // [2693 ] lt
(CONTINUE_LT_9)                                              // [     ] lt
@SP                                                          // [2694 ] or
AM=M-1                                                       // [2695 ] or
D=M                                                          // [2696 ] or
A=A-1                                                        // [2697 ] or
M=D|M                                                        // [2698 ] or
@ARG                                                         // [2699 ] push argument 1
D=M                                                          // [2700 ] push argument 1
@1                                                           // [2701 ] push argument 1
A=D+A                                                        // [2702 ] push argument 1
D=M                                                          // [2703 ] push argument 1
@SP                                                          // [2704 ] push argument 1
M=M+1                                                        // [2705 ] push argument 1
A=M-1                                                        // [2706 ] push argument 1
M=D                                                          // [2707 ] push argument 1
@SP                                                          // [2708 ] push constant 1
M=M+1                                                        // [2709 ] push constant 1
A=M-1                                                        // [2710 ] push constant 1
M=1                                                          // [2711 ] push constant 1
@SP                                                          // [2712 ] neg
A=M-1                                                        // [2713 ] neg
D=M                                                          // [2714 ] neg
M=-D                                                         // [2715 ] neg
@CONTINUE_EQ_2                                               // [2716 ] eq
D=A                                                          // [2717 ] eq
@R13                                                         // [2718 ] eq
M=D                                                          // [2719 ] eq
@SP                                                          // [2720 ] eq
AM=M-1                                                       // [2721 ] eq
D=M                                                          // [2722 ] eq
A=A-1                                                        // [2723 ] eq
D=D-M                                                        // [2724 ] eq
@INTERNAL_EQ                                                 // [2725 ] eq
0;JEQ                                                        // [2726 ] eq
(CONTINUE_EQ_2)                                              // [     ] eq
@SP                                                          // [2727 ] and
AM=M-1                                                       // [2728 ] and
D=M                                                          // [2729 ] and
A=A-1                                                        // [2730 ] and
M=D&M                                                        // [2731 ] and
@SP                                                          // [2732 ] if-goto IF_TRUE1
AM=M-1                                                       // [2733 ] if-goto IF_TRUE1
D=M                                                          // [2734 ] if-goto IF_TRUE1
@Ball.bounce$IF_TRUE1                                        // [2735 ] if-goto IF_TRUE1
D;JNE                                                        // [2736 ] if-goto IF_TRUE1
@Ball.bounce$IF_FALSE1                                       // [2737 ] goto IF_FALSE1
0;JEQ                                                        // [2738 ] goto IF_FALSE1
(Ball.bounce$IF_TRUE1)                                       // [     ] label IF_TRUE1
@20                                                          // [2739 ] push constant 20
D=A                                                          // [2740 ] push constant 20
@SP                                                          // [2741 ] push constant 20
M=M+1                                                        // [2742 ] push constant 20
A=M-1                                                        // [2743 ] push constant 20
M=D                                                          // [2744 ] push constant 20
@SP                                                          // [2745 ] pop local 4
AM=M-1                                                       // [2746 ] pop local 4
D=M                                                          // [2747 ] pop local 4
@R13                                                         // [2748 ] pop local 4
M=D                                                          // [2749 ] pop local 4
@LCL                                                         // [2750 ] pop local 4
D=M                                                          // [2751 ] pop local 4
@4                                                           // [2752 ] pop local 4
D=D+A                                                        // [2753 ] pop local 4
@R14                                                         // [2754 ] pop local 4
M=D                                                          // [2755 ] pop local 4
@R13                                                         // [2756 ] pop local 4
D=M                                                          // [2757 ] pop local 4
@R14                                                         // [2758 ] pop local 4
A=M                                                          // [2759 ] pop local 4
M=D                                                          // [2760 ] pop local 4
@Ball.bounce$IF_END1                                         // [2761 ] goto IF_END1
0;JEQ                                                        // [2762 ] goto IF_END1
(Ball.bounce$IF_FALSE1)                                      // [     ] label IF_FALSE1
@5                                                           // [2763 ] push constant 5
D=A                                                          // [2764 ] push constant 5
@SP                                                          // [2765 ] push constant 5
M=M+1                                                        // [2766 ] push constant 5
A=M-1                                                        // [2767 ] push constant 5
M=D                                                          // [2768 ] push constant 5
@SP                                                          // [2769 ] pop local 4
AM=M-1                                                       // [2770 ] pop local 4
D=M                                                          // [2771 ] pop local 4
@R13                                                         // [2772 ] pop local 4
M=D                                                          // [2773 ] pop local 4
@LCL                                                         // [2774 ] pop local 4
D=M                                                          // [2775 ] pop local 4
@4                                                           // [2776 ] pop local 4
D=D+A                                                        // [2777 ] pop local 4
@R14                                                         // [2778 ] pop local 4
M=D                                                          // [2779 ] pop local 4
@R13                                                         // [2780 ] pop local 4
D=M                                                          // [2781 ] pop local 4
@R14                                                         // [2782 ] pop local 4
A=M                                                          // [2783 ] pop local 4
M=D                                                          // [2784 ] pop local 4
(Ball.bounce$IF_END1)                                        // [     ] label IF_END1
(Ball.bounce$IF_END0)                                        // [     ] label IF_END0
@THIS                                                        // [2785 ] push this 14
D=M                                                          // [2786 ] push this 14
@14                                                          // [2787 ] push this 14
A=D+A                                                        // [2788 ] push this 14
D=M                                                          // [2789 ] push this 14
@SP                                                          // [2790 ] push this 14
M=M+1                                                        // [2791 ] push this 14
A=M-1                                                        // [2792 ] push this 14
M=D                                                          // [2793 ] push this 14
@SP                                                          // [2794 ] push constant 1
M=M+1                                                        // [2795 ] push constant 1
A=M-1                                                        // [2796 ] push constant 1
M=1                                                          // [2797 ] push constant 1
@CONTINUE_EQ_3                                               // [2798 ] eq
D=A                                                          // [2799 ] eq
@R13                                                         // [2800 ] eq
M=D                                                          // [2801 ] eq
@SP                                                          // [2802 ] eq
AM=M-1                                                       // [2803 ] eq
D=M                                                          // [2804 ] eq
A=A-1                                                        // [2805 ] eq
D=D-M                                                        // [2806 ] eq
@INTERNAL_EQ                                                 // [2807 ] eq
0;JEQ                                                        // [2808 ] eq
(CONTINUE_EQ_3)                                              // [     ] eq
@SP                                                          // [2809 ] if-goto IF_TRUE2
AM=M-1                                                       // [2810 ] if-goto IF_TRUE2
D=M                                                          // [2811 ] if-goto IF_TRUE2
@Ball.bounce$IF_TRUE2                                        // [2812 ] if-goto IF_TRUE2
D;JNE                                                        // [2813 ] if-goto IF_TRUE2
@Ball.bounce$IF_FALSE2                                       // [2814 ] goto IF_FALSE2
0;JEQ                                                        // [2815 ] goto IF_FALSE2
(Ball.bounce$IF_TRUE2)                                       // [     ] label IF_TRUE2
@506                                                         // [2816 ] push constant 506
D=A                                                          // [2817 ] push constant 506
@SP                                                          // [2818 ] push constant 506
M=M+1                                                        // [2819 ] push constant 506
A=M-1                                                        // [2820 ] push constant 506
M=D                                                          // [2821 ] push constant 506
@SP                                                          // [2822 ] pop local 0
AM=M-1                                                       // [2823 ] pop local 0
D=M                                                          // [2824 ] pop local 0
@R13                                                         // [2825 ] pop local 0
M=D                                                          // [2826 ] pop local 0
@LCL                                                         // [2827 ] pop local 0
D=M                                                          // [2828 ] pop local 0
@0                                                           // [2829 ] pop local 0
D=D+A                                                        // [2830 ] pop local 0
@R14                                                         // [2831 ] pop local 0
M=D                                                          // [2832 ] pop local 0
@R13                                                         // [2833 ] pop local 0
D=M                                                          // [2834 ] pop local 0
@R14                                                         // [2835 ] pop local 0
A=M                                                          // [2836 ] pop local 0
M=D                                                          // [2837 ] pop local 0
@LCL                                                         // [2838 ] push local 3
D=M                                                          // [2839 ] push local 3
@3                                                           // [2840 ] push local 3
A=D+A                                                        // [2841 ] push local 3
D=M                                                          // [2842 ] push local 3
@SP                                                          // [2843 ] push local 3
M=M+1                                                        // [2844 ] push local 3
A=M-1                                                        // [2845 ] push local 3
M=D                                                          // [2846 ] push local 3
@50                                                          // [2847 ] push constant 50
D=A                                                          // [2848 ] push constant 50
@SP                                                          // [2849 ] push constant 50
M=M+1                                                        // [2850 ] push constant 50
A=M-1                                                        // [2851 ] push constant 50
M=D                                                          // [2852 ] push constant 50
@SP                                                          // [2853 ] neg
A=M-1                                                        // [2854 ] neg
D=M                                                          // [2855 ] neg
M=-D                                                         // [2856 ] neg
@2                                                           // [2857 ] call Math.multiply 2
D=A                                                          // [2858 ] call Math.multiply 2
@R13                                                         // [2859 ] call Math.multiply 2
M=D                                                          // [2860 ] call Math.multiply 2
@Math.multiply                                               // [2861 ] call Math.multiply 2
D=A                                                          // [2862 ] call Math.multiply 2
@R14                                                         // [2863 ] call Math.multiply 2
M=D                                                          // [2864 ] call Math.multiply 2
@return-21                                                   // [2865 ] call Math.multiply 2
D=A                                                          // [2866 ] call Math.multiply 2
@CALL                                                        // [2867 ] call Math.multiply 2
0;JEQ                                                        // [2868 ] call Math.multiply 2
(return-21)                                                  // [     ] call Math.multiply 2
@LCL                                                         // [2869 ] push local 2
D=M                                                          // [2870 ] push local 2
@2                                                           // [2871 ] push local 2
A=D+A                                                        // [2872 ] push local 2
D=M                                                          // [2873 ] push local 2
@SP                                                          // [2874 ] push local 2
M=M+1                                                        // [2875 ] push local 2
A=M-1                                                        // [2876 ] push local 2
M=D                                                          // [2877 ] push local 2
@2                                                           // [2878 ] call Math.divide 2
D=A                                                          // [2879 ] call Math.divide 2
@R13                                                         // [2880 ] call Math.divide 2
M=D                                                          // [2881 ] call Math.divide 2
@Math.divide                                                 // [2882 ] call Math.divide 2
D=A                                                          // [2883 ] call Math.divide 2
@R14                                                         // [2884 ] call Math.divide 2
M=D                                                          // [2885 ] call Math.divide 2
@return-22                                                   // [2886 ] call Math.divide 2
D=A                                                          // [2887 ] call Math.divide 2
@CALL                                                        // [2888 ] call Math.divide 2
0;JEQ                                                        // [2889 ] call Math.divide 2
(return-22)                                                  // [     ] call Math.divide 2
@SP                                                          // [2890 ] pop local 1
AM=M-1                                                       // [2891 ] pop local 1
D=M                                                          // [2892 ] pop local 1
@R13                                                         // [2893 ] pop local 1
M=D                                                          // [2894 ] pop local 1
@LCL                                                         // [2895 ] pop local 1
D=M                                                          // [2896 ] pop local 1
@1                                                           // [2897 ] pop local 1
D=D+A                                                        // [2898 ] pop local 1
@R14                                                         // [2899 ] pop local 1
M=D                                                          // [2900 ] pop local 1
@R13                                                         // [2901 ] pop local 1
D=M                                                          // [2902 ] pop local 1
@R14                                                         // [2903 ] pop local 1
A=M                                                          // [2904 ] pop local 1
M=D                                                          // [2905 ] pop local 1
@THIS                                                        // [2906 ] push this 1
D=M                                                          // [2907 ] push this 1
@1                                                           // [2908 ] push this 1
A=D+A                                                        // [2909 ] push this 1
D=M                                                          // [2910 ] push this 1
@SP                                                          // [2911 ] push this 1
M=M+1                                                        // [2912 ] push this 1
A=M-1                                                        // [2913 ] push this 1
M=D                                                          // [2914 ] push this 1
@LCL                                                         // [2915 ] push local 1
D=M                                                          // [2916 ] push local 1
@1                                                           // [2917 ] push local 1
A=D+A                                                        // [2918 ] push local 1
D=M                                                          // [2919 ] push local 1
@SP                                                          // [2920 ] push local 1
M=M+1                                                        // [2921 ] push local 1
A=M-1                                                        // [2922 ] push local 1
M=D                                                          // [2923 ] push local 1
@LCL                                                         // [2924 ] push local 4
D=M                                                          // [2925 ] push local 4
@4                                                           // [2926 ] push local 4
A=D+A                                                        // [2927 ] push local 4
D=M                                                          // [2928 ] push local 4
@SP                                                          // [2929 ] push local 4
M=M+1                                                        // [2930 ] push local 4
A=M-1                                                        // [2931 ] push local 4
M=D                                                          // [2932 ] push local 4
@2                                                           // [2933 ] call Math.multiply 2
D=A                                                          // [2934 ] call Math.multiply 2
@R13                                                         // [2935 ] call Math.multiply 2
M=D                                                          // [2936 ] call Math.multiply 2
@Math.multiply                                               // [2937 ] call Math.multiply 2
D=A                                                          // [2938 ] call Math.multiply 2
@R14                                                         // [2939 ] call Math.multiply 2
M=D                                                          // [2940 ] call Math.multiply 2
@return-23                                                   // [2941 ] call Math.multiply 2
D=A                                                          // [2942 ] call Math.multiply 2
@CALL                                                        // [2943 ] call Math.multiply 2
0;JEQ                                                        // [2944 ] call Math.multiply 2
(return-23)                                                  // [     ] call Math.multiply 2
@SP                                                          // [2945 ] add
AM=M-1                                                       // [2946 ] add
D=M                                                          // [2947 ] add
A=A-1                                                        // [2948 ] add
M=D+M                                                        // [2949 ] add
@SP                                                          // [2950 ] pop local 1
AM=M-1                                                       // [2951 ] pop local 1
D=M                                                          // [2952 ] pop local 1
@R13                                                         // [2953 ] pop local 1
M=D                                                          // [2954 ] pop local 1
@LCL                                                         // [2955 ] pop local 1
D=M                                                          // [2956 ] pop local 1
@1                                                           // [2957 ] pop local 1
D=D+A                                                        // [2958 ] pop local 1
@R14                                                         // [2959 ] pop local 1
M=D                                                          // [2960 ] pop local 1
@R13                                                         // [2961 ] pop local 1
D=M                                                          // [2962 ] pop local 1
@R14                                                         // [2963 ] pop local 1
A=M                                                          // [2964 ] pop local 1
M=D                                                          // [2965 ] pop local 1
@Ball.bounce$IF_END2                                         // [2966 ] goto IF_END2
0;JEQ                                                        // [2967 ] goto IF_END2
(Ball.bounce$IF_FALSE2)                                      // [     ] label IF_FALSE2
@THIS                                                        // [2968 ] push this 14
D=M                                                          // [2969 ] push this 14
@14                                                          // [2970 ] push this 14
A=D+A                                                        // [2971 ] push this 14
D=M                                                          // [2972 ] push this 14
@SP                                                          // [2973 ] push this 14
M=M+1                                                        // [2974 ] push this 14
A=M-1                                                        // [2975 ] push this 14
M=D                                                          // [2976 ] push this 14
@SP                                                          // [2977 ] push constant 2
M=M+1                                                        // [2978 ] push constant 2
A=M-1                                                        // [2979 ] push constant 2
M=1                                                          // [2980 ] push constant 2
M=M+1                                                        // [2981 ] push constant 2
@CONTINUE_EQ_4                                               // [2982 ] eq
D=A                                                          // [2983 ] eq
@R13                                                         // [2984 ] eq
M=D                                                          // [2985 ] eq
@SP                                                          // [2986 ] eq
AM=M-1                                                       // [2987 ] eq
D=M                                                          // [2988 ] eq
A=A-1                                                        // [2989 ] eq
D=D-M                                                        // [2990 ] eq
@INTERNAL_EQ                                                 // [2991 ] eq
0;JEQ                                                        // [2992 ] eq
(CONTINUE_EQ_4)                                              // [     ] eq
@SP                                                          // [2993 ] if-goto IF_TRUE3
AM=M-1                                                       // [2994 ] if-goto IF_TRUE3
D=M                                                          // [2995 ] if-goto IF_TRUE3
@Ball.bounce$IF_TRUE3                                        // [2996 ] if-goto IF_TRUE3
D;JNE                                                        // [2997 ] if-goto IF_TRUE3
@Ball.bounce$IF_FALSE3                                       // [2998 ] goto IF_FALSE3
0;JEQ                                                        // [2999 ] goto IF_FALSE3
(Ball.bounce$IF_TRUE3)                                       // [     ] label IF_TRUE3
@SP                                                          // [3000 ] push constant 0
M=M+1                                                        // [3001 ] push constant 0
A=M-1                                                        // [3002 ] push constant 0
M=0                                                          // [3003 ] push constant 0
@SP                                                          // [3004 ] pop local 0
AM=M-1                                                       // [3005 ] pop local 0
D=M                                                          // [3006 ] pop local 0
@R13                                                         // [3007 ] pop local 0
M=D                                                          // [3008 ] pop local 0
@LCL                                                         // [3009 ] pop local 0
D=M                                                          // [3010 ] pop local 0
@0                                                           // [3011 ] pop local 0
D=D+A                                                        // [3012 ] pop local 0
@R14                                                         // [3013 ] pop local 0
M=D                                                          // [3014 ] pop local 0
@R13                                                         // [3015 ] pop local 0
D=M                                                          // [3016 ] pop local 0
@R14                                                         // [3017 ] pop local 0
A=M                                                          // [3018 ] pop local 0
M=D                                                          // [3019 ] pop local 0
@LCL                                                         // [3020 ] push local 3
D=M                                                          // [3021 ] push local 3
@3                                                           // [3022 ] push local 3
A=D+A                                                        // [3023 ] push local 3
D=M                                                          // [3024 ] push local 3
@SP                                                          // [3025 ] push local 3
M=M+1                                                        // [3026 ] push local 3
A=M-1                                                        // [3027 ] push local 3
M=D                                                          // [3028 ] push local 3
@50                                                          // [3029 ] push constant 50
D=A                                                          // [3030 ] push constant 50
@SP                                                          // [3031 ] push constant 50
M=M+1                                                        // [3032 ] push constant 50
A=M-1                                                        // [3033 ] push constant 50
M=D                                                          // [3034 ] push constant 50
@2                                                           // [3035 ] call Math.multiply 2
D=A                                                          // [3036 ] call Math.multiply 2
@R13                                                         // [3037 ] call Math.multiply 2
M=D                                                          // [3038 ] call Math.multiply 2
@Math.multiply                                               // [3039 ] call Math.multiply 2
D=A                                                          // [3040 ] call Math.multiply 2
@R14                                                         // [3041 ] call Math.multiply 2
M=D                                                          // [3042 ] call Math.multiply 2
@return-24                                                   // [3043 ] call Math.multiply 2
D=A                                                          // [3044 ] call Math.multiply 2
@CALL                                                        // [3045 ] call Math.multiply 2
0;JEQ                                                        // [3046 ] call Math.multiply 2
(return-24)                                                  // [     ] call Math.multiply 2
@LCL                                                         // [3047 ] push local 2
D=M                                                          // [3048 ] push local 2
@2                                                           // [3049 ] push local 2
A=D+A                                                        // [3050 ] push local 2
D=M                                                          // [3051 ] push local 2
@SP                                                          // [3052 ] push local 2
M=M+1                                                        // [3053 ] push local 2
A=M-1                                                        // [3054 ] push local 2
M=D                                                          // [3055 ] push local 2
@2                                                           // [3056 ] call Math.divide 2
D=A                                                          // [3057 ] call Math.divide 2
@R13                                                         // [3058 ] call Math.divide 2
M=D                                                          // [3059 ] call Math.divide 2
@Math.divide                                                 // [3060 ] call Math.divide 2
D=A                                                          // [3061 ] call Math.divide 2
@R14                                                         // [3062 ] call Math.divide 2
M=D                                                          // [3063 ] call Math.divide 2
@return-25                                                   // [3064 ] call Math.divide 2
D=A                                                          // [3065 ] call Math.divide 2
@CALL                                                        // [3066 ] call Math.divide 2
0;JEQ                                                        // [3067 ] call Math.divide 2
(return-25)                                                  // [     ] call Math.divide 2
@SP                                                          // [3068 ] pop local 1
AM=M-1                                                       // [3069 ] pop local 1
D=M                                                          // [3070 ] pop local 1
@R13                                                         // [3071 ] pop local 1
M=D                                                          // [3072 ] pop local 1
@LCL                                                         // [3073 ] pop local 1
D=M                                                          // [3074 ] pop local 1
@1                                                           // [3075 ] pop local 1
D=D+A                                                        // [3076 ] pop local 1
@R14                                                         // [3077 ] pop local 1
M=D                                                          // [3078 ] pop local 1
@R13                                                         // [3079 ] pop local 1
D=M                                                          // [3080 ] pop local 1
@R14                                                         // [3081 ] pop local 1
A=M                                                          // [3082 ] pop local 1
M=D                                                          // [3083 ] pop local 1
@THIS                                                        // [3084 ] push this 1
D=M                                                          // [3085 ] push this 1
@1                                                           // [3086 ] push this 1
A=D+A                                                        // [3087 ] push this 1
D=M                                                          // [3088 ] push this 1
@SP                                                          // [3089 ] push this 1
M=M+1                                                        // [3090 ] push this 1
A=M-1                                                        // [3091 ] push this 1
M=D                                                          // [3092 ] push this 1
@LCL                                                         // [3093 ] push local 1
D=M                                                          // [3094 ] push local 1
@1                                                           // [3095 ] push local 1
A=D+A                                                        // [3096 ] push local 1
D=M                                                          // [3097 ] push local 1
@SP                                                          // [3098 ] push local 1
M=M+1                                                        // [3099 ] push local 1
A=M-1                                                        // [3100 ] push local 1
M=D                                                          // [3101 ] push local 1
@LCL                                                         // [3102 ] push local 4
D=M                                                          // [3103 ] push local 4
@4                                                           // [3104 ] push local 4
A=D+A                                                        // [3105 ] push local 4
D=M                                                          // [3106 ] push local 4
@SP                                                          // [3107 ] push local 4
M=M+1                                                        // [3108 ] push local 4
A=M-1                                                        // [3109 ] push local 4
M=D                                                          // [3110 ] push local 4
@2                                                           // [3111 ] call Math.multiply 2
D=A                                                          // [3112 ] call Math.multiply 2
@R13                                                         // [3113 ] call Math.multiply 2
M=D                                                          // [3114 ] call Math.multiply 2
@Math.multiply                                               // [3115 ] call Math.multiply 2
D=A                                                          // [3116 ] call Math.multiply 2
@R14                                                         // [3117 ] call Math.multiply 2
M=D                                                          // [3118 ] call Math.multiply 2
@return-26                                                   // [3119 ] call Math.multiply 2
D=A                                                          // [3120 ] call Math.multiply 2
@CALL                                                        // [3121 ] call Math.multiply 2
0;JEQ                                                        // [3122 ] call Math.multiply 2
(return-26)                                                  // [     ] call Math.multiply 2
@SP                                                          // [3123 ] add
AM=M-1                                                       // [3124 ] add
D=M                                                          // [3125 ] add
A=A-1                                                        // [3126 ] add
M=D+M                                                        // [3127 ] add
@SP                                                          // [3128 ] pop local 1
AM=M-1                                                       // [3129 ] pop local 1
D=M                                                          // [3130 ] pop local 1
@R13                                                         // [3131 ] pop local 1
M=D                                                          // [3132 ] pop local 1
@LCL                                                         // [3133 ] pop local 1
D=M                                                          // [3134 ] pop local 1
@1                                                           // [3135 ] pop local 1
D=D+A                                                        // [3136 ] pop local 1
@R14                                                         // [3137 ] pop local 1
M=D                                                          // [3138 ] pop local 1
@R13                                                         // [3139 ] pop local 1
D=M                                                          // [3140 ] pop local 1
@R14                                                         // [3141 ] pop local 1
A=M                                                          // [3142 ] pop local 1
M=D                                                          // [3143 ] pop local 1
@Ball.bounce$IF_END3                                         // [3144 ] goto IF_END3
0;JEQ                                                        // [3145 ] goto IF_END3
(Ball.bounce$IF_FALSE3)                                      // [     ] label IF_FALSE3
@THIS                                                        // [3146 ] push this 14
D=M                                                          // [3147 ] push this 14
@14                                                          // [3148 ] push this 14
A=D+A                                                        // [3149 ] push this 14
D=M                                                          // [3150 ] push this 14
@SP                                                          // [3151 ] push this 14
M=M+1                                                        // [3152 ] push this 14
A=M-1                                                        // [3153 ] push this 14
M=D                                                          // [3154 ] push this 14
@3                                                           // [3155 ] push constant 3
D=A                                                          // [3156 ] push constant 3
@SP                                                          // [3157 ] push constant 3
M=M+1                                                        // [3158 ] push constant 3
A=M-1                                                        // [3159 ] push constant 3
M=D                                                          // [3160 ] push constant 3
@CONTINUE_EQ_5                                               // [3161 ] eq
D=A                                                          // [3162 ] eq
@R13                                                         // [3163 ] eq
M=D                                                          // [3164 ] eq
@SP                                                          // [3165 ] eq
AM=M-1                                                       // [3166 ] eq
D=M                                                          // [3167 ] eq
A=A-1                                                        // [3168 ] eq
D=D-M                                                        // [3169 ] eq
@INTERNAL_EQ                                                 // [3170 ] eq
0;JEQ                                                        // [3171 ] eq
(CONTINUE_EQ_5)                                              // [     ] eq
@SP                                                          // [3172 ] if-goto IF_TRUE4
AM=M-1                                                       // [3173 ] if-goto IF_TRUE4
D=M                                                          // [3174 ] if-goto IF_TRUE4
@Ball.bounce$IF_TRUE4                                        // [3175 ] if-goto IF_TRUE4
D;JNE                                                        // [3176 ] if-goto IF_TRUE4
@Ball.bounce$IF_FALSE4                                       // [3177 ] goto IF_FALSE4
0;JEQ                                                        // [3178 ] goto IF_FALSE4
(Ball.bounce$IF_TRUE4)                                       // [     ] label IF_TRUE4
@250                                                         // [3179 ] push constant 250
D=A                                                          // [3180 ] push constant 250
@SP                                                          // [3181 ] push constant 250
M=M+1                                                        // [3182 ] push constant 250
A=M-1                                                        // [3183 ] push constant 250
M=D                                                          // [3184 ] push constant 250
@SP                                                          // [3185 ] pop local 1
AM=M-1                                                       // [3186 ] pop local 1
D=M                                                          // [3187 ] pop local 1
@R13                                                         // [3188 ] pop local 1
M=D                                                          // [3189 ] pop local 1
@LCL                                                         // [3190 ] pop local 1
D=M                                                          // [3191 ] pop local 1
@1                                                           // [3192 ] pop local 1
D=D+A                                                        // [3193 ] pop local 1
@R14                                                         // [3194 ] pop local 1
M=D                                                          // [3195 ] pop local 1
@R13                                                         // [3196 ] pop local 1
D=M                                                          // [3197 ] pop local 1
@R14                                                         // [3198 ] pop local 1
A=M                                                          // [3199 ] pop local 1
M=D                                                          // [3200 ] pop local 1
@LCL                                                         // [3201 ] push local 2
D=M                                                          // [3202 ] push local 2
@2                                                           // [3203 ] push local 2
A=D+A                                                        // [3204 ] push local 2
D=M                                                          // [3205 ] push local 2
@SP                                                          // [3206 ] push local 2
M=M+1                                                        // [3207 ] push local 2
A=M-1                                                        // [3208 ] push local 2
M=D                                                          // [3209 ] push local 2
@25                                                          // [3210 ] push constant 25
D=A                                                          // [3211 ] push constant 25
@SP                                                          // [3212 ] push constant 25
M=M+1                                                        // [3213 ] push constant 25
A=M-1                                                        // [3214 ] push constant 25
M=D                                                          // [3215 ] push constant 25
@SP                                                          // [3216 ] neg
A=M-1                                                        // [3217 ] neg
D=M                                                          // [3218 ] neg
M=-D                                                         // [3219 ] neg
@2                                                           // [3220 ] call Math.multiply 2
D=A                                                          // [3221 ] call Math.multiply 2
@R13                                                         // [3222 ] call Math.multiply 2
M=D                                                          // [3223 ] call Math.multiply 2
@Math.multiply                                               // [3224 ] call Math.multiply 2
D=A                                                          // [3225 ] call Math.multiply 2
@R14                                                         // [3226 ] call Math.multiply 2
M=D                                                          // [3227 ] call Math.multiply 2
@return-27                                                   // [3228 ] call Math.multiply 2
D=A                                                          // [3229 ] call Math.multiply 2
@CALL                                                        // [3230 ] call Math.multiply 2
0;JEQ                                                        // [3231 ] call Math.multiply 2
(return-27)                                                  // [     ] call Math.multiply 2
@LCL                                                         // [3232 ] push local 3
D=M                                                          // [3233 ] push local 3
@3                                                           // [3234 ] push local 3
A=D+A                                                        // [3235 ] push local 3
D=M                                                          // [3236 ] push local 3
@SP                                                          // [3237 ] push local 3
M=M+1                                                        // [3238 ] push local 3
A=M-1                                                        // [3239 ] push local 3
M=D                                                          // [3240 ] push local 3
@2                                                           // [3241 ] call Math.divide 2
D=A                                                          // [3242 ] call Math.divide 2
@R13                                                         // [3243 ] call Math.divide 2
M=D                                                          // [3244 ] call Math.divide 2
@Math.divide                                                 // [3245 ] call Math.divide 2
D=A                                                          // [3246 ] call Math.divide 2
@R14                                                         // [3247 ] call Math.divide 2
M=D                                                          // [3248 ] call Math.divide 2
@return-28                                                   // [3249 ] call Math.divide 2
D=A                                                          // [3250 ] call Math.divide 2
@CALL                                                        // [3251 ] call Math.divide 2
0;JEQ                                                        // [3252 ] call Math.divide 2
(return-28)                                                  // [     ] call Math.divide 2
@SP                                                          // [3253 ] pop local 0
AM=M-1                                                       // [3254 ] pop local 0
D=M                                                          // [3255 ] pop local 0
@R13                                                         // [3256 ] pop local 0
M=D                                                          // [3257 ] pop local 0
@LCL                                                         // [3258 ] pop local 0
D=M                                                          // [3259 ] pop local 0
@0                                                           // [3260 ] pop local 0
D=D+A                                                        // [3261 ] pop local 0
@R14                                                         // [3262 ] pop local 0
M=D                                                          // [3263 ] pop local 0
@R13                                                         // [3264 ] pop local 0
D=M                                                          // [3265 ] pop local 0
@R14                                                         // [3266 ] pop local 0
A=M                                                          // [3267 ] pop local 0
M=D                                                          // [3268 ] pop local 0
@THIS                                                        // [3269 ] push this 0
D=M                                                          // [3270 ] push this 0
@0                                                           // [3271 ] push this 0
A=D+A                                                        // [3272 ] push this 0
D=M                                                          // [3273 ] push this 0
@SP                                                          // [3274 ] push this 0
M=M+1                                                        // [3275 ] push this 0
A=M-1                                                        // [3276 ] push this 0
M=D                                                          // [3277 ] push this 0
@LCL                                                         // [3278 ] push local 0
D=M                                                          // [3279 ] push local 0
@0                                                           // [3280 ] push local 0
A=D+A                                                        // [3281 ] push local 0
D=M                                                          // [3282 ] push local 0
@SP                                                          // [3283 ] push local 0
M=M+1                                                        // [3284 ] push local 0
A=M-1                                                        // [3285 ] push local 0
M=D                                                          // [3286 ] push local 0
@LCL                                                         // [3287 ] push local 4
D=M                                                          // [3288 ] push local 4
@4                                                           // [3289 ] push local 4
A=D+A                                                        // [3290 ] push local 4
D=M                                                          // [3291 ] push local 4
@SP                                                          // [3292 ] push local 4
M=M+1                                                        // [3293 ] push local 4
A=M-1                                                        // [3294 ] push local 4
M=D                                                          // [3295 ] push local 4
@2                                                           // [3296 ] call Math.multiply 2
D=A                                                          // [3297 ] call Math.multiply 2
@R13                                                         // [3298 ] call Math.multiply 2
M=D                                                          // [3299 ] call Math.multiply 2
@Math.multiply                                               // [3300 ] call Math.multiply 2
D=A                                                          // [3301 ] call Math.multiply 2
@R14                                                         // [3302 ] call Math.multiply 2
M=D                                                          // [3303 ] call Math.multiply 2
@return-29                                                   // [3304 ] call Math.multiply 2
D=A                                                          // [3305 ] call Math.multiply 2
@CALL                                                        // [3306 ] call Math.multiply 2
0;JEQ                                                        // [3307 ] call Math.multiply 2
(return-29)                                                  // [     ] call Math.multiply 2
@SP                                                          // [3308 ] add
AM=M-1                                                       // [3309 ] add
D=M                                                          // [3310 ] add
A=A-1                                                        // [3311 ] add
M=D+M                                                        // [3312 ] add
@SP                                                          // [3313 ] pop local 0
AM=M-1                                                       // [3314 ] pop local 0
D=M                                                          // [3315 ] pop local 0
@R13                                                         // [3316 ] pop local 0
M=D                                                          // [3317 ] pop local 0
@LCL                                                         // [3318 ] pop local 0
D=M                                                          // [3319 ] pop local 0
@0                                                           // [3320 ] pop local 0
D=D+A                                                        // [3321 ] pop local 0
@R14                                                         // [3322 ] pop local 0
M=D                                                          // [3323 ] pop local 0
@R13                                                         // [3324 ] pop local 0
D=M                                                          // [3325 ] pop local 0
@R14                                                         // [3326 ] pop local 0
A=M                                                          // [3327 ] pop local 0
M=D                                                          // [3328 ] pop local 0
@Ball.bounce$IF_END4                                         // [3329 ] goto IF_END4
0;JEQ                                                        // [3330 ] goto IF_END4
(Ball.bounce$IF_FALSE4)                                      // [     ] label IF_FALSE4
@SP                                                          // [3331 ] push constant 0
M=M+1                                                        // [3332 ] push constant 0
A=M-1                                                        // [3333 ] push constant 0
M=0                                                          // [3334 ] push constant 0
@SP                                                          // [3335 ] pop local 1
AM=M-1                                                       // [3336 ] pop local 1
D=M                                                          // [3337 ] pop local 1
@R13                                                         // [3338 ] pop local 1
M=D                                                          // [3339 ] pop local 1
@LCL                                                         // [3340 ] pop local 1
D=M                                                          // [3341 ] pop local 1
@1                                                           // [3342 ] pop local 1
D=D+A                                                        // [3343 ] pop local 1
@R14                                                         // [3344 ] pop local 1
M=D                                                          // [3345 ] pop local 1
@R13                                                         // [3346 ] pop local 1
D=M                                                          // [3347 ] pop local 1
@R14                                                         // [3348 ] pop local 1
A=M                                                          // [3349 ] pop local 1
M=D                                                          // [3350 ] pop local 1
@LCL                                                         // [3351 ] push local 2
D=M                                                          // [3352 ] push local 2
@2                                                           // [3353 ] push local 2
A=D+A                                                        // [3354 ] push local 2
D=M                                                          // [3355 ] push local 2
@SP                                                          // [3356 ] push local 2
M=M+1                                                        // [3357 ] push local 2
A=M-1                                                        // [3358 ] push local 2
M=D                                                          // [3359 ] push local 2
@25                                                          // [3360 ] push constant 25
D=A                                                          // [3361 ] push constant 25
@SP                                                          // [3362 ] push constant 25
M=M+1                                                        // [3363 ] push constant 25
A=M-1                                                        // [3364 ] push constant 25
M=D                                                          // [3365 ] push constant 25
@2                                                           // [3366 ] call Math.multiply 2
D=A                                                          // [3367 ] call Math.multiply 2
@R13                                                         // [3368 ] call Math.multiply 2
M=D                                                          // [3369 ] call Math.multiply 2
@Math.multiply                                               // [3370 ] call Math.multiply 2
D=A                                                          // [3371 ] call Math.multiply 2
@R14                                                         // [3372 ] call Math.multiply 2
M=D                                                          // [3373 ] call Math.multiply 2
@return-30                                                   // [3374 ] call Math.multiply 2
D=A                                                          // [3375 ] call Math.multiply 2
@CALL                                                        // [3376 ] call Math.multiply 2
0;JEQ                                                        // [3377 ] call Math.multiply 2
(return-30)                                                  // [     ] call Math.multiply 2
@LCL                                                         // [3378 ] push local 3
D=M                                                          // [3379 ] push local 3
@3                                                           // [3380 ] push local 3
A=D+A                                                        // [3381 ] push local 3
D=M                                                          // [3382 ] push local 3
@SP                                                          // [3383 ] push local 3
M=M+1                                                        // [3384 ] push local 3
A=M-1                                                        // [3385 ] push local 3
M=D                                                          // [3386 ] push local 3
@2                                                           // [3387 ] call Math.divide 2
D=A                                                          // [3388 ] call Math.divide 2
@R13                                                         // [3389 ] call Math.divide 2
M=D                                                          // [3390 ] call Math.divide 2
@Math.divide                                                 // [3391 ] call Math.divide 2
D=A                                                          // [3392 ] call Math.divide 2
@R14                                                         // [3393 ] call Math.divide 2
M=D                                                          // [3394 ] call Math.divide 2
@return-31                                                   // [3395 ] call Math.divide 2
D=A                                                          // [3396 ] call Math.divide 2
@CALL                                                        // [3397 ] call Math.divide 2
0;JEQ                                                        // [3398 ] call Math.divide 2
(return-31)                                                  // [     ] call Math.divide 2
@SP                                                          // [3399 ] pop local 0
AM=M-1                                                       // [3400 ] pop local 0
D=M                                                          // [3401 ] pop local 0
@R13                                                         // [3402 ] pop local 0
M=D                                                          // [3403 ] pop local 0
@LCL                                                         // [3404 ] pop local 0
D=M                                                          // [3405 ] pop local 0
@0                                                           // [3406 ] pop local 0
D=D+A                                                        // [3407 ] pop local 0
@R14                                                         // [3408 ] pop local 0
M=D                                                          // [3409 ] pop local 0
@R13                                                         // [3410 ] pop local 0
D=M                                                          // [3411 ] pop local 0
@R14                                                         // [3412 ] pop local 0
A=M                                                          // [3413 ] pop local 0
M=D                                                          // [3414 ] pop local 0
@THIS                                                        // [3415 ] push this 0
D=M                                                          // [3416 ] push this 0
@0                                                           // [3417 ] push this 0
A=D+A                                                        // [3418 ] push this 0
D=M                                                          // [3419 ] push this 0
@SP                                                          // [3420 ] push this 0
M=M+1                                                        // [3421 ] push this 0
A=M-1                                                        // [3422 ] push this 0
M=D                                                          // [3423 ] push this 0
@LCL                                                         // [3424 ] push local 0
D=M                                                          // [3425 ] push local 0
@0                                                           // [3426 ] push local 0
A=D+A                                                        // [3427 ] push local 0
D=M                                                          // [3428 ] push local 0
@SP                                                          // [3429 ] push local 0
M=M+1                                                        // [3430 ] push local 0
A=M-1                                                        // [3431 ] push local 0
M=D                                                          // [3432 ] push local 0
@LCL                                                         // [3433 ] push local 4
D=M                                                          // [3434 ] push local 4
@4                                                           // [3435 ] push local 4
A=D+A                                                        // [3436 ] push local 4
D=M                                                          // [3437 ] push local 4
@SP                                                          // [3438 ] push local 4
M=M+1                                                        // [3439 ] push local 4
A=M-1                                                        // [3440 ] push local 4
M=D                                                          // [3441 ] push local 4
@2                                                           // [3442 ] call Math.multiply 2
D=A                                                          // [3443 ] call Math.multiply 2
@R13                                                         // [3444 ] call Math.multiply 2
M=D                                                          // [3445 ] call Math.multiply 2
@Math.multiply                                               // [3446 ] call Math.multiply 2
D=A                                                          // [3447 ] call Math.multiply 2
@R14                                                         // [3448 ] call Math.multiply 2
M=D                                                          // [3449 ] call Math.multiply 2
@return-32                                                   // [3450 ] call Math.multiply 2
D=A                                                          // [3451 ] call Math.multiply 2
@CALL                                                        // [3452 ] call Math.multiply 2
0;JEQ                                                        // [3453 ] call Math.multiply 2
(return-32)                                                  // [     ] call Math.multiply 2
@SP                                                          // [3454 ] add
AM=M-1                                                       // [3455 ] add
D=M                                                          // [3456 ] add
A=A-1                                                        // [3457 ] add
M=D+M                                                        // [3458 ] add
@SP                                                          // [3459 ] pop local 0
AM=M-1                                                       // [3460 ] pop local 0
D=M                                                          // [3461 ] pop local 0
@R13                                                         // [3462 ] pop local 0
M=D                                                          // [3463 ] pop local 0
@LCL                                                         // [3464 ] pop local 0
D=M                                                          // [3465 ] pop local 0
@0                                                           // [3466 ] pop local 0
D=D+A                                                        // [3467 ] pop local 0
@R14                                                         // [3468 ] pop local 0
M=D                                                          // [3469 ] pop local 0
@R13                                                         // [3470 ] pop local 0
D=M                                                          // [3471 ] pop local 0
@R14                                                         // [3472 ] pop local 0
A=M                                                          // [3473 ] pop local 0
M=D                                                          // [3474 ] pop local 0
(Ball.bounce$IF_END4)                                        // [     ] label IF_END4
(Ball.bounce$IF_END3)                                        // [     ] label IF_END3
(Ball.bounce$IF_END2)                                        // [     ] label IF_END2
@3                                                           // [3475 ] push pointer 0
D=M                                                          // [3476 ] push pointer 0
@SP                                                          // [3477 ] push pointer 0
M=M+1                                                        // [3478 ] push pointer 0
A=M-1                                                        // [3479 ] push pointer 0
M=D                                                          // [3480 ] push pointer 0
@LCL                                                         // [3481 ] push local 0
D=M                                                          // [3482 ] push local 0
@0                                                           // [3483 ] push local 0
A=D+A                                                        // [3484 ] push local 0
D=M                                                          // [3485 ] push local 0
@SP                                                          // [3486 ] push local 0
M=M+1                                                        // [3487 ] push local 0
A=M-1                                                        // [3488 ] push local 0
M=D                                                          // [3489 ] push local 0
@LCL                                                         // [3490 ] push local 1
D=M                                                          // [3491 ] push local 1
@1                                                           // [3492 ] push local 1
A=D+A                                                        // [3493 ] push local 1
D=M                                                          // [3494 ] push local 1
@SP                                                          // [3495 ] push local 1
M=M+1                                                        // [3496 ] push local 1
A=M-1                                                        // [3497 ] push local 1
M=D                                                          // [3498 ] push local 1
@3                                                           // [3499 ] call Ball.setDestination 3
D=A                                                          // [3500 ] call Ball.setDestination 3
@R13                                                         // [3501 ] call Ball.setDestination 3
M=D                                                          // [3502 ] call Ball.setDestination 3
@Ball.setDestination                                         // [3503 ] call Ball.setDestination 3
D=A                                                          // [3504 ] call Ball.setDestination 3
@R14                                                         // [3505 ] call Ball.setDestination 3
M=D                                                          // [3506 ] call Ball.setDestination 3
@return-33                                                   // [3507 ] call Ball.setDestination 3
D=A                                                          // [3508 ] call Ball.setDestination 3
@CALL                                                        // [3509 ] call Ball.setDestination 3
0;JEQ                                                        // [3510 ] call Ball.setDestination 3
(return-33)                                                  // [     ] call Ball.setDestination 3
@SP                                                          // [3511 ] pop temp 0
AM=M-1                                                       // [3512 ] pop temp 0
D=M                                                          // [3513 ] pop temp 0
@5                                                           // [3514 ] pop temp 0
M=D                                                          // [3515 ] pop temp 0
@SP                                                          // [3516 ] push constant 0
M=M+1                                                        // [3517 ] push constant 0
A=M-1                                                        // [3518 ] push constant 0
M=0                                                          // [3519 ] push constant 0
@RETURN                                                      // [3520 ] return
0;JEQ                                                        // [3521 ] return
(Bat.new)                                                    // [     ] function Bat.new 0
@5                                                           // [3522 ] push constant 5
D=A                                                          // [3523 ] push constant 5
@SP                                                          // [3524 ] push constant 5
M=M+1                                                        // [3525 ] push constant 5
A=M-1                                                        // [3526 ] push constant 5
M=D                                                          // [3527 ] push constant 5
@1                                                           // [3528 ] call Memory.alloc 1
D=A                                                          // [3529 ] call Memory.alloc 1
@R13                                                         // [3530 ] call Memory.alloc 1
M=D                                                          // [3531 ] call Memory.alloc 1
@Memory.alloc                                                // [3532 ] call Memory.alloc 1
D=A                                                          // [3533 ] call Memory.alloc 1
@R14                                                         // [3534 ] call Memory.alloc 1
M=D                                                          // [3535 ] call Memory.alloc 1
@return-34                                                   // [3536 ] call Memory.alloc 1
D=A                                                          // [3537 ] call Memory.alloc 1
@CALL                                                        // [3538 ] call Memory.alloc 1
0;JEQ                                                        // [3539 ] call Memory.alloc 1
(return-34)                                                  // [     ] call Memory.alloc 1
@SP                                                          // [3540 ] pop pointer 0
AM=M-1                                                       // [3541 ] pop pointer 0
D=M                                                          // [3542 ] pop pointer 0
@3                                                           // [3543 ] pop pointer 0
M=D                                                          // [3544 ] pop pointer 0
@ARG                                                         // [3545 ] push argument 0
D=M                                                          // [3546 ] push argument 0
@0                                                           // [3547 ] push argument 0
A=D+A                                                        // [3548 ] push argument 0
D=M                                                          // [3549 ] push argument 0
@SP                                                          // [3550 ] push argument 0
M=M+1                                                        // [3551 ] push argument 0
A=M-1                                                        // [3552 ] push argument 0
M=D                                                          // [3553 ] push argument 0
@SP                                                          // [3554 ] pop this 0
AM=M-1                                                       // [3555 ] pop this 0
D=M                                                          // [3556 ] pop this 0
@R13                                                         // [3557 ] pop this 0
M=D                                                          // [3558 ] pop this 0
@THIS                                                        // [3559 ] pop this 0
D=M                                                          // [3560 ] pop this 0
@0                                                           // [3561 ] pop this 0
D=D+A                                                        // [3562 ] pop this 0
@R14                                                         // [3563 ] pop this 0
M=D                                                          // [3564 ] pop this 0
@R13                                                         // [3565 ] pop this 0
D=M                                                          // [3566 ] pop this 0
@R14                                                         // [3567 ] pop this 0
A=M                                                          // [3568 ] pop this 0
M=D                                                          // [3569 ] pop this 0
@ARG                                                         // [3570 ] push argument 1
D=M                                                          // [3571 ] push argument 1
@1                                                           // [3572 ] push argument 1
A=D+A                                                        // [3573 ] push argument 1
D=M                                                          // [3574 ] push argument 1
@SP                                                          // [3575 ] push argument 1
M=M+1                                                        // [3576 ] push argument 1
A=M-1                                                        // [3577 ] push argument 1
M=D                                                          // [3578 ] push argument 1
@SP                                                          // [3579 ] pop this 1
AM=M-1                                                       // [3580 ] pop this 1
D=M                                                          // [3581 ] pop this 1
@R13                                                         // [3582 ] pop this 1
M=D                                                          // [3583 ] pop this 1
@THIS                                                        // [3584 ] pop this 1
D=M                                                          // [3585 ] pop this 1
@1                                                           // [3586 ] pop this 1
D=D+A                                                        // [3587 ] pop this 1
@R14                                                         // [3588 ] pop this 1
M=D                                                          // [3589 ] pop this 1
@R13                                                         // [3590 ] pop this 1
D=M                                                          // [3591 ] pop this 1
@R14                                                         // [3592 ] pop this 1
A=M                                                          // [3593 ] pop this 1
M=D                                                          // [3594 ] pop this 1
@ARG                                                         // [3595 ] push argument 2
D=M                                                          // [3596 ] push argument 2
@2                                                           // [3597 ] push argument 2
A=D+A                                                        // [3598 ] push argument 2
D=M                                                          // [3599 ] push argument 2
@SP                                                          // [3600 ] push argument 2
M=M+1                                                        // [3601 ] push argument 2
A=M-1                                                        // [3602 ] push argument 2
M=D                                                          // [3603 ] push argument 2
@SP                                                          // [3604 ] pop this 2
AM=M-1                                                       // [3605 ] pop this 2
D=M                                                          // [3606 ] pop this 2
@R13                                                         // [3607 ] pop this 2
M=D                                                          // [3608 ] pop this 2
@THIS                                                        // [3609 ] pop this 2
D=M                                                          // [3610 ] pop this 2
@2                                                           // [3611 ] pop this 2
D=D+A                                                        // [3612 ] pop this 2
@R14                                                         // [3613 ] pop this 2
M=D                                                          // [3614 ] pop this 2
@R13                                                         // [3615 ] pop this 2
D=M                                                          // [3616 ] pop this 2
@R14                                                         // [3617 ] pop this 2
A=M                                                          // [3618 ] pop this 2
M=D                                                          // [3619 ] pop this 2
@ARG                                                         // [3620 ] push argument 3
D=M                                                          // [3621 ] push argument 3
@3                                                           // [3622 ] push argument 3
A=D+A                                                        // [3623 ] push argument 3
D=M                                                          // [3624 ] push argument 3
@SP                                                          // [3625 ] push argument 3
M=M+1                                                        // [3626 ] push argument 3
A=M-1                                                        // [3627 ] push argument 3
M=D                                                          // [3628 ] push argument 3
@SP                                                          // [3629 ] pop this 3
AM=M-1                                                       // [3630 ] pop this 3
D=M                                                          // [3631 ] pop this 3
@R13                                                         // [3632 ] pop this 3
M=D                                                          // [3633 ] pop this 3
@THIS                                                        // [3634 ] pop this 3
D=M                                                          // [3635 ] pop this 3
@3                                                           // [3636 ] pop this 3
D=D+A                                                        // [3637 ] pop this 3
@R14                                                         // [3638 ] pop this 3
M=D                                                          // [3639 ] pop this 3
@R13                                                         // [3640 ] pop this 3
D=M                                                          // [3641 ] pop this 3
@R14                                                         // [3642 ] pop this 3
A=M                                                          // [3643 ] pop this 3
M=D                                                          // [3644 ] pop this 3
@SP                                                          // [3645 ] push constant 2
M=M+1                                                        // [3646 ] push constant 2
A=M-1                                                        // [3647 ] push constant 2
M=1                                                          // [3648 ] push constant 2
M=M+1                                                        // [3649 ] push constant 2
@SP                                                          // [3650 ] pop this 4
AM=M-1                                                       // [3651 ] pop this 4
D=M                                                          // [3652 ] pop this 4
@R13                                                         // [3653 ] pop this 4
M=D                                                          // [3654 ] pop this 4
@THIS                                                        // [3655 ] pop this 4
D=M                                                          // [3656 ] pop this 4
@4                                                           // [3657 ] pop this 4
D=D+A                                                        // [3658 ] pop this 4
@R14                                                         // [3659 ] pop this 4
M=D                                                          // [3660 ] pop this 4
@R13                                                         // [3661 ] pop this 4
D=M                                                          // [3662 ] pop this 4
@R14                                                         // [3663 ] pop this 4
A=M                                                          // [3664 ] pop this 4
M=D                                                          // [3665 ] pop this 4
@3                                                           // [3666 ] push pointer 0
D=M                                                          // [3667 ] push pointer 0
@SP                                                          // [3668 ] push pointer 0
M=M+1                                                        // [3669 ] push pointer 0
A=M-1                                                        // [3670 ] push pointer 0
M=D                                                          // [3671 ] push pointer 0
@1                                                           // [3672 ] call Bat.show 1
D=A                                                          // [3673 ] call Bat.show 1
@R13                                                         // [3674 ] call Bat.show 1
M=D                                                          // [3675 ] call Bat.show 1
@Bat.show                                                    // [3676 ] call Bat.show 1
D=A                                                          // [3677 ] call Bat.show 1
@R14                                                         // [3678 ] call Bat.show 1
M=D                                                          // [3679 ] call Bat.show 1
@return-35                                                   // [3680 ] call Bat.show 1
D=A                                                          // [3681 ] call Bat.show 1
@CALL                                                        // [3682 ] call Bat.show 1
0;JEQ                                                        // [3683 ] call Bat.show 1
(return-35)                                                  // [     ] call Bat.show 1
@SP                                                          // [3684 ] pop temp 0
AM=M-1                                                       // [3685 ] pop temp 0
D=M                                                          // [3686 ] pop temp 0
@5                                                           // [3687 ] pop temp 0
M=D                                                          // [3688 ] pop temp 0
@3                                                           // [3689 ] push pointer 0
D=M                                                          // [3690 ] push pointer 0
@SP                                                          // [3691 ] push pointer 0
M=M+1                                                        // [3692 ] push pointer 0
A=M-1                                                        // [3693 ] push pointer 0
M=D                                                          // [3694 ] push pointer 0
@RETURN                                                      // [3695 ] return
0;JEQ                                                        // [3696 ] return
(Bat.dispose)                                                // [     ] function Bat.dispose 0
@ARG                                                         // [3697 ] push argument 0
D=M                                                          // [3698 ] push argument 0
@0                                                           // [3699 ] push argument 0
A=D+A                                                        // [3700 ] push argument 0
D=M                                                          // [3701 ] push argument 0
@SP                                                          // [3702 ] push argument 0
M=M+1                                                        // [3703 ] push argument 0
A=M-1                                                        // [3704 ] push argument 0
M=D                                                          // [3705 ] push argument 0
@SP                                                          // [3706 ] pop pointer 0
AM=M-1                                                       // [3707 ] pop pointer 0
D=M                                                          // [3708 ] pop pointer 0
@3                                                           // [3709 ] pop pointer 0
M=D                                                          // [3710 ] pop pointer 0
@3                                                           // [3711 ] push pointer 0
D=M                                                          // [3712 ] push pointer 0
@SP                                                          // [3713 ] push pointer 0
M=M+1                                                        // [3714 ] push pointer 0
A=M-1                                                        // [3715 ] push pointer 0
M=D                                                          // [3716 ] push pointer 0
@1                                                           // [3717 ] call Memory.deAlloc 1
D=A                                                          // [3718 ] call Memory.deAlloc 1
@R13                                                         // [3719 ] call Memory.deAlloc 1
M=D                                                          // [3720 ] call Memory.deAlloc 1
@Memory.deAlloc                                              // [3721 ] call Memory.deAlloc 1
D=A                                                          // [3722 ] call Memory.deAlloc 1
@R14                                                         // [3723 ] call Memory.deAlloc 1
M=D                                                          // [3724 ] call Memory.deAlloc 1
@return-36                                                   // [3725 ] call Memory.deAlloc 1
D=A                                                          // [3726 ] call Memory.deAlloc 1
@CALL                                                        // [3727 ] call Memory.deAlloc 1
0;JEQ                                                        // [3728 ] call Memory.deAlloc 1
(return-36)                                                  // [     ] call Memory.deAlloc 1
@SP                                                          // [3729 ] pop temp 0
AM=M-1                                                       // [3730 ] pop temp 0
D=M                                                          // [3731 ] pop temp 0
@5                                                           // [3732 ] pop temp 0
M=D                                                          // [3733 ] pop temp 0
@SP                                                          // [3734 ] push constant 0
M=M+1                                                        // [3735 ] push constant 0
A=M-1                                                        // [3736 ] push constant 0
M=0                                                          // [3737 ] push constant 0
@RETURN                                                      // [3738 ] return
0;JEQ                                                        // [3739 ] return
(Bat.show)                                                   // [     ] function Bat.show 0
@ARG                                                         // [3740 ] push argument 0
D=M                                                          // [3741 ] push argument 0
@0                                                           // [3742 ] push argument 0
A=D+A                                                        // [3743 ] push argument 0
D=M                                                          // [3744 ] push argument 0
@SP                                                          // [3745 ] push argument 0
M=M+1                                                        // [3746 ] push argument 0
A=M-1                                                        // [3747 ] push argument 0
M=D                                                          // [3748 ] push argument 0
@SP                                                          // [3749 ] pop pointer 0
AM=M-1                                                       // [3750 ] pop pointer 0
D=M                                                          // [3751 ] pop pointer 0
@3                                                           // [3752 ] pop pointer 0
M=D                                                          // [3753 ] pop pointer 0
@SP                                                          // [3754 ] push constant 0
M=M+1                                                        // [3755 ] push constant 0
A=M-1                                                        // [3756 ] push constant 0
M=0                                                          // [3757 ] push constant 0
@SP                                                          // [3758 ] not
A=M-1                                                        // [3759 ] not
D=M                                                          // [3760 ] not
M=!D                                                         // [3761 ] not
@1                                                           // [3762 ] call Screen.setColor 1
D=A                                                          // [3763 ] call Screen.setColor 1
@R13                                                         // [3764 ] call Screen.setColor 1
M=D                                                          // [3765 ] call Screen.setColor 1
@Screen.setColor                                             // [3766 ] call Screen.setColor 1
D=A                                                          // [3767 ] call Screen.setColor 1
@R14                                                         // [3768 ] call Screen.setColor 1
M=D                                                          // [3769 ] call Screen.setColor 1
@return-37                                                   // [3770 ] call Screen.setColor 1
D=A                                                          // [3771 ] call Screen.setColor 1
@CALL                                                        // [3772 ] call Screen.setColor 1
0;JEQ                                                        // [3773 ] call Screen.setColor 1
(return-37)                                                  // [     ] call Screen.setColor 1
@SP                                                          // [3774 ] pop temp 0
AM=M-1                                                       // [3775 ] pop temp 0
D=M                                                          // [3776 ] pop temp 0
@5                                                           // [3777 ] pop temp 0
M=D                                                          // [3778 ] pop temp 0
@3                                                           // [3779 ] push pointer 0
D=M                                                          // [3780 ] push pointer 0
@SP                                                          // [3781 ] push pointer 0
M=M+1                                                        // [3782 ] push pointer 0
A=M-1                                                        // [3783 ] push pointer 0
M=D                                                          // [3784 ] push pointer 0
@1                                                           // [3785 ] call Bat.draw 1
D=A                                                          // [3786 ] call Bat.draw 1
@R13                                                         // [3787 ] call Bat.draw 1
M=D                                                          // [3788 ] call Bat.draw 1
@Bat.draw                                                    // [3789 ] call Bat.draw 1
D=A                                                          // [3790 ] call Bat.draw 1
@R14                                                         // [3791 ] call Bat.draw 1
M=D                                                          // [3792 ] call Bat.draw 1
@return-38                                                   // [3793 ] call Bat.draw 1
D=A                                                          // [3794 ] call Bat.draw 1
@CALL                                                        // [3795 ] call Bat.draw 1
0;JEQ                                                        // [3796 ] call Bat.draw 1
(return-38)                                                  // [     ] call Bat.draw 1
@SP                                                          // [3797 ] pop temp 0
AM=M-1                                                       // [3798 ] pop temp 0
D=M                                                          // [3799 ] pop temp 0
@5                                                           // [3800 ] pop temp 0
M=D                                                          // [3801 ] pop temp 0
@SP                                                          // [3802 ] push constant 0
M=M+1                                                        // [3803 ] push constant 0
A=M-1                                                        // [3804 ] push constant 0
M=0                                                          // [3805 ] push constant 0
@RETURN                                                      // [3806 ] return
0;JEQ                                                        // [3807 ] return
(Bat.hide)                                                   // [     ] function Bat.hide 0
@ARG                                                         // [3808 ] push argument 0
D=M                                                          // [3809 ] push argument 0
@0                                                           // [3810 ] push argument 0
A=D+A                                                        // [3811 ] push argument 0
D=M                                                          // [3812 ] push argument 0
@SP                                                          // [3813 ] push argument 0
M=M+1                                                        // [3814 ] push argument 0
A=M-1                                                        // [3815 ] push argument 0
M=D                                                          // [3816 ] push argument 0
@SP                                                          // [3817 ] pop pointer 0
AM=M-1                                                       // [3818 ] pop pointer 0
D=M                                                          // [3819 ] pop pointer 0
@3                                                           // [3820 ] pop pointer 0
M=D                                                          // [3821 ] pop pointer 0
@SP                                                          // [3822 ] push constant 0
M=M+1                                                        // [3823 ] push constant 0
A=M-1                                                        // [3824 ] push constant 0
M=0                                                          // [3825 ] push constant 0
@1                                                           // [3826 ] call Screen.setColor 1
D=A                                                          // [3827 ] call Screen.setColor 1
@R13                                                         // [3828 ] call Screen.setColor 1
M=D                                                          // [3829 ] call Screen.setColor 1
@Screen.setColor                                             // [3830 ] call Screen.setColor 1
D=A                                                          // [3831 ] call Screen.setColor 1
@R14                                                         // [3832 ] call Screen.setColor 1
M=D                                                          // [3833 ] call Screen.setColor 1
@return-39                                                   // [3834 ] call Screen.setColor 1
D=A                                                          // [3835 ] call Screen.setColor 1
@CALL                                                        // [3836 ] call Screen.setColor 1
0;JEQ                                                        // [3837 ] call Screen.setColor 1
(return-39)                                                  // [     ] call Screen.setColor 1
@SP                                                          // [3838 ] pop temp 0
AM=M-1                                                       // [3839 ] pop temp 0
D=M                                                          // [3840 ] pop temp 0
@5                                                           // [3841 ] pop temp 0
M=D                                                          // [3842 ] pop temp 0
@3                                                           // [3843 ] push pointer 0
D=M                                                          // [3844 ] push pointer 0
@SP                                                          // [3845 ] push pointer 0
M=M+1                                                        // [3846 ] push pointer 0
A=M-1                                                        // [3847 ] push pointer 0
M=D                                                          // [3848 ] push pointer 0
@1                                                           // [3849 ] call Bat.draw 1
D=A                                                          // [3850 ] call Bat.draw 1
@R13                                                         // [3851 ] call Bat.draw 1
M=D                                                          // [3852 ] call Bat.draw 1
@Bat.draw                                                    // [3853 ] call Bat.draw 1
D=A                                                          // [3854 ] call Bat.draw 1
@R14                                                         // [3855 ] call Bat.draw 1
M=D                                                          // [3856 ] call Bat.draw 1
@return-40                                                   // [3857 ] call Bat.draw 1
D=A                                                          // [3858 ] call Bat.draw 1
@CALL                                                        // [3859 ] call Bat.draw 1
0;JEQ                                                        // [3860 ] call Bat.draw 1
(return-40)                                                  // [     ] call Bat.draw 1
@SP                                                          // [3861 ] pop temp 0
AM=M-1                                                       // [3862 ] pop temp 0
D=M                                                          // [3863 ] pop temp 0
@5                                                           // [3864 ] pop temp 0
M=D                                                          // [3865 ] pop temp 0
@SP                                                          // [3866 ] push constant 0
M=M+1                                                        // [3867 ] push constant 0
A=M-1                                                        // [3868 ] push constant 0
M=0                                                          // [3869 ] push constant 0
@RETURN                                                      // [3870 ] return
0;JEQ                                                        // [3871 ] return
(Bat.draw)                                                   // [     ] function Bat.draw 0
@ARG                                                         // [3872 ] push argument 0
D=M                                                          // [3873 ] push argument 0
@0                                                           // [3874 ] push argument 0
A=D+A                                                        // [3875 ] push argument 0
D=M                                                          // [3876 ] push argument 0
@SP                                                          // [3877 ] push argument 0
M=M+1                                                        // [3878 ] push argument 0
A=M-1                                                        // [3879 ] push argument 0
M=D                                                          // [3880 ] push argument 0
@SP                                                          // [3881 ] pop pointer 0
AM=M-1                                                       // [3882 ] pop pointer 0
D=M                                                          // [3883 ] pop pointer 0
@3                                                           // [3884 ] pop pointer 0
M=D                                                          // [3885 ] pop pointer 0
@THIS                                                        // [3886 ] push this 0
D=M                                                          // [3887 ] push this 0
@0                                                           // [3888 ] push this 0
A=D+A                                                        // [3889 ] push this 0
D=M                                                          // [3890 ] push this 0
@SP                                                          // [3891 ] push this 0
M=M+1                                                        // [3892 ] push this 0
A=M-1                                                        // [3893 ] push this 0
M=D                                                          // [3894 ] push this 0
@THIS                                                        // [3895 ] push this 1
D=M                                                          // [3896 ] push this 1
@1                                                           // [3897 ] push this 1
A=D+A                                                        // [3898 ] push this 1
D=M                                                          // [3899 ] push this 1
@SP                                                          // [3900 ] push this 1
M=M+1                                                        // [3901 ] push this 1
A=M-1                                                        // [3902 ] push this 1
M=D                                                          // [3903 ] push this 1
@THIS                                                        // [3904 ] push this 0
D=M                                                          // [3905 ] push this 0
@0                                                           // [3906 ] push this 0
A=D+A                                                        // [3907 ] push this 0
D=M                                                          // [3908 ] push this 0
@SP                                                          // [3909 ] push this 0
M=M+1                                                        // [3910 ] push this 0
A=M-1                                                        // [3911 ] push this 0
M=D                                                          // [3912 ] push this 0
@THIS                                                        // [3913 ] push this 2
D=M                                                          // [3914 ] push this 2
@2                                                           // [3915 ] push this 2
A=D+A                                                        // [3916 ] push this 2
D=M                                                          // [3917 ] push this 2
@SP                                                          // [3918 ] push this 2
M=M+1                                                        // [3919 ] push this 2
A=M-1                                                        // [3920 ] push this 2
M=D                                                          // [3921 ] push this 2
@SP                                                          // [3922 ] add
AM=M-1                                                       // [3923 ] add
D=M                                                          // [3924 ] add
A=A-1                                                        // [3925 ] add
M=D+M                                                        // [3926 ] add
@THIS                                                        // [3927 ] push this 1
D=M                                                          // [3928 ] push this 1
@1                                                           // [3929 ] push this 1
A=D+A                                                        // [3930 ] push this 1
D=M                                                          // [3931 ] push this 1
@SP                                                          // [3932 ] push this 1
M=M+1                                                        // [3933 ] push this 1
A=M-1                                                        // [3934 ] push this 1
M=D                                                          // [3935 ] push this 1
@THIS                                                        // [3936 ] push this 3
D=M                                                          // [3937 ] push this 3
@3                                                           // [3938 ] push this 3
A=D+A                                                        // [3939 ] push this 3
D=M                                                          // [3940 ] push this 3
@SP                                                          // [3941 ] push this 3
M=M+1                                                        // [3942 ] push this 3
A=M-1                                                        // [3943 ] push this 3
M=D                                                          // [3944 ] push this 3
@SP                                                          // [3945 ] add
AM=M-1                                                       // [3946 ] add
D=M                                                          // [3947 ] add
A=A-1                                                        // [3948 ] add
M=D+M                                                        // [3949 ] add
@4                                                           // [3950 ] call Screen.drawRectangle 4
D=A                                                          // [3951 ] call Screen.drawRectangle 4
@R13                                                         // [3952 ] call Screen.drawRectangle 4
M=D                                                          // [3953 ] call Screen.drawRectangle 4
@Screen.drawRectangle                                        // [3954 ] call Screen.drawRectangle 4
D=A                                                          // [3955 ] call Screen.drawRectangle 4
@R14                                                         // [3956 ] call Screen.drawRectangle 4
M=D                                                          // [3957 ] call Screen.drawRectangle 4
@return-41                                                   // [3958 ] call Screen.drawRectangle 4
D=A                                                          // [3959 ] call Screen.drawRectangle 4
@CALL                                                        // [3960 ] call Screen.drawRectangle 4
0;JEQ                                                        // [3961 ] call Screen.drawRectangle 4
(return-41)                                                  // [     ] call Screen.drawRectangle 4
@SP                                                          // [3962 ] pop temp 0
AM=M-1                                                       // [3963 ] pop temp 0
D=M                                                          // [3964 ] pop temp 0
@5                                                           // [3965 ] pop temp 0
M=D                                                          // [3966 ] pop temp 0
@SP                                                          // [3967 ] push constant 0
M=M+1                                                        // [3968 ] push constant 0
A=M-1                                                        // [3969 ] push constant 0
M=0                                                          // [3970 ] push constant 0
@RETURN                                                      // [3971 ] return
0;JEQ                                                        // [3972 ] return
(Bat.setDirection)                                           // [     ] function Bat.setDirection 0
@ARG                                                         // [3973 ] push argument 0
D=M                                                          // [3974 ] push argument 0
@0                                                           // [3975 ] push argument 0
A=D+A                                                        // [3976 ] push argument 0
D=M                                                          // [3977 ] push argument 0
@SP                                                          // [3978 ] push argument 0
M=M+1                                                        // [3979 ] push argument 0
A=M-1                                                        // [3980 ] push argument 0
M=D                                                          // [3981 ] push argument 0
@SP                                                          // [3982 ] pop pointer 0
AM=M-1                                                       // [3983 ] pop pointer 0
D=M                                                          // [3984 ] pop pointer 0
@3                                                           // [3985 ] pop pointer 0
M=D                                                          // [3986 ] pop pointer 0
@ARG                                                         // [3987 ] push argument 1
D=M                                                          // [3988 ] push argument 1
@1                                                           // [3989 ] push argument 1
A=D+A                                                        // [3990 ] push argument 1
D=M                                                          // [3991 ] push argument 1
@SP                                                          // [3992 ] push argument 1
M=M+1                                                        // [3993 ] push argument 1
A=M-1                                                        // [3994 ] push argument 1
M=D                                                          // [3995 ] push argument 1
@SP                                                          // [3996 ] pop this 4
AM=M-1                                                       // [3997 ] pop this 4
D=M                                                          // [3998 ] pop this 4
@R13                                                         // [3999 ] pop this 4
M=D                                                          // [4000 ] pop this 4
@THIS                                                        // [4001 ] pop this 4
D=M                                                          // [4002 ] pop this 4
@4                                                           // [4003 ] pop this 4
D=D+A                                                        // [4004 ] pop this 4
@R14                                                         // [4005 ] pop this 4
M=D                                                          // [4006 ] pop this 4
@R13                                                         // [4007 ] pop this 4
D=M                                                          // [4008 ] pop this 4
@R14                                                         // [4009 ] pop this 4
A=M                                                          // [4010 ] pop this 4
M=D                                                          // [4011 ] pop this 4
@SP                                                          // [4012 ] push constant 0
M=M+1                                                        // [4013 ] push constant 0
A=M-1                                                        // [4014 ] push constant 0
M=0                                                          // [4015 ] push constant 0
@RETURN                                                      // [4016 ] return
0;JEQ                                                        // [4017 ] return
(Bat.getLeft)                                                // [     ] function Bat.getLeft 0
@ARG                                                         // [4018 ] push argument 0
D=M                                                          // [4019 ] push argument 0
@0                                                           // [4020 ] push argument 0
A=D+A                                                        // [4021 ] push argument 0
D=M                                                          // [4022 ] push argument 0
@SP                                                          // [4023 ] push argument 0
M=M+1                                                        // [4024 ] push argument 0
A=M-1                                                        // [4025 ] push argument 0
M=D                                                          // [4026 ] push argument 0
@SP                                                          // [4027 ] pop pointer 0
AM=M-1                                                       // [4028 ] pop pointer 0
D=M                                                          // [4029 ] pop pointer 0
@3                                                           // [4030 ] pop pointer 0
M=D                                                          // [4031 ] pop pointer 0
@THIS                                                        // [4032 ] push this 0
D=M                                                          // [4033 ] push this 0
@0                                                           // [4034 ] push this 0
A=D+A                                                        // [4035 ] push this 0
D=M                                                          // [4036 ] push this 0
@SP                                                          // [4037 ] push this 0
M=M+1                                                        // [4038 ] push this 0
A=M-1                                                        // [4039 ] push this 0
M=D                                                          // [4040 ] push this 0
@RETURN                                                      // [4041 ] return
0;JEQ                                                        // [4042 ] return
(Bat.getRight)                                               // [     ] function Bat.getRight 0
@ARG                                                         // [4043 ] push argument 0
D=M                                                          // [4044 ] push argument 0
@0                                                           // [4045 ] push argument 0
A=D+A                                                        // [4046 ] push argument 0
D=M                                                          // [4047 ] push argument 0
@SP                                                          // [4048 ] push argument 0
M=M+1                                                        // [4049 ] push argument 0
A=M-1                                                        // [4050 ] push argument 0
M=D                                                          // [4051 ] push argument 0
@SP                                                          // [4052 ] pop pointer 0
AM=M-1                                                       // [4053 ] pop pointer 0
D=M                                                          // [4054 ] pop pointer 0
@3                                                           // [4055 ] pop pointer 0
M=D                                                          // [4056 ] pop pointer 0
@THIS                                                        // [4057 ] push this 0
D=M                                                          // [4058 ] push this 0
@0                                                           // [4059 ] push this 0
A=D+A                                                        // [4060 ] push this 0
D=M                                                          // [4061 ] push this 0
@SP                                                          // [4062 ] push this 0
M=M+1                                                        // [4063 ] push this 0
A=M-1                                                        // [4064 ] push this 0
M=D                                                          // [4065 ] push this 0
@THIS                                                        // [4066 ] push this 2
D=M                                                          // [4067 ] push this 2
@2                                                           // [4068 ] push this 2
A=D+A                                                        // [4069 ] push this 2
D=M                                                          // [4070 ] push this 2
@SP                                                          // [4071 ] push this 2
M=M+1                                                        // [4072 ] push this 2
A=M-1                                                        // [4073 ] push this 2
M=D                                                          // [4074 ] push this 2
@SP                                                          // [4075 ] add
AM=M-1                                                       // [4076 ] add
D=M                                                          // [4077 ] add
A=A-1                                                        // [4078 ] add
M=D+M                                                        // [4079 ] add
@RETURN                                                      // [4080 ] return
0;JEQ                                                        // [4081 ] return
(Bat.setWidth)                                               // [     ] function Bat.setWidth 0
@ARG                                                         // [4082 ] push argument 0
D=M                                                          // [4083 ] push argument 0
@0                                                           // [4084 ] push argument 0
A=D+A                                                        // [4085 ] push argument 0
D=M                                                          // [4086 ] push argument 0
@SP                                                          // [4087 ] push argument 0
M=M+1                                                        // [4088 ] push argument 0
A=M-1                                                        // [4089 ] push argument 0
M=D                                                          // [4090 ] push argument 0
@SP                                                          // [4091 ] pop pointer 0
AM=M-1                                                       // [4092 ] pop pointer 0
D=M                                                          // [4093 ] pop pointer 0
@3                                                           // [4094 ] pop pointer 0
M=D                                                          // [4095 ] pop pointer 0
@3                                                           // [4096 ] push pointer 0
D=M                                                          // [4097 ] push pointer 0
@SP                                                          // [4098 ] push pointer 0
M=M+1                                                        // [4099 ] push pointer 0
A=M-1                                                        // [4100 ] push pointer 0
M=D                                                          // [4101 ] push pointer 0
@1                                                           // [4102 ] call Bat.hide 1
D=A                                                          // [4103 ] call Bat.hide 1
@R13                                                         // [4104 ] call Bat.hide 1
M=D                                                          // [4105 ] call Bat.hide 1
@Bat.hide                                                    // [4106 ] call Bat.hide 1
D=A                                                          // [4107 ] call Bat.hide 1
@R14                                                         // [4108 ] call Bat.hide 1
M=D                                                          // [4109 ] call Bat.hide 1
@return-42                                                   // [4110 ] call Bat.hide 1
D=A                                                          // [4111 ] call Bat.hide 1
@CALL                                                        // [4112 ] call Bat.hide 1
0;JEQ                                                        // [4113 ] call Bat.hide 1
(return-42)                                                  // [     ] call Bat.hide 1
@SP                                                          // [4114 ] pop temp 0
AM=M-1                                                       // [4115 ] pop temp 0
D=M                                                          // [4116 ] pop temp 0
@5                                                           // [4117 ] pop temp 0
M=D                                                          // [4118 ] pop temp 0
@ARG                                                         // [4119 ] push argument 1
D=M                                                          // [4120 ] push argument 1
@1                                                           // [4121 ] push argument 1
A=D+A                                                        // [4122 ] push argument 1
D=M                                                          // [4123 ] push argument 1
@SP                                                          // [4124 ] push argument 1
M=M+1                                                        // [4125 ] push argument 1
A=M-1                                                        // [4126 ] push argument 1
M=D                                                          // [4127 ] push argument 1
@SP                                                          // [4128 ] pop this 2
AM=M-1                                                       // [4129 ] pop this 2
D=M                                                          // [4130 ] pop this 2
@R13                                                         // [4131 ] pop this 2
M=D                                                          // [4132 ] pop this 2
@THIS                                                        // [4133 ] pop this 2
D=M                                                          // [4134 ] pop this 2
@2                                                           // [4135 ] pop this 2
D=D+A                                                        // [4136 ] pop this 2
@R14                                                         // [4137 ] pop this 2
M=D                                                          // [4138 ] pop this 2
@R13                                                         // [4139 ] pop this 2
D=M                                                          // [4140 ] pop this 2
@R14                                                         // [4141 ] pop this 2
A=M                                                          // [4142 ] pop this 2
M=D                                                          // [4143 ] pop this 2
@3                                                           // [4144 ] push pointer 0
D=M                                                          // [4145 ] push pointer 0
@SP                                                          // [4146 ] push pointer 0
M=M+1                                                        // [4147 ] push pointer 0
A=M-1                                                        // [4148 ] push pointer 0
M=D                                                          // [4149 ] push pointer 0
@1                                                           // [4150 ] call Bat.show 1
D=A                                                          // [4151 ] call Bat.show 1
@R13                                                         // [4152 ] call Bat.show 1
M=D                                                          // [4153 ] call Bat.show 1
@Bat.show                                                    // [4154 ] call Bat.show 1
D=A                                                          // [4155 ] call Bat.show 1
@R14                                                         // [4156 ] call Bat.show 1
M=D                                                          // [4157 ] call Bat.show 1
@return-43                                                   // [4158 ] call Bat.show 1
D=A                                                          // [4159 ] call Bat.show 1
@CALL                                                        // [4160 ] call Bat.show 1
0;JEQ                                                        // [4161 ] call Bat.show 1
(return-43)                                                  // [     ] call Bat.show 1
@SP                                                          // [4162 ] pop temp 0
AM=M-1                                                       // [4163 ] pop temp 0
D=M                                                          // [4164 ] pop temp 0
@5                                                           // [4165 ] pop temp 0
M=D                                                          // [4166 ] pop temp 0
@SP                                                          // [4167 ] push constant 0
M=M+1                                                        // [4168 ] push constant 0
A=M-1                                                        // [4169 ] push constant 0
M=0                                                          // [4170 ] push constant 0
@RETURN                                                      // [4171 ] return
0;JEQ                                                        // [4172 ] return
(Bat.move)                                                   // [     ] function Bat.move 0
@ARG                                                         // [4173 ] push argument 0
D=M                                                          // [4174 ] push argument 0
@0                                                           // [4175 ] push argument 0
A=D+A                                                        // [4176 ] push argument 0
D=M                                                          // [4177 ] push argument 0
@SP                                                          // [4178 ] push argument 0
M=M+1                                                        // [4179 ] push argument 0
A=M-1                                                        // [4180 ] push argument 0
M=D                                                          // [4181 ] push argument 0
@SP                                                          // [4182 ] pop pointer 0
AM=M-1                                                       // [4183 ] pop pointer 0
D=M                                                          // [4184 ] pop pointer 0
@3                                                           // [4185 ] pop pointer 0
M=D                                                          // [4186 ] pop pointer 0
@THIS                                                        // [4187 ] push this 4
D=M                                                          // [4188 ] push this 4
@4                                                           // [4189 ] push this 4
A=D+A                                                        // [4190 ] push this 4
D=M                                                          // [4191 ] push this 4
@SP                                                          // [4192 ] push this 4
M=M+1                                                        // [4193 ] push this 4
A=M-1                                                        // [4194 ] push this 4
M=D                                                          // [4195 ] push this 4
@SP                                                          // [4196 ] push constant 1
M=M+1                                                        // [4197 ] push constant 1
A=M-1                                                        // [4198 ] push constant 1
M=1                                                          // [4199 ] push constant 1
@CONTINUE_EQ_6                                               // [4200 ] eq
D=A                                                          // [4201 ] eq
@R13                                                         // [4202 ] eq
M=D                                                          // [4203 ] eq
@SP                                                          // [4204 ] eq
AM=M-1                                                       // [4205 ] eq
D=M                                                          // [4206 ] eq
A=A-1                                                        // [4207 ] eq
D=D-M                                                        // [4208 ] eq
@INTERNAL_EQ                                                 // [4209 ] eq
0;JEQ                                                        // [4210 ] eq
(CONTINUE_EQ_6)                                              // [     ] eq
@SP                                                          // [4211 ] if-goto IF_TRUE0
AM=M-1                                                       // [4212 ] if-goto IF_TRUE0
D=M                                                          // [4213 ] if-goto IF_TRUE0
@Bat.move$IF_TRUE0                                           // [4214 ] if-goto IF_TRUE0
D;JNE                                                        // [4215 ] if-goto IF_TRUE0
@Bat.move$IF_FALSE0                                          // [4216 ] goto IF_FALSE0
0;JEQ                                                        // [4217 ] goto IF_FALSE0
(Bat.move$IF_TRUE0)                                          // [     ] label IF_TRUE0
@THIS                                                        // [4218 ] push this 0
D=M                                                          // [4219 ] push this 0
@0                                                           // [4220 ] push this 0
A=D+A                                                        // [4221 ] push this 0
D=M                                                          // [4222 ] push this 0
@SP                                                          // [4223 ] push this 0
M=M+1                                                        // [4224 ] push this 0
A=M-1                                                        // [4225 ] push this 0
M=D                                                          // [4226 ] push this 0
@4                                                           // [4227 ] push constant 4
D=A                                                          // [4228 ] push constant 4
@SP                                                          // [4229 ] push constant 4
M=M+1                                                        // [4230 ] push constant 4
A=M-1                                                        // [4231 ] push constant 4
M=D                                                          // [4232 ] push constant 4
@SP                                                          // [4233 ] sub
AM=M-1                                                       // [4234 ] sub
D=M                                                          // [4235 ] sub
A=A-1                                                        // [4236 ] sub
M=M-D                                                        // [4237 ] sub
@SP                                                          // [4238 ] pop this 0
AM=M-1                                                       // [4239 ] pop this 0
D=M                                                          // [4240 ] pop this 0
@R13                                                         // [4241 ] pop this 0
M=D                                                          // [4242 ] pop this 0
@THIS                                                        // [4243 ] pop this 0
D=M                                                          // [4244 ] pop this 0
@0                                                           // [4245 ] pop this 0
D=D+A                                                        // [4246 ] pop this 0
@R14                                                         // [4247 ] pop this 0
M=D                                                          // [4248 ] pop this 0
@R13                                                         // [4249 ] pop this 0
D=M                                                          // [4250 ] pop this 0
@R14                                                         // [4251 ] pop this 0
A=M                                                          // [4252 ] pop this 0
M=D                                                          // [4253 ] pop this 0
@THIS                                                        // [4254 ] push this 0
D=M                                                          // [4255 ] push this 0
@0                                                           // [4256 ] push this 0
A=D+A                                                        // [4257 ] push this 0
D=M                                                          // [4258 ] push this 0
@SP                                                          // [4259 ] push this 0
M=M+1                                                        // [4260 ] push this 0
A=M-1                                                        // [4261 ] push this 0
M=D                                                          // [4262 ] push this 0
@SP                                                          // [4263 ] push constant 0
M=M+1                                                        // [4264 ] push constant 0
A=M-1                                                        // [4265 ] push constant 0
M=0                                                          // [4266 ] push constant 0
@CONTINUE_LT_10                                              // [4267 ] lt
D=A                                                          // [4268 ] lt
@R13                                                         // [4269 ] lt
M=D                                                          // [4270 ] lt
@SP                                                          // [4271 ] lt
AM=M-1                                                       // [4272 ] lt
D=M                                                          // [4273 ] lt
A=A-1                                                        // [4274 ] lt
D=D-M                                                        // [4275 ] lt
@INTERNAL_LT                                                 // [4276 ] lt
0;JEQ                                                        // [4277 ] lt
(CONTINUE_LT_10)                                             // [     ] lt
@SP                                                          // [4278 ] if-goto IF_TRUE1
AM=M-1                                                       // [4279 ] if-goto IF_TRUE1
D=M                                                          // [4280 ] if-goto IF_TRUE1
@Bat.move$IF_TRUE1                                           // [4281 ] if-goto IF_TRUE1
D;JNE                                                        // [4282 ] if-goto IF_TRUE1
@Bat.move$IF_FALSE1                                          // [4283 ] goto IF_FALSE1
0;JEQ                                                        // [4284 ] goto IF_FALSE1
(Bat.move$IF_TRUE1)                                          // [     ] label IF_TRUE1
@SP                                                          // [4285 ] push constant 0
M=M+1                                                        // [4286 ] push constant 0
A=M-1                                                        // [4287 ] push constant 0
M=0                                                          // [4288 ] push constant 0
@SP                                                          // [4289 ] pop this 0
AM=M-1                                                       // [4290 ] pop this 0
D=M                                                          // [4291 ] pop this 0
@R13                                                         // [4292 ] pop this 0
M=D                                                          // [4293 ] pop this 0
@THIS                                                        // [4294 ] pop this 0
D=M                                                          // [4295 ] pop this 0
@0                                                           // [4296 ] pop this 0
D=D+A                                                        // [4297 ] pop this 0
@R14                                                         // [4298 ] pop this 0
M=D                                                          // [4299 ] pop this 0
@R13                                                         // [4300 ] pop this 0
D=M                                                          // [4301 ] pop this 0
@R14                                                         // [4302 ] pop this 0
A=M                                                          // [4303 ] pop this 0
M=D                                                          // [4304 ] pop this 0
(Bat.move$IF_FALSE1)                                         // [     ] label IF_FALSE1
@SP                                                          // [4305 ] push constant 0
M=M+1                                                        // [4306 ] push constant 0
A=M-1                                                        // [4307 ] push constant 0
M=0                                                          // [4308 ] push constant 0
@1                                                           // [4309 ] call Screen.setColor 1
D=A                                                          // [4310 ] call Screen.setColor 1
@R13                                                         // [4311 ] call Screen.setColor 1
M=D                                                          // [4312 ] call Screen.setColor 1
@Screen.setColor                                             // [4313 ] call Screen.setColor 1
D=A                                                          // [4314 ] call Screen.setColor 1
@R14                                                         // [4315 ] call Screen.setColor 1
M=D                                                          // [4316 ] call Screen.setColor 1
@return-44                                                   // [4317 ] call Screen.setColor 1
D=A                                                          // [4318 ] call Screen.setColor 1
@CALL                                                        // [4319 ] call Screen.setColor 1
0;JEQ                                                        // [4320 ] call Screen.setColor 1
(return-44)                                                  // [     ] call Screen.setColor 1
@SP                                                          // [4321 ] pop temp 0
AM=M-1                                                       // [4322 ] pop temp 0
D=M                                                          // [4323 ] pop temp 0
@5                                                           // [4324 ] pop temp 0
M=D                                                          // [4325 ] pop temp 0
@THIS                                                        // [4326 ] push this 0
D=M                                                          // [4327 ] push this 0
@0                                                           // [4328 ] push this 0
A=D+A                                                        // [4329 ] push this 0
D=M                                                          // [4330 ] push this 0
@SP                                                          // [4331 ] push this 0
M=M+1                                                        // [4332 ] push this 0
A=M-1                                                        // [4333 ] push this 0
M=D                                                          // [4334 ] push this 0
@THIS                                                        // [4335 ] push this 2
D=M                                                          // [4336 ] push this 2
@2                                                           // [4337 ] push this 2
A=D+A                                                        // [4338 ] push this 2
D=M                                                          // [4339 ] push this 2
@SP                                                          // [4340 ] push this 2
M=M+1                                                        // [4341 ] push this 2
A=M-1                                                        // [4342 ] push this 2
M=D                                                          // [4343 ] push this 2
@SP                                                          // [4344 ] add
AM=M-1                                                       // [4345 ] add
D=M                                                          // [4346 ] add
A=A-1                                                        // [4347 ] add
M=D+M                                                        // [4348 ] add
@SP                                                          // [4349 ] push constant 1
M=M+1                                                        // [4350 ] push constant 1
A=M-1                                                        // [4351 ] push constant 1
M=1                                                          // [4352 ] push constant 1
@SP                                                          // [4353 ] add
AM=M-1                                                       // [4354 ] add
D=M                                                          // [4355 ] add
A=A-1                                                        // [4356 ] add
M=D+M                                                        // [4357 ] add
@THIS                                                        // [4358 ] push this 1
D=M                                                          // [4359 ] push this 1
@1                                                           // [4360 ] push this 1
A=D+A                                                        // [4361 ] push this 1
D=M                                                          // [4362 ] push this 1
@SP                                                          // [4363 ] push this 1
M=M+1                                                        // [4364 ] push this 1
A=M-1                                                        // [4365 ] push this 1
M=D                                                          // [4366 ] push this 1
@THIS                                                        // [4367 ] push this 0
D=M                                                          // [4368 ] push this 0
@0                                                           // [4369 ] push this 0
A=D+A                                                        // [4370 ] push this 0
D=M                                                          // [4371 ] push this 0
@SP                                                          // [4372 ] push this 0
M=M+1                                                        // [4373 ] push this 0
A=M-1                                                        // [4374 ] push this 0
M=D                                                          // [4375 ] push this 0
@THIS                                                        // [4376 ] push this 2
D=M                                                          // [4377 ] push this 2
@2                                                           // [4378 ] push this 2
A=D+A                                                        // [4379 ] push this 2
D=M                                                          // [4380 ] push this 2
@SP                                                          // [4381 ] push this 2
M=M+1                                                        // [4382 ] push this 2
A=M-1                                                        // [4383 ] push this 2
M=D                                                          // [4384 ] push this 2
@SP                                                          // [4385 ] add
AM=M-1                                                       // [4386 ] add
D=M                                                          // [4387 ] add
A=A-1                                                        // [4388 ] add
M=D+M                                                        // [4389 ] add
@4                                                           // [4390 ] push constant 4
D=A                                                          // [4391 ] push constant 4
@SP                                                          // [4392 ] push constant 4
M=M+1                                                        // [4393 ] push constant 4
A=M-1                                                        // [4394 ] push constant 4
M=D                                                          // [4395 ] push constant 4
@SP                                                          // [4396 ] add
AM=M-1                                                       // [4397 ] add
D=M                                                          // [4398 ] add
A=A-1                                                        // [4399 ] add
M=D+M                                                        // [4400 ] add
@THIS                                                        // [4401 ] push this 1
D=M                                                          // [4402 ] push this 1
@1                                                           // [4403 ] push this 1
A=D+A                                                        // [4404 ] push this 1
D=M                                                          // [4405 ] push this 1
@SP                                                          // [4406 ] push this 1
M=M+1                                                        // [4407 ] push this 1
A=M-1                                                        // [4408 ] push this 1
M=D                                                          // [4409 ] push this 1
@THIS                                                        // [4410 ] push this 3
D=M                                                          // [4411 ] push this 3
@3                                                           // [4412 ] push this 3
A=D+A                                                        // [4413 ] push this 3
D=M                                                          // [4414 ] push this 3
@SP                                                          // [4415 ] push this 3
M=M+1                                                        // [4416 ] push this 3
A=M-1                                                        // [4417 ] push this 3
M=D                                                          // [4418 ] push this 3
@SP                                                          // [4419 ] add
AM=M-1                                                       // [4420 ] add
D=M                                                          // [4421 ] add
A=A-1                                                        // [4422 ] add
M=D+M                                                        // [4423 ] add
@4                                                           // [4424 ] call Screen.drawRectangle 4
D=A                                                          // [4425 ] call Screen.drawRectangle 4
@R13                                                         // [4426 ] call Screen.drawRectangle 4
M=D                                                          // [4427 ] call Screen.drawRectangle 4
@Screen.drawRectangle                                        // [4428 ] call Screen.drawRectangle 4
D=A                                                          // [4429 ] call Screen.drawRectangle 4
@R14                                                         // [4430 ] call Screen.drawRectangle 4
M=D                                                          // [4431 ] call Screen.drawRectangle 4
@return-45                                                   // [4432 ] call Screen.drawRectangle 4
D=A                                                          // [4433 ] call Screen.drawRectangle 4
@CALL                                                        // [4434 ] call Screen.drawRectangle 4
0;JEQ                                                        // [4435 ] call Screen.drawRectangle 4
(return-45)                                                  // [     ] call Screen.drawRectangle 4
@SP                                                          // [4436 ] pop temp 0
AM=M-1                                                       // [4437 ] pop temp 0
D=M                                                          // [4438 ] pop temp 0
@5                                                           // [4439 ] pop temp 0
M=D                                                          // [4440 ] pop temp 0
@SP                                                          // [4441 ] push constant 0
M=M+1                                                        // [4442 ] push constant 0
A=M-1                                                        // [4443 ] push constant 0
M=0                                                          // [4444 ] push constant 0
@SP                                                          // [4445 ] not
A=M-1                                                        // [4446 ] not
D=M                                                          // [4447 ] not
M=!D                                                         // [4448 ] not
@1                                                           // [4449 ] call Screen.setColor 1
D=A                                                          // [4450 ] call Screen.setColor 1
@R13                                                         // [4451 ] call Screen.setColor 1
M=D                                                          // [4452 ] call Screen.setColor 1
@Screen.setColor                                             // [4453 ] call Screen.setColor 1
D=A                                                          // [4454 ] call Screen.setColor 1
@R14                                                         // [4455 ] call Screen.setColor 1
M=D                                                          // [4456 ] call Screen.setColor 1
@return-46                                                   // [4457 ] call Screen.setColor 1
D=A                                                          // [4458 ] call Screen.setColor 1
@CALL                                                        // [4459 ] call Screen.setColor 1
0;JEQ                                                        // [4460 ] call Screen.setColor 1
(return-46)                                                  // [     ] call Screen.setColor 1
@SP                                                          // [4461 ] pop temp 0
AM=M-1                                                       // [4462 ] pop temp 0
D=M                                                          // [4463 ] pop temp 0
@5                                                           // [4464 ] pop temp 0
M=D                                                          // [4465 ] pop temp 0
@THIS                                                        // [4466 ] push this 0
D=M                                                          // [4467 ] push this 0
@0                                                           // [4468 ] push this 0
A=D+A                                                        // [4469 ] push this 0
D=M                                                          // [4470 ] push this 0
@SP                                                          // [4471 ] push this 0
M=M+1                                                        // [4472 ] push this 0
A=M-1                                                        // [4473 ] push this 0
M=D                                                          // [4474 ] push this 0
@THIS                                                        // [4475 ] push this 1
D=M                                                          // [4476 ] push this 1
@1                                                           // [4477 ] push this 1
A=D+A                                                        // [4478 ] push this 1
D=M                                                          // [4479 ] push this 1
@SP                                                          // [4480 ] push this 1
M=M+1                                                        // [4481 ] push this 1
A=M-1                                                        // [4482 ] push this 1
M=D                                                          // [4483 ] push this 1
@THIS                                                        // [4484 ] push this 0
D=M                                                          // [4485 ] push this 0
@0                                                           // [4486 ] push this 0
A=D+A                                                        // [4487 ] push this 0
D=M                                                          // [4488 ] push this 0
@SP                                                          // [4489 ] push this 0
M=M+1                                                        // [4490 ] push this 0
A=M-1                                                        // [4491 ] push this 0
M=D                                                          // [4492 ] push this 0
@3                                                           // [4493 ] push constant 3
D=A                                                          // [4494 ] push constant 3
@SP                                                          // [4495 ] push constant 3
M=M+1                                                        // [4496 ] push constant 3
A=M-1                                                        // [4497 ] push constant 3
M=D                                                          // [4498 ] push constant 3
@SP                                                          // [4499 ] add
AM=M-1                                                       // [4500 ] add
D=M                                                          // [4501 ] add
A=A-1                                                        // [4502 ] add
M=D+M                                                        // [4503 ] add
@THIS                                                        // [4504 ] push this 1
D=M                                                          // [4505 ] push this 1
@1                                                           // [4506 ] push this 1
A=D+A                                                        // [4507 ] push this 1
D=M                                                          // [4508 ] push this 1
@SP                                                          // [4509 ] push this 1
M=M+1                                                        // [4510 ] push this 1
A=M-1                                                        // [4511 ] push this 1
M=D                                                          // [4512 ] push this 1
@THIS                                                        // [4513 ] push this 3
D=M                                                          // [4514 ] push this 3
@3                                                           // [4515 ] push this 3
A=D+A                                                        // [4516 ] push this 3
D=M                                                          // [4517 ] push this 3
@SP                                                          // [4518 ] push this 3
M=M+1                                                        // [4519 ] push this 3
A=M-1                                                        // [4520 ] push this 3
M=D                                                          // [4521 ] push this 3
@SP                                                          // [4522 ] add
AM=M-1                                                       // [4523 ] add
D=M                                                          // [4524 ] add
A=A-1                                                        // [4525 ] add
M=D+M                                                        // [4526 ] add
@4                                                           // [4527 ] call Screen.drawRectangle 4
D=A                                                          // [4528 ] call Screen.drawRectangle 4
@R13                                                         // [4529 ] call Screen.drawRectangle 4
M=D                                                          // [4530 ] call Screen.drawRectangle 4
@Screen.drawRectangle                                        // [4531 ] call Screen.drawRectangle 4
D=A                                                          // [4532 ] call Screen.drawRectangle 4
@R14                                                         // [4533 ] call Screen.drawRectangle 4
M=D                                                          // [4534 ] call Screen.drawRectangle 4
@return-47                                                   // [4535 ] call Screen.drawRectangle 4
D=A                                                          // [4536 ] call Screen.drawRectangle 4
@CALL                                                        // [4537 ] call Screen.drawRectangle 4
0;JEQ                                                        // [4538 ] call Screen.drawRectangle 4
(return-47)                                                  // [     ] call Screen.drawRectangle 4
@SP                                                          // [4539 ] pop temp 0
AM=M-1                                                       // [4540 ] pop temp 0
D=M                                                          // [4541 ] pop temp 0
@5                                                           // [4542 ] pop temp 0
M=D                                                          // [4543 ] pop temp 0
@Bat.move$IF_END0                                            // [4544 ] goto IF_END0
0;JEQ                                                        // [4545 ] goto IF_END0
(Bat.move$IF_FALSE0)                                         // [     ] label IF_FALSE0
@THIS                                                        // [4546 ] push this 0
D=M                                                          // [4547 ] push this 0
@0                                                           // [4548 ] push this 0
A=D+A                                                        // [4549 ] push this 0
D=M                                                          // [4550 ] push this 0
@SP                                                          // [4551 ] push this 0
M=M+1                                                        // [4552 ] push this 0
A=M-1                                                        // [4553 ] push this 0
M=D                                                          // [4554 ] push this 0
@4                                                           // [4555 ] push constant 4
D=A                                                          // [4556 ] push constant 4
@SP                                                          // [4557 ] push constant 4
M=M+1                                                        // [4558 ] push constant 4
A=M-1                                                        // [4559 ] push constant 4
M=D                                                          // [4560 ] push constant 4
@SP                                                          // [4561 ] add
AM=M-1                                                       // [4562 ] add
D=M                                                          // [4563 ] add
A=A-1                                                        // [4564 ] add
M=D+M                                                        // [4565 ] add
@SP                                                          // [4566 ] pop this 0
AM=M-1                                                       // [4567 ] pop this 0
D=M                                                          // [4568 ] pop this 0
@R13                                                         // [4569 ] pop this 0
M=D                                                          // [4570 ] pop this 0
@THIS                                                        // [4571 ] pop this 0
D=M                                                          // [4572 ] pop this 0
@0                                                           // [4573 ] pop this 0
D=D+A                                                        // [4574 ] pop this 0
@R14                                                         // [4575 ] pop this 0
M=D                                                          // [4576 ] pop this 0
@R13                                                         // [4577 ] pop this 0
D=M                                                          // [4578 ] pop this 0
@R14                                                         // [4579 ] pop this 0
A=M                                                          // [4580 ] pop this 0
M=D                                                          // [4581 ] pop this 0
@THIS                                                        // [4582 ] push this 0
D=M                                                          // [4583 ] push this 0
@0                                                           // [4584 ] push this 0
A=D+A                                                        // [4585 ] push this 0
D=M                                                          // [4586 ] push this 0
@SP                                                          // [4587 ] push this 0
M=M+1                                                        // [4588 ] push this 0
A=M-1                                                        // [4589 ] push this 0
M=D                                                          // [4590 ] push this 0
@THIS                                                        // [4591 ] push this 2
D=M                                                          // [4592 ] push this 2
@2                                                           // [4593 ] push this 2
A=D+A                                                        // [4594 ] push this 2
D=M                                                          // [4595 ] push this 2
@SP                                                          // [4596 ] push this 2
M=M+1                                                        // [4597 ] push this 2
A=M-1                                                        // [4598 ] push this 2
M=D                                                          // [4599 ] push this 2
@SP                                                          // [4600 ] add
AM=M-1                                                       // [4601 ] add
D=M                                                          // [4602 ] add
A=A-1                                                        // [4603 ] add
M=D+M                                                        // [4604 ] add
@511                                                         // [4605 ] push constant 511
D=A                                                          // [4606 ] push constant 511
@SP                                                          // [4607 ] push constant 511
M=M+1                                                        // [4608 ] push constant 511
A=M-1                                                        // [4609 ] push constant 511
M=D                                                          // [4610 ] push constant 511
@CONTINUE_GT_3                                               // [4611 ] gt
D=A                                                          // [4612 ] gt
@R13                                                         // [4613 ] gt
M=D                                                          // [4614 ] gt
@SP                                                          // [4615 ] gt
AM=M-1                                                       // [4616 ] gt
D=M                                                          // [4617 ] gt
A=A-1                                                        // [4618 ] gt
D=D-M                                                        // [4619 ] gt
@INTERNAL_GT                                                 // [4620 ] gt
0;JEQ                                                        // [4621 ] gt
(CONTINUE_GT_3)                                              // [     ] gt
@SP                                                          // [4622 ] if-goto IF_TRUE2
AM=M-1                                                       // [4623 ] if-goto IF_TRUE2
D=M                                                          // [4624 ] if-goto IF_TRUE2
@Bat.move$IF_TRUE2                                           // [4625 ] if-goto IF_TRUE2
D;JNE                                                        // [4626 ] if-goto IF_TRUE2
@Bat.move$IF_FALSE2                                          // [4627 ] goto IF_FALSE2
0;JEQ                                                        // [4628 ] goto IF_FALSE2
(Bat.move$IF_TRUE2)                                          // [     ] label IF_TRUE2
@511                                                         // [4629 ] push constant 511
D=A                                                          // [4630 ] push constant 511
@SP                                                          // [4631 ] push constant 511
M=M+1                                                        // [4632 ] push constant 511
A=M-1                                                        // [4633 ] push constant 511
M=D                                                          // [4634 ] push constant 511
@THIS                                                        // [4635 ] push this 2
D=M                                                          // [4636 ] push this 2
@2                                                           // [4637 ] push this 2
A=D+A                                                        // [4638 ] push this 2
D=M                                                          // [4639 ] push this 2
@SP                                                          // [4640 ] push this 2
M=M+1                                                        // [4641 ] push this 2
A=M-1                                                        // [4642 ] push this 2
M=D                                                          // [4643 ] push this 2
@SP                                                          // [4644 ] sub
AM=M-1                                                       // [4645 ] sub
D=M                                                          // [4646 ] sub
A=A-1                                                        // [4647 ] sub
M=M-D                                                        // [4648 ] sub
@SP                                                          // [4649 ] pop this 0
AM=M-1                                                       // [4650 ] pop this 0
D=M                                                          // [4651 ] pop this 0
@R13                                                         // [4652 ] pop this 0
M=D                                                          // [4653 ] pop this 0
@THIS                                                        // [4654 ] pop this 0
D=M                                                          // [4655 ] pop this 0
@0                                                           // [4656 ] pop this 0
D=D+A                                                        // [4657 ] pop this 0
@R14                                                         // [4658 ] pop this 0
M=D                                                          // [4659 ] pop this 0
@R13                                                         // [4660 ] pop this 0
D=M                                                          // [4661 ] pop this 0
@R14                                                         // [4662 ] pop this 0
A=M                                                          // [4663 ] pop this 0
M=D                                                          // [4664 ] pop this 0
(Bat.move$IF_FALSE2)                                         // [     ] label IF_FALSE2
@SP                                                          // [4665 ] push constant 0
M=M+1                                                        // [4666 ] push constant 0
A=M-1                                                        // [4667 ] push constant 0
M=0                                                          // [4668 ] push constant 0
@1                                                           // [4669 ] call Screen.setColor 1
D=A                                                          // [4670 ] call Screen.setColor 1
@R13                                                         // [4671 ] call Screen.setColor 1
M=D                                                          // [4672 ] call Screen.setColor 1
@Screen.setColor                                             // [4673 ] call Screen.setColor 1
D=A                                                          // [4674 ] call Screen.setColor 1
@R14                                                         // [4675 ] call Screen.setColor 1
M=D                                                          // [4676 ] call Screen.setColor 1
@return-48                                                   // [4677 ] call Screen.setColor 1
D=A                                                          // [4678 ] call Screen.setColor 1
@CALL                                                        // [4679 ] call Screen.setColor 1
0;JEQ                                                        // [4680 ] call Screen.setColor 1
(return-48)                                                  // [     ] call Screen.setColor 1
@SP                                                          // [4681 ] pop temp 0
AM=M-1                                                       // [4682 ] pop temp 0
D=M                                                          // [4683 ] pop temp 0
@5                                                           // [4684 ] pop temp 0
M=D                                                          // [4685 ] pop temp 0
@THIS                                                        // [4686 ] push this 0
D=M                                                          // [4687 ] push this 0
@0                                                           // [4688 ] push this 0
A=D+A                                                        // [4689 ] push this 0
D=M                                                          // [4690 ] push this 0
@SP                                                          // [4691 ] push this 0
M=M+1                                                        // [4692 ] push this 0
A=M-1                                                        // [4693 ] push this 0
M=D                                                          // [4694 ] push this 0
@4                                                           // [4695 ] push constant 4
D=A                                                          // [4696 ] push constant 4
@SP                                                          // [4697 ] push constant 4
M=M+1                                                        // [4698 ] push constant 4
A=M-1                                                        // [4699 ] push constant 4
M=D                                                          // [4700 ] push constant 4
@SP                                                          // [4701 ] sub
AM=M-1                                                       // [4702 ] sub
D=M                                                          // [4703 ] sub
A=A-1                                                        // [4704 ] sub
M=M-D                                                        // [4705 ] sub
@THIS                                                        // [4706 ] push this 1
D=M                                                          // [4707 ] push this 1
@1                                                           // [4708 ] push this 1
A=D+A                                                        // [4709 ] push this 1
D=M                                                          // [4710 ] push this 1
@SP                                                          // [4711 ] push this 1
M=M+1                                                        // [4712 ] push this 1
A=M-1                                                        // [4713 ] push this 1
M=D                                                          // [4714 ] push this 1
@THIS                                                        // [4715 ] push this 0
D=M                                                          // [4716 ] push this 0
@0                                                           // [4717 ] push this 0
A=D+A                                                        // [4718 ] push this 0
D=M                                                          // [4719 ] push this 0
@SP                                                          // [4720 ] push this 0
M=M+1                                                        // [4721 ] push this 0
A=M-1                                                        // [4722 ] push this 0
M=D                                                          // [4723 ] push this 0
@SP                                                          // [4724 ] push constant 1
M=M+1                                                        // [4725 ] push constant 1
A=M-1                                                        // [4726 ] push constant 1
M=1                                                          // [4727 ] push constant 1
@SP                                                          // [4728 ] sub
AM=M-1                                                       // [4729 ] sub
D=M                                                          // [4730 ] sub
A=A-1                                                        // [4731 ] sub
M=M-D                                                        // [4732 ] sub
@THIS                                                        // [4733 ] push this 1
D=M                                                          // [4734 ] push this 1
@1                                                           // [4735 ] push this 1
A=D+A                                                        // [4736 ] push this 1
D=M                                                          // [4737 ] push this 1
@SP                                                          // [4738 ] push this 1
M=M+1                                                        // [4739 ] push this 1
A=M-1                                                        // [4740 ] push this 1
M=D                                                          // [4741 ] push this 1
@THIS                                                        // [4742 ] push this 3
D=M                                                          // [4743 ] push this 3
@3                                                           // [4744 ] push this 3
A=D+A                                                        // [4745 ] push this 3
D=M                                                          // [4746 ] push this 3
@SP                                                          // [4747 ] push this 3
M=M+1                                                        // [4748 ] push this 3
A=M-1                                                        // [4749 ] push this 3
M=D                                                          // [4750 ] push this 3
@SP                                                          // [4751 ] add
AM=M-1                                                       // [4752 ] add
D=M                                                          // [4753 ] add
A=A-1                                                        // [4754 ] add
M=D+M                                                        // [4755 ] add
@4                                                           // [4756 ] call Screen.drawRectangle 4
D=A                                                          // [4757 ] call Screen.drawRectangle 4
@R13                                                         // [4758 ] call Screen.drawRectangle 4
M=D                                                          // [4759 ] call Screen.drawRectangle 4
@Screen.drawRectangle                                        // [4760 ] call Screen.drawRectangle 4
D=A                                                          // [4761 ] call Screen.drawRectangle 4
@R14                                                         // [4762 ] call Screen.drawRectangle 4
M=D                                                          // [4763 ] call Screen.drawRectangle 4
@return-49                                                   // [4764 ] call Screen.drawRectangle 4
D=A                                                          // [4765 ] call Screen.drawRectangle 4
@CALL                                                        // [4766 ] call Screen.drawRectangle 4
0;JEQ                                                        // [4767 ] call Screen.drawRectangle 4
(return-49)                                                  // [     ] call Screen.drawRectangle 4
@SP                                                          // [4768 ] pop temp 0
AM=M-1                                                       // [4769 ] pop temp 0
D=M                                                          // [4770 ] pop temp 0
@5                                                           // [4771 ] pop temp 0
M=D                                                          // [4772 ] pop temp 0
@SP                                                          // [4773 ] push constant 0
M=M+1                                                        // [4774 ] push constant 0
A=M-1                                                        // [4775 ] push constant 0
M=0                                                          // [4776 ] push constant 0
@SP                                                          // [4777 ] not
A=M-1                                                        // [4778 ] not
D=M                                                          // [4779 ] not
M=!D                                                         // [4780 ] not
@1                                                           // [4781 ] call Screen.setColor 1
D=A                                                          // [4782 ] call Screen.setColor 1
@R13                                                         // [4783 ] call Screen.setColor 1
M=D                                                          // [4784 ] call Screen.setColor 1
@Screen.setColor                                             // [4785 ] call Screen.setColor 1
D=A                                                          // [4786 ] call Screen.setColor 1
@R14                                                         // [4787 ] call Screen.setColor 1
M=D                                                          // [4788 ] call Screen.setColor 1
@return-50                                                   // [4789 ] call Screen.setColor 1
D=A                                                          // [4790 ] call Screen.setColor 1
@CALL                                                        // [4791 ] call Screen.setColor 1
0;JEQ                                                        // [4792 ] call Screen.setColor 1
(return-50)                                                  // [     ] call Screen.setColor 1
@SP                                                          // [4793 ] pop temp 0
AM=M-1                                                       // [4794 ] pop temp 0
D=M                                                          // [4795 ] pop temp 0
@5                                                           // [4796 ] pop temp 0
M=D                                                          // [4797 ] pop temp 0
@THIS                                                        // [4798 ] push this 0
D=M                                                          // [4799 ] push this 0
@0                                                           // [4800 ] push this 0
A=D+A                                                        // [4801 ] push this 0
D=M                                                          // [4802 ] push this 0
@SP                                                          // [4803 ] push this 0
M=M+1                                                        // [4804 ] push this 0
A=M-1                                                        // [4805 ] push this 0
M=D                                                          // [4806 ] push this 0
@THIS                                                        // [4807 ] push this 2
D=M                                                          // [4808 ] push this 2
@2                                                           // [4809 ] push this 2
A=D+A                                                        // [4810 ] push this 2
D=M                                                          // [4811 ] push this 2
@SP                                                          // [4812 ] push this 2
M=M+1                                                        // [4813 ] push this 2
A=M-1                                                        // [4814 ] push this 2
M=D                                                          // [4815 ] push this 2
@SP                                                          // [4816 ] add
AM=M-1                                                       // [4817 ] add
D=M                                                          // [4818 ] add
A=A-1                                                        // [4819 ] add
M=D+M                                                        // [4820 ] add
@3                                                           // [4821 ] push constant 3
D=A                                                          // [4822 ] push constant 3
@SP                                                          // [4823 ] push constant 3
M=M+1                                                        // [4824 ] push constant 3
A=M-1                                                        // [4825 ] push constant 3
M=D                                                          // [4826 ] push constant 3
@SP                                                          // [4827 ] sub
AM=M-1                                                       // [4828 ] sub
D=M                                                          // [4829 ] sub
A=A-1                                                        // [4830 ] sub
M=M-D                                                        // [4831 ] sub
@THIS                                                        // [4832 ] push this 1
D=M                                                          // [4833 ] push this 1
@1                                                           // [4834 ] push this 1
A=D+A                                                        // [4835 ] push this 1
D=M                                                          // [4836 ] push this 1
@SP                                                          // [4837 ] push this 1
M=M+1                                                        // [4838 ] push this 1
A=M-1                                                        // [4839 ] push this 1
M=D                                                          // [4840 ] push this 1
@THIS                                                        // [4841 ] push this 0
D=M                                                          // [4842 ] push this 0
@0                                                           // [4843 ] push this 0
A=D+A                                                        // [4844 ] push this 0
D=M                                                          // [4845 ] push this 0
@SP                                                          // [4846 ] push this 0
M=M+1                                                        // [4847 ] push this 0
A=M-1                                                        // [4848 ] push this 0
M=D                                                          // [4849 ] push this 0
@THIS                                                        // [4850 ] push this 2
D=M                                                          // [4851 ] push this 2
@2                                                           // [4852 ] push this 2
A=D+A                                                        // [4853 ] push this 2
D=M                                                          // [4854 ] push this 2
@SP                                                          // [4855 ] push this 2
M=M+1                                                        // [4856 ] push this 2
A=M-1                                                        // [4857 ] push this 2
M=D                                                          // [4858 ] push this 2
@SP                                                          // [4859 ] add
AM=M-1                                                       // [4860 ] add
D=M                                                          // [4861 ] add
A=A-1                                                        // [4862 ] add
M=D+M                                                        // [4863 ] add
@THIS                                                        // [4864 ] push this 1
D=M                                                          // [4865 ] push this 1
@1                                                           // [4866 ] push this 1
A=D+A                                                        // [4867 ] push this 1
D=M                                                          // [4868 ] push this 1
@SP                                                          // [4869 ] push this 1
M=M+1                                                        // [4870 ] push this 1
A=M-1                                                        // [4871 ] push this 1
M=D                                                          // [4872 ] push this 1
@THIS                                                        // [4873 ] push this 3
D=M                                                          // [4874 ] push this 3
@3                                                           // [4875 ] push this 3
A=D+A                                                        // [4876 ] push this 3
D=M                                                          // [4877 ] push this 3
@SP                                                          // [4878 ] push this 3
M=M+1                                                        // [4879 ] push this 3
A=M-1                                                        // [4880 ] push this 3
M=D                                                          // [4881 ] push this 3
@SP                                                          // [4882 ] add
AM=M-1                                                       // [4883 ] add
D=M                                                          // [4884 ] add
A=A-1                                                        // [4885 ] add
M=D+M                                                        // [4886 ] add
@4                                                           // [4887 ] call Screen.drawRectangle 4
D=A                                                          // [4888 ] call Screen.drawRectangle 4
@R13                                                         // [4889 ] call Screen.drawRectangle 4
M=D                                                          // [4890 ] call Screen.drawRectangle 4
@Screen.drawRectangle                                        // [4891 ] call Screen.drawRectangle 4
D=A                                                          // [4892 ] call Screen.drawRectangle 4
@R14                                                         // [4893 ] call Screen.drawRectangle 4
M=D                                                          // [4894 ] call Screen.drawRectangle 4
@return-51                                                   // [4895 ] call Screen.drawRectangle 4
D=A                                                          // [4896 ] call Screen.drawRectangle 4
@CALL                                                        // [4897 ] call Screen.drawRectangle 4
0;JEQ                                                        // [4898 ] call Screen.drawRectangle 4
(return-51)                                                  // [     ] call Screen.drawRectangle 4
@SP                                                          // [4899 ] pop temp 0
AM=M-1                                                       // [4900 ] pop temp 0
D=M                                                          // [4901 ] pop temp 0
@5                                                           // [4902 ] pop temp 0
M=D                                                          // [4903 ] pop temp 0
(Bat.move$IF_END0)                                           // [     ] label IF_END0
@SP                                                          // [4904 ] push constant 0
M=M+1                                                        // [4905 ] push constant 0
A=M-1                                                        // [4906 ] push constant 0
M=0                                                          // [4907 ] push constant 0
@RETURN                                                      // [4908 ] return
0;JEQ                                                        // [4909 ] return
(Keyboard.init)                                              // [     ] function Keyboard.init 0
@24576                                                       // [4910 ] push constant 24576
D=A                                                          // [4911 ] push constant 24576
@SP                                                          // [4912 ] push constant 24576
M=M+1                                                        // [4913 ] push constant 24576
A=M-1                                                        // [4914 ] push constant 24576
M=D                                                          // [4915 ] push constant 24576
@SP                                                          // [4916 ] pop static 0
AM=M-1                                                       // [4917 ] pop static 0
D=M                                                          // [4918 ] pop static 0
@Keyboard.0                                                  // [4919 ] pop static 0
M=D                                                          // [4920 ] pop static 0
@SP                                                          // [4921 ] push constant 0
M=M+1                                                        // [4922 ] push constant 0
A=M-1                                                        // [4923 ] push constant 0
M=0                                                          // [4924 ] push constant 0
@RETURN                                                      // [4925 ] return
0;JEQ                                                        // [4926 ] return
(Keyboard.keyPressed)                                        // [     ] function Keyboard.keyPressed 0
@SP                                                          // [4927 ] push constant 0
M=M+1                                                        // [4928 ] push constant 0
A=M-1                                                        // [4929 ] push constant 0
M=0                                                          // [4930 ] push constant 0
@Keyboard.0                                                  // [4931 ] push static 0
D=M                                                          // [4932 ] push static 0
@SP                                                          // [4933 ] push static 0
M=M+1                                                        // [4934 ] push static 0
A=M-1                                                        // [4935 ] push static 0
M=D                                                          // [4936 ] push static 0
@SP                                                          // [4937 ] add
AM=M-1                                                       // [4938 ] add
D=M                                                          // [4939 ] add
A=A-1                                                        // [4940 ] add
M=D+M                                                        // [4941 ] add
@SP                                                          // [4942 ] pop pointer 1
AM=M-1                                                       // [4943 ] pop pointer 1
D=M                                                          // [4944 ] pop pointer 1
@4                                                           // [4945 ] pop pointer 1
M=D                                                          // [4946 ] pop pointer 1
@THAT                                                        // [4947 ] push that 0
D=M                                                          // [4948 ] push that 0
@0                                                           // [4949 ] push that 0
A=D+A                                                        // [4950 ] push that 0
D=M                                                          // [4951 ] push that 0
@SP                                                          // [4952 ] push that 0
M=M+1                                                        // [4953 ] push that 0
A=M-1                                                        // [4954 ] push that 0
M=D                                                          // [4955 ] push that 0
@RETURN                                                      // [4956 ] return
0;JEQ                                                        // [4957 ] return
(Keyboard.readChar)                                          // [     ] function Keyboard.readChar 1
@SP                                                          // [4958 ] function Keyboard.readChar 1
A=M                                                          // [4959 ] function Keyboard.readChar 1
M=0                                                          // [4960 ] function Keyboard.readChar 1
@SP                                                          // [4961 ] function Keyboard.readChar 1
M=M+1                                                        // [4962 ] function Keyboard.readChar 1
@SP                                                          // [4963 ] push constant 0
M=M+1                                                        // [4964 ] push constant 0
A=M-1                                                        // [4965 ] push constant 0
M=0                                                          // [4966 ] push constant 0
@1                                                           // [4967 ] call Output.printChar 1
D=A                                                          // [4968 ] call Output.printChar 1
@R13                                                         // [4969 ] call Output.printChar 1
M=D                                                          // [4970 ] call Output.printChar 1
@Output.printChar                                            // [4971 ] call Output.printChar 1
D=A                                                          // [4972 ] call Output.printChar 1
@R14                                                         // [4973 ] call Output.printChar 1
M=D                                                          // [4974 ] call Output.printChar 1
@return-52                                                   // [4975 ] call Output.printChar 1
D=A                                                          // [4976 ] call Output.printChar 1
@CALL                                                        // [4977 ] call Output.printChar 1
0;JEQ                                                        // [4978 ] call Output.printChar 1
(return-52)                                                  // [     ] call Output.printChar 1
@SP                                                          // [4979 ] pop temp 0
AM=M-1                                                       // [4980 ] pop temp 0
D=M                                                          // [4981 ] pop temp 0
@5                                                           // [4982 ] pop temp 0
M=D                                                          // [4983 ] pop temp 0
(Keyboard.readChar$WHILE_EXP0)                               // [     ] label WHILE_EXP0
@LCL                                                         // [4984 ] push local 0
D=M                                                          // [4985 ] push local 0
@0                                                           // [4986 ] push local 0
A=D+A                                                        // [4987 ] push local 0
D=M                                                          // [4988 ] push local 0
@SP                                                          // [4989 ] push local 0
M=M+1                                                        // [4990 ] push local 0
A=M-1                                                        // [4991 ] push local 0
M=D                                                          // [4992 ] push local 0
@SP                                                          // [4993 ] push constant 0
M=M+1                                                        // [4994 ] push constant 0
A=M-1                                                        // [4995 ] push constant 0
M=0                                                          // [4996 ] push constant 0
@CONTINUE_EQ_7                                               // [4997 ] eq
D=A                                                          // [4998 ] eq
@R13                                                         // [4999 ] eq
M=D                                                          // [5000 ] eq
@SP                                                          // [5001 ] eq
AM=M-1                                                       // [5002 ] eq
D=M                                                          // [5003 ] eq
A=A-1                                                        // [5004 ] eq
D=D-M                                                        // [5005 ] eq
@INTERNAL_EQ                                                 // [5006 ] eq
0;JEQ                                                        // [5007 ] eq
(CONTINUE_EQ_7)                                              // [     ] eq
@SP                                                          // [5008 ] not
A=M-1                                                        // [5009 ] not
D=M                                                          // [5010 ] not
M=!D                                                         // [5011 ] not
@SP                                                          // [5012 ] if-goto WHILE_END0
AM=M-1                                                       // [5013 ] if-goto WHILE_END0
D=M                                                          // [5014 ] if-goto WHILE_END0
@Keyboard.readChar$WHILE_END0                                // [5015 ] if-goto WHILE_END0
D;JNE                                                        // [5016 ] if-goto WHILE_END0
@0                                                           // [5017 ] call Keyboard.keyPressed 0
D=A                                                          // [5018 ] call Keyboard.keyPressed 0
@R13                                                         // [5019 ] call Keyboard.keyPressed 0
M=D                                                          // [5020 ] call Keyboard.keyPressed 0
@Keyboard.keyPressed                                         // [5021 ] call Keyboard.keyPressed 0
D=A                                                          // [5022 ] call Keyboard.keyPressed 0
@R14                                                         // [5023 ] call Keyboard.keyPressed 0
M=D                                                          // [5024 ] call Keyboard.keyPressed 0
@return-53                                                   // [5025 ] call Keyboard.keyPressed 0
D=A                                                          // [5026 ] call Keyboard.keyPressed 0
@CALL                                                        // [5027 ] call Keyboard.keyPressed 0
0;JEQ                                                        // [5028 ] call Keyboard.keyPressed 0
(return-53)                                                  // [     ] call Keyboard.keyPressed 0
@SP                                                          // [5029 ] pop local 0
AM=M-1                                                       // [5030 ] pop local 0
D=M                                                          // [5031 ] pop local 0
@R13                                                         // [5032 ] pop local 0
M=D                                                          // [5033 ] pop local 0
@LCL                                                         // [5034 ] pop local 0
D=M                                                          // [5035 ] pop local 0
@0                                                           // [5036 ] pop local 0
D=D+A                                                        // [5037 ] pop local 0
@R14                                                         // [5038 ] pop local 0
M=D                                                          // [5039 ] pop local 0
@R13                                                         // [5040 ] pop local 0
D=M                                                          // [5041 ] pop local 0
@R14                                                         // [5042 ] pop local 0
A=M                                                          // [5043 ] pop local 0
M=D                                                          // [5044 ] pop local 0
@Keyboard.readChar$WHILE_EXP0                                // [5045 ] goto WHILE_EXP0
0;JEQ                                                        // [5046 ] goto WHILE_EXP0
(Keyboard.readChar$WHILE_END0)                               // [     ] label WHILE_END0
(Keyboard.readChar$WHILE_EXP1)                               // [     ] label WHILE_EXP1
@0                                                           // [5047 ] call Keyboard.keyPressed 0
D=A                                                          // [5048 ] call Keyboard.keyPressed 0
@R13                                                         // [5049 ] call Keyboard.keyPressed 0
M=D                                                          // [5050 ] call Keyboard.keyPressed 0
@Keyboard.keyPressed                                         // [5051 ] call Keyboard.keyPressed 0
D=A                                                          // [5052 ] call Keyboard.keyPressed 0
@R14                                                         // [5053 ] call Keyboard.keyPressed 0
M=D                                                          // [5054 ] call Keyboard.keyPressed 0
@return-54                                                   // [5055 ] call Keyboard.keyPressed 0
D=A                                                          // [5056 ] call Keyboard.keyPressed 0
@CALL                                                        // [5057 ] call Keyboard.keyPressed 0
0;JEQ                                                        // [5058 ] call Keyboard.keyPressed 0
(return-54)                                                  // [     ] call Keyboard.keyPressed 0
@SP                                                          // [5059 ] push constant 0
M=M+1                                                        // [5060 ] push constant 0
A=M-1                                                        // [5061 ] push constant 0
M=0                                                          // [5062 ] push constant 0
@CONTINUE_EQ_8                                               // [5063 ] eq
D=A                                                          // [5064 ] eq
@R13                                                         // [5065 ] eq
M=D                                                          // [5066 ] eq
@SP                                                          // [5067 ] eq
AM=M-1                                                       // [5068 ] eq
D=M                                                          // [5069 ] eq
A=A-1                                                        // [5070 ] eq
D=D-M                                                        // [5071 ] eq
@INTERNAL_EQ                                                 // [5072 ] eq
0;JEQ                                                        // [5073 ] eq
(CONTINUE_EQ_8)                                              // [     ] eq
@SP                                                          // [5074 ] not
A=M-1                                                        // [5075 ] not
D=M                                                          // [5076 ] not
M=!D                                                         // [5077 ] not
@SP                                                          // [5078 ] not
A=M-1                                                        // [5079 ] not
D=M                                                          // [5080 ] not
M=!D                                                         // [5081 ] not
@SP                                                          // [5082 ] if-goto WHILE_END1
AM=M-1                                                       // [5083 ] if-goto WHILE_END1
D=M                                                          // [5084 ] if-goto WHILE_END1
@Keyboard.readChar$WHILE_END1                                // [5085 ] if-goto WHILE_END1
D;JNE                                                        // [5086 ] if-goto WHILE_END1
@Keyboard.readChar$WHILE_EXP1                                // [5087 ] goto WHILE_EXP1
0;JEQ                                                        // [5088 ] goto WHILE_EXP1
(Keyboard.readChar$WHILE_END1)                               // [     ] label WHILE_END1
@0                                                           // [5089 ] call Output.backSpace 0
D=A                                                          // [5090 ] call Output.backSpace 0
@R13                                                         // [5091 ] call Output.backSpace 0
M=D                                                          // [5092 ] call Output.backSpace 0
@Output.backSpace                                            // [5093 ] call Output.backSpace 0
D=A                                                          // [5094 ] call Output.backSpace 0
@R14                                                         // [5095 ] call Output.backSpace 0
M=D                                                          // [5096 ] call Output.backSpace 0
@return-55                                                   // [5097 ] call Output.backSpace 0
D=A                                                          // [5098 ] call Output.backSpace 0
@CALL                                                        // [5099 ] call Output.backSpace 0
0;JEQ                                                        // [5100 ] call Output.backSpace 0
(return-55)                                                  // [     ] call Output.backSpace 0
@SP                                                          // [5101 ] pop temp 0
AM=M-1                                                       // [5102 ] pop temp 0
D=M                                                          // [5103 ] pop temp 0
@5                                                           // [5104 ] pop temp 0
M=D                                                          // [5105 ] pop temp 0
@LCL                                                         // [5106 ] push local 0
D=M                                                          // [5107 ] push local 0
@0                                                           // [5108 ] push local 0
A=D+A                                                        // [5109 ] push local 0
D=M                                                          // [5110 ] push local 0
@SP                                                          // [5111 ] push local 0
M=M+1                                                        // [5112 ] push local 0
A=M-1                                                        // [5113 ] push local 0
M=D                                                          // [5114 ] push local 0
@1                                                           // [5115 ] call Output.printChar 1
D=A                                                          // [5116 ] call Output.printChar 1
@R13                                                         // [5117 ] call Output.printChar 1
M=D                                                          // [5118 ] call Output.printChar 1
@Output.printChar                                            // [5119 ] call Output.printChar 1
D=A                                                          // [5120 ] call Output.printChar 1
@R14                                                         // [5121 ] call Output.printChar 1
M=D                                                          // [5122 ] call Output.printChar 1
@return-56                                                   // [5123 ] call Output.printChar 1
D=A                                                          // [5124 ] call Output.printChar 1
@CALL                                                        // [5125 ] call Output.printChar 1
0;JEQ                                                        // [5126 ] call Output.printChar 1
(return-56)                                                  // [     ] call Output.printChar 1
@SP                                                          // [5127 ] pop temp 0
AM=M-1                                                       // [5128 ] pop temp 0
D=M                                                          // [5129 ] pop temp 0
@5                                                           // [5130 ] pop temp 0
M=D                                                          // [5131 ] pop temp 0
@LCL                                                         // [5132 ] push local 0
D=M                                                          // [5133 ] push local 0
@0                                                           // [5134 ] push local 0
A=D+A                                                        // [5135 ] push local 0
D=M                                                          // [5136 ] push local 0
@SP                                                          // [5137 ] push local 0
M=M+1                                                        // [5138 ] push local 0
A=M-1                                                        // [5139 ] push local 0
M=D                                                          // [5140 ] push local 0
@RETURN                                                      // [5141 ] return
0;JEQ                                                        // [5142 ] return
(Keyboard.readLine)                                          // [     ] function Keyboard.readLine 2
@SP                                                          // [5143 ] function Keyboard.readLine 2
A=M                                                          // [5144 ] function Keyboard.readLine 2
M=0                                                          // [5145 ] function Keyboard.readLine 2
@SP                                                          // [5146 ] function Keyboard.readLine 2
M=M+1                                                        // [5147 ] function Keyboard.readLine 2
@SP                                                          // [5148 ] function Keyboard.readLine 2
A=M                                                          // [5149 ] function Keyboard.readLine 2
M=0                                                          // [5150 ] function Keyboard.readLine 2
@SP                                                          // [5151 ] function Keyboard.readLine 2
M=M+1                                                        // [5152 ] function Keyboard.readLine 2
@64                                                          // [5153 ] push constant 64
D=A                                                          // [5154 ] push constant 64
@SP                                                          // [5155 ] push constant 64
M=M+1                                                        // [5156 ] push constant 64
A=M-1                                                        // [5157 ] push constant 64
M=D                                                          // [5158 ] push constant 64
@1                                                           // [5159 ] call String.new 1
D=A                                                          // [5160 ] call String.new 1
@R13                                                         // [5161 ] call String.new 1
M=D                                                          // [5162 ] call String.new 1
@String.new                                                  // [5163 ] call String.new 1
D=A                                                          // [5164 ] call String.new 1
@R14                                                         // [5165 ] call String.new 1
M=D                                                          // [5166 ] call String.new 1
@return-57                                                   // [5167 ] call String.new 1
D=A                                                          // [5168 ] call String.new 1
@CALL                                                        // [5169 ] call String.new 1
0;JEQ                                                        // [5170 ] call String.new 1
(return-57)                                                  // [     ] call String.new 1
@SP                                                          // [5171 ] pop local 0
AM=M-1                                                       // [5172 ] pop local 0
D=M                                                          // [5173 ] pop local 0
@R13                                                         // [5174 ] pop local 0
M=D                                                          // [5175 ] pop local 0
@LCL                                                         // [5176 ] pop local 0
D=M                                                          // [5177 ] pop local 0
@0                                                           // [5178 ] pop local 0
D=D+A                                                        // [5179 ] pop local 0
@R14                                                         // [5180 ] pop local 0
M=D                                                          // [5181 ] pop local 0
@R13                                                         // [5182 ] pop local 0
D=M                                                          // [5183 ] pop local 0
@R14                                                         // [5184 ] pop local 0
A=M                                                          // [5185 ] pop local 0
M=D                                                          // [5186 ] pop local 0
@ARG                                                         // [5187 ] push argument 0
D=M                                                          // [5188 ] push argument 0
@0                                                           // [5189 ] push argument 0
A=D+A                                                        // [5190 ] push argument 0
D=M                                                          // [5191 ] push argument 0
@SP                                                          // [5192 ] push argument 0
M=M+1                                                        // [5193 ] push argument 0
A=M-1                                                        // [5194 ] push argument 0
M=D                                                          // [5195 ] push argument 0
@1                                                           // [5196 ] call Output.printString 1
D=A                                                          // [5197 ] call Output.printString 1
@R13                                                         // [5198 ] call Output.printString 1
M=D                                                          // [5199 ] call Output.printString 1
@Output.printString                                          // [5200 ] call Output.printString 1
D=A                                                          // [5201 ] call Output.printString 1
@R14                                                         // [5202 ] call Output.printString 1
M=D                                                          // [5203 ] call Output.printString 1
@return-58                                                   // [5204 ] call Output.printString 1
D=A                                                          // [5205 ] call Output.printString 1
@CALL                                                        // [5206 ] call Output.printString 1
0;JEQ                                                        // [5207 ] call Output.printString 1
(return-58)                                                  // [     ] call Output.printString 1
@SP                                                          // [5208 ] pop temp 0
AM=M-1                                                       // [5209 ] pop temp 0
D=M                                                          // [5210 ] pop temp 0
@5                                                           // [5211 ] pop temp 0
M=D                                                          // [5212 ] pop temp 0
(Keyboard.readLine$WHILE_EXP0)                               // [     ] label WHILE_EXP0
@SP                                                          // [5213 ] push constant 0
M=M+1                                                        // [5214 ] push constant 0
A=M-1                                                        // [5215 ] push constant 0
M=0                                                          // [5216 ] push constant 0
@SP                                                          // [5217 ] not
A=M-1                                                        // [5218 ] not
D=M                                                          // [5219 ] not
M=!D                                                         // [5220 ] not
@SP                                                          // [5221 ] not
A=M-1                                                        // [5222 ] not
D=M                                                          // [5223 ] not
M=!D                                                         // [5224 ] not
@SP                                                          // [5225 ] if-goto WHILE_END0
AM=M-1                                                       // [5226 ] if-goto WHILE_END0
D=M                                                          // [5227 ] if-goto WHILE_END0
@Keyboard.readLine$WHILE_END0                                // [5228 ] if-goto WHILE_END0
D;JNE                                                        // [5229 ] if-goto WHILE_END0
@0                                                           // [5230 ] call Keyboard.readChar 0
D=A                                                          // [5231 ] call Keyboard.readChar 0
@R13                                                         // [5232 ] call Keyboard.readChar 0
M=D                                                          // [5233 ] call Keyboard.readChar 0
@Keyboard.readChar                                           // [5234 ] call Keyboard.readChar 0
D=A                                                          // [5235 ] call Keyboard.readChar 0
@R14                                                         // [5236 ] call Keyboard.readChar 0
M=D                                                          // [5237 ] call Keyboard.readChar 0
@return-59                                                   // [5238 ] call Keyboard.readChar 0
D=A                                                          // [5239 ] call Keyboard.readChar 0
@CALL                                                        // [5240 ] call Keyboard.readChar 0
0;JEQ                                                        // [5241 ] call Keyboard.readChar 0
(return-59)                                                  // [     ] call Keyboard.readChar 0
@SP                                                          // [5242 ] pop local 1
AM=M-1                                                       // [5243 ] pop local 1
D=M                                                          // [5244 ] pop local 1
@R13                                                         // [5245 ] pop local 1
M=D                                                          // [5246 ] pop local 1
@LCL                                                         // [5247 ] pop local 1
D=M                                                          // [5248 ] pop local 1
@1                                                           // [5249 ] pop local 1
D=D+A                                                        // [5250 ] pop local 1
@R14                                                         // [5251 ] pop local 1
M=D                                                          // [5252 ] pop local 1
@R13                                                         // [5253 ] pop local 1
D=M                                                          // [5254 ] pop local 1
@R14                                                         // [5255 ] pop local 1
A=M                                                          // [5256 ] pop local 1
M=D                                                          // [5257 ] pop local 1
@LCL                                                         // [5258 ] push local 1
D=M                                                          // [5259 ] push local 1
@1                                                           // [5260 ] push local 1
A=D+A                                                        // [5261 ] push local 1
D=M                                                          // [5262 ] push local 1
@SP                                                          // [5263 ] push local 1
M=M+1                                                        // [5264 ] push local 1
A=M-1                                                        // [5265 ] push local 1
M=D                                                          // [5266 ] push local 1
@0                                                           // [5267 ] call String.newLine 0
D=A                                                          // [5268 ] call String.newLine 0
@R13                                                         // [5269 ] call String.newLine 0
M=D                                                          // [5270 ] call String.newLine 0
@String.newLine                                              // [5271 ] call String.newLine 0
D=A                                                          // [5272 ] call String.newLine 0
@R14                                                         // [5273 ] call String.newLine 0
M=D                                                          // [5274 ] call String.newLine 0
@return-60                                                   // [5275 ] call String.newLine 0
D=A                                                          // [5276 ] call String.newLine 0
@CALL                                                        // [5277 ] call String.newLine 0
0;JEQ                                                        // [5278 ] call String.newLine 0
(return-60)                                                  // [     ] call String.newLine 0
@CONTINUE_EQ_9                                               // [5279 ] eq
D=A                                                          // [5280 ] eq
@R13                                                         // [5281 ] eq
M=D                                                          // [5282 ] eq
@SP                                                          // [5283 ] eq
AM=M-1                                                       // [5284 ] eq
D=M                                                          // [5285 ] eq
A=A-1                                                        // [5286 ] eq
D=D-M                                                        // [5287 ] eq
@INTERNAL_EQ                                                 // [5288 ] eq
0;JEQ                                                        // [5289 ] eq
(CONTINUE_EQ_9)                                              // [     ] eq
@SP                                                          // [5290 ] if-goto IF_TRUE0
AM=M-1                                                       // [5291 ] if-goto IF_TRUE0
D=M                                                          // [5292 ] if-goto IF_TRUE0
@Keyboard.readLine$IF_TRUE0                                  // [5293 ] if-goto IF_TRUE0
D;JNE                                                        // [5294 ] if-goto IF_TRUE0
@Keyboard.readLine$IF_FALSE0                                 // [5295 ] goto IF_FALSE0
0;JEQ                                                        // [5296 ] goto IF_FALSE0
(Keyboard.readLine$IF_TRUE0)                                 // [     ] label IF_TRUE0
@0                                                           // [5297 ] call Output.println 0
D=A                                                          // [5298 ] call Output.println 0
@R13                                                         // [5299 ] call Output.println 0
M=D                                                          // [5300 ] call Output.println 0
@Output.println                                              // [5301 ] call Output.println 0
D=A                                                          // [5302 ] call Output.println 0
@R14                                                         // [5303 ] call Output.println 0
M=D                                                          // [5304 ] call Output.println 0
@return-61                                                   // [5305 ] call Output.println 0
D=A                                                          // [5306 ] call Output.println 0
@CALL                                                        // [5307 ] call Output.println 0
0;JEQ                                                        // [5308 ] call Output.println 0
(return-61)                                                  // [     ] call Output.println 0
@SP                                                          // [5309 ] pop temp 0
AM=M-1                                                       // [5310 ] pop temp 0
D=M                                                          // [5311 ] pop temp 0
@5                                                           // [5312 ] pop temp 0
M=D                                                          // [5313 ] pop temp 0
@LCL                                                         // [5314 ] push local 0
D=M                                                          // [5315 ] push local 0
@0                                                           // [5316 ] push local 0
A=D+A                                                        // [5317 ] push local 0
D=M                                                          // [5318 ] push local 0
@SP                                                          // [5319 ] push local 0
M=M+1                                                        // [5320 ] push local 0
A=M-1                                                        // [5321 ] push local 0
M=D                                                          // [5322 ] push local 0
@RETURN                                                      // [5323 ] return
0;JEQ                                                        // [5324 ] return
@Keyboard.readLine$IF_END0                                   // [5325 ] goto IF_END0
0;JEQ                                                        // [5326 ] goto IF_END0
(Keyboard.readLine$IF_FALSE0)                                // [     ] label IF_FALSE0
@LCL                                                         // [5327 ] push local 1
D=M                                                          // [5328 ] push local 1
@1                                                           // [5329 ] push local 1
A=D+A                                                        // [5330 ] push local 1
D=M                                                          // [5331 ] push local 1
@SP                                                          // [5332 ] push local 1
M=M+1                                                        // [5333 ] push local 1
A=M-1                                                        // [5334 ] push local 1
M=D                                                          // [5335 ] push local 1
@0                                                           // [5336 ] call String.backSpace 0
D=A                                                          // [5337 ] call String.backSpace 0
@R13                                                         // [5338 ] call String.backSpace 0
M=D                                                          // [5339 ] call String.backSpace 0
@String.backSpace                                            // [5340 ] call String.backSpace 0
D=A                                                          // [5341 ] call String.backSpace 0
@R14                                                         // [5342 ] call String.backSpace 0
M=D                                                          // [5343 ] call String.backSpace 0
@return-62                                                   // [5344 ] call String.backSpace 0
D=A                                                          // [5345 ] call String.backSpace 0
@CALL                                                        // [5346 ] call String.backSpace 0
0;JEQ                                                        // [5347 ] call String.backSpace 0
(return-62)                                                  // [     ] call String.backSpace 0
@CONTINUE_EQ_10                                              // [5348 ] eq
D=A                                                          // [5349 ] eq
@R13                                                         // [5350 ] eq
M=D                                                          // [5351 ] eq
@SP                                                          // [5352 ] eq
AM=M-1                                                       // [5353 ] eq
D=M                                                          // [5354 ] eq
A=A-1                                                        // [5355 ] eq
D=D-M                                                        // [5356 ] eq
@INTERNAL_EQ                                                 // [5357 ] eq
0;JEQ                                                        // [5358 ] eq
(CONTINUE_EQ_10)                                             // [     ] eq
@SP                                                          // [5359 ] if-goto IF_TRUE1
AM=M-1                                                       // [5360 ] if-goto IF_TRUE1
D=M                                                          // [5361 ] if-goto IF_TRUE1
@Keyboard.readLine$IF_TRUE1                                  // [5362 ] if-goto IF_TRUE1
D;JNE                                                        // [5363 ] if-goto IF_TRUE1
@Keyboard.readLine$IF_FALSE1                                 // [5364 ] goto IF_FALSE1
0;JEQ                                                        // [5365 ] goto IF_FALSE1
(Keyboard.readLine$IF_TRUE1)                                 // [     ] label IF_TRUE1
@LCL                                                         // [5366 ] push local 0
D=M                                                          // [5367 ] push local 0
@0                                                           // [5368 ] push local 0
A=D+A                                                        // [5369 ] push local 0
D=M                                                          // [5370 ] push local 0
@SP                                                          // [5371 ] push local 0
M=M+1                                                        // [5372 ] push local 0
A=M-1                                                        // [5373 ] push local 0
M=D                                                          // [5374 ] push local 0
@1                                                           // [5375 ] call String.eraseLastChar 1
D=A                                                          // [5376 ] call String.eraseLastChar 1
@R13                                                         // [5377 ] call String.eraseLastChar 1
M=D                                                          // [5378 ] call String.eraseLastChar 1
@String.eraseLastChar                                        // [5379 ] call String.eraseLastChar 1
D=A                                                          // [5380 ] call String.eraseLastChar 1
@R14                                                         // [5381 ] call String.eraseLastChar 1
M=D                                                          // [5382 ] call String.eraseLastChar 1
@return-63                                                   // [5383 ] call String.eraseLastChar 1
D=A                                                          // [5384 ] call String.eraseLastChar 1
@CALL                                                        // [5385 ] call String.eraseLastChar 1
0;JEQ                                                        // [5386 ] call String.eraseLastChar 1
(return-63)                                                  // [     ] call String.eraseLastChar 1
@SP                                                          // [5387 ] pop temp 0
AM=M-1                                                       // [5388 ] pop temp 0
D=M                                                          // [5389 ] pop temp 0
@5                                                           // [5390 ] pop temp 0
M=D                                                          // [5391 ] pop temp 0
@0                                                           // [5392 ] call Output.backSpace 0
D=A                                                          // [5393 ] call Output.backSpace 0
@R13                                                         // [5394 ] call Output.backSpace 0
M=D                                                          // [5395 ] call Output.backSpace 0
@Output.backSpace                                            // [5396 ] call Output.backSpace 0
D=A                                                          // [5397 ] call Output.backSpace 0
@R14                                                         // [5398 ] call Output.backSpace 0
M=D                                                          // [5399 ] call Output.backSpace 0
@return-64                                                   // [5400 ] call Output.backSpace 0
D=A                                                          // [5401 ] call Output.backSpace 0
@CALL                                                        // [5402 ] call Output.backSpace 0
0;JEQ                                                        // [5403 ] call Output.backSpace 0
(return-64)                                                  // [     ] call Output.backSpace 0
@SP                                                          // [5404 ] pop temp 0
AM=M-1                                                       // [5405 ] pop temp 0
D=M                                                          // [5406 ] pop temp 0
@5                                                           // [5407 ] pop temp 0
M=D                                                          // [5408 ] pop temp 0
@Keyboard.readLine$IF_END1                                   // [5409 ] goto IF_END1
0;JEQ                                                        // [5410 ] goto IF_END1
(Keyboard.readLine$IF_FALSE1)                                // [     ] label IF_FALSE1
@LCL                                                         // [5411 ] push local 0
D=M                                                          // [5412 ] push local 0
@0                                                           // [5413 ] push local 0
A=D+A                                                        // [5414 ] push local 0
D=M                                                          // [5415 ] push local 0
@SP                                                          // [5416 ] push local 0
M=M+1                                                        // [5417 ] push local 0
A=M-1                                                        // [5418 ] push local 0
M=D                                                          // [5419 ] push local 0
@LCL                                                         // [5420 ] push local 1
D=M                                                          // [5421 ] push local 1
@1                                                           // [5422 ] push local 1
A=D+A                                                        // [5423 ] push local 1
D=M                                                          // [5424 ] push local 1
@SP                                                          // [5425 ] push local 1
M=M+1                                                        // [5426 ] push local 1
A=M-1                                                        // [5427 ] push local 1
M=D                                                          // [5428 ] push local 1
@2                                                           // [5429 ] call String.appendChar 2
D=A                                                          // [5430 ] call String.appendChar 2
@R13                                                         // [5431 ] call String.appendChar 2
M=D                                                          // [5432 ] call String.appendChar 2
@String.appendChar                                           // [5433 ] call String.appendChar 2
D=A                                                          // [5434 ] call String.appendChar 2
@R14                                                         // [5435 ] call String.appendChar 2
M=D                                                          // [5436 ] call String.appendChar 2
@return-65                                                   // [5437 ] call String.appendChar 2
D=A                                                          // [5438 ] call String.appendChar 2
@CALL                                                        // [5439 ] call String.appendChar 2
0;JEQ                                                        // [5440 ] call String.appendChar 2
(return-65)                                                  // [     ] call String.appendChar 2
@SP                                                          // [5441 ] pop temp 0
AM=M-1                                                       // [5442 ] pop temp 0
D=M                                                          // [5443 ] pop temp 0
@5                                                           // [5444 ] pop temp 0
M=D                                                          // [5445 ] pop temp 0
(Keyboard.readLine$IF_END1)                                  // [     ] label IF_END1
(Keyboard.readLine$IF_END0)                                  // [     ] label IF_END0
@Keyboard.readLine$WHILE_EXP0                                // [5446 ] goto WHILE_EXP0
0;JEQ                                                        // [5447 ] goto WHILE_EXP0
(Keyboard.readLine$WHILE_END0)                               // [     ] label WHILE_END0
@LCL                                                         // [5448 ] push local 0
D=M                                                          // [5449 ] push local 0
@0                                                           // [5450 ] push local 0
A=D+A                                                        // [5451 ] push local 0
D=M                                                          // [5452 ] push local 0
@SP                                                          // [5453 ] push local 0
M=M+1                                                        // [5454 ] push local 0
A=M-1                                                        // [5455 ] push local 0
M=D                                                          // [5456 ] push local 0
@RETURN                                                      // [5457 ] return
0;JEQ                                                        // [5458 ] return
(Keyboard.readInt)                                           // [     ] function Keyboard.readInt 2
@SP                                                          // [5459 ] function Keyboard.readInt 2
A=M                                                          // [5460 ] function Keyboard.readInt 2
M=0                                                          // [5461 ] function Keyboard.readInt 2
@SP                                                          // [5462 ] function Keyboard.readInt 2
M=M+1                                                        // [5463 ] function Keyboard.readInt 2
@SP                                                          // [5464 ] function Keyboard.readInt 2
A=M                                                          // [5465 ] function Keyboard.readInt 2
M=0                                                          // [5466 ] function Keyboard.readInt 2
@SP                                                          // [5467 ] function Keyboard.readInt 2
M=M+1                                                        // [5468 ] function Keyboard.readInt 2
@ARG                                                         // [5469 ] push argument 0
D=M                                                          // [5470 ] push argument 0
@0                                                           // [5471 ] push argument 0
A=D+A                                                        // [5472 ] push argument 0
D=M                                                          // [5473 ] push argument 0
@SP                                                          // [5474 ] push argument 0
M=M+1                                                        // [5475 ] push argument 0
A=M-1                                                        // [5476 ] push argument 0
M=D                                                          // [5477 ] push argument 0
@1                                                           // [5478 ] call Keyboard.readLine 1
D=A                                                          // [5479 ] call Keyboard.readLine 1
@R13                                                         // [5480 ] call Keyboard.readLine 1
M=D                                                          // [5481 ] call Keyboard.readLine 1
@Keyboard.readLine                                           // [5482 ] call Keyboard.readLine 1
D=A                                                          // [5483 ] call Keyboard.readLine 1
@R14                                                         // [5484 ] call Keyboard.readLine 1
M=D                                                          // [5485 ] call Keyboard.readLine 1
@return-66                                                   // [5486 ] call Keyboard.readLine 1
D=A                                                          // [5487 ] call Keyboard.readLine 1
@CALL                                                        // [5488 ] call Keyboard.readLine 1
0;JEQ                                                        // [5489 ] call Keyboard.readLine 1
(return-66)                                                  // [     ] call Keyboard.readLine 1
@SP                                                          // [5490 ] pop local 0
AM=M-1                                                       // [5491 ] pop local 0
D=M                                                          // [5492 ] pop local 0
@R13                                                         // [5493 ] pop local 0
M=D                                                          // [5494 ] pop local 0
@LCL                                                         // [5495 ] pop local 0
D=M                                                          // [5496 ] pop local 0
@0                                                           // [5497 ] pop local 0
D=D+A                                                        // [5498 ] pop local 0
@R14                                                         // [5499 ] pop local 0
M=D                                                          // [5500 ] pop local 0
@R13                                                         // [5501 ] pop local 0
D=M                                                          // [5502 ] pop local 0
@R14                                                         // [5503 ] pop local 0
A=M                                                          // [5504 ] pop local 0
M=D                                                          // [5505 ] pop local 0
@LCL                                                         // [5506 ] push local 0
D=M                                                          // [5507 ] push local 0
@0                                                           // [5508 ] push local 0
A=D+A                                                        // [5509 ] push local 0
D=M                                                          // [5510 ] push local 0
@SP                                                          // [5511 ] push local 0
M=M+1                                                        // [5512 ] push local 0
A=M-1                                                        // [5513 ] push local 0
M=D                                                          // [5514 ] push local 0
@1                                                           // [5515 ] call String.intValue 1
D=A                                                          // [5516 ] call String.intValue 1
@R13                                                         // [5517 ] call String.intValue 1
M=D                                                          // [5518 ] call String.intValue 1
@String.intValue                                             // [5519 ] call String.intValue 1
D=A                                                          // [5520 ] call String.intValue 1
@R14                                                         // [5521 ] call String.intValue 1
M=D                                                          // [5522 ] call String.intValue 1
@return-67                                                   // [5523 ] call String.intValue 1
D=A                                                          // [5524 ] call String.intValue 1
@CALL                                                        // [5525 ] call String.intValue 1
0;JEQ                                                        // [5526 ] call String.intValue 1
(return-67)                                                  // [     ] call String.intValue 1
@SP                                                          // [5527 ] pop local 1
AM=M-1                                                       // [5528 ] pop local 1
D=M                                                          // [5529 ] pop local 1
@R13                                                         // [5530 ] pop local 1
M=D                                                          // [5531 ] pop local 1
@LCL                                                         // [5532 ] pop local 1
D=M                                                          // [5533 ] pop local 1
@1                                                           // [5534 ] pop local 1
D=D+A                                                        // [5535 ] pop local 1
@R14                                                         // [5536 ] pop local 1
M=D                                                          // [5537 ] pop local 1
@R13                                                         // [5538 ] pop local 1
D=M                                                          // [5539 ] pop local 1
@R14                                                         // [5540 ] pop local 1
A=M                                                          // [5541 ] pop local 1
M=D                                                          // [5542 ] pop local 1
@LCL                                                         // [5543 ] push local 0
D=M                                                          // [5544 ] push local 0
@0                                                           // [5545 ] push local 0
A=D+A                                                        // [5546 ] push local 0
D=M                                                          // [5547 ] push local 0
@SP                                                          // [5548 ] push local 0
M=M+1                                                        // [5549 ] push local 0
A=M-1                                                        // [5550 ] push local 0
M=D                                                          // [5551 ] push local 0
@1                                                           // [5552 ] call String.dispose 1
D=A                                                          // [5553 ] call String.dispose 1
@R13                                                         // [5554 ] call String.dispose 1
M=D                                                          // [5555 ] call String.dispose 1
@String.dispose                                              // [5556 ] call String.dispose 1
D=A                                                          // [5557 ] call String.dispose 1
@R14                                                         // [5558 ] call String.dispose 1
M=D                                                          // [5559 ] call String.dispose 1
@return-68                                                   // [5560 ] call String.dispose 1
D=A                                                          // [5561 ] call String.dispose 1
@CALL                                                        // [5562 ] call String.dispose 1
0;JEQ                                                        // [5563 ] call String.dispose 1
(return-68)                                                  // [     ] call String.dispose 1
@SP                                                          // [5564 ] pop temp 0
AM=M-1                                                       // [5565 ] pop temp 0
D=M                                                          // [5566 ] pop temp 0
@5                                                           // [5567 ] pop temp 0
M=D                                                          // [5568 ] pop temp 0
@LCL                                                         // [5569 ] push local 1
D=M                                                          // [5570 ] push local 1
@1                                                           // [5571 ] push local 1
A=D+A                                                        // [5572 ] push local 1
D=M                                                          // [5573 ] push local 1
@SP                                                          // [5574 ] push local 1
M=M+1                                                        // [5575 ] push local 1
A=M-1                                                        // [5576 ] push local 1
M=D                                                          // [5577 ] push local 1
@RETURN                                                      // [5578 ] return
0;JEQ                                                        // [5579 ] return
(Main.main)                                                  // [     ] function Main.main 1
@SP                                                          // [5580 ] function Main.main 1
A=M                                                          // [5581 ] function Main.main 1
M=0                                                          // [5582 ] function Main.main 1
@SP                                                          // [5583 ] function Main.main 1
M=M+1                                                        // [5584 ] function Main.main 1
@0                                                           // [5585 ] call PongGame.newInstance 0
D=A                                                          // [5586 ] call PongGame.newInstance 0
@R13                                                         // [5587 ] call PongGame.newInstance 0
M=D                                                          // [5588 ] call PongGame.newInstance 0
@PongGame.newInstance                                        // [5589 ] call PongGame.newInstance 0
D=A                                                          // [5590 ] call PongGame.newInstance 0
@R14                                                         // [5591 ] call PongGame.newInstance 0
M=D                                                          // [5592 ] call PongGame.newInstance 0
@return-69                                                   // [5593 ] call PongGame.newInstance 0
D=A                                                          // [5594 ] call PongGame.newInstance 0
@CALL                                                        // [5595 ] call PongGame.newInstance 0
0;JEQ                                                        // [5596 ] call PongGame.newInstance 0
(return-69)                                                  // [     ] call PongGame.newInstance 0
@SP                                                          // [5597 ] pop temp 0
AM=M-1                                                       // [5598 ] pop temp 0
D=M                                                          // [5599 ] pop temp 0
@5                                                           // [5600 ] pop temp 0
M=D                                                          // [5601 ] pop temp 0
@0                                                           // [5602 ] call PongGame.getInstance 0
D=A                                                          // [5603 ] call PongGame.getInstance 0
@R13                                                         // [5604 ] call PongGame.getInstance 0
M=D                                                          // [5605 ] call PongGame.getInstance 0
@PongGame.getInstance                                        // [5606 ] call PongGame.getInstance 0
D=A                                                          // [5607 ] call PongGame.getInstance 0
@R14                                                         // [5608 ] call PongGame.getInstance 0
M=D                                                          // [5609 ] call PongGame.getInstance 0
@return-70                                                   // [5610 ] call PongGame.getInstance 0
D=A                                                          // [5611 ] call PongGame.getInstance 0
@CALL                                                        // [5612 ] call PongGame.getInstance 0
0;JEQ                                                        // [5613 ] call PongGame.getInstance 0
(return-70)                                                  // [     ] call PongGame.getInstance 0
@SP                                                          // [5614 ] pop local 0
AM=M-1                                                       // [5615 ] pop local 0
D=M                                                          // [5616 ] pop local 0
@R13                                                         // [5617 ] pop local 0
M=D                                                          // [5618 ] pop local 0
@LCL                                                         // [5619 ] pop local 0
D=M                                                          // [5620 ] pop local 0
@0                                                           // [5621 ] pop local 0
D=D+A                                                        // [5622 ] pop local 0
@R14                                                         // [5623 ] pop local 0
M=D                                                          // [5624 ] pop local 0
@R13                                                         // [5625 ] pop local 0
D=M                                                          // [5626 ] pop local 0
@R14                                                         // [5627 ] pop local 0
A=M                                                          // [5628 ] pop local 0
M=D                                                          // [5629 ] pop local 0
@LCL                                                         // [5630 ] push local 0
D=M                                                          // [5631 ] push local 0
@0                                                           // [5632 ] push local 0
A=D+A                                                        // [5633 ] push local 0
D=M                                                          // [5634 ] push local 0
@SP                                                          // [5635 ] push local 0
M=M+1                                                        // [5636 ] push local 0
A=M-1                                                        // [5637 ] push local 0
M=D                                                          // [5638 ] push local 0
@1                                                           // [5639 ] call PongGame.run 1
D=A                                                          // [5640 ] call PongGame.run 1
@R13                                                         // [5641 ] call PongGame.run 1
M=D                                                          // [5642 ] call PongGame.run 1
@PongGame.run                                                // [5643 ] call PongGame.run 1
D=A                                                          // [5644 ] call PongGame.run 1
@R14                                                         // [5645 ] call PongGame.run 1
M=D                                                          // [5646 ] call PongGame.run 1
@return-71                                                   // [5647 ] call PongGame.run 1
D=A                                                          // [5648 ] call PongGame.run 1
@CALL                                                        // [5649 ] call PongGame.run 1
0;JEQ                                                        // [5650 ] call PongGame.run 1
(return-71)                                                  // [     ] call PongGame.run 1
@SP                                                          // [5651 ] pop temp 0
AM=M-1                                                       // [5652 ] pop temp 0
D=M                                                          // [5653 ] pop temp 0
@5                                                           // [5654 ] pop temp 0
M=D                                                          // [5655 ] pop temp 0
@LCL                                                         // [5656 ] push local 0
D=M                                                          // [5657 ] push local 0
@0                                                           // [5658 ] push local 0
A=D+A                                                        // [5659 ] push local 0
D=M                                                          // [5660 ] push local 0
@SP                                                          // [5661 ] push local 0
M=M+1                                                        // [5662 ] push local 0
A=M-1                                                        // [5663 ] push local 0
M=D                                                          // [5664 ] push local 0
@1                                                           // [5665 ] call PongGame.dispose 1
D=A                                                          // [5666 ] call PongGame.dispose 1
@R13                                                         // [5667 ] call PongGame.dispose 1
M=D                                                          // [5668 ] call PongGame.dispose 1
@PongGame.dispose                                            // [5669 ] call PongGame.dispose 1
D=A                                                          // [5670 ] call PongGame.dispose 1
@R14                                                         // [5671 ] call PongGame.dispose 1
M=D                                                          // [5672 ] call PongGame.dispose 1
@return-72                                                   // [5673 ] call PongGame.dispose 1
D=A                                                          // [5674 ] call PongGame.dispose 1
@CALL                                                        // [5675 ] call PongGame.dispose 1
0;JEQ                                                        // [5676 ] call PongGame.dispose 1
(return-72)                                                  // [     ] call PongGame.dispose 1
@SP                                                          // [5677 ] pop temp 0
AM=M-1                                                       // [5678 ] pop temp 0
D=M                                                          // [5679 ] pop temp 0
@5                                                           // [5680 ] pop temp 0
M=D                                                          // [5681 ] pop temp 0
@SP                                                          // [5682 ] push constant 0
M=M+1                                                        // [5683 ] push constant 0
A=M-1                                                        // [5684 ] push constant 0
M=0                                                          // [5685 ] push constant 0
@RETURN                                                      // [5686 ] return
0;JEQ                                                        // [5687 ] return
(Math.init)                                                  // [     ] function Math.init 0
@16                                                          // [5688 ] push constant 16
D=A                                                          // [5689 ] push constant 16
@SP                                                          // [5690 ] push constant 16
M=M+1                                                        // [5691 ] push constant 16
A=M-1                                                        // [5692 ] push constant 16
M=D                                                          // [5693 ] push constant 16
@1                                                           // [5694 ] call Array.new 1
D=A                                                          // [5695 ] call Array.new 1
@R13                                                         // [5696 ] call Array.new 1
M=D                                                          // [5697 ] call Array.new 1
@Array.new                                                   // [5698 ] call Array.new 1
D=A                                                          // [5699 ] call Array.new 1
@R14                                                         // [5700 ] call Array.new 1
M=D                                                          // [5701 ] call Array.new 1
@return-73                                                   // [5702 ] call Array.new 1
D=A                                                          // [5703 ] call Array.new 1
@CALL                                                        // [5704 ] call Array.new 1
0;JEQ                                                        // [5705 ] call Array.new 1
(return-73)                                                  // [     ] call Array.new 1
@SP                                                          // [5706 ] pop static 0
AM=M-1                                                       // [5707 ] pop static 0
D=M                                                          // [5708 ] pop static 0
@Math.0                                                      // [5709 ] pop static 0
M=D                                                          // [5710 ] pop static 0
@SP                                                          // [5711 ] push constant 0
M=M+1                                                        // [5712 ] push constant 0
A=M-1                                                        // [5713 ] push constant 0
M=0                                                          // [5714 ] push constant 0
@Math.0                                                      // [5715 ] push static 0
D=M                                                          // [5716 ] push static 0
@SP                                                          // [5717 ] push static 0
M=M+1                                                        // [5718 ] push static 0
A=M-1                                                        // [5719 ] push static 0
M=D                                                          // [5720 ] push static 0
@SP                                                          // [5721 ] add
AM=M-1                                                       // [5722 ] add
D=M                                                          // [5723 ] add
A=A-1                                                        // [5724 ] add
M=D+M                                                        // [5725 ] add
@SP                                                          // [5726 ] push constant 1
M=M+1                                                        // [5727 ] push constant 1
A=M-1                                                        // [5728 ] push constant 1
M=1                                                          // [5729 ] push constant 1
@SP                                                          // [5730 ] pop temp 0
AM=M-1                                                       // [5731 ] pop temp 0
D=M                                                          // [5732 ] pop temp 0
@5                                                           // [5733 ] pop temp 0
M=D                                                          // [5734 ] pop temp 0
@SP                                                          // [5735 ] pop pointer 1
AM=M-1                                                       // [5736 ] pop pointer 1
D=M                                                          // [5737 ] pop pointer 1
@4                                                           // [5738 ] pop pointer 1
M=D                                                          // [5739 ] pop pointer 1
@5                                                           // [5740 ] push temp 0
D=M                                                          // [5741 ] push temp 0
@SP                                                          // [5742 ] push temp 0
M=M+1                                                        // [5743 ] push temp 0
A=M-1                                                        // [5744 ] push temp 0
M=D                                                          // [5745 ] push temp 0
@SP                                                          // [5746 ] pop that 0
AM=M-1                                                       // [5747 ] pop that 0
D=M                                                          // [5748 ] pop that 0
@R13                                                         // [5749 ] pop that 0
M=D                                                          // [5750 ] pop that 0
@THAT                                                        // [5751 ] pop that 0
D=M                                                          // [5752 ] pop that 0
@0                                                           // [5753 ] pop that 0
D=D+A                                                        // [5754 ] pop that 0
@R14                                                         // [5755 ] pop that 0
M=D                                                          // [5756 ] pop that 0
@R13                                                         // [5757 ] pop that 0
D=M                                                          // [5758 ] pop that 0
@R14                                                         // [5759 ] pop that 0
A=M                                                          // [5760 ] pop that 0
M=D                                                          // [5761 ] pop that 0
@SP                                                          // [5762 ] push constant 1
M=M+1                                                        // [5763 ] push constant 1
A=M-1                                                        // [5764 ] push constant 1
M=1                                                          // [5765 ] push constant 1
@Math.0                                                      // [5766 ] push static 0
D=M                                                          // [5767 ] push static 0
@SP                                                          // [5768 ] push static 0
M=M+1                                                        // [5769 ] push static 0
A=M-1                                                        // [5770 ] push static 0
M=D                                                          // [5771 ] push static 0
@SP                                                          // [5772 ] add
AM=M-1                                                       // [5773 ] add
D=M                                                          // [5774 ] add
A=A-1                                                        // [5775 ] add
M=D+M                                                        // [5776 ] add
@SP                                                          // [5777 ] push constant 2
M=M+1                                                        // [5778 ] push constant 2
A=M-1                                                        // [5779 ] push constant 2
M=1                                                          // [5780 ] push constant 2
M=M+1                                                        // [5781 ] push constant 2
@SP                                                          // [5782 ] pop temp 0
AM=M-1                                                       // [5783 ] pop temp 0
D=M                                                          // [5784 ] pop temp 0
@5                                                           // [5785 ] pop temp 0
M=D                                                          // [5786 ] pop temp 0
@SP                                                          // [5787 ] pop pointer 1
AM=M-1                                                       // [5788 ] pop pointer 1
D=M                                                          // [5789 ] pop pointer 1
@4                                                           // [5790 ] pop pointer 1
M=D                                                          // [5791 ] pop pointer 1
@5                                                           // [5792 ] push temp 0
D=M                                                          // [5793 ] push temp 0
@SP                                                          // [5794 ] push temp 0
M=M+1                                                        // [5795 ] push temp 0
A=M-1                                                        // [5796 ] push temp 0
M=D                                                          // [5797 ] push temp 0
@SP                                                          // [5798 ] pop that 0
AM=M-1                                                       // [5799 ] pop that 0
D=M                                                          // [5800 ] pop that 0
@R13                                                         // [5801 ] pop that 0
M=D                                                          // [5802 ] pop that 0
@THAT                                                        // [5803 ] pop that 0
D=M                                                          // [5804 ] pop that 0
@0                                                           // [5805 ] pop that 0
D=D+A                                                        // [5806 ] pop that 0
@R14                                                         // [5807 ] pop that 0
M=D                                                          // [5808 ] pop that 0
@R13                                                         // [5809 ] pop that 0
D=M                                                          // [5810 ] pop that 0
@R14                                                         // [5811 ] pop that 0
A=M                                                          // [5812 ] pop that 0
M=D                                                          // [5813 ] pop that 0
@SP                                                          // [5814 ] push constant 2
M=M+1                                                        // [5815 ] push constant 2
A=M-1                                                        // [5816 ] push constant 2
M=1                                                          // [5817 ] push constant 2
M=M+1                                                        // [5818 ] push constant 2
@Math.0                                                      // [5819 ] push static 0
D=M                                                          // [5820 ] push static 0
@SP                                                          // [5821 ] push static 0
M=M+1                                                        // [5822 ] push static 0
A=M-1                                                        // [5823 ] push static 0
M=D                                                          // [5824 ] push static 0
@SP                                                          // [5825 ] add
AM=M-1                                                       // [5826 ] add
D=M                                                          // [5827 ] add
A=A-1                                                        // [5828 ] add
M=D+M                                                        // [5829 ] add
@4                                                           // [5830 ] push constant 4
D=A                                                          // [5831 ] push constant 4
@SP                                                          // [5832 ] push constant 4
M=M+1                                                        // [5833 ] push constant 4
A=M-1                                                        // [5834 ] push constant 4
M=D                                                          // [5835 ] push constant 4
@SP                                                          // [5836 ] pop temp 0
AM=M-1                                                       // [5837 ] pop temp 0
D=M                                                          // [5838 ] pop temp 0
@5                                                           // [5839 ] pop temp 0
M=D                                                          // [5840 ] pop temp 0
@SP                                                          // [5841 ] pop pointer 1
AM=M-1                                                       // [5842 ] pop pointer 1
D=M                                                          // [5843 ] pop pointer 1
@4                                                           // [5844 ] pop pointer 1
M=D                                                          // [5845 ] pop pointer 1
@5                                                           // [5846 ] push temp 0
D=M                                                          // [5847 ] push temp 0
@SP                                                          // [5848 ] push temp 0
M=M+1                                                        // [5849 ] push temp 0
A=M-1                                                        // [5850 ] push temp 0
M=D                                                          // [5851 ] push temp 0
@SP                                                          // [5852 ] pop that 0
AM=M-1                                                       // [5853 ] pop that 0
D=M                                                          // [5854 ] pop that 0
@R13                                                         // [5855 ] pop that 0
M=D                                                          // [5856 ] pop that 0
@THAT                                                        // [5857 ] pop that 0
D=M                                                          // [5858 ] pop that 0
@0                                                           // [5859 ] pop that 0
D=D+A                                                        // [5860 ] pop that 0
@R14                                                         // [5861 ] pop that 0
M=D                                                          // [5862 ] pop that 0
@R13                                                         // [5863 ] pop that 0
D=M                                                          // [5864 ] pop that 0
@R14                                                         // [5865 ] pop that 0
A=M                                                          // [5866 ] pop that 0
M=D                                                          // [5867 ] pop that 0
@3                                                           // [5868 ] push constant 3
D=A                                                          // [5869 ] push constant 3
@SP                                                          // [5870 ] push constant 3
M=M+1                                                        // [5871 ] push constant 3
A=M-1                                                        // [5872 ] push constant 3
M=D                                                          // [5873 ] push constant 3
@Math.0                                                      // [5874 ] push static 0
D=M                                                          // [5875 ] push static 0
@SP                                                          // [5876 ] push static 0
M=M+1                                                        // [5877 ] push static 0
A=M-1                                                        // [5878 ] push static 0
M=D                                                          // [5879 ] push static 0
@SP                                                          // [5880 ] add
AM=M-1                                                       // [5881 ] add
D=M                                                          // [5882 ] add
A=A-1                                                        // [5883 ] add
M=D+M                                                        // [5884 ] add
@8                                                           // [5885 ] push constant 8
D=A                                                          // [5886 ] push constant 8
@SP                                                          // [5887 ] push constant 8
M=M+1                                                        // [5888 ] push constant 8
A=M-1                                                        // [5889 ] push constant 8
M=D                                                          // [5890 ] push constant 8
@SP                                                          // [5891 ] pop temp 0
AM=M-1                                                       // [5892 ] pop temp 0
D=M                                                          // [5893 ] pop temp 0
@5                                                           // [5894 ] pop temp 0
M=D                                                          // [5895 ] pop temp 0
@SP                                                          // [5896 ] pop pointer 1
AM=M-1                                                       // [5897 ] pop pointer 1
D=M                                                          // [5898 ] pop pointer 1
@4                                                           // [5899 ] pop pointer 1
M=D                                                          // [5900 ] pop pointer 1
@5                                                           // [5901 ] push temp 0
D=M                                                          // [5902 ] push temp 0
@SP                                                          // [5903 ] push temp 0
M=M+1                                                        // [5904 ] push temp 0
A=M-1                                                        // [5905 ] push temp 0
M=D                                                          // [5906 ] push temp 0
@SP                                                          // [5907 ] pop that 0
AM=M-1                                                       // [5908 ] pop that 0
D=M                                                          // [5909 ] pop that 0
@R13                                                         // [5910 ] pop that 0
M=D                                                          // [5911 ] pop that 0
@THAT                                                        // [5912 ] pop that 0
D=M                                                          // [5913 ] pop that 0
@0                                                           // [5914 ] pop that 0
D=D+A                                                        // [5915 ] pop that 0
@R14                                                         // [5916 ] pop that 0
M=D                                                          // [5917 ] pop that 0
@R13                                                         // [5918 ] pop that 0
D=M                                                          // [5919 ] pop that 0
@R14                                                         // [5920 ] pop that 0
A=M                                                          // [5921 ] pop that 0
M=D                                                          // [5922 ] pop that 0
@4                                                           // [5923 ] push constant 4
D=A                                                          // [5924 ] push constant 4
@SP                                                          // [5925 ] push constant 4
M=M+1                                                        // [5926 ] push constant 4
A=M-1                                                        // [5927 ] push constant 4
M=D                                                          // [5928 ] push constant 4
@Math.0                                                      // [5929 ] push static 0
D=M                                                          // [5930 ] push static 0
@SP                                                          // [5931 ] push static 0
M=M+1                                                        // [5932 ] push static 0
A=M-1                                                        // [5933 ] push static 0
M=D                                                          // [5934 ] push static 0
@SP                                                          // [5935 ] add
AM=M-1                                                       // [5936 ] add
D=M                                                          // [5937 ] add
A=A-1                                                        // [5938 ] add
M=D+M                                                        // [5939 ] add
@16                                                          // [5940 ] push constant 16
D=A                                                          // [5941 ] push constant 16
@SP                                                          // [5942 ] push constant 16
M=M+1                                                        // [5943 ] push constant 16
A=M-1                                                        // [5944 ] push constant 16
M=D                                                          // [5945 ] push constant 16
@SP                                                          // [5946 ] pop temp 0
AM=M-1                                                       // [5947 ] pop temp 0
D=M                                                          // [5948 ] pop temp 0
@5                                                           // [5949 ] pop temp 0
M=D                                                          // [5950 ] pop temp 0
@SP                                                          // [5951 ] pop pointer 1
AM=M-1                                                       // [5952 ] pop pointer 1
D=M                                                          // [5953 ] pop pointer 1
@4                                                           // [5954 ] pop pointer 1
M=D                                                          // [5955 ] pop pointer 1
@5                                                           // [5956 ] push temp 0
D=M                                                          // [5957 ] push temp 0
@SP                                                          // [5958 ] push temp 0
M=M+1                                                        // [5959 ] push temp 0
A=M-1                                                        // [5960 ] push temp 0
M=D                                                          // [5961 ] push temp 0
@SP                                                          // [5962 ] pop that 0
AM=M-1                                                       // [5963 ] pop that 0
D=M                                                          // [5964 ] pop that 0
@R13                                                         // [5965 ] pop that 0
M=D                                                          // [5966 ] pop that 0
@THAT                                                        // [5967 ] pop that 0
D=M                                                          // [5968 ] pop that 0
@0                                                           // [5969 ] pop that 0
D=D+A                                                        // [5970 ] pop that 0
@R14                                                         // [5971 ] pop that 0
M=D                                                          // [5972 ] pop that 0
@R13                                                         // [5973 ] pop that 0
D=M                                                          // [5974 ] pop that 0
@R14                                                         // [5975 ] pop that 0
A=M                                                          // [5976 ] pop that 0
M=D                                                          // [5977 ] pop that 0
@5                                                           // [5978 ] push constant 5
D=A                                                          // [5979 ] push constant 5
@SP                                                          // [5980 ] push constant 5
M=M+1                                                        // [5981 ] push constant 5
A=M-1                                                        // [5982 ] push constant 5
M=D                                                          // [5983 ] push constant 5
@Math.0                                                      // [5984 ] push static 0
D=M                                                          // [5985 ] push static 0
@SP                                                          // [5986 ] push static 0
M=M+1                                                        // [5987 ] push static 0
A=M-1                                                        // [5988 ] push static 0
M=D                                                          // [5989 ] push static 0
@SP                                                          // [5990 ] add
AM=M-1                                                       // [5991 ] add
D=M                                                          // [5992 ] add
A=A-1                                                        // [5993 ] add
M=D+M                                                        // [5994 ] add
@32                                                          // [5995 ] push constant 32
D=A                                                          // [5996 ] push constant 32
@SP                                                          // [5997 ] push constant 32
M=M+1                                                        // [5998 ] push constant 32
A=M-1                                                        // [5999 ] push constant 32
M=D                                                          // [6000 ] push constant 32
@SP                                                          // [6001 ] pop temp 0
AM=M-1                                                       // [6002 ] pop temp 0
D=M                                                          // [6003 ] pop temp 0
@5                                                           // [6004 ] pop temp 0
M=D                                                          // [6005 ] pop temp 0
@SP                                                          // [6006 ] pop pointer 1
AM=M-1                                                       // [6007 ] pop pointer 1
D=M                                                          // [6008 ] pop pointer 1
@4                                                           // [6009 ] pop pointer 1
M=D                                                          // [6010 ] pop pointer 1
@5                                                           // [6011 ] push temp 0
D=M                                                          // [6012 ] push temp 0
@SP                                                          // [6013 ] push temp 0
M=M+1                                                        // [6014 ] push temp 0
A=M-1                                                        // [6015 ] push temp 0
M=D                                                          // [6016 ] push temp 0
@SP                                                          // [6017 ] pop that 0
AM=M-1                                                       // [6018 ] pop that 0
D=M                                                          // [6019 ] pop that 0
@R13                                                         // [6020 ] pop that 0
M=D                                                          // [6021 ] pop that 0
@THAT                                                        // [6022 ] pop that 0
D=M                                                          // [6023 ] pop that 0
@0                                                           // [6024 ] pop that 0
D=D+A                                                        // [6025 ] pop that 0
@R14                                                         // [6026 ] pop that 0
M=D                                                          // [6027 ] pop that 0
@R13                                                         // [6028 ] pop that 0
D=M                                                          // [6029 ] pop that 0
@R14                                                         // [6030 ] pop that 0
A=M                                                          // [6031 ] pop that 0
M=D                                                          // [6032 ] pop that 0
@6                                                           // [6033 ] push constant 6
D=A                                                          // [6034 ] push constant 6
@SP                                                          // [6035 ] push constant 6
M=M+1                                                        // [6036 ] push constant 6
A=M-1                                                        // [6037 ] push constant 6
M=D                                                          // [6038 ] push constant 6
@Math.0                                                      // [6039 ] push static 0
D=M                                                          // [6040 ] push static 0
@SP                                                          // [6041 ] push static 0
M=M+1                                                        // [6042 ] push static 0
A=M-1                                                        // [6043 ] push static 0
M=D                                                          // [6044 ] push static 0
@SP                                                          // [6045 ] add
AM=M-1                                                       // [6046 ] add
D=M                                                          // [6047 ] add
A=A-1                                                        // [6048 ] add
M=D+M                                                        // [6049 ] add
@64                                                          // [6050 ] push constant 64
D=A                                                          // [6051 ] push constant 64
@SP                                                          // [6052 ] push constant 64
M=M+1                                                        // [6053 ] push constant 64
A=M-1                                                        // [6054 ] push constant 64
M=D                                                          // [6055 ] push constant 64
@SP                                                          // [6056 ] pop temp 0
AM=M-1                                                       // [6057 ] pop temp 0
D=M                                                          // [6058 ] pop temp 0
@5                                                           // [6059 ] pop temp 0
M=D                                                          // [6060 ] pop temp 0
@SP                                                          // [6061 ] pop pointer 1
AM=M-1                                                       // [6062 ] pop pointer 1
D=M                                                          // [6063 ] pop pointer 1
@4                                                           // [6064 ] pop pointer 1
M=D                                                          // [6065 ] pop pointer 1
@5                                                           // [6066 ] push temp 0
D=M                                                          // [6067 ] push temp 0
@SP                                                          // [6068 ] push temp 0
M=M+1                                                        // [6069 ] push temp 0
A=M-1                                                        // [6070 ] push temp 0
M=D                                                          // [6071 ] push temp 0
@SP                                                          // [6072 ] pop that 0
AM=M-1                                                       // [6073 ] pop that 0
D=M                                                          // [6074 ] pop that 0
@R13                                                         // [6075 ] pop that 0
M=D                                                          // [6076 ] pop that 0
@THAT                                                        // [6077 ] pop that 0
D=M                                                          // [6078 ] pop that 0
@0                                                           // [6079 ] pop that 0
D=D+A                                                        // [6080 ] pop that 0
@R14                                                         // [6081 ] pop that 0
M=D                                                          // [6082 ] pop that 0
@R13                                                         // [6083 ] pop that 0
D=M                                                          // [6084 ] pop that 0
@R14                                                         // [6085 ] pop that 0
A=M                                                          // [6086 ] pop that 0
M=D                                                          // [6087 ] pop that 0
@7                                                           // [6088 ] push constant 7
D=A                                                          // [6089 ] push constant 7
@SP                                                          // [6090 ] push constant 7
M=M+1                                                        // [6091 ] push constant 7
A=M-1                                                        // [6092 ] push constant 7
M=D                                                          // [6093 ] push constant 7
@Math.0                                                      // [6094 ] push static 0
D=M                                                          // [6095 ] push static 0
@SP                                                          // [6096 ] push static 0
M=M+1                                                        // [6097 ] push static 0
A=M-1                                                        // [6098 ] push static 0
M=D                                                          // [6099 ] push static 0
@SP                                                          // [6100 ] add
AM=M-1                                                       // [6101 ] add
D=M                                                          // [6102 ] add
A=A-1                                                        // [6103 ] add
M=D+M                                                        // [6104 ] add
@128                                                         // [6105 ] push constant 128
D=A                                                          // [6106 ] push constant 128
@SP                                                          // [6107 ] push constant 128
M=M+1                                                        // [6108 ] push constant 128
A=M-1                                                        // [6109 ] push constant 128
M=D                                                          // [6110 ] push constant 128
@SP                                                          // [6111 ] pop temp 0
AM=M-1                                                       // [6112 ] pop temp 0
D=M                                                          // [6113 ] pop temp 0
@5                                                           // [6114 ] pop temp 0
M=D                                                          // [6115 ] pop temp 0
@SP                                                          // [6116 ] pop pointer 1
AM=M-1                                                       // [6117 ] pop pointer 1
D=M                                                          // [6118 ] pop pointer 1
@4                                                           // [6119 ] pop pointer 1
M=D                                                          // [6120 ] pop pointer 1
@5                                                           // [6121 ] push temp 0
D=M                                                          // [6122 ] push temp 0
@SP                                                          // [6123 ] push temp 0
M=M+1                                                        // [6124 ] push temp 0
A=M-1                                                        // [6125 ] push temp 0
M=D                                                          // [6126 ] push temp 0
@SP                                                          // [6127 ] pop that 0
AM=M-1                                                       // [6128 ] pop that 0
D=M                                                          // [6129 ] pop that 0
@R13                                                         // [6130 ] pop that 0
M=D                                                          // [6131 ] pop that 0
@THAT                                                        // [6132 ] pop that 0
D=M                                                          // [6133 ] pop that 0
@0                                                           // [6134 ] pop that 0
D=D+A                                                        // [6135 ] pop that 0
@R14                                                         // [6136 ] pop that 0
M=D                                                          // [6137 ] pop that 0
@R13                                                         // [6138 ] pop that 0
D=M                                                          // [6139 ] pop that 0
@R14                                                         // [6140 ] pop that 0
A=M                                                          // [6141 ] pop that 0
M=D                                                          // [6142 ] pop that 0
@8                                                           // [6143 ] push constant 8
D=A                                                          // [6144 ] push constant 8
@SP                                                          // [6145 ] push constant 8
M=M+1                                                        // [6146 ] push constant 8
A=M-1                                                        // [6147 ] push constant 8
M=D                                                          // [6148 ] push constant 8
@Math.0                                                      // [6149 ] push static 0
D=M                                                          // [6150 ] push static 0
@SP                                                          // [6151 ] push static 0
M=M+1                                                        // [6152 ] push static 0
A=M-1                                                        // [6153 ] push static 0
M=D                                                          // [6154 ] push static 0
@SP                                                          // [6155 ] add
AM=M-1                                                       // [6156 ] add
D=M                                                          // [6157 ] add
A=A-1                                                        // [6158 ] add
M=D+M                                                        // [6159 ] add
@256                                                         // [6160 ] push constant 256
D=A                                                          // [6161 ] push constant 256
@SP                                                          // [6162 ] push constant 256
M=M+1                                                        // [6163 ] push constant 256
A=M-1                                                        // [6164 ] push constant 256
M=D                                                          // [6165 ] push constant 256
@SP                                                          // [6166 ] pop temp 0
AM=M-1                                                       // [6167 ] pop temp 0
D=M                                                          // [6168 ] pop temp 0
@5                                                           // [6169 ] pop temp 0
M=D                                                          // [6170 ] pop temp 0
@SP                                                          // [6171 ] pop pointer 1
AM=M-1                                                       // [6172 ] pop pointer 1
D=M                                                          // [6173 ] pop pointer 1
@4                                                           // [6174 ] pop pointer 1
M=D                                                          // [6175 ] pop pointer 1
@5                                                           // [6176 ] push temp 0
D=M                                                          // [6177 ] push temp 0
@SP                                                          // [6178 ] push temp 0
M=M+1                                                        // [6179 ] push temp 0
A=M-1                                                        // [6180 ] push temp 0
M=D                                                          // [6181 ] push temp 0
@SP                                                          // [6182 ] pop that 0
AM=M-1                                                       // [6183 ] pop that 0
D=M                                                          // [6184 ] pop that 0
@R13                                                         // [6185 ] pop that 0
M=D                                                          // [6186 ] pop that 0
@THAT                                                        // [6187 ] pop that 0
D=M                                                          // [6188 ] pop that 0
@0                                                           // [6189 ] pop that 0
D=D+A                                                        // [6190 ] pop that 0
@R14                                                         // [6191 ] pop that 0
M=D                                                          // [6192 ] pop that 0
@R13                                                         // [6193 ] pop that 0
D=M                                                          // [6194 ] pop that 0
@R14                                                         // [6195 ] pop that 0
A=M                                                          // [6196 ] pop that 0
M=D                                                          // [6197 ] pop that 0
@9                                                           // [6198 ] push constant 9
D=A                                                          // [6199 ] push constant 9
@SP                                                          // [6200 ] push constant 9
M=M+1                                                        // [6201 ] push constant 9
A=M-1                                                        // [6202 ] push constant 9
M=D                                                          // [6203 ] push constant 9
@Math.0                                                      // [6204 ] push static 0
D=M                                                          // [6205 ] push static 0
@SP                                                          // [6206 ] push static 0
M=M+1                                                        // [6207 ] push static 0
A=M-1                                                        // [6208 ] push static 0
M=D                                                          // [6209 ] push static 0
@SP                                                          // [6210 ] add
AM=M-1                                                       // [6211 ] add
D=M                                                          // [6212 ] add
A=A-1                                                        // [6213 ] add
M=D+M                                                        // [6214 ] add
@512                                                         // [6215 ] push constant 512
D=A                                                          // [6216 ] push constant 512
@SP                                                          // [6217 ] push constant 512
M=M+1                                                        // [6218 ] push constant 512
A=M-1                                                        // [6219 ] push constant 512
M=D                                                          // [6220 ] push constant 512
@SP                                                          // [6221 ] pop temp 0
AM=M-1                                                       // [6222 ] pop temp 0
D=M                                                          // [6223 ] pop temp 0
@5                                                           // [6224 ] pop temp 0
M=D                                                          // [6225 ] pop temp 0
@SP                                                          // [6226 ] pop pointer 1
AM=M-1                                                       // [6227 ] pop pointer 1
D=M                                                          // [6228 ] pop pointer 1
@4                                                           // [6229 ] pop pointer 1
M=D                                                          // [6230 ] pop pointer 1
@5                                                           // [6231 ] push temp 0
D=M                                                          // [6232 ] push temp 0
@SP                                                          // [6233 ] push temp 0
M=M+1                                                        // [6234 ] push temp 0
A=M-1                                                        // [6235 ] push temp 0
M=D                                                          // [6236 ] push temp 0
@SP                                                          // [6237 ] pop that 0
AM=M-1                                                       // [6238 ] pop that 0
D=M                                                          // [6239 ] pop that 0
@R13                                                         // [6240 ] pop that 0
M=D                                                          // [6241 ] pop that 0
@THAT                                                        // [6242 ] pop that 0
D=M                                                          // [6243 ] pop that 0
@0                                                           // [6244 ] pop that 0
D=D+A                                                        // [6245 ] pop that 0
@R14                                                         // [6246 ] pop that 0
M=D                                                          // [6247 ] pop that 0
@R13                                                         // [6248 ] pop that 0
D=M                                                          // [6249 ] pop that 0
@R14                                                         // [6250 ] pop that 0
A=M                                                          // [6251 ] pop that 0
M=D                                                          // [6252 ] pop that 0
@10                                                          // [6253 ] push constant 10
D=A                                                          // [6254 ] push constant 10
@SP                                                          // [6255 ] push constant 10
M=M+1                                                        // [6256 ] push constant 10
A=M-1                                                        // [6257 ] push constant 10
M=D                                                          // [6258 ] push constant 10
@Math.0                                                      // [6259 ] push static 0
D=M                                                          // [6260 ] push static 0
@SP                                                          // [6261 ] push static 0
M=M+1                                                        // [6262 ] push static 0
A=M-1                                                        // [6263 ] push static 0
M=D                                                          // [6264 ] push static 0
@SP                                                          // [6265 ] add
AM=M-1                                                       // [6266 ] add
D=M                                                          // [6267 ] add
A=A-1                                                        // [6268 ] add
M=D+M                                                        // [6269 ] add
@1024                                                        // [6270 ] push constant 1024
D=A                                                          // [6271 ] push constant 1024
@SP                                                          // [6272 ] push constant 1024
M=M+1                                                        // [6273 ] push constant 1024
A=M-1                                                        // [6274 ] push constant 1024
M=D                                                          // [6275 ] push constant 1024
@SP                                                          // [6276 ] pop temp 0
AM=M-1                                                       // [6277 ] pop temp 0
D=M                                                          // [6278 ] pop temp 0
@5                                                           // [6279 ] pop temp 0
M=D                                                          // [6280 ] pop temp 0
@SP                                                          // [6281 ] pop pointer 1
AM=M-1                                                       // [6282 ] pop pointer 1
D=M                                                          // [6283 ] pop pointer 1
@4                                                           // [6284 ] pop pointer 1
M=D                                                          // [6285 ] pop pointer 1
@5                                                           // [6286 ] push temp 0
D=M                                                          // [6287 ] push temp 0
@SP                                                          // [6288 ] push temp 0
M=M+1                                                        // [6289 ] push temp 0
A=M-1                                                        // [6290 ] push temp 0
M=D                                                          // [6291 ] push temp 0
@SP                                                          // [6292 ] pop that 0
AM=M-1                                                       // [6293 ] pop that 0
D=M                                                          // [6294 ] pop that 0
@R13                                                         // [6295 ] pop that 0
M=D                                                          // [6296 ] pop that 0
@THAT                                                        // [6297 ] pop that 0
D=M                                                          // [6298 ] pop that 0
@0                                                           // [6299 ] pop that 0
D=D+A                                                        // [6300 ] pop that 0
@R14                                                         // [6301 ] pop that 0
M=D                                                          // [6302 ] pop that 0
@R13                                                         // [6303 ] pop that 0
D=M                                                          // [6304 ] pop that 0
@R14                                                         // [6305 ] pop that 0
A=M                                                          // [6306 ] pop that 0
M=D                                                          // [6307 ] pop that 0
@11                                                          // [6308 ] push constant 11
D=A                                                          // [6309 ] push constant 11
@SP                                                          // [6310 ] push constant 11
M=M+1                                                        // [6311 ] push constant 11
A=M-1                                                        // [6312 ] push constant 11
M=D                                                          // [6313 ] push constant 11
@Math.0                                                      // [6314 ] push static 0
D=M                                                          // [6315 ] push static 0
@SP                                                          // [6316 ] push static 0
M=M+1                                                        // [6317 ] push static 0
A=M-1                                                        // [6318 ] push static 0
M=D                                                          // [6319 ] push static 0
@SP                                                          // [6320 ] add
AM=M-1                                                       // [6321 ] add
D=M                                                          // [6322 ] add
A=A-1                                                        // [6323 ] add
M=D+M                                                        // [6324 ] add
@2048                                                        // [6325 ] push constant 2048
D=A                                                          // [6326 ] push constant 2048
@SP                                                          // [6327 ] push constant 2048
M=M+1                                                        // [6328 ] push constant 2048
A=M-1                                                        // [6329 ] push constant 2048
M=D                                                          // [6330 ] push constant 2048
@SP                                                          // [6331 ] pop temp 0
AM=M-1                                                       // [6332 ] pop temp 0
D=M                                                          // [6333 ] pop temp 0
@5                                                           // [6334 ] pop temp 0
M=D                                                          // [6335 ] pop temp 0
@SP                                                          // [6336 ] pop pointer 1
AM=M-1                                                       // [6337 ] pop pointer 1
D=M                                                          // [6338 ] pop pointer 1
@4                                                           // [6339 ] pop pointer 1
M=D                                                          // [6340 ] pop pointer 1
@5                                                           // [6341 ] push temp 0
D=M                                                          // [6342 ] push temp 0
@SP                                                          // [6343 ] push temp 0
M=M+1                                                        // [6344 ] push temp 0
A=M-1                                                        // [6345 ] push temp 0
M=D                                                          // [6346 ] push temp 0
@SP                                                          // [6347 ] pop that 0
AM=M-1                                                       // [6348 ] pop that 0
D=M                                                          // [6349 ] pop that 0
@R13                                                         // [6350 ] pop that 0
M=D                                                          // [6351 ] pop that 0
@THAT                                                        // [6352 ] pop that 0
D=M                                                          // [6353 ] pop that 0
@0                                                           // [6354 ] pop that 0
D=D+A                                                        // [6355 ] pop that 0
@R14                                                         // [6356 ] pop that 0
M=D                                                          // [6357 ] pop that 0
@R13                                                         // [6358 ] pop that 0
D=M                                                          // [6359 ] pop that 0
@R14                                                         // [6360 ] pop that 0
A=M                                                          // [6361 ] pop that 0
M=D                                                          // [6362 ] pop that 0
@12                                                          // [6363 ] push constant 12
D=A                                                          // [6364 ] push constant 12
@SP                                                          // [6365 ] push constant 12
M=M+1                                                        // [6366 ] push constant 12
A=M-1                                                        // [6367 ] push constant 12
M=D                                                          // [6368 ] push constant 12
@Math.0                                                      // [6369 ] push static 0
D=M                                                          // [6370 ] push static 0
@SP                                                          // [6371 ] push static 0
M=M+1                                                        // [6372 ] push static 0
A=M-1                                                        // [6373 ] push static 0
M=D                                                          // [6374 ] push static 0
@SP                                                          // [6375 ] add
AM=M-1                                                       // [6376 ] add
D=M                                                          // [6377 ] add
A=A-1                                                        // [6378 ] add
M=D+M                                                        // [6379 ] add
@4096                                                        // [6380 ] push constant 4096
D=A                                                          // [6381 ] push constant 4096
@SP                                                          // [6382 ] push constant 4096
M=M+1                                                        // [6383 ] push constant 4096
A=M-1                                                        // [6384 ] push constant 4096
M=D                                                          // [6385 ] push constant 4096
@SP                                                          // [6386 ] pop temp 0
AM=M-1                                                       // [6387 ] pop temp 0
D=M                                                          // [6388 ] pop temp 0
@5                                                           // [6389 ] pop temp 0
M=D                                                          // [6390 ] pop temp 0
@SP                                                          // [6391 ] pop pointer 1
AM=M-1                                                       // [6392 ] pop pointer 1
D=M                                                          // [6393 ] pop pointer 1
@4                                                           // [6394 ] pop pointer 1
M=D                                                          // [6395 ] pop pointer 1
@5                                                           // [6396 ] push temp 0
D=M                                                          // [6397 ] push temp 0
@SP                                                          // [6398 ] push temp 0
M=M+1                                                        // [6399 ] push temp 0
A=M-1                                                        // [6400 ] push temp 0
M=D                                                          // [6401 ] push temp 0
@SP                                                          // [6402 ] pop that 0
AM=M-1                                                       // [6403 ] pop that 0
D=M                                                          // [6404 ] pop that 0
@R13                                                         // [6405 ] pop that 0
M=D                                                          // [6406 ] pop that 0
@THAT                                                        // [6407 ] pop that 0
D=M                                                          // [6408 ] pop that 0
@0                                                           // [6409 ] pop that 0
D=D+A                                                        // [6410 ] pop that 0
@R14                                                         // [6411 ] pop that 0
M=D                                                          // [6412 ] pop that 0
@R13                                                         // [6413 ] pop that 0
D=M                                                          // [6414 ] pop that 0
@R14                                                         // [6415 ] pop that 0
A=M                                                          // [6416 ] pop that 0
M=D                                                          // [6417 ] pop that 0
@13                                                          // [6418 ] push constant 13
D=A                                                          // [6419 ] push constant 13
@SP                                                          // [6420 ] push constant 13
M=M+1                                                        // [6421 ] push constant 13
A=M-1                                                        // [6422 ] push constant 13
M=D                                                          // [6423 ] push constant 13
@Math.0                                                      // [6424 ] push static 0
D=M                                                          // [6425 ] push static 0
@SP                                                          // [6426 ] push static 0
M=M+1                                                        // [6427 ] push static 0
A=M-1                                                        // [6428 ] push static 0
M=D                                                          // [6429 ] push static 0
@SP                                                          // [6430 ] add
AM=M-1                                                       // [6431 ] add
D=M                                                          // [6432 ] add
A=A-1                                                        // [6433 ] add
M=D+M                                                        // [6434 ] add
@8192                                                        // [6435 ] push constant 8192
D=A                                                          // [6436 ] push constant 8192
@SP                                                          // [6437 ] push constant 8192
M=M+1                                                        // [6438 ] push constant 8192
A=M-1                                                        // [6439 ] push constant 8192
M=D                                                          // [6440 ] push constant 8192
@SP                                                          // [6441 ] pop temp 0
AM=M-1                                                       // [6442 ] pop temp 0
D=M                                                          // [6443 ] pop temp 0
@5                                                           // [6444 ] pop temp 0
M=D                                                          // [6445 ] pop temp 0
@SP                                                          // [6446 ] pop pointer 1
AM=M-1                                                       // [6447 ] pop pointer 1
D=M                                                          // [6448 ] pop pointer 1
@4                                                           // [6449 ] pop pointer 1
M=D                                                          // [6450 ] pop pointer 1
@5                                                           // [6451 ] push temp 0
D=M                                                          // [6452 ] push temp 0
@SP                                                          // [6453 ] push temp 0
M=M+1                                                        // [6454 ] push temp 0
A=M-1                                                        // [6455 ] push temp 0
M=D                                                          // [6456 ] push temp 0
@SP                                                          // [6457 ] pop that 0
AM=M-1                                                       // [6458 ] pop that 0
D=M                                                          // [6459 ] pop that 0
@R13                                                         // [6460 ] pop that 0
M=D                                                          // [6461 ] pop that 0
@THAT                                                        // [6462 ] pop that 0
D=M                                                          // [6463 ] pop that 0
@0                                                           // [6464 ] pop that 0
D=D+A                                                        // [6465 ] pop that 0
@R14                                                         // [6466 ] pop that 0
M=D                                                          // [6467 ] pop that 0
@R13                                                         // [6468 ] pop that 0
D=M                                                          // [6469 ] pop that 0
@R14                                                         // [6470 ] pop that 0
A=M                                                          // [6471 ] pop that 0
M=D                                                          // [6472 ] pop that 0
@14                                                          // [6473 ] push constant 14
D=A                                                          // [6474 ] push constant 14
@SP                                                          // [6475 ] push constant 14
M=M+1                                                        // [6476 ] push constant 14
A=M-1                                                        // [6477 ] push constant 14
M=D                                                          // [6478 ] push constant 14
@Math.0                                                      // [6479 ] push static 0
D=M                                                          // [6480 ] push static 0
@SP                                                          // [6481 ] push static 0
M=M+1                                                        // [6482 ] push static 0
A=M-1                                                        // [6483 ] push static 0
M=D                                                          // [6484 ] push static 0
@SP                                                          // [6485 ] add
AM=M-1                                                       // [6486 ] add
D=M                                                          // [6487 ] add
A=A-1                                                        // [6488 ] add
M=D+M                                                        // [6489 ] add
@16384                                                       // [6490 ] push constant 16384
D=A                                                          // [6491 ] push constant 16384
@SP                                                          // [6492 ] push constant 16384
M=M+1                                                        // [6493 ] push constant 16384
A=M-1                                                        // [6494 ] push constant 16384
M=D                                                          // [6495 ] push constant 16384
@SP                                                          // [6496 ] pop temp 0
AM=M-1                                                       // [6497 ] pop temp 0
D=M                                                          // [6498 ] pop temp 0
@5                                                           // [6499 ] pop temp 0
M=D                                                          // [6500 ] pop temp 0
@SP                                                          // [6501 ] pop pointer 1
AM=M-1                                                       // [6502 ] pop pointer 1
D=M                                                          // [6503 ] pop pointer 1
@4                                                           // [6504 ] pop pointer 1
M=D                                                          // [6505 ] pop pointer 1
@5                                                           // [6506 ] push temp 0
D=M                                                          // [6507 ] push temp 0
@SP                                                          // [6508 ] push temp 0
M=M+1                                                        // [6509 ] push temp 0
A=M-1                                                        // [6510 ] push temp 0
M=D                                                          // [6511 ] push temp 0
@SP                                                          // [6512 ] pop that 0
AM=M-1                                                       // [6513 ] pop that 0
D=M                                                          // [6514 ] pop that 0
@R13                                                         // [6515 ] pop that 0
M=D                                                          // [6516 ] pop that 0
@THAT                                                        // [6517 ] pop that 0
D=M                                                          // [6518 ] pop that 0
@0                                                           // [6519 ] pop that 0
D=D+A                                                        // [6520 ] pop that 0
@R14                                                         // [6521 ] pop that 0
M=D                                                          // [6522 ] pop that 0
@R13                                                         // [6523 ] pop that 0
D=M                                                          // [6524 ] pop that 0
@R14                                                         // [6525 ] pop that 0
A=M                                                          // [6526 ] pop that 0
M=D                                                          // [6527 ] pop that 0
@15                                                          // [6528 ] push constant 15
D=A                                                          // [6529 ] push constant 15
@SP                                                          // [6530 ] push constant 15
M=M+1                                                        // [6531 ] push constant 15
A=M-1                                                        // [6532 ] push constant 15
M=D                                                          // [6533 ] push constant 15
@Math.0                                                      // [6534 ] push static 0
D=M                                                          // [6535 ] push static 0
@SP                                                          // [6536 ] push static 0
M=M+1                                                        // [6537 ] push static 0
A=M-1                                                        // [6538 ] push static 0
M=D                                                          // [6539 ] push static 0
@SP                                                          // [6540 ] add
AM=M-1                                                       // [6541 ] add
D=M                                                          // [6542 ] add
A=A-1                                                        // [6543 ] add
M=D+M                                                        // [6544 ] add
@32767                                                       // [6545 ] push constant 32767
D=A                                                          // [6546 ] push constant 32767
@SP                                                          // [6547 ] push constant 32767
M=M+1                                                        // [6548 ] push constant 32767
A=M-1                                                        // [6549 ] push constant 32767
M=D                                                          // [6550 ] push constant 32767
@SP                                                          // [6551 ] neg
A=M-1                                                        // [6552 ] neg
D=M                                                          // [6553 ] neg
M=-D                                                         // [6554 ] neg
@SP                                                          // [6555 ] push constant 1
M=M+1                                                        // [6556 ] push constant 1
A=M-1                                                        // [6557 ] push constant 1
M=1                                                          // [6558 ] push constant 1
@SP                                                          // [6559 ] sub
AM=M-1                                                       // [6560 ] sub
D=M                                                          // [6561 ] sub
A=A-1                                                        // [6562 ] sub
M=M-D                                                        // [6563 ] sub
@SP                                                          // [6564 ] pop temp 0
AM=M-1                                                       // [6565 ] pop temp 0
D=M                                                          // [6566 ] pop temp 0
@5                                                           // [6567 ] pop temp 0
M=D                                                          // [6568 ] pop temp 0
@SP                                                          // [6569 ] pop pointer 1
AM=M-1                                                       // [6570 ] pop pointer 1
D=M                                                          // [6571 ] pop pointer 1
@4                                                           // [6572 ] pop pointer 1
M=D                                                          // [6573 ] pop pointer 1
@5                                                           // [6574 ] push temp 0
D=M                                                          // [6575 ] push temp 0
@SP                                                          // [6576 ] push temp 0
M=M+1                                                        // [6577 ] push temp 0
A=M-1                                                        // [6578 ] push temp 0
M=D                                                          // [6579 ] push temp 0
@SP                                                          // [6580 ] pop that 0
AM=M-1                                                       // [6581 ] pop that 0
D=M                                                          // [6582 ] pop that 0
@R13                                                         // [6583 ] pop that 0
M=D                                                          // [6584 ] pop that 0
@THAT                                                        // [6585 ] pop that 0
D=M                                                          // [6586 ] pop that 0
@0                                                           // [6587 ] pop that 0
D=D+A                                                        // [6588 ] pop that 0
@R14                                                         // [6589 ] pop that 0
M=D                                                          // [6590 ] pop that 0
@R13                                                         // [6591 ] pop that 0
D=M                                                          // [6592 ] pop that 0
@R14                                                         // [6593 ] pop that 0
A=M                                                          // [6594 ] pop that 0
M=D                                                          // [6595 ] pop that 0
@SP                                                          // [6596 ] push constant 0
M=M+1                                                        // [6597 ] push constant 0
A=M-1                                                        // [6598 ] push constant 0
M=0                                                          // [6599 ] push constant 0
@RETURN                                                      // [6600 ] return
0;JEQ                                                        // [6601 ] return
(Math.abs)                                                   // [     ] function Math.abs 0
@ARG                                                         // [6602 ] push argument 0
D=M                                                          // [6603 ] push argument 0
@0                                                           // [6604 ] push argument 0
A=D+A                                                        // [6605 ] push argument 0
D=M                                                          // [6606 ] push argument 0
@SP                                                          // [6607 ] push argument 0
M=M+1                                                        // [6608 ] push argument 0
A=M-1                                                        // [6609 ] push argument 0
M=D                                                          // [6610 ] push argument 0
@SP                                                          // [6611 ] push constant 0
M=M+1                                                        // [6612 ] push constant 0
A=M-1                                                        // [6613 ] push constant 0
M=0                                                          // [6614 ] push constant 0
@CONTINUE_LT_11                                              // [6615 ] lt
D=A                                                          // [6616 ] lt
@R13                                                         // [6617 ] lt
M=D                                                          // [6618 ] lt
@SP                                                          // [6619 ] lt
AM=M-1                                                       // [6620 ] lt
D=M                                                          // [6621 ] lt
A=A-1                                                        // [6622 ] lt
D=D-M                                                        // [6623 ] lt
@INTERNAL_LT                                                 // [6624 ] lt
0;JEQ                                                        // [6625 ] lt
(CONTINUE_LT_11)                                             // [     ] lt
@SP                                                          // [6626 ] if-goto IF_TRUE0
AM=M-1                                                       // [6627 ] if-goto IF_TRUE0
D=M                                                          // [6628 ] if-goto IF_TRUE0
@Math.abs$IF_TRUE0                                           // [6629 ] if-goto IF_TRUE0
D;JNE                                                        // [6630 ] if-goto IF_TRUE0
@Math.abs$IF_FALSE0                                          // [6631 ] goto IF_FALSE0
0;JEQ                                                        // [6632 ] goto IF_FALSE0
(Math.abs$IF_TRUE0)                                          // [     ] label IF_TRUE0
@ARG                                                         // [6633 ] push argument 0
D=M                                                          // [6634 ] push argument 0
@0                                                           // [6635 ] push argument 0
A=D+A                                                        // [6636 ] push argument 0
D=M                                                          // [6637 ] push argument 0
@SP                                                          // [6638 ] push argument 0
M=M+1                                                        // [6639 ] push argument 0
A=M-1                                                        // [6640 ] push argument 0
M=D                                                          // [6641 ] push argument 0
@SP                                                          // [6642 ] neg
A=M-1                                                        // [6643 ] neg
D=M                                                          // [6644 ] neg
M=-D                                                         // [6645 ] neg
@RETURN                                                      // [6646 ] return
0;JEQ                                                        // [6647 ] return
(Math.abs$IF_FALSE0)                                         // [     ] label IF_FALSE0
@ARG                                                         // [6648 ] push argument 0
D=M                                                          // [6649 ] push argument 0
@0                                                           // [6650 ] push argument 0
A=D+A                                                        // [6651 ] push argument 0
D=M                                                          // [6652 ] push argument 0
@SP                                                          // [6653 ] push argument 0
M=M+1                                                        // [6654 ] push argument 0
A=M-1                                                        // [6655 ] push argument 0
M=D                                                          // [6656 ] push argument 0
@RETURN                                                      // [6657 ] return
0;JEQ                                                        // [6658 ] return
(Math.multiply)                                              // [     ] function Math.multiply 3
@SP                                                          // [6659 ] function Math.multiply 3
A=M                                                          // [6660 ] function Math.multiply 3
M=0                                                          // [6661 ] function Math.multiply 3
@SP                                                          // [6662 ] function Math.multiply 3
M=M+1                                                        // [6663 ] function Math.multiply 3
@SP                                                          // [6664 ] function Math.multiply 3
A=M                                                          // [6665 ] function Math.multiply 3
M=0                                                          // [6666 ] function Math.multiply 3
@SP                                                          // [6667 ] function Math.multiply 3
M=M+1                                                        // [6668 ] function Math.multiply 3
@SP                                                          // [6669 ] function Math.multiply 3
A=M                                                          // [6670 ] function Math.multiply 3
M=0                                                          // [6671 ] function Math.multiply 3
@SP                                                          // [6672 ] function Math.multiply 3
M=M+1                                                        // [6673 ] function Math.multiply 3
@SP                                                          // [6674 ] push constant 0
M=M+1                                                        // [6675 ] push constant 0
A=M-1                                                        // [6676 ] push constant 0
M=0                                                          // [6677 ] push constant 0
@SP                                                          // [6678 ] pop local 0
AM=M-1                                                       // [6679 ] pop local 0
D=M                                                          // [6680 ] pop local 0
@R13                                                         // [6681 ] pop local 0
M=D                                                          // [6682 ] pop local 0
@LCL                                                         // [6683 ] pop local 0
D=M                                                          // [6684 ] pop local 0
@0                                                           // [6685 ] pop local 0
D=D+A                                                        // [6686 ] pop local 0
@R14                                                         // [6687 ] pop local 0
M=D                                                          // [6688 ] pop local 0
@R13                                                         // [6689 ] pop local 0
D=M                                                          // [6690 ] pop local 0
@R14                                                         // [6691 ] pop local 0
A=M                                                          // [6692 ] pop local 0
M=D                                                          // [6693 ] pop local 0
@ARG                                                         // [6694 ] push argument 0
D=M                                                          // [6695 ] push argument 0
@0                                                           // [6696 ] push argument 0
A=D+A                                                        // [6697 ] push argument 0
D=M                                                          // [6698 ] push argument 0
@SP                                                          // [6699 ] push argument 0
M=M+1                                                        // [6700 ] push argument 0
A=M-1                                                        // [6701 ] push argument 0
M=D                                                          // [6702 ] push argument 0
@SP                                                          // [6703 ] pop local 1
AM=M-1                                                       // [6704 ] pop local 1
D=M                                                          // [6705 ] pop local 1
@R13                                                         // [6706 ] pop local 1
M=D                                                          // [6707 ] pop local 1
@LCL                                                         // [6708 ] pop local 1
D=M                                                          // [6709 ] pop local 1
@1                                                           // [6710 ] pop local 1
D=D+A                                                        // [6711 ] pop local 1
@R14                                                         // [6712 ] pop local 1
M=D                                                          // [6713 ] pop local 1
@R13                                                         // [6714 ] pop local 1
D=M                                                          // [6715 ] pop local 1
@R14                                                         // [6716 ] pop local 1
A=M                                                          // [6717 ] pop local 1
M=D                                                          // [6718 ] pop local 1
@SP                                                          // [6719 ] push constant 0
M=M+1                                                        // [6720 ] push constant 0
A=M-1                                                        // [6721 ] push constant 0
M=0                                                          // [6722 ] push constant 0
@SP                                                          // [6723 ] pop local 2
AM=M-1                                                       // [6724 ] pop local 2
D=M                                                          // [6725 ] pop local 2
@R13                                                         // [6726 ] pop local 2
M=D                                                          // [6727 ] pop local 2
@LCL                                                         // [6728 ] pop local 2
D=M                                                          // [6729 ] pop local 2
@2                                                           // [6730 ] pop local 2
D=D+A                                                        // [6731 ] pop local 2
@R14                                                         // [6732 ] pop local 2
M=D                                                          // [6733 ] pop local 2
@R13                                                         // [6734 ] pop local 2
D=M                                                          // [6735 ] pop local 2
@R14                                                         // [6736 ] pop local 2
A=M                                                          // [6737 ] pop local 2
M=D                                                          // [6738 ] pop local 2
(Math.multiply$WHILE_EXP0)                                   // [     ] label WHILE_EXP0
@LCL                                                         // [6739 ] push local 2
D=M                                                          // [6740 ] push local 2
@2                                                           // [6741 ] push local 2
A=D+A                                                        // [6742 ] push local 2
D=M                                                          // [6743 ] push local 2
@SP                                                          // [6744 ] push local 2
M=M+1                                                        // [6745 ] push local 2
A=M-1                                                        // [6746 ] push local 2
M=D                                                          // [6747 ] push local 2
@16                                                          // [6748 ] push constant 16
D=A                                                          // [6749 ] push constant 16
@SP                                                          // [6750 ] push constant 16
M=M+1                                                        // [6751 ] push constant 16
A=M-1                                                        // [6752 ] push constant 16
M=D                                                          // [6753 ] push constant 16
@CONTINUE_LT_12                                              // [6754 ] lt
D=A                                                          // [6755 ] lt
@R13                                                         // [6756 ] lt
M=D                                                          // [6757 ] lt
@SP                                                          // [6758 ] lt
AM=M-1                                                       // [6759 ] lt
D=M                                                          // [6760 ] lt
A=A-1                                                        // [6761 ] lt
D=D-M                                                        // [6762 ] lt
@INTERNAL_LT                                                 // [6763 ] lt
0;JEQ                                                        // [6764 ] lt
(CONTINUE_LT_12)                                             // [     ] lt
@SP                                                          // [6765 ] not
A=M-1                                                        // [6766 ] not
D=M                                                          // [6767 ] not
M=!D                                                         // [6768 ] not
@SP                                                          // [6769 ] if-goto WHILE_END0
AM=M-1                                                       // [6770 ] if-goto WHILE_END0
D=M                                                          // [6771 ] if-goto WHILE_END0
@Math.multiply$WHILE_END0                                    // [6772 ] if-goto WHILE_END0
D;JNE                                                        // [6773 ] if-goto WHILE_END0
@ARG                                                         // [6774 ] push argument 1
D=M                                                          // [6775 ] push argument 1
@1                                                           // [6776 ] push argument 1
A=D+A                                                        // [6777 ] push argument 1
D=M                                                          // [6778 ] push argument 1
@SP                                                          // [6779 ] push argument 1
M=M+1                                                        // [6780 ] push argument 1
A=M-1                                                        // [6781 ] push argument 1
M=D                                                          // [6782 ] push argument 1
@LCL                                                         // [6783 ] push local 2
D=M                                                          // [6784 ] push local 2
@2                                                           // [6785 ] push local 2
A=D+A                                                        // [6786 ] push local 2
D=M                                                          // [6787 ] push local 2
@SP                                                          // [6788 ] push local 2
M=M+1                                                        // [6789 ] push local 2
A=M-1                                                        // [6790 ] push local 2
M=D                                                          // [6791 ] push local 2
@2                                                           // [6792 ] call Math.bit 2
D=A                                                          // [6793 ] call Math.bit 2
@R13                                                         // [6794 ] call Math.bit 2
M=D                                                          // [6795 ] call Math.bit 2
@Math.bit                                                    // [6796 ] call Math.bit 2
D=A                                                          // [6797 ] call Math.bit 2
@R14                                                         // [6798 ] call Math.bit 2
M=D                                                          // [6799 ] call Math.bit 2
@return-74                                                   // [6800 ] call Math.bit 2
D=A                                                          // [6801 ] call Math.bit 2
@CALL                                                        // [6802 ] call Math.bit 2
0;JEQ                                                        // [6803 ] call Math.bit 2
(return-74)                                                  // [     ] call Math.bit 2
@SP                                                          // [6804 ] if-goto IF_TRUE0
AM=M-1                                                       // [6805 ] if-goto IF_TRUE0
D=M                                                          // [6806 ] if-goto IF_TRUE0
@Math.multiply$IF_TRUE0                                      // [6807 ] if-goto IF_TRUE0
D;JNE                                                        // [6808 ] if-goto IF_TRUE0
@Math.multiply$IF_FALSE0                                     // [6809 ] goto IF_FALSE0
0;JEQ                                                        // [6810 ] goto IF_FALSE0
(Math.multiply$IF_TRUE0)                                     // [     ] label IF_TRUE0
@LCL                                                         // [6811 ] push local 0
D=M                                                          // [6812 ] push local 0
@0                                                           // [6813 ] push local 0
A=D+A                                                        // [6814 ] push local 0
D=M                                                          // [6815 ] push local 0
@SP                                                          // [6816 ] push local 0
M=M+1                                                        // [6817 ] push local 0
A=M-1                                                        // [6818 ] push local 0
M=D                                                          // [6819 ] push local 0
@LCL                                                         // [6820 ] push local 1
D=M                                                          // [6821 ] push local 1
@1                                                           // [6822 ] push local 1
A=D+A                                                        // [6823 ] push local 1
D=M                                                          // [6824 ] push local 1
@SP                                                          // [6825 ] push local 1
M=M+1                                                        // [6826 ] push local 1
A=M-1                                                        // [6827 ] push local 1
M=D                                                          // [6828 ] push local 1
@SP                                                          // [6829 ] add
AM=M-1                                                       // [6830 ] add
D=M                                                          // [6831 ] add
A=A-1                                                        // [6832 ] add
M=D+M                                                        // [6833 ] add
@SP                                                          // [6834 ] pop local 0
AM=M-1                                                       // [6835 ] pop local 0
D=M                                                          // [6836 ] pop local 0
@R13                                                         // [6837 ] pop local 0
M=D                                                          // [6838 ] pop local 0
@LCL                                                         // [6839 ] pop local 0
D=M                                                          // [6840 ] pop local 0
@0                                                           // [6841 ] pop local 0
D=D+A                                                        // [6842 ] pop local 0
@R14                                                         // [6843 ] pop local 0
M=D                                                          // [6844 ] pop local 0
@R13                                                         // [6845 ] pop local 0
D=M                                                          // [6846 ] pop local 0
@R14                                                         // [6847 ] pop local 0
A=M                                                          // [6848 ] pop local 0
M=D                                                          // [6849 ] pop local 0
(Math.multiply$IF_FALSE0)                                    // [     ] label IF_FALSE0
@LCL                                                         // [6850 ] push local 1
D=M                                                          // [6851 ] push local 1
@1                                                           // [6852 ] push local 1
A=D+A                                                        // [6853 ] push local 1
D=M                                                          // [6854 ] push local 1
@SP                                                          // [6855 ] push local 1
M=M+1                                                        // [6856 ] push local 1
A=M-1                                                        // [6857 ] push local 1
M=D                                                          // [6858 ] push local 1
@LCL                                                         // [6859 ] push local 1
D=M                                                          // [6860 ] push local 1
@1                                                           // [6861 ] push local 1
A=D+A                                                        // [6862 ] push local 1
D=M                                                          // [6863 ] push local 1
@SP                                                          // [6864 ] push local 1
M=M+1                                                        // [6865 ] push local 1
A=M-1                                                        // [6866 ] push local 1
M=D                                                          // [6867 ] push local 1
@SP                                                          // [6868 ] add
AM=M-1                                                       // [6869 ] add
D=M                                                          // [6870 ] add
A=A-1                                                        // [6871 ] add
M=D+M                                                        // [6872 ] add
@SP                                                          // [6873 ] pop local 1
AM=M-1                                                       // [6874 ] pop local 1
D=M                                                          // [6875 ] pop local 1
@R13                                                         // [6876 ] pop local 1
M=D                                                          // [6877 ] pop local 1
@LCL                                                         // [6878 ] pop local 1
D=M                                                          // [6879 ] pop local 1
@1                                                           // [6880 ] pop local 1
D=D+A                                                        // [6881 ] pop local 1
@R14                                                         // [6882 ] pop local 1
M=D                                                          // [6883 ] pop local 1
@R13                                                         // [6884 ] pop local 1
D=M                                                          // [6885 ] pop local 1
@R14                                                         // [6886 ] pop local 1
A=M                                                          // [6887 ] pop local 1
M=D                                                          // [6888 ] pop local 1
@LCL                                                         // [6889 ] push local 2
D=M                                                          // [6890 ] push local 2
@2                                                           // [6891 ] push local 2
A=D+A                                                        // [6892 ] push local 2
D=M                                                          // [6893 ] push local 2
@SP                                                          // [6894 ] push local 2
M=M+1                                                        // [6895 ] push local 2
A=M-1                                                        // [6896 ] push local 2
M=D                                                          // [6897 ] push local 2
@SP                                                          // [6898 ] push constant 1
M=M+1                                                        // [6899 ] push constant 1
A=M-1                                                        // [6900 ] push constant 1
M=1                                                          // [6901 ] push constant 1
@SP                                                          // [6902 ] add
AM=M-1                                                       // [6903 ] add
D=M                                                          // [6904 ] add
A=A-1                                                        // [6905 ] add
M=D+M                                                        // [6906 ] add
@SP                                                          // [6907 ] pop local 2
AM=M-1                                                       // [6908 ] pop local 2
D=M                                                          // [6909 ] pop local 2
@R13                                                         // [6910 ] pop local 2
M=D                                                          // [6911 ] pop local 2
@LCL                                                         // [6912 ] pop local 2
D=M                                                          // [6913 ] pop local 2
@2                                                           // [6914 ] pop local 2
D=D+A                                                        // [6915 ] pop local 2
@R14                                                         // [6916 ] pop local 2
M=D                                                          // [6917 ] pop local 2
@R13                                                         // [6918 ] pop local 2
D=M                                                          // [6919 ] pop local 2
@R14                                                         // [6920 ] pop local 2
A=M                                                          // [6921 ] pop local 2
M=D                                                          // [6922 ] pop local 2
@Math.multiply$WHILE_EXP0                                    // [6923 ] goto WHILE_EXP0
0;JEQ                                                        // [6924 ] goto WHILE_EXP0
(Math.multiply$WHILE_END0)                                   // [     ] label WHILE_END0
@LCL                                                         // [6925 ] push local 0
D=M                                                          // [6926 ] push local 0
@0                                                           // [6927 ] push local 0
A=D+A                                                        // [6928 ] push local 0
D=M                                                          // [6929 ] push local 0
@SP                                                          // [6930 ] push local 0
M=M+1                                                        // [6931 ] push local 0
A=M-1                                                        // [6932 ] push local 0
M=D                                                          // [6933 ] push local 0
@RETURN                                                      // [6934 ] return
0;JEQ                                                        // [6935 ] return
(Math.divide)                                                // [     ] function Math.divide 3
@SP                                                          // [6936 ] function Math.divide 3
A=M                                                          // [6937 ] function Math.divide 3
M=0                                                          // [6938 ] function Math.divide 3
@SP                                                          // [6939 ] function Math.divide 3
M=M+1                                                        // [6940 ] function Math.divide 3
@SP                                                          // [6941 ] function Math.divide 3
A=M                                                          // [6942 ] function Math.divide 3
M=0                                                          // [6943 ] function Math.divide 3
@SP                                                          // [6944 ] function Math.divide 3
M=M+1                                                        // [6945 ] function Math.divide 3
@SP                                                          // [6946 ] function Math.divide 3
A=M                                                          // [6947 ] function Math.divide 3
M=0                                                          // [6948 ] function Math.divide 3
@SP                                                          // [6949 ] function Math.divide 3
M=M+1                                                        // [6950 ] function Math.divide 3
@ARG                                                         // [6951 ] push argument 0
D=M                                                          // [6952 ] push argument 0
@0                                                           // [6953 ] push argument 0
A=D+A                                                        // [6954 ] push argument 0
D=M                                                          // [6955 ] push argument 0
@SP                                                          // [6956 ] push argument 0
M=M+1                                                        // [6957 ] push argument 0
A=M-1                                                        // [6958 ] push argument 0
M=D                                                          // [6959 ] push argument 0
@SP                                                          // [6960 ] push constant 0
M=M+1                                                        // [6961 ] push constant 0
A=M-1                                                        // [6962 ] push constant 0
M=0                                                          // [6963 ] push constant 0
@CONTINUE_LT_13                                              // [6964 ] lt
D=A                                                          // [6965 ] lt
@R13                                                         // [6966 ] lt
M=D                                                          // [6967 ] lt
@SP                                                          // [6968 ] lt
AM=M-1                                                       // [6969 ] lt
D=M                                                          // [6970 ] lt
A=A-1                                                        // [6971 ] lt
D=D-M                                                        // [6972 ] lt
@INTERNAL_LT                                                 // [6973 ] lt
0;JEQ                                                        // [6974 ] lt
(CONTINUE_LT_13)                                             // [     ] lt
@ARG                                                         // [6975 ] push argument 1
D=M                                                          // [6976 ] push argument 1
@1                                                           // [6977 ] push argument 1
A=D+A                                                        // [6978 ] push argument 1
D=M                                                          // [6979 ] push argument 1
@SP                                                          // [6980 ] push argument 1
M=M+1                                                        // [6981 ] push argument 1
A=M-1                                                        // [6982 ] push argument 1
M=D                                                          // [6983 ] push argument 1
@SP                                                          // [6984 ] push constant 0
M=M+1                                                        // [6985 ] push constant 0
A=M-1                                                        // [6986 ] push constant 0
M=0                                                          // [6987 ] push constant 0
@CONTINUE_GT_4                                               // [6988 ] gt
D=A                                                          // [6989 ] gt
@R13                                                         // [6990 ] gt
M=D                                                          // [6991 ] gt
@SP                                                          // [6992 ] gt
AM=M-1                                                       // [6993 ] gt
D=M                                                          // [6994 ] gt
A=A-1                                                        // [6995 ] gt
D=D-M                                                        // [6996 ] gt
@INTERNAL_GT                                                 // [6997 ] gt
0;JEQ                                                        // [6998 ] gt
(CONTINUE_GT_4)                                              // [     ] gt
@SP                                                          // [6999 ] and
AM=M-1                                                       // [7000 ] and
D=M                                                          // [7001 ] and
A=A-1                                                        // [7002 ] and
M=D&M                                                        // [7003 ] and
@ARG                                                         // [7004 ] push argument 0
D=M                                                          // [7005 ] push argument 0
@0                                                           // [7006 ] push argument 0
A=D+A                                                        // [7007 ] push argument 0
D=M                                                          // [7008 ] push argument 0
@SP                                                          // [7009 ] push argument 0
M=M+1                                                        // [7010 ] push argument 0
A=M-1                                                        // [7011 ] push argument 0
M=D                                                          // [7012 ] push argument 0
@SP                                                          // [7013 ] push constant 0
M=M+1                                                        // [7014 ] push constant 0
A=M-1                                                        // [7015 ] push constant 0
M=0                                                          // [7016 ] push constant 0
@CONTINUE_GT_5                                               // [7017 ] gt
D=A                                                          // [7018 ] gt
@R13                                                         // [7019 ] gt
M=D                                                          // [7020 ] gt
@SP                                                          // [7021 ] gt
AM=M-1                                                       // [7022 ] gt
D=M                                                          // [7023 ] gt
A=A-1                                                        // [7024 ] gt
D=D-M                                                        // [7025 ] gt
@INTERNAL_GT                                                 // [7026 ] gt
0;JEQ                                                        // [7027 ] gt
(CONTINUE_GT_5)                                              // [     ] gt
@ARG                                                         // [7028 ] push argument 1
D=M                                                          // [7029 ] push argument 1
@1                                                           // [7030 ] push argument 1
A=D+A                                                        // [7031 ] push argument 1
D=M                                                          // [7032 ] push argument 1
@SP                                                          // [7033 ] push argument 1
M=M+1                                                        // [7034 ] push argument 1
A=M-1                                                        // [7035 ] push argument 1
M=D                                                          // [7036 ] push argument 1
@SP                                                          // [7037 ] push constant 0
M=M+1                                                        // [7038 ] push constant 0
A=M-1                                                        // [7039 ] push constant 0
M=0                                                          // [7040 ] push constant 0
@CONTINUE_LT_14                                              // [7041 ] lt
D=A                                                          // [7042 ] lt
@R13                                                         // [7043 ] lt
M=D                                                          // [7044 ] lt
@SP                                                          // [7045 ] lt
AM=M-1                                                       // [7046 ] lt
D=M                                                          // [7047 ] lt
A=A-1                                                        // [7048 ] lt
D=D-M                                                        // [7049 ] lt
@INTERNAL_LT                                                 // [7050 ] lt
0;JEQ                                                        // [7051 ] lt
(CONTINUE_LT_14)                                             // [     ] lt
@SP                                                          // [7052 ] and
AM=M-1                                                       // [7053 ] and
D=M                                                          // [7054 ] and
A=A-1                                                        // [7055 ] and
M=D&M                                                        // [7056 ] and
@SP                                                          // [7057 ] or
AM=M-1                                                       // [7058 ] or
D=M                                                          // [7059 ] or
A=A-1                                                        // [7060 ] or
M=D|M                                                        // [7061 ] or
@SP                                                          // [7062 ] pop local 2
AM=M-1                                                       // [7063 ] pop local 2
D=M                                                          // [7064 ] pop local 2
@R13                                                         // [7065 ] pop local 2
M=D                                                          // [7066 ] pop local 2
@LCL                                                         // [7067 ] pop local 2
D=M                                                          // [7068 ] pop local 2
@2                                                           // [7069 ] pop local 2
D=D+A                                                        // [7070 ] pop local 2
@R14                                                         // [7071 ] pop local 2
M=D                                                          // [7072 ] pop local 2
@R13                                                         // [7073 ] pop local 2
D=M                                                          // [7074 ] pop local 2
@R14                                                         // [7075 ] pop local 2
A=M                                                          // [7076 ] pop local 2
M=D                                                          // [7077 ] pop local 2
@ARG                                                         // [7078 ] push argument 0
D=M                                                          // [7079 ] push argument 0
@0                                                           // [7080 ] push argument 0
A=D+A                                                        // [7081 ] push argument 0
D=M                                                          // [7082 ] push argument 0
@SP                                                          // [7083 ] push argument 0
M=M+1                                                        // [7084 ] push argument 0
A=M-1                                                        // [7085 ] push argument 0
M=D                                                          // [7086 ] push argument 0
@1                                                           // [7087 ] call Math.abs 1
D=A                                                          // [7088 ] call Math.abs 1
@R13                                                         // [7089 ] call Math.abs 1
M=D                                                          // [7090 ] call Math.abs 1
@Math.abs                                                    // [7091 ] call Math.abs 1
D=A                                                          // [7092 ] call Math.abs 1
@R14                                                         // [7093 ] call Math.abs 1
M=D                                                          // [7094 ] call Math.abs 1
@return-75                                                   // [7095 ] call Math.abs 1
D=A                                                          // [7096 ] call Math.abs 1
@CALL                                                        // [7097 ] call Math.abs 1
0;JEQ                                                        // [7098 ] call Math.abs 1
(return-75)                                                  // [     ] call Math.abs 1
@SP                                                          // [7099 ] pop argument 0
AM=M-1                                                       // [7100 ] pop argument 0
D=M                                                          // [7101 ] pop argument 0
@R13                                                         // [7102 ] pop argument 0
M=D                                                          // [7103 ] pop argument 0
@ARG                                                         // [7104 ] pop argument 0
D=M                                                          // [7105 ] pop argument 0
@0                                                           // [7106 ] pop argument 0
D=D+A                                                        // [7107 ] pop argument 0
@R14                                                         // [7108 ] pop argument 0
M=D                                                          // [7109 ] pop argument 0
@R13                                                         // [7110 ] pop argument 0
D=M                                                          // [7111 ] pop argument 0
@R14                                                         // [7112 ] pop argument 0
A=M                                                          // [7113 ] pop argument 0
M=D                                                          // [7114 ] pop argument 0
@ARG                                                         // [7115 ] push argument 1
D=M                                                          // [7116 ] push argument 1
@1                                                           // [7117 ] push argument 1
A=D+A                                                        // [7118 ] push argument 1
D=M                                                          // [7119 ] push argument 1
@SP                                                          // [7120 ] push argument 1
M=M+1                                                        // [7121 ] push argument 1
A=M-1                                                        // [7122 ] push argument 1
M=D                                                          // [7123 ] push argument 1
@1                                                           // [7124 ] call Math.abs 1
D=A                                                          // [7125 ] call Math.abs 1
@R13                                                         // [7126 ] call Math.abs 1
M=D                                                          // [7127 ] call Math.abs 1
@Math.abs                                                    // [7128 ] call Math.abs 1
D=A                                                          // [7129 ] call Math.abs 1
@R14                                                         // [7130 ] call Math.abs 1
M=D                                                          // [7131 ] call Math.abs 1
@return-76                                                   // [7132 ] call Math.abs 1
D=A                                                          // [7133 ] call Math.abs 1
@CALL                                                        // [7134 ] call Math.abs 1
0;JEQ                                                        // [7135 ] call Math.abs 1
(return-76)                                                  // [     ] call Math.abs 1
@SP                                                          // [7136 ] pop argument 1
AM=M-1                                                       // [7137 ] pop argument 1
D=M                                                          // [7138 ] pop argument 1
@R13                                                         // [7139 ] pop argument 1
M=D                                                          // [7140 ] pop argument 1
@ARG                                                         // [7141 ] pop argument 1
D=M                                                          // [7142 ] pop argument 1
@1                                                           // [7143 ] pop argument 1
D=D+A                                                        // [7144 ] pop argument 1
@R14                                                         // [7145 ] pop argument 1
M=D                                                          // [7146 ] pop argument 1
@R13                                                         // [7147 ] pop argument 1
D=M                                                          // [7148 ] pop argument 1
@R14                                                         // [7149 ] pop argument 1
A=M                                                          // [7150 ] pop argument 1
M=D                                                          // [7151 ] pop argument 1
@ARG                                                         // [7152 ] push argument 1
D=M                                                          // [7153 ] push argument 1
@1                                                           // [7154 ] push argument 1
A=D+A                                                        // [7155 ] push argument 1
D=M                                                          // [7156 ] push argument 1
@SP                                                          // [7157 ] push argument 1
M=M+1                                                        // [7158 ] push argument 1
A=M-1                                                        // [7159 ] push argument 1
M=D                                                          // [7160 ] push argument 1
@ARG                                                         // [7161 ] push argument 0
D=M                                                          // [7162 ] push argument 0
@0                                                           // [7163 ] push argument 0
A=D+A                                                        // [7164 ] push argument 0
D=M                                                          // [7165 ] push argument 0
@SP                                                          // [7166 ] push argument 0
M=M+1                                                        // [7167 ] push argument 0
A=M-1                                                        // [7168 ] push argument 0
M=D                                                          // [7169 ] push argument 0
@CONTINUE_GT_6                                               // [7170 ] gt
D=A                                                          // [7171 ] gt
@R13                                                         // [7172 ] gt
M=D                                                          // [7173 ] gt
@SP                                                          // [7174 ] gt
AM=M-1                                                       // [7175 ] gt
D=M                                                          // [7176 ] gt
A=A-1                                                        // [7177 ] gt
D=D-M                                                        // [7178 ] gt
@INTERNAL_GT                                                 // [7179 ] gt
0;JEQ                                                        // [7180 ] gt
(CONTINUE_GT_6)                                              // [     ] gt
@SP                                                          // [7181 ] if-goto IF_TRUE0
AM=M-1                                                       // [7182 ] if-goto IF_TRUE0
D=M                                                          // [7183 ] if-goto IF_TRUE0
@Math.divide$IF_TRUE0                                        // [7184 ] if-goto IF_TRUE0
D;JNE                                                        // [7185 ] if-goto IF_TRUE0
@Math.divide$IF_FALSE0                                       // [7186 ] goto IF_FALSE0
0;JEQ                                                        // [7187 ] goto IF_FALSE0
(Math.divide$IF_TRUE0)                                       // [     ] label IF_TRUE0
@SP                                                          // [7188 ] push constant 0
M=M+1                                                        // [7189 ] push constant 0
A=M-1                                                        // [7190 ] push constant 0
M=0                                                          // [7191 ] push constant 0
@RETURN                                                      // [7192 ] return
0;JEQ                                                        // [7193 ] return
(Math.divide$IF_FALSE0)                                      // [     ] label IF_FALSE0
@ARG                                                         // [7194 ] push argument 0
D=M                                                          // [7195 ] push argument 0
@0                                                           // [7196 ] push argument 0
A=D+A                                                        // [7197 ] push argument 0
D=M                                                          // [7198 ] push argument 0
@SP                                                          // [7199 ] push argument 0
M=M+1                                                        // [7200 ] push argument 0
A=M-1                                                        // [7201 ] push argument 0
M=D                                                          // [7202 ] push argument 0
@SP                                                          // [7203 ] push constant 2
M=M+1                                                        // [7204 ] push constant 2
A=M-1                                                        // [7205 ] push constant 2
M=1                                                          // [7206 ] push constant 2
M=M+1                                                        // [7207 ] push constant 2
@ARG                                                         // [7208 ] push argument 1
D=M                                                          // [7209 ] push argument 1
@1                                                           // [7210 ] push argument 1
A=D+A                                                        // [7211 ] push argument 1
D=M                                                          // [7212 ] push argument 1
@SP                                                          // [7213 ] push argument 1
M=M+1                                                        // [7214 ] push argument 1
A=M-1                                                        // [7215 ] push argument 1
M=D                                                          // [7216 ] push argument 1
@2                                                           // [7217 ] call Math.multiply 2
D=A                                                          // [7218 ] call Math.multiply 2
@R13                                                         // [7219 ] call Math.multiply 2
M=D                                                          // [7220 ] call Math.multiply 2
@Math.multiply                                               // [7221 ] call Math.multiply 2
D=A                                                          // [7222 ] call Math.multiply 2
@R14                                                         // [7223 ] call Math.multiply 2
M=D                                                          // [7224 ] call Math.multiply 2
@return-77                                                   // [7225 ] call Math.multiply 2
D=A                                                          // [7226 ] call Math.multiply 2
@CALL                                                        // [7227 ] call Math.multiply 2
0;JEQ                                                        // [7228 ] call Math.multiply 2
(return-77)                                                  // [     ] call Math.multiply 2
@2                                                           // [7229 ] call Math.divide 2
D=A                                                          // [7230 ] call Math.divide 2
@R13                                                         // [7231 ] call Math.divide 2
M=D                                                          // [7232 ] call Math.divide 2
@Math.divide                                                 // [7233 ] call Math.divide 2
D=A                                                          // [7234 ] call Math.divide 2
@R14                                                         // [7235 ] call Math.divide 2
M=D                                                          // [7236 ] call Math.divide 2
@return-78                                                   // [7237 ] call Math.divide 2
D=A                                                          // [7238 ] call Math.divide 2
@CALL                                                        // [7239 ] call Math.divide 2
0;JEQ                                                        // [7240 ] call Math.divide 2
(return-78)                                                  // [     ] call Math.divide 2
@SP                                                          // [7241 ] pop local 0
AM=M-1                                                       // [7242 ] pop local 0
D=M                                                          // [7243 ] pop local 0
@R13                                                         // [7244 ] pop local 0
M=D                                                          // [7245 ] pop local 0
@LCL                                                         // [7246 ] pop local 0
D=M                                                          // [7247 ] pop local 0
@0                                                           // [7248 ] pop local 0
D=D+A                                                        // [7249 ] pop local 0
@R14                                                         // [7250 ] pop local 0
M=D                                                          // [7251 ] pop local 0
@R13                                                         // [7252 ] pop local 0
D=M                                                          // [7253 ] pop local 0
@R14                                                         // [7254 ] pop local 0
A=M                                                          // [7255 ] pop local 0
M=D                                                          // [7256 ] pop local 0
@ARG                                                         // [7257 ] push argument 0
D=M                                                          // [7258 ] push argument 0
@0                                                           // [7259 ] push argument 0
A=D+A                                                        // [7260 ] push argument 0
D=M                                                          // [7261 ] push argument 0
@SP                                                          // [7262 ] push argument 0
M=M+1                                                        // [7263 ] push argument 0
A=M-1                                                        // [7264 ] push argument 0
M=D                                                          // [7265 ] push argument 0
@SP                                                          // [7266 ] push constant 2
M=M+1                                                        // [7267 ] push constant 2
A=M-1                                                        // [7268 ] push constant 2
M=1                                                          // [7269 ] push constant 2
M=M+1                                                        // [7270 ] push constant 2
@LCL                                                         // [7271 ] push local 0
D=M                                                          // [7272 ] push local 0
@0                                                           // [7273 ] push local 0
A=D+A                                                        // [7274 ] push local 0
D=M                                                          // [7275 ] push local 0
@SP                                                          // [7276 ] push local 0
M=M+1                                                        // [7277 ] push local 0
A=M-1                                                        // [7278 ] push local 0
M=D                                                          // [7279 ] push local 0
@ARG                                                         // [7280 ] push argument 1
D=M                                                          // [7281 ] push argument 1
@1                                                           // [7282 ] push argument 1
A=D+A                                                        // [7283 ] push argument 1
D=M                                                          // [7284 ] push argument 1
@SP                                                          // [7285 ] push argument 1
M=M+1                                                        // [7286 ] push argument 1
A=M-1                                                        // [7287 ] push argument 1
M=D                                                          // [7288 ] push argument 1
@2                                                           // [7289 ] call Math.multiply 2
D=A                                                          // [7290 ] call Math.multiply 2
@R13                                                         // [7291 ] call Math.multiply 2
M=D                                                          // [7292 ] call Math.multiply 2
@Math.multiply                                               // [7293 ] call Math.multiply 2
D=A                                                          // [7294 ] call Math.multiply 2
@R14                                                         // [7295 ] call Math.multiply 2
M=D                                                          // [7296 ] call Math.multiply 2
@return-79                                                   // [7297 ] call Math.multiply 2
D=A                                                          // [7298 ] call Math.multiply 2
@CALL                                                        // [7299 ] call Math.multiply 2
0;JEQ                                                        // [7300 ] call Math.multiply 2
(return-79)                                                  // [     ] call Math.multiply 2
@2                                                           // [7301 ] call Math.multiply 2
D=A                                                          // [7302 ] call Math.multiply 2
@R13                                                         // [7303 ] call Math.multiply 2
M=D                                                          // [7304 ] call Math.multiply 2
@Math.multiply                                               // [7305 ] call Math.multiply 2
D=A                                                          // [7306 ] call Math.multiply 2
@R14                                                         // [7307 ] call Math.multiply 2
M=D                                                          // [7308 ] call Math.multiply 2
@return-80                                                   // [7309 ] call Math.multiply 2
D=A                                                          // [7310 ] call Math.multiply 2
@CALL                                                        // [7311 ] call Math.multiply 2
0;JEQ                                                        // [7312 ] call Math.multiply 2
(return-80)                                                  // [     ] call Math.multiply 2
@SP                                                          // [7313 ] sub
AM=M-1                                                       // [7314 ] sub
D=M                                                          // [7315 ] sub
A=A-1                                                        // [7316 ] sub
M=M-D                                                        // [7317 ] sub
@ARG                                                         // [7318 ] push argument 1
D=M                                                          // [7319 ] push argument 1
@1                                                           // [7320 ] push argument 1
A=D+A                                                        // [7321 ] push argument 1
D=M                                                          // [7322 ] push argument 1
@SP                                                          // [7323 ] push argument 1
M=M+1                                                        // [7324 ] push argument 1
A=M-1                                                        // [7325 ] push argument 1
M=D                                                          // [7326 ] push argument 1
@CONTINUE_LT_15                                              // [7327 ] lt
D=A                                                          // [7328 ] lt
@R13                                                         // [7329 ] lt
M=D                                                          // [7330 ] lt
@SP                                                          // [7331 ] lt
AM=M-1                                                       // [7332 ] lt
D=M                                                          // [7333 ] lt
A=A-1                                                        // [7334 ] lt
D=D-M                                                        // [7335 ] lt
@INTERNAL_LT                                                 // [7336 ] lt
0;JEQ                                                        // [7337 ] lt
(CONTINUE_LT_15)                                             // [     ] lt
@SP                                                          // [7338 ] if-goto IF_TRUE1
AM=M-1                                                       // [7339 ] if-goto IF_TRUE1
D=M                                                          // [7340 ] if-goto IF_TRUE1
@Math.divide$IF_TRUE1                                        // [7341 ] if-goto IF_TRUE1
D;JNE                                                        // [7342 ] if-goto IF_TRUE1
@Math.divide$IF_FALSE1                                       // [7343 ] goto IF_FALSE1
0;JEQ                                                        // [7344 ] goto IF_FALSE1
(Math.divide$IF_TRUE1)                                       // [     ] label IF_TRUE1
@SP                                                          // [7345 ] push constant 2
M=M+1                                                        // [7346 ] push constant 2
A=M-1                                                        // [7347 ] push constant 2
M=1                                                          // [7348 ] push constant 2
M=M+1                                                        // [7349 ] push constant 2
@LCL                                                         // [7350 ] push local 0
D=M                                                          // [7351 ] push local 0
@0                                                           // [7352 ] push local 0
A=D+A                                                        // [7353 ] push local 0
D=M                                                          // [7354 ] push local 0
@SP                                                          // [7355 ] push local 0
M=M+1                                                        // [7356 ] push local 0
A=M-1                                                        // [7357 ] push local 0
M=D                                                          // [7358 ] push local 0
@2                                                           // [7359 ] call Math.multiply 2
D=A                                                          // [7360 ] call Math.multiply 2
@R13                                                         // [7361 ] call Math.multiply 2
M=D                                                          // [7362 ] call Math.multiply 2
@Math.multiply                                               // [7363 ] call Math.multiply 2
D=A                                                          // [7364 ] call Math.multiply 2
@R14                                                         // [7365 ] call Math.multiply 2
M=D                                                          // [7366 ] call Math.multiply 2
@return-81                                                   // [7367 ] call Math.multiply 2
D=A                                                          // [7368 ] call Math.multiply 2
@CALL                                                        // [7369 ] call Math.multiply 2
0;JEQ                                                        // [7370 ] call Math.multiply 2
(return-81)                                                  // [     ] call Math.multiply 2
@SP                                                          // [7371 ] pop local 1
AM=M-1                                                       // [7372 ] pop local 1
D=M                                                          // [7373 ] pop local 1
@R13                                                         // [7374 ] pop local 1
M=D                                                          // [7375 ] pop local 1
@LCL                                                         // [7376 ] pop local 1
D=M                                                          // [7377 ] pop local 1
@1                                                           // [7378 ] pop local 1
D=D+A                                                        // [7379 ] pop local 1
@R14                                                         // [7380 ] pop local 1
M=D                                                          // [7381 ] pop local 1
@R13                                                         // [7382 ] pop local 1
D=M                                                          // [7383 ] pop local 1
@R14                                                         // [7384 ] pop local 1
A=M                                                          // [7385 ] pop local 1
M=D                                                          // [7386 ] pop local 1
@Math.divide$IF_END1                                         // [7387 ] goto IF_END1
0;JEQ                                                        // [7388 ] goto IF_END1
(Math.divide$IF_FALSE1)                                      // [     ] label IF_FALSE1
@SP                                                          // [7389 ] push constant 2
M=M+1                                                        // [7390 ] push constant 2
A=M-1                                                        // [7391 ] push constant 2
M=1                                                          // [7392 ] push constant 2
M=M+1                                                        // [7393 ] push constant 2
@LCL                                                         // [7394 ] push local 0
D=M                                                          // [7395 ] push local 0
@0                                                           // [7396 ] push local 0
A=D+A                                                        // [7397 ] push local 0
D=M                                                          // [7398 ] push local 0
@SP                                                          // [7399 ] push local 0
M=M+1                                                        // [7400 ] push local 0
A=M-1                                                        // [7401 ] push local 0
M=D                                                          // [7402 ] push local 0
@2                                                           // [7403 ] call Math.multiply 2
D=A                                                          // [7404 ] call Math.multiply 2
@R13                                                         // [7405 ] call Math.multiply 2
M=D                                                          // [7406 ] call Math.multiply 2
@Math.multiply                                               // [7407 ] call Math.multiply 2
D=A                                                          // [7408 ] call Math.multiply 2
@R14                                                         // [7409 ] call Math.multiply 2
M=D                                                          // [7410 ] call Math.multiply 2
@return-82                                                   // [7411 ] call Math.multiply 2
D=A                                                          // [7412 ] call Math.multiply 2
@CALL                                                        // [7413 ] call Math.multiply 2
0;JEQ                                                        // [7414 ] call Math.multiply 2
(return-82)                                                  // [     ] call Math.multiply 2
@SP                                                          // [7415 ] push constant 1
M=M+1                                                        // [7416 ] push constant 1
A=M-1                                                        // [7417 ] push constant 1
M=1                                                          // [7418 ] push constant 1
@SP                                                          // [7419 ] add
AM=M-1                                                       // [7420 ] add
D=M                                                          // [7421 ] add
A=A-1                                                        // [7422 ] add
M=D+M                                                        // [7423 ] add
@SP                                                          // [7424 ] pop local 1
AM=M-1                                                       // [7425 ] pop local 1
D=M                                                          // [7426 ] pop local 1
@R13                                                         // [7427 ] pop local 1
M=D                                                          // [7428 ] pop local 1
@LCL                                                         // [7429 ] pop local 1
D=M                                                          // [7430 ] pop local 1
@1                                                           // [7431 ] pop local 1
D=D+A                                                        // [7432 ] pop local 1
@R14                                                         // [7433 ] pop local 1
M=D                                                          // [7434 ] pop local 1
@R13                                                         // [7435 ] pop local 1
D=M                                                          // [7436 ] pop local 1
@R14                                                         // [7437 ] pop local 1
A=M                                                          // [7438 ] pop local 1
M=D                                                          // [7439 ] pop local 1
(Math.divide$IF_END1)                                        // [     ] label IF_END1
@LCL                                                         // [7440 ] push local 2
D=M                                                          // [7441 ] push local 2
@2                                                           // [7442 ] push local 2
A=D+A                                                        // [7443 ] push local 2
D=M                                                          // [7444 ] push local 2
@SP                                                          // [7445 ] push local 2
M=M+1                                                        // [7446 ] push local 2
A=M-1                                                        // [7447 ] push local 2
M=D                                                          // [7448 ] push local 2
@SP                                                          // [7449 ] if-goto IF_TRUE2
AM=M-1                                                       // [7450 ] if-goto IF_TRUE2
D=M                                                          // [7451 ] if-goto IF_TRUE2
@Math.divide$IF_TRUE2                                        // [7452 ] if-goto IF_TRUE2
D;JNE                                                        // [7453 ] if-goto IF_TRUE2
@Math.divide$IF_FALSE2                                       // [7454 ] goto IF_FALSE2
0;JEQ                                                        // [7455 ] goto IF_FALSE2
(Math.divide$IF_TRUE2)                                       // [     ] label IF_TRUE2
@LCL                                                         // [7456 ] push local 1
D=M                                                          // [7457 ] push local 1
@1                                                           // [7458 ] push local 1
A=D+A                                                        // [7459 ] push local 1
D=M                                                          // [7460 ] push local 1
@SP                                                          // [7461 ] push local 1
M=M+1                                                        // [7462 ] push local 1
A=M-1                                                        // [7463 ] push local 1
M=D                                                          // [7464 ] push local 1
@SP                                                          // [7465 ] neg
A=M-1                                                        // [7466 ] neg
D=M                                                          // [7467 ] neg
M=-D                                                         // [7468 ] neg
@SP                                                          // [7469 ] pop local 1
AM=M-1                                                       // [7470 ] pop local 1
D=M                                                          // [7471 ] pop local 1
@R13                                                         // [7472 ] pop local 1
M=D                                                          // [7473 ] pop local 1
@LCL                                                         // [7474 ] pop local 1
D=M                                                          // [7475 ] pop local 1
@1                                                           // [7476 ] pop local 1
D=D+A                                                        // [7477 ] pop local 1
@R14                                                         // [7478 ] pop local 1
M=D                                                          // [7479 ] pop local 1
@R13                                                         // [7480 ] pop local 1
D=M                                                          // [7481 ] pop local 1
@R14                                                         // [7482 ] pop local 1
A=M                                                          // [7483 ] pop local 1
M=D                                                          // [7484 ] pop local 1
(Math.divide$IF_FALSE2)                                      // [     ] label IF_FALSE2
@LCL                                                         // [7485 ] push local 1
D=M                                                          // [7486 ] push local 1
@1                                                           // [7487 ] push local 1
A=D+A                                                        // [7488 ] push local 1
D=M                                                          // [7489 ] push local 1
@SP                                                          // [7490 ] push local 1
M=M+1                                                        // [7491 ] push local 1
A=M-1                                                        // [7492 ] push local 1
M=D                                                          // [7493 ] push local 1
@RETURN                                                      // [7494 ] return
0;JEQ                                                        // [7495 ] return
(Math.sqrt)                                                  // [     ] function Math.sqrt 4
@SP                                                          // [7496 ] function Math.sqrt 4
A=M                                                          // [7497 ] function Math.sqrt 4
M=0                                                          // [7498 ] function Math.sqrt 4
@SP                                                          // [7499 ] function Math.sqrt 4
M=M+1                                                        // [7500 ] function Math.sqrt 4
@SP                                                          // [7501 ] function Math.sqrt 4
A=M                                                          // [7502 ] function Math.sqrt 4
M=0                                                          // [7503 ] function Math.sqrt 4
@SP                                                          // [7504 ] function Math.sqrt 4
M=M+1                                                        // [7505 ] function Math.sqrt 4
@SP                                                          // [7506 ] function Math.sqrt 4
A=M                                                          // [7507 ] function Math.sqrt 4
M=0                                                          // [7508 ] function Math.sqrt 4
@SP                                                          // [7509 ] function Math.sqrt 4
M=M+1                                                        // [7510 ] function Math.sqrt 4
@SP                                                          // [7511 ] function Math.sqrt 4
A=M                                                          // [7512 ] function Math.sqrt 4
M=0                                                          // [7513 ] function Math.sqrt 4
@SP                                                          // [7514 ] function Math.sqrt 4
M=M+1                                                        // [7515 ] function Math.sqrt 4
@ARG                                                         // [7516 ] push argument 0
D=M                                                          // [7517 ] push argument 0
@0                                                           // [7518 ] push argument 0
A=D+A                                                        // [7519 ] push argument 0
D=M                                                          // [7520 ] push argument 0
@SP                                                          // [7521 ] push argument 0
M=M+1                                                        // [7522 ] push argument 0
A=M-1                                                        // [7523 ] push argument 0
M=D                                                          // [7524 ] push argument 0
@SP                                                          // [7525 ] push constant 0
M=M+1                                                        // [7526 ] push constant 0
A=M-1                                                        // [7527 ] push constant 0
M=0                                                          // [7528 ] push constant 0
@CONTINUE_LT_16                                              // [7529 ] lt
D=A                                                          // [7530 ] lt
@R13                                                         // [7531 ] lt
M=D                                                          // [7532 ] lt
@SP                                                          // [7533 ] lt
AM=M-1                                                       // [7534 ] lt
D=M                                                          // [7535 ] lt
A=A-1                                                        // [7536 ] lt
D=D-M                                                        // [7537 ] lt
@INTERNAL_LT                                                 // [7538 ] lt
0;JEQ                                                        // [7539 ] lt
(CONTINUE_LT_16)                                             // [     ] lt
@SP                                                          // [7540 ] if-goto IF_TRUE0
AM=M-1                                                       // [7541 ] if-goto IF_TRUE0
D=M                                                          // [7542 ] if-goto IF_TRUE0
@Math.sqrt$IF_TRUE0                                          // [7543 ] if-goto IF_TRUE0
D;JNE                                                        // [7544 ] if-goto IF_TRUE0
@Math.sqrt$IF_FALSE0                                         // [7545 ] goto IF_FALSE0
0;JEQ                                                        // [7546 ] goto IF_FALSE0
(Math.sqrt$IF_TRUE0)                                         // [     ] label IF_TRUE0
@SP                                                          // [7547 ] push constant 1
M=M+1                                                        // [7548 ] push constant 1
A=M-1                                                        // [7549 ] push constant 1
M=1                                                          // [7550 ] push constant 1
@1                                                           // [7551 ] call Sys.error 1
D=A                                                          // [7552 ] call Sys.error 1
@R13                                                         // [7553 ] call Sys.error 1
M=D                                                          // [7554 ] call Sys.error 1
@Sys.error                                                   // [7555 ] call Sys.error 1
D=A                                                          // [7556 ] call Sys.error 1
@R14                                                         // [7557 ] call Sys.error 1
M=D                                                          // [7558 ] call Sys.error 1
@return-83                                                   // [7559 ] call Sys.error 1
D=A                                                          // [7560 ] call Sys.error 1
@CALL                                                        // [7561 ] call Sys.error 1
0;JEQ                                                        // [7562 ] call Sys.error 1
(return-83)                                                  // [     ] call Sys.error 1
@SP                                                          // [7563 ] pop temp 0
AM=M-1                                                       // [7564 ] pop temp 0
D=M                                                          // [7565 ] pop temp 0
@5                                                           // [7566 ] pop temp 0
M=D                                                          // [7567 ] pop temp 0
(Math.sqrt$IF_FALSE0)                                        // [     ] label IF_FALSE0
@SP                                                          // [7568 ] push constant 0
M=M+1                                                        // [7569 ] push constant 0
A=M-1                                                        // [7570 ] push constant 0
M=0                                                          // [7571 ] push constant 0
@SP                                                          // [7572 ] pop local 0
AM=M-1                                                       // [7573 ] pop local 0
D=M                                                          // [7574 ] pop local 0
@R13                                                         // [7575 ] pop local 0
M=D                                                          // [7576 ] pop local 0
@LCL                                                         // [7577 ] pop local 0
D=M                                                          // [7578 ] pop local 0
@0                                                           // [7579 ] pop local 0
D=D+A                                                        // [7580 ] pop local 0
@R14                                                         // [7581 ] pop local 0
M=D                                                          // [7582 ] pop local 0
@R13                                                         // [7583 ] pop local 0
D=M                                                          // [7584 ] pop local 0
@R14                                                         // [7585 ] pop local 0
A=M                                                          // [7586 ] pop local 0
M=D                                                          // [7587 ] pop local 0
@7                                                           // [7588 ] push constant 7
D=A                                                          // [7589 ] push constant 7
@SP                                                          // [7590 ] push constant 7
M=M+1                                                        // [7591 ] push constant 7
A=M-1                                                        // [7592 ] push constant 7
M=D                                                          // [7593 ] push constant 7
@SP                                                          // [7594 ] pop local 1
AM=M-1                                                       // [7595 ] pop local 1
D=M                                                          // [7596 ] pop local 1
@R13                                                         // [7597 ] pop local 1
M=D                                                          // [7598 ] pop local 1
@LCL                                                         // [7599 ] pop local 1
D=M                                                          // [7600 ] pop local 1
@1                                                           // [7601 ] pop local 1
D=D+A                                                        // [7602 ] pop local 1
@R14                                                         // [7603 ] pop local 1
M=D                                                          // [7604 ] pop local 1
@R13                                                         // [7605 ] pop local 1
D=M                                                          // [7606 ] pop local 1
@R14                                                         // [7607 ] pop local 1
A=M                                                          // [7608 ] pop local 1
M=D                                                          // [7609 ] pop local 1
(Math.sqrt$WHILE_EXP0)                                       // [     ] label WHILE_EXP0
@LCL                                                         // [7610 ] push local 1
D=M                                                          // [7611 ] push local 1
@1                                                           // [7612 ] push local 1
A=D+A                                                        // [7613 ] push local 1
D=M                                                          // [7614 ] push local 1
@SP                                                          // [7615 ] push local 1
M=M+1                                                        // [7616 ] push local 1
A=M-1                                                        // [7617 ] push local 1
M=D                                                          // [7618 ] push local 1
@SP                                                          // [7619 ] push constant 1
M=M+1                                                        // [7620 ] push constant 1
A=M-1                                                        // [7621 ] push constant 1
M=1                                                          // [7622 ] push constant 1
@SP                                                          // [7623 ] neg
A=M-1                                                        // [7624 ] neg
D=M                                                          // [7625 ] neg
M=-D                                                         // [7626 ] neg
@CONTINUE_GT_7                                               // [7627 ] gt
D=A                                                          // [7628 ] gt
@R13                                                         // [7629 ] gt
M=D                                                          // [7630 ] gt
@SP                                                          // [7631 ] gt
AM=M-1                                                       // [7632 ] gt
D=M                                                          // [7633 ] gt
A=A-1                                                        // [7634 ] gt
D=D-M                                                        // [7635 ] gt
@INTERNAL_GT                                                 // [7636 ] gt
0;JEQ                                                        // [7637 ] gt
(CONTINUE_GT_7)                                              // [     ] gt
@SP                                                          // [7638 ] not
A=M-1                                                        // [7639 ] not
D=M                                                          // [7640 ] not
M=!D                                                         // [7641 ] not
@SP                                                          // [7642 ] if-goto WHILE_END0
AM=M-1                                                       // [7643 ] if-goto WHILE_END0
D=M                                                          // [7644 ] if-goto WHILE_END0
@Math.sqrt$WHILE_END0                                        // [7645 ] if-goto WHILE_END0
D;JNE                                                        // [7646 ] if-goto WHILE_END0
@LCL                                                         // [7647 ] push local 0
D=M                                                          // [7648 ] push local 0
@0                                                           // [7649 ] push local 0
A=D+A                                                        // [7650 ] push local 0
D=M                                                          // [7651 ] push local 0
@SP                                                          // [7652 ] push local 0
M=M+1                                                        // [7653 ] push local 0
A=M-1                                                        // [7654 ] push local 0
M=D                                                          // [7655 ] push local 0
@LCL                                                         // [7656 ] push local 1
D=M                                                          // [7657 ] push local 1
@1                                                           // [7658 ] push local 1
A=D+A                                                        // [7659 ] push local 1
D=M                                                          // [7660 ] push local 1
@SP                                                          // [7661 ] push local 1
M=M+1                                                        // [7662 ] push local 1
A=M-1                                                        // [7663 ] push local 1
M=D                                                          // [7664 ] push local 1
@Math.0                                                      // [7665 ] push static 0
D=M                                                          // [7666 ] push static 0
@SP                                                          // [7667 ] push static 0
M=M+1                                                        // [7668 ] push static 0
A=M-1                                                        // [7669 ] push static 0
M=D                                                          // [7670 ] push static 0
@SP                                                          // [7671 ] add
AM=M-1                                                       // [7672 ] add
D=M                                                          // [7673 ] add
A=A-1                                                        // [7674 ] add
M=D+M                                                        // [7675 ] add
@SP                                                          // [7676 ] pop pointer 1
AM=M-1                                                       // [7677 ] pop pointer 1
D=M                                                          // [7678 ] pop pointer 1
@4                                                           // [7679 ] pop pointer 1
M=D                                                          // [7680 ] pop pointer 1
@THAT                                                        // [7681 ] push that 0
D=M                                                          // [7682 ] push that 0
@0                                                           // [7683 ] push that 0
A=D+A                                                        // [7684 ] push that 0
D=M                                                          // [7685 ] push that 0
@SP                                                          // [7686 ] push that 0
M=M+1                                                        // [7687 ] push that 0
A=M-1                                                        // [7688 ] push that 0
M=D                                                          // [7689 ] push that 0
@SP                                                          // [7690 ] add
AM=M-1                                                       // [7691 ] add
D=M                                                          // [7692 ] add
A=A-1                                                        // [7693 ] add
M=D+M                                                        // [7694 ] add
@SP                                                          // [7695 ] pop local 2
AM=M-1                                                       // [7696 ] pop local 2
D=M                                                          // [7697 ] pop local 2
@R13                                                         // [7698 ] pop local 2
M=D                                                          // [7699 ] pop local 2
@LCL                                                         // [7700 ] pop local 2
D=M                                                          // [7701 ] pop local 2
@2                                                           // [7702 ] pop local 2
D=D+A                                                        // [7703 ] pop local 2
@R14                                                         // [7704 ] pop local 2
M=D                                                          // [7705 ] pop local 2
@R13                                                         // [7706 ] pop local 2
D=M                                                          // [7707 ] pop local 2
@R14                                                         // [7708 ] pop local 2
A=M                                                          // [7709 ] pop local 2
M=D                                                          // [7710 ] pop local 2
@LCL                                                         // [7711 ] push local 2
D=M                                                          // [7712 ] push local 2
@2                                                           // [7713 ] push local 2
A=D+A                                                        // [7714 ] push local 2
D=M                                                          // [7715 ] push local 2
@SP                                                          // [7716 ] push local 2
M=M+1                                                        // [7717 ] push local 2
A=M-1                                                        // [7718 ] push local 2
M=D                                                          // [7719 ] push local 2
@LCL                                                         // [7720 ] push local 2
D=M                                                          // [7721 ] push local 2
@2                                                           // [7722 ] push local 2
A=D+A                                                        // [7723 ] push local 2
D=M                                                          // [7724 ] push local 2
@SP                                                          // [7725 ] push local 2
M=M+1                                                        // [7726 ] push local 2
A=M-1                                                        // [7727 ] push local 2
M=D                                                          // [7728 ] push local 2
@2                                                           // [7729 ] call Math.multiply 2
D=A                                                          // [7730 ] call Math.multiply 2
@R13                                                         // [7731 ] call Math.multiply 2
M=D                                                          // [7732 ] call Math.multiply 2
@Math.multiply                                               // [7733 ] call Math.multiply 2
D=A                                                          // [7734 ] call Math.multiply 2
@R14                                                         // [7735 ] call Math.multiply 2
M=D                                                          // [7736 ] call Math.multiply 2
@return-84                                                   // [7737 ] call Math.multiply 2
D=A                                                          // [7738 ] call Math.multiply 2
@CALL                                                        // [7739 ] call Math.multiply 2
0;JEQ                                                        // [7740 ] call Math.multiply 2
(return-84)                                                  // [     ] call Math.multiply 2
@SP                                                          // [7741 ] pop local 3
AM=M-1                                                       // [7742 ] pop local 3
D=M                                                          // [7743 ] pop local 3
@R13                                                         // [7744 ] pop local 3
M=D                                                          // [7745 ] pop local 3
@LCL                                                         // [7746 ] pop local 3
D=M                                                          // [7747 ] pop local 3
@3                                                           // [7748 ] pop local 3
D=D+A                                                        // [7749 ] pop local 3
@R14                                                         // [7750 ] pop local 3
M=D                                                          // [7751 ] pop local 3
@R13                                                         // [7752 ] pop local 3
D=M                                                          // [7753 ] pop local 3
@R14                                                         // [7754 ] pop local 3
A=M                                                          // [7755 ] pop local 3
M=D                                                          // [7756 ] pop local 3
@LCL                                                         // [7757 ] push local 3
D=M                                                          // [7758 ] push local 3
@3                                                           // [7759 ] push local 3
A=D+A                                                        // [7760 ] push local 3
D=M                                                          // [7761 ] push local 3
@SP                                                          // [7762 ] push local 3
M=M+1                                                        // [7763 ] push local 3
A=M-1                                                        // [7764 ] push local 3
M=D                                                          // [7765 ] push local 3
@ARG                                                         // [7766 ] push argument 0
D=M                                                          // [7767 ] push argument 0
@0                                                           // [7768 ] push argument 0
A=D+A                                                        // [7769 ] push argument 0
D=M                                                          // [7770 ] push argument 0
@SP                                                          // [7771 ] push argument 0
M=M+1                                                        // [7772 ] push argument 0
A=M-1                                                        // [7773 ] push argument 0
M=D                                                          // [7774 ] push argument 0
@CONTINUE_GT_8                                               // [7775 ] gt
D=A                                                          // [7776 ] gt
@R13                                                         // [7777 ] gt
M=D                                                          // [7778 ] gt
@SP                                                          // [7779 ] gt
AM=M-1                                                       // [7780 ] gt
D=M                                                          // [7781 ] gt
A=A-1                                                        // [7782 ] gt
D=D-M                                                        // [7783 ] gt
@INTERNAL_GT                                                 // [7784 ] gt
0;JEQ                                                        // [7785 ] gt
(CONTINUE_GT_8)                                              // [     ] gt
@SP                                                          // [7786 ] not
A=M-1                                                        // [7787 ] not
D=M                                                          // [7788 ] not
M=!D                                                         // [7789 ] not
@LCL                                                         // [7790 ] push local 3
D=M                                                          // [7791 ] push local 3
@3                                                           // [7792 ] push local 3
A=D+A                                                        // [7793 ] push local 3
D=M                                                          // [7794 ] push local 3
@SP                                                          // [7795 ] push local 3
M=M+1                                                        // [7796 ] push local 3
A=M-1                                                        // [7797 ] push local 3
M=D                                                          // [7798 ] push local 3
@SP                                                          // [7799 ] push constant 0
M=M+1                                                        // [7800 ] push constant 0
A=M-1                                                        // [7801 ] push constant 0
M=0                                                          // [7802 ] push constant 0
@CONTINUE_GT_9                                               // [7803 ] gt
D=A                                                          // [7804 ] gt
@R13                                                         // [7805 ] gt
M=D                                                          // [7806 ] gt
@SP                                                          // [7807 ] gt
AM=M-1                                                       // [7808 ] gt
D=M                                                          // [7809 ] gt
A=A-1                                                        // [7810 ] gt
D=D-M                                                        // [7811 ] gt
@INTERNAL_GT                                                 // [7812 ] gt
0;JEQ                                                        // [7813 ] gt
(CONTINUE_GT_9)                                              // [     ] gt
@SP                                                          // [7814 ] and
AM=M-1                                                       // [7815 ] and
D=M                                                          // [7816 ] and
A=A-1                                                        // [7817 ] and
M=D&M                                                        // [7818 ] and
@SP                                                          // [7819 ] if-goto IF_TRUE1
AM=M-1                                                       // [7820 ] if-goto IF_TRUE1
D=M                                                          // [7821 ] if-goto IF_TRUE1
@Math.sqrt$IF_TRUE1                                          // [7822 ] if-goto IF_TRUE1
D;JNE                                                        // [7823 ] if-goto IF_TRUE1
@Math.sqrt$IF_FALSE1                                         // [7824 ] goto IF_FALSE1
0;JEQ                                                        // [7825 ] goto IF_FALSE1
(Math.sqrt$IF_TRUE1)                                         // [     ] label IF_TRUE1
@LCL                                                         // [7826 ] push local 2
D=M                                                          // [7827 ] push local 2
@2                                                           // [7828 ] push local 2
A=D+A                                                        // [7829 ] push local 2
D=M                                                          // [7830 ] push local 2
@SP                                                          // [7831 ] push local 2
M=M+1                                                        // [7832 ] push local 2
A=M-1                                                        // [7833 ] push local 2
M=D                                                          // [7834 ] push local 2
@SP                                                          // [7835 ] pop local 0
AM=M-1                                                       // [7836 ] pop local 0
D=M                                                          // [7837 ] pop local 0
@R13                                                         // [7838 ] pop local 0
M=D                                                          // [7839 ] pop local 0
@LCL                                                         // [7840 ] pop local 0
D=M                                                          // [7841 ] pop local 0
@0                                                           // [7842 ] pop local 0
D=D+A                                                        // [7843 ] pop local 0
@R14                                                         // [7844 ] pop local 0
M=D                                                          // [7845 ] pop local 0
@R13                                                         // [7846 ] pop local 0
D=M                                                          // [7847 ] pop local 0
@R14                                                         // [7848 ] pop local 0
A=M                                                          // [7849 ] pop local 0
M=D                                                          // [7850 ] pop local 0
(Math.sqrt$IF_FALSE1)                                        // [     ] label IF_FALSE1
@LCL                                                         // [7851 ] push local 1
D=M                                                          // [7852 ] push local 1
@1                                                           // [7853 ] push local 1
A=D+A                                                        // [7854 ] push local 1
D=M                                                          // [7855 ] push local 1
@SP                                                          // [7856 ] push local 1
M=M+1                                                        // [7857 ] push local 1
A=M-1                                                        // [7858 ] push local 1
M=D                                                          // [7859 ] push local 1
@SP                                                          // [7860 ] push constant 1
M=M+1                                                        // [7861 ] push constant 1
A=M-1                                                        // [7862 ] push constant 1
M=1                                                          // [7863 ] push constant 1
@SP                                                          // [7864 ] sub
AM=M-1                                                       // [7865 ] sub
D=M                                                          // [7866 ] sub
A=A-1                                                        // [7867 ] sub
M=M-D                                                        // [7868 ] sub
@SP                                                          // [7869 ] pop local 1
AM=M-1                                                       // [7870 ] pop local 1
D=M                                                          // [7871 ] pop local 1
@R13                                                         // [7872 ] pop local 1
M=D                                                          // [7873 ] pop local 1
@LCL                                                         // [7874 ] pop local 1
D=M                                                          // [7875 ] pop local 1
@1                                                           // [7876 ] pop local 1
D=D+A                                                        // [7877 ] pop local 1
@R14                                                         // [7878 ] pop local 1
M=D                                                          // [7879 ] pop local 1
@R13                                                         // [7880 ] pop local 1
D=M                                                          // [7881 ] pop local 1
@R14                                                         // [7882 ] pop local 1
A=M                                                          // [7883 ] pop local 1
M=D                                                          // [7884 ] pop local 1
@Math.sqrt$WHILE_EXP0                                        // [7885 ] goto WHILE_EXP0
0;JEQ                                                        // [7886 ] goto WHILE_EXP0
(Math.sqrt$WHILE_END0)                                       // [     ] label WHILE_END0
@LCL                                                         // [7887 ] push local 0
D=M                                                          // [7888 ] push local 0
@0                                                           // [7889 ] push local 0
A=D+A                                                        // [7890 ] push local 0
D=M                                                          // [7891 ] push local 0
@SP                                                          // [7892 ] push local 0
M=M+1                                                        // [7893 ] push local 0
A=M-1                                                        // [7894 ] push local 0
M=D                                                          // [7895 ] push local 0
@RETURN                                                      // [7896 ] return
0;JEQ                                                        // [7897 ] return
(Math.max)                                                   // [     ] function Math.max 0
@ARG                                                         // [7898 ] push argument 0
D=M                                                          // [7899 ] push argument 0
@0                                                           // [7900 ] push argument 0
A=D+A                                                        // [7901 ] push argument 0
D=M                                                          // [7902 ] push argument 0
@SP                                                          // [7903 ] push argument 0
M=M+1                                                        // [7904 ] push argument 0
A=M-1                                                        // [7905 ] push argument 0
M=D                                                          // [7906 ] push argument 0
@ARG                                                         // [7907 ] push argument 1
D=M                                                          // [7908 ] push argument 1
@1                                                           // [7909 ] push argument 1
A=D+A                                                        // [7910 ] push argument 1
D=M                                                          // [7911 ] push argument 1
@SP                                                          // [7912 ] push argument 1
M=M+1                                                        // [7913 ] push argument 1
A=M-1                                                        // [7914 ] push argument 1
M=D                                                          // [7915 ] push argument 1
@CONTINUE_GT_10                                              // [7916 ] gt
D=A                                                          // [7917 ] gt
@R13                                                         // [7918 ] gt
M=D                                                          // [7919 ] gt
@SP                                                          // [7920 ] gt
AM=M-1                                                       // [7921 ] gt
D=M                                                          // [7922 ] gt
A=A-1                                                        // [7923 ] gt
D=D-M                                                        // [7924 ] gt
@INTERNAL_GT                                                 // [7925 ] gt
0;JEQ                                                        // [7926 ] gt
(CONTINUE_GT_10)                                             // [     ] gt
@SP                                                          // [7927 ] if-goto IF_TRUE0
AM=M-1                                                       // [7928 ] if-goto IF_TRUE0
D=M                                                          // [7929 ] if-goto IF_TRUE0
@Math.max$IF_TRUE0                                           // [7930 ] if-goto IF_TRUE0
D;JNE                                                        // [7931 ] if-goto IF_TRUE0
@Math.max$IF_FALSE0                                          // [7932 ] goto IF_FALSE0
0;JEQ                                                        // [7933 ] goto IF_FALSE0
(Math.max$IF_TRUE0)                                          // [     ] label IF_TRUE0
@ARG                                                         // [7934 ] push argument 0
D=M                                                          // [7935 ] push argument 0
@0                                                           // [7936 ] push argument 0
A=D+A                                                        // [7937 ] push argument 0
D=M                                                          // [7938 ] push argument 0
@SP                                                          // [7939 ] push argument 0
M=M+1                                                        // [7940 ] push argument 0
A=M-1                                                        // [7941 ] push argument 0
M=D                                                          // [7942 ] push argument 0
@RETURN                                                      // [7943 ] return
0;JEQ                                                        // [7944 ] return
(Math.max$IF_FALSE0)                                         // [     ] label IF_FALSE0
@ARG                                                         // [7945 ] push argument 1
D=M                                                          // [7946 ] push argument 1
@1                                                           // [7947 ] push argument 1
A=D+A                                                        // [7948 ] push argument 1
D=M                                                          // [7949 ] push argument 1
@SP                                                          // [7950 ] push argument 1
M=M+1                                                        // [7951 ] push argument 1
A=M-1                                                        // [7952 ] push argument 1
M=D                                                          // [7953 ] push argument 1
@RETURN                                                      // [7954 ] return
0;JEQ                                                        // [7955 ] return
(Math.min)                                                   // [     ] function Math.min 0
@ARG                                                         // [7956 ] push argument 0
D=M                                                          // [7957 ] push argument 0
@0                                                           // [7958 ] push argument 0
A=D+A                                                        // [7959 ] push argument 0
D=M                                                          // [7960 ] push argument 0
@SP                                                          // [7961 ] push argument 0
M=M+1                                                        // [7962 ] push argument 0
A=M-1                                                        // [7963 ] push argument 0
M=D                                                          // [7964 ] push argument 0
@ARG                                                         // [7965 ] push argument 1
D=M                                                          // [7966 ] push argument 1
@1                                                           // [7967 ] push argument 1
A=D+A                                                        // [7968 ] push argument 1
D=M                                                          // [7969 ] push argument 1
@SP                                                          // [7970 ] push argument 1
M=M+1                                                        // [7971 ] push argument 1
A=M-1                                                        // [7972 ] push argument 1
M=D                                                          // [7973 ] push argument 1
@CONTINUE_LT_17                                              // [7974 ] lt
D=A                                                          // [7975 ] lt
@R13                                                         // [7976 ] lt
M=D                                                          // [7977 ] lt
@SP                                                          // [7978 ] lt
AM=M-1                                                       // [7979 ] lt
D=M                                                          // [7980 ] lt
A=A-1                                                        // [7981 ] lt
D=D-M                                                        // [7982 ] lt
@INTERNAL_LT                                                 // [7983 ] lt
0;JEQ                                                        // [7984 ] lt
(CONTINUE_LT_17)                                             // [     ] lt
@SP                                                          // [7985 ] if-goto IF_TRUE0
AM=M-1                                                       // [7986 ] if-goto IF_TRUE0
D=M                                                          // [7987 ] if-goto IF_TRUE0
@Math.min$IF_TRUE0                                           // [7988 ] if-goto IF_TRUE0
D;JNE                                                        // [7989 ] if-goto IF_TRUE0
@Math.min$IF_FALSE0                                          // [7990 ] goto IF_FALSE0
0;JEQ                                                        // [7991 ] goto IF_FALSE0
(Math.min$IF_TRUE0)                                          // [     ] label IF_TRUE0
@ARG                                                         // [7992 ] push argument 0
D=M                                                          // [7993 ] push argument 0
@0                                                           // [7994 ] push argument 0
A=D+A                                                        // [7995 ] push argument 0
D=M                                                          // [7996 ] push argument 0
@SP                                                          // [7997 ] push argument 0
M=M+1                                                        // [7998 ] push argument 0
A=M-1                                                        // [7999 ] push argument 0
M=D                                                          // [8000 ] push argument 0
@RETURN                                                      // [8001 ] return
0;JEQ                                                        // [8002 ] return
(Math.min$IF_FALSE0)                                         // [     ] label IF_FALSE0
@ARG                                                         // [8003 ] push argument 1
D=M                                                          // [8004 ] push argument 1
@1                                                           // [8005 ] push argument 1
A=D+A                                                        // [8006 ] push argument 1
D=M                                                          // [8007 ] push argument 1
@SP                                                          // [8008 ] push argument 1
M=M+1                                                        // [8009 ] push argument 1
A=M-1                                                        // [8010 ] push argument 1
M=D                                                          // [8011 ] push argument 1
@RETURN                                                      // [8012 ] return
0;JEQ                                                        // [8013 ] return
(Math.bit)                                                   // [     ] function Math.bit 1
@SP                                                          // [8014 ] function Math.bit 1
A=M                                                          // [8015 ] function Math.bit 1
M=0                                                          // [8016 ] function Math.bit 1
@SP                                                          // [8017 ] function Math.bit 1
M=M+1                                                        // [8018 ] function Math.bit 1
@ARG                                                         // [8019 ] push argument 1
D=M                                                          // [8020 ] push argument 1
@1                                                           // [8021 ] push argument 1
A=D+A                                                        // [8022 ] push argument 1
D=M                                                          // [8023 ] push argument 1
@SP                                                          // [8024 ] push argument 1
M=M+1                                                        // [8025 ] push argument 1
A=M-1                                                        // [8026 ] push argument 1
M=D                                                          // [8027 ] push argument 1
@Math.0                                                      // [8028 ] push static 0
D=M                                                          // [8029 ] push static 0
@SP                                                          // [8030 ] push static 0
M=M+1                                                        // [8031 ] push static 0
A=M-1                                                        // [8032 ] push static 0
M=D                                                          // [8033 ] push static 0
@SP                                                          // [8034 ] add
AM=M-1                                                       // [8035 ] add
D=M                                                          // [8036 ] add
A=A-1                                                        // [8037 ] add
M=D+M                                                        // [8038 ] add
@SP                                                          // [8039 ] pop pointer 1
AM=M-1                                                       // [8040 ] pop pointer 1
D=M                                                          // [8041 ] pop pointer 1
@4                                                           // [8042 ] pop pointer 1
M=D                                                          // [8043 ] pop pointer 1
@THAT                                                        // [8044 ] push that 0
D=M                                                          // [8045 ] push that 0
@0                                                           // [8046 ] push that 0
A=D+A                                                        // [8047 ] push that 0
D=M                                                          // [8048 ] push that 0
@SP                                                          // [8049 ] push that 0
M=M+1                                                        // [8050 ] push that 0
A=M-1                                                        // [8051 ] push that 0
M=D                                                          // [8052 ] push that 0
@SP                                                          // [8053 ] pop local 0
AM=M-1                                                       // [8054 ] pop local 0
D=M                                                          // [8055 ] pop local 0
@R13                                                         // [8056 ] pop local 0
M=D                                                          // [8057 ] pop local 0
@LCL                                                         // [8058 ] pop local 0
D=M                                                          // [8059 ] pop local 0
@0                                                           // [8060 ] pop local 0
D=D+A                                                        // [8061 ] pop local 0
@R14                                                         // [8062 ] pop local 0
M=D                                                          // [8063 ] pop local 0
@R13                                                         // [8064 ] pop local 0
D=M                                                          // [8065 ] pop local 0
@R14                                                         // [8066 ] pop local 0
A=M                                                          // [8067 ] pop local 0
M=D                                                          // [8068 ] pop local 0
@LCL                                                         // [8069 ] push local 0
D=M                                                          // [8070 ] push local 0
@0                                                           // [8071 ] push local 0
A=D+A                                                        // [8072 ] push local 0
D=M                                                          // [8073 ] push local 0
@SP                                                          // [8074 ] push local 0
M=M+1                                                        // [8075 ] push local 0
A=M-1                                                        // [8076 ] push local 0
M=D                                                          // [8077 ] push local 0
@ARG                                                         // [8078 ] push argument 0
D=M                                                          // [8079 ] push argument 0
@0                                                           // [8080 ] push argument 0
A=D+A                                                        // [8081 ] push argument 0
D=M                                                          // [8082 ] push argument 0
@SP                                                          // [8083 ] push argument 0
M=M+1                                                        // [8084 ] push argument 0
A=M-1                                                        // [8085 ] push argument 0
M=D                                                          // [8086 ] push argument 0
@SP                                                          // [8087 ] and
AM=M-1                                                       // [8088 ] and
D=M                                                          // [8089 ] and
A=A-1                                                        // [8090 ] and
M=D&M                                                        // [8091 ] and
@LCL                                                         // [8092 ] push local 0
D=M                                                          // [8093 ] push local 0
@0                                                           // [8094 ] push local 0
A=D+A                                                        // [8095 ] push local 0
D=M                                                          // [8096 ] push local 0
@SP                                                          // [8097 ] push local 0
M=M+1                                                        // [8098 ] push local 0
A=M-1                                                        // [8099 ] push local 0
M=D                                                          // [8100 ] push local 0
@CONTINUE_EQ_11                                              // [8101 ] eq
D=A                                                          // [8102 ] eq
@R13                                                         // [8103 ] eq
M=D                                                          // [8104 ] eq
@SP                                                          // [8105 ] eq
AM=M-1                                                       // [8106 ] eq
D=M                                                          // [8107 ] eq
A=A-1                                                        // [8108 ] eq
D=D-M                                                        // [8109 ] eq
@INTERNAL_EQ                                                 // [8110 ] eq
0;JEQ                                                        // [8111 ] eq
(CONTINUE_EQ_11)                                             // [     ] eq
@RETURN                                                      // [8112 ] return
0;JEQ                                                        // [8113 ] return
(Memory.init)                                                // [     ] function Memory.init 0
@SP                                                          // [8114 ] push constant 0
M=M+1                                                        // [8115 ] push constant 0
A=M-1                                                        // [8116 ] push constant 0
M=0                                                          // [8117 ] push constant 0
@SP                                                          // [8118 ] pop static 0
AM=M-1                                                       // [8119 ] pop static 0
D=M                                                          // [8120 ] pop static 0
@Memory.0                                                    // [8121 ] pop static 0
M=D                                                          // [8122 ] pop static 0
@2048                                                        // [8123 ] push constant 2048
D=A                                                          // [8124 ] push constant 2048
@SP                                                          // [8125 ] push constant 2048
M=M+1                                                        // [8126 ] push constant 2048
A=M-1                                                        // [8127 ] push constant 2048
M=D                                                          // [8128 ] push constant 2048
@SP                                                          // [8129 ] pop static 1
AM=M-1                                                       // [8130 ] pop static 1
D=M                                                          // [8131 ] pop static 1
@Memory.1                                                    // [8132 ] pop static 1
M=D                                                          // [8133 ] pop static 1
@16383                                                       // [8134 ] push constant 16383
D=A                                                          // [8135 ] push constant 16383
@SP                                                          // [8136 ] push constant 16383
M=M+1                                                        // [8137 ] push constant 16383
A=M-1                                                        // [8138 ] push constant 16383
M=D                                                          // [8139 ] push constant 16383
@SP                                                          // [8140 ] pop static 2
AM=M-1                                                       // [8141 ] pop static 2
D=M                                                          // [8142 ] pop static 2
@Memory.2                                                    // [8143 ] pop static 2
M=D                                                          // [8144 ] pop static 2
@Memory.1                                                    // [8145 ] push static 1
D=M                                                          // [8146 ] push static 1
@SP                                                          // [8147 ] push static 1
M=M+1                                                        // [8148 ] push static 1
A=M-1                                                        // [8149 ] push static 1
M=D                                                          // [8150 ] push static 1
@SP                                                          // [8151 ] pop static 3
AM=M-1                                                       // [8152 ] pop static 3
D=M                                                          // [8153 ] pop static 3
@Memory.3                                                    // [8154 ] pop static 3
M=D                                                          // [8155 ] pop static 3
@Memory.3                                                    // [8156 ] push static 3
D=M                                                          // [8157 ] push static 3
@SP                                                          // [8158 ] push static 3
M=M+1                                                        // [8159 ] push static 3
A=M-1                                                        // [8160 ] push static 3
M=D                                                          // [8161 ] push static 3
@Memory.2                                                    // [8162 ] push static 2
D=M                                                          // [8163 ] push static 2
@SP                                                          // [8164 ] push static 2
M=M+1                                                        // [8165 ] push static 2
A=M-1                                                        // [8166 ] push static 2
M=D                                                          // [8167 ] push static 2
@Memory.1                                                    // [8168 ] push static 1
D=M                                                          // [8169 ] push static 1
@SP                                                          // [8170 ] push static 1
M=M+1                                                        // [8171 ] push static 1
A=M-1                                                        // [8172 ] push static 1
M=D                                                          // [8173 ] push static 1
@SP                                                          // [8174 ] sub
AM=M-1                                                       // [8175 ] sub
D=M                                                          // [8176 ] sub
A=A-1                                                        // [8177 ] sub
M=M-D                                                        // [8178 ] sub
@2                                                           // [8179 ] call Memory.poke 2
D=A                                                          // [8180 ] call Memory.poke 2
@R13                                                         // [8181 ] call Memory.poke 2
M=D                                                          // [8182 ] call Memory.poke 2
@Memory.poke                                                 // [8183 ] call Memory.poke 2
D=A                                                          // [8184 ] call Memory.poke 2
@R14                                                         // [8185 ] call Memory.poke 2
M=D                                                          // [8186 ] call Memory.poke 2
@return-85                                                   // [8187 ] call Memory.poke 2
D=A                                                          // [8188 ] call Memory.poke 2
@CALL                                                        // [8189 ] call Memory.poke 2
0;JEQ                                                        // [8190 ] call Memory.poke 2
(return-85)                                                  // [     ] call Memory.poke 2
@SP                                                          // [8191 ] pop temp 0
AM=M-1                                                       // [8192 ] pop temp 0
D=M                                                          // [8193 ] pop temp 0
@5                                                           // [8194 ] pop temp 0
M=D                                                          // [8195 ] pop temp 0
@Memory.3                                                    // [8196 ] push static 3
D=M                                                          // [8197 ] push static 3
@SP                                                          // [8198 ] push static 3
M=M+1                                                        // [8199 ] push static 3
A=M-1                                                        // [8200 ] push static 3
M=D                                                          // [8201 ] push static 3
@SP                                                          // [8202 ] push constant 1
M=M+1                                                        // [8203 ] push constant 1
A=M-1                                                        // [8204 ] push constant 1
M=1                                                          // [8205 ] push constant 1
@SP                                                          // [8206 ] add
AM=M-1                                                       // [8207 ] add
D=M                                                          // [8208 ] add
A=A-1                                                        // [8209 ] add
M=D+M                                                        // [8210 ] add
@SP                                                          // [8211 ] push constant 0
M=M+1                                                        // [8212 ] push constant 0
A=M-1                                                        // [8213 ] push constant 0
M=0                                                          // [8214 ] push constant 0
@2                                                           // [8215 ] call Memory.poke 2
D=A                                                          // [8216 ] call Memory.poke 2
@R13                                                         // [8217 ] call Memory.poke 2
M=D                                                          // [8218 ] call Memory.poke 2
@Memory.poke                                                 // [8219 ] call Memory.poke 2
D=A                                                          // [8220 ] call Memory.poke 2
@R14                                                         // [8221 ] call Memory.poke 2
M=D                                                          // [8222 ] call Memory.poke 2
@return-86                                                   // [8223 ] call Memory.poke 2
D=A                                                          // [8224 ] call Memory.poke 2
@CALL                                                        // [8225 ] call Memory.poke 2
0;JEQ                                                        // [8226 ] call Memory.poke 2
(return-86)                                                  // [     ] call Memory.poke 2
@SP                                                          // [8227 ] pop temp 0
AM=M-1                                                       // [8228 ] pop temp 0
D=M                                                          // [8229 ] pop temp 0
@5                                                           // [8230 ] pop temp 0
M=D                                                          // [8231 ] pop temp 0
@SP                                                          // [8232 ] push constant 0
M=M+1                                                        // [8233 ] push constant 0
A=M-1                                                        // [8234 ] push constant 0
M=0                                                          // [8235 ] push constant 0
@RETURN                                                      // [8236 ] return
0;JEQ                                                        // [8237 ] return
(Memory.peek)                                                // [     ] function Memory.peek 0
@ARG                                                         // [8238 ] push argument 0
D=M                                                          // [8239 ] push argument 0
@0                                                           // [8240 ] push argument 0
A=D+A                                                        // [8241 ] push argument 0
D=M                                                          // [8242 ] push argument 0
@SP                                                          // [8243 ] push argument 0
M=M+1                                                        // [8244 ] push argument 0
A=M-1                                                        // [8245 ] push argument 0
M=D                                                          // [8246 ] push argument 0
@Memory.0                                                    // [8247 ] push static 0
D=M                                                          // [8248 ] push static 0
@SP                                                          // [8249 ] push static 0
M=M+1                                                        // [8250 ] push static 0
A=M-1                                                        // [8251 ] push static 0
M=D                                                          // [8252 ] push static 0
@SP                                                          // [8253 ] add
AM=M-1                                                       // [8254 ] add
D=M                                                          // [8255 ] add
A=A-1                                                        // [8256 ] add
M=D+M                                                        // [8257 ] add
@SP                                                          // [8258 ] pop pointer 1
AM=M-1                                                       // [8259 ] pop pointer 1
D=M                                                          // [8260 ] pop pointer 1
@4                                                           // [8261 ] pop pointer 1
M=D                                                          // [8262 ] pop pointer 1
@THAT                                                        // [8263 ] push that 0
D=M                                                          // [8264 ] push that 0
@0                                                           // [8265 ] push that 0
A=D+A                                                        // [8266 ] push that 0
D=M                                                          // [8267 ] push that 0
@SP                                                          // [8268 ] push that 0
M=M+1                                                        // [8269 ] push that 0
A=M-1                                                        // [8270 ] push that 0
M=D                                                          // [8271 ] push that 0
@RETURN                                                      // [8272 ] return
0;JEQ                                                        // [8273 ] return
(Memory.poke)                                                // [     ] function Memory.poke 0
@ARG                                                         // [8274 ] push argument 0
D=M                                                          // [8275 ] push argument 0
@0                                                           // [8276 ] push argument 0
A=D+A                                                        // [8277 ] push argument 0
D=M                                                          // [8278 ] push argument 0
@SP                                                          // [8279 ] push argument 0
M=M+1                                                        // [8280 ] push argument 0
A=M-1                                                        // [8281 ] push argument 0
M=D                                                          // [8282 ] push argument 0
@Memory.0                                                    // [8283 ] push static 0
D=M                                                          // [8284 ] push static 0
@SP                                                          // [8285 ] push static 0
M=M+1                                                        // [8286 ] push static 0
A=M-1                                                        // [8287 ] push static 0
M=D                                                          // [8288 ] push static 0
@SP                                                          // [8289 ] add
AM=M-1                                                       // [8290 ] add
D=M                                                          // [8291 ] add
A=A-1                                                        // [8292 ] add
M=D+M                                                        // [8293 ] add
@ARG                                                         // [8294 ] push argument 1
D=M                                                          // [8295 ] push argument 1
@1                                                           // [8296 ] push argument 1
A=D+A                                                        // [8297 ] push argument 1
D=M                                                          // [8298 ] push argument 1
@SP                                                          // [8299 ] push argument 1
M=M+1                                                        // [8300 ] push argument 1
A=M-1                                                        // [8301 ] push argument 1
M=D                                                          // [8302 ] push argument 1
@SP                                                          // [8303 ] pop temp 0
AM=M-1                                                       // [8304 ] pop temp 0
D=M                                                          // [8305 ] pop temp 0
@5                                                           // [8306 ] pop temp 0
M=D                                                          // [8307 ] pop temp 0
@SP                                                          // [8308 ] pop pointer 1
AM=M-1                                                       // [8309 ] pop pointer 1
D=M                                                          // [8310 ] pop pointer 1
@4                                                           // [8311 ] pop pointer 1
M=D                                                          // [8312 ] pop pointer 1
@5                                                           // [8313 ] push temp 0
D=M                                                          // [8314 ] push temp 0
@SP                                                          // [8315 ] push temp 0
M=M+1                                                        // [8316 ] push temp 0
A=M-1                                                        // [8317 ] push temp 0
M=D                                                          // [8318 ] push temp 0
@SP                                                          // [8319 ] pop that 0
AM=M-1                                                       // [8320 ] pop that 0
D=M                                                          // [8321 ] pop that 0
@R13                                                         // [8322 ] pop that 0
M=D                                                          // [8323 ] pop that 0
@THAT                                                        // [8324 ] pop that 0
D=M                                                          // [8325 ] pop that 0
@0                                                           // [8326 ] pop that 0
D=D+A                                                        // [8327 ] pop that 0
@R14                                                         // [8328 ] pop that 0
M=D                                                          // [8329 ] pop that 0
@R13                                                         // [8330 ] pop that 0
D=M                                                          // [8331 ] pop that 0
@R14                                                         // [8332 ] pop that 0
A=M                                                          // [8333 ] pop that 0
M=D                                                          // [8334 ] pop that 0
@SP                                                          // [8335 ] push constant 0
M=M+1                                                        // [8336 ] push constant 0
A=M-1                                                        // [8337 ] push constant 0
M=0                                                          // [8338 ] push constant 0
@RETURN                                                      // [8339 ] return
0;JEQ                                                        // [8340 ] return
(Memory.alloc)                                               // [     ] function Memory.alloc 6
@SP                                                          // [8341 ] function Memory.alloc 6
A=M                                                          // [8342 ] function Memory.alloc 6
M=0                                                          // [8343 ] function Memory.alloc 6
@SP                                                          // [8344 ] function Memory.alloc 6
M=M+1                                                        // [8345 ] function Memory.alloc 6
@SP                                                          // [8346 ] function Memory.alloc 6
A=M                                                          // [8347 ] function Memory.alloc 6
M=0                                                          // [8348 ] function Memory.alloc 6
@SP                                                          // [8349 ] function Memory.alloc 6
M=M+1                                                        // [8350 ] function Memory.alloc 6
@SP                                                          // [8351 ] function Memory.alloc 6
A=M                                                          // [8352 ] function Memory.alloc 6
M=0                                                          // [8353 ] function Memory.alloc 6
@SP                                                          // [8354 ] function Memory.alloc 6
M=M+1                                                        // [8355 ] function Memory.alloc 6
@SP                                                          // [8356 ] function Memory.alloc 6
A=M                                                          // [8357 ] function Memory.alloc 6
M=0                                                          // [8358 ] function Memory.alloc 6
@SP                                                          // [8359 ] function Memory.alloc 6
M=M+1                                                        // [8360 ] function Memory.alloc 6
@SP                                                          // [8361 ] function Memory.alloc 6
A=M                                                          // [8362 ] function Memory.alloc 6
M=0                                                          // [8363 ] function Memory.alloc 6
@SP                                                          // [8364 ] function Memory.alloc 6
M=M+1                                                        // [8365 ] function Memory.alloc 6
@SP                                                          // [8366 ] function Memory.alloc 6
A=M                                                          // [8367 ] function Memory.alloc 6
M=0                                                          // [8368 ] function Memory.alloc 6
@SP                                                          // [8369 ] function Memory.alloc 6
M=M+1                                                        // [8370 ] function Memory.alloc 6
@ARG                                                         // [8371 ] push argument 0
D=M                                                          // [8372 ] push argument 0
@0                                                           // [8373 ] push argument 0
A=D+A                                                        // [8374 ] push argument 0
D=M                                                          // [8375 ] push argument 0
@SP                                                          // [8376 ] push argument 0
M=M+1                                                        // [8377 ] push argument 0
A=M-1                                                        // [8378 ] push argument 0
M=D                                                          // [8379 ] push argument 0
@SP                                                          // [8380 ] push constant 1
M=M+1                                                        // [8381 ] push constant 1
A=M-1                                                        // [8382 ] push constant 1
M=1                                                          // [8383 ] push constant 1
@SP                                                          // [8384 ] add
AM=M-1                                                       // [8385 ] add
D=M                                                          // [8386 ] add
A=A-1                                                        // [8387 ] add
M=D+M                                                        // [8388 ] add
@SP                                                          // [8389 ] pop argument 0
AM=M-1                                                       // [8390 ] pop argument 0
D=M                                                          // [8391 ] pop argument 0
@R13                                                         // [8392 ] pop argument 0
M=D                                                          // [8393 ] pop argument 0
@ARG                                                         // [8394 ] pop argument 0
D=M                                                          // [8395 ] pop argument 0
@0                                                           // [8396 ] pop argument 0
D=D+A                                                        // [8397 ] pop argument 0
@R14                                                         // [8398 ] pop argument 0
M=D                                                          // [8399 ] pop argument 0
@R13                                                         // [8400 ] pop argument 0
D=M                                                          // [8401 ] pop argument 0
@R14                                                         // [8402 ] pop argument 0
A=M                                                          // [8403 ] pop argument 0
M=D                                                          // [8404 ] pop argument 0
@SP                                                          // [8405 ] push constant 0
M=M+1                                                        // [8406 ] push constant 0
A=M-1                                                        // [8407 ] push constant 0
M=0                                                          // [8408 ] push constant 0
@SP                                                          // [8409 ] pop local 0
AM=M-1                                                       // [8410 ] pop local 0
D=M                                                          // [8411 ] pop local 0
@R13                                                         // [8412 ] pop local 0
M=D                                                          // [8413 ] pop local 0
@LCL                                                         // [8414 ] pop local 0
D=M                                                          // [8415 ] pop local 0
@0                                                           // [8416 ] pop local 0
D=D+A                                                        // [8417 ] pop local 0
@R14                                                         // [8418 ] pop local 0
M=D                                                          // [8419 ] pop local 0
@R13                                                         // [8420 ] pop local 0
D=M                                                          // [8421 ] pop local 0
@R14                                                         // [8422 ] pop local 0
A=M                                                          // [8423 ] pop local 0
M=D                                                          // [8424 ] pop local 0
@Memory.3                                                    // [8425 ] push static 3
D=M                                                          // [8426 ] push static 3
@SP                                                          // [8427 ] push static 3
M=M+1                                                        // [8428 ] push static 3
A=M-1                                                        // [8429 ] push static 3
M=D                                                          // [8430 ] push static 3
@SP                                                          // [8431 ] pop local 2
AM=M-1                                                       // [8432 ] pop local 2
D=M                                                          // [8433 ] pop local 2
@R13                                                         // [8434 ] pop local 2
M=D                                                          // [8435 ] pop local 2
@LCL                                                         // [8436 ] pop local 2
D=M                                                          // [8437 ] pop local 2
@2                                                           // [8438 ] pop local 2
D=D+A                                                        // [8439 ] pop local 2
@R14                                                         // [8440 ] pop local 2
M=D                                                          // [8441 ] pop local 2
@R13                                                         // [8442 ] pop local 2
D=M                                                          // [8443 ] pop local 2
@R14                                                         // [8444 ] pop local 2
A=M                                                          // [8445 ] pop local 2
M=D                                                          // [8446 ] pop local 2
@LCL                                                         // [8447 ] push local 2
D=M                                                          // [8448 ] push local 2
@2                                                           // [8449 ] push local 2
A=D+A                                                        // [8450 ] push local 2
D=M                                                          // [8451 ] push local 2
@SP                                                          // [8452 ] push local 2
M=M+1                                                        // [8453 ] push local 2
A=M-1                                                        // [8454 ] push local 2
M=D                                                          // [8455 ] push local 2
@1                                                           // [8456 ] call Memory.peek 1
D=A                                                          // [8457 ] call Memory.peek 1
@R13                                                         // [8458 ] call Memory.peek 1
M=D                                                          // [8459 ] call Memory.peek 1
@Memory.peek                                                 // [8460 ] call Memory.peek 1
D=A                                                          // [8461 ] call Memory.peek 1
@R14                                                         // [8462 ] call Memory.peek 1
M=D                                                          // [8463 ] call Memory.peek 1
@return-87                                                   // [8464 ] call Memory.peek 1
D=A                                                          // [8465 ] call Memory.peek 1
@CALL                                                        // [8466 ] call Memory.peek 1
0;JEQ                                                        // [8467 ] call Memory.peek 1
(return-87)                                                  // [     ] call Memory.peek 1
@SP                                                          // [8468 ] pop local 1
AM=M-1                                                       // [8469 ] pop local 1
D=M                                                          // [8470 ] pop local 1
@R13                                                         // [8471 ] pop local 1
M=D                                                          // [8472 ] pop local 1
@LCL                                                         // [8473 ] pop local 1
D=M                                                          // [8474 ] pop local 1
@1                                                           // [8475 ] pop local 1
D=D+A                                                        // [8476 ] pop local 1
@R14                                                         // [8477 ] pop local 1
M=D                                                          // [8478 ] pop local 1
@R13                                                         // [8479 ] pop local 1
D=M                                                          // [8480 ] pop local 1
@R14                                                         // [8481 ] pop local 1
A=M                                                          // [8482 ] pop local 1
M=D                                                          // [8483 ] pop local 1
@LCL                                                         // [8484 ] push local 2
D=M                                                          // [8485 ] push local 2
@2                                                           // [8486 ] push local 2
A=D+A                                                        // [8487 ] push local 2
D=M                                                          // [8488 ] push local 2
@SP                                                          // [8489 ] push local 2
M=M+1                                                        // [8490 ] push local 2
A=M-1                                                        // [8491 ] push local 2
M=D                                                          // [8492 ] push local 2
@SP                                                          // [8493 ] push constant 1
M=M+1                                                        // [8494 ] push constant 1
A=M-1                                                        // [8495 ] push constant 1
M=1                                                          // [8496 ] push constant 1
@SP                                                          // [8497 ] add
AM=M-1                                                       // [8498 ] add
D=M                                                          // [8499 ] add
A=A-1                                                        // [8500 ] add
M=D+M                                                        // [8501 ] add
@1                                                           // [8502 ] call Memory.peek 1
D=A                                                          // [8503 ] call Memory.peek 1
@R13                                                         // [8504 ] call Memory.peek 1
M=D                                                          // [8505 ] call Memory.peek 1
@Memory.peek                                                 // [8506 ] call Memory.peek 1
D=A                                                          // [8507 ] call Memory.peek 1
@R14                                                         // [8508 ] call Memory.peek 1
M=D                                                          // [8509 ] call Memory.peek 1
@return-88                                                   // [8510 ] call Memory.peek 1
D=A                                                          // [8511 ] call Memory.peek 1
@CALL                                                        // [8512 ] call Memory.peek 1
0;JEQ                                                        // [8513 ] call Memory.peek 1
(return-88)                                                  // [     ] call Memory.peek 1
@SP                                                          // [8514 ] pop local 3
AM=M-1                                                       // [8515 ] pop local 3
D=M                                                          // [8516 ] pop local 3
@R13                                                         // [8517 ] pop local 3
M=D                                                          // [8518 ] pop local 3
@LCL                                                         // [8519 ] pop local 3
D=M                                                          // [8520 ] pop local 3
@3                                                           // [8521 ] pop local 3
D=D+A                                                        // [8522 ] pop local 3
@R14                                                         // [8523 ] pop local 3
M=D                                                          // [8524 ] pop local 3
@R13                                                         // [8525 ] pop local 3
D=M                                                          // [8526 ] pop local 3
@R14                                                         // [8527 ] pop local 3
A=M                                                          // [8528 ] pop local 3
M=D                                                          // [8529 ] pop local 3
(Memory.alloc$WHILE_EXP0)                                    // [     ] label WHILE_EXP0
@LCL                                                         // [8530 ] push local 1
D=M                                                          // [8531 ] push local 1
@1                                                           // [8532 ] push local 1
A=D+A                                                        // [8533 ] push local 1
D=M                                                          // [8534 ] push local 1
@SP                                                          // [8535 ] push local 1
M=M+1                                                        // [8536 ] push local 1
A=M-1                                                        // [8537 ] push local 1
M=D                                                          // [8538 ] push local 1
@ARG                                                         // [8539 ] push argument 0
D=M                                                          // [8540 ] push argument 0
@0                                                           // [8541 ] push argument 0
A=D+A                                                        // [8542 ] push argument 0
D=M                                                          // [8543 ] push argument 0
@SP                                                          // [8544 ] push argument 0
M=M+1                                                        // [8545 ] push argument 0
A=M-1                                                        // [8546 ] push argument 0
M=D                                                          // [8547 ] push argument 0
@CONTINUE_LT_18                                              // [8548 ] lt
D=A                                                          // [8549 ] lt
@R13                                                         // [8550 ] lt
M=D                                                          // [8551 ] lt
@SP                                                          // [8552 ] lt
AM=M-1                                                       // [8553 ] lt
D=M                                                          // [8554 ] lt
A=A-1                                                        // [8555 ] lt
D=D-M                                                        // [8556 ] lt
@INTERNAL_LT                                                 // [8557 ] lt
0;JEQ                                                        // [8558 ] lt
(CONTINUE_LT_18)                                             // [     ] lt
@LCL                                                         // [8559 ] push local 3
D=M                                                          // [8560 ] push local 3
@3                                                           // [8561 ] push local 3
A=D+A                                                        // [8562 ] push local 3
D=M                                                          // [8563 ] push local 3
@SP                                                          // [8564 ] push local 3
M=M+1                                                        // [8565 ] push local 3
A=M-1                                                        // [8566 ] push local 3
M=D                                                          // [8567 ] push local 3
@SP                                                          // [8568 ] push constant 0
M=M+1                                                        // [8569 ] push constant 0
A=M-1                                                        // [8570 ] push constant 0
M=0                                                          // [8571 ] push constant 0
@CONTINUE_EQ_12                                              // [8572 ] eq
D=A                                                          // [8573 ] eq
@R13                                                         // [8574 ] eq
M=D                                                          // [8575 ] eq
@SP                                                          // [8576 ] eq
AM=M-1                                                       // [8577 ] eq
D=M                                                          // [8578 ] eq
A=A-1                                                        // [8579 ] eq
D=D-M                                                        // [8580 ] eq
@INTERNAL_EQ                                                 // [8581 ] eq
0;JEQ                                                        // [8582 ] eq
(CONTINUE_EQ_12)                                             // [     ] eq
@SP                                                          // [8583 ] not
A=M-1                                                        // [8584 ] not
D=M                                                          // [8585 ] not
M=!D                                                         // [8586 ] not
@SP                                                          // [8587 ] and
AM=M-1                                                       // [8588 ] and
D=M                                                          // [8589 ] and
A=A-1                                                        // [8590 ] and
M=D&M                                                        // [8591 ] and
@SP                                                          // [8592 ] not
A=M-1                                                        // [8593 ] not
D=M                                                          // [8594 ] not
M=!D                                                         // [8595 ] not
@SP                                                          // [8596 ] if-goto WHILE_END0
AM=M-1                                                       // [8597 ] if-goto WHILE_END0
D=M                                                          // [8598 ] if-goto WHILE_END0
@Memory.alloc$WHILE_END0                                     // [8599 ] if-goto WHILE_END0
D;JNE                                                        // [8600 ] if-goto WHILE_END0
@LCL                                                         // [8601 ] push local 2
D=M                                                          // [8602 ] push local 2
@2                                                           // [8603 ] push local 2
A=D+A                                                        // [8604 ] push local 2
D=M                                                          // [8605 ] push local 2
@SP                                                          // [8606 ] push local 2
M=M+1                                                        // [8607 ] push local 2
A=M-1                                                        // [8608 ] push local 2
M=D                                                          // [8609 ] push local 2
@SP                                                          // [8610 ] pop local 0
AM=M-1                                                       // [8611 ] pop local 0
D=M                                                          // [8612 ] pop local 0
@R13                                                         // [8613 ] pop local 0
M=D                                                          // [8614 ] pop local 0
@LCL                                                         // [8615 ] pop local 0
D=M                                                          // [8616 ] pop local 0
@0                                                           // [8617 ] pop local 0
D=D+A                                                        // [8618 ] pop local 0
@R14                                                         // [8619 ] pop local 0
M=D                                                          // [8620 ] pop local 0
@R13                                                         // [8621 ] pop local 0
D=M                                                          // [8622 ] pop local 0
@R14                                                         // [8623 ] pop local 0
A=M                                                          // [8624 ] pop local 0
M=D                                                          // [8625 ] pop local 0
@LCL                                                         // [8626 ] push local 3
D=M                                                          // [8627 ] push local 3
@3                                                           // [8628 ] push local 3
A=D+A                                                        // [8629 ] push local 3
D=M                                                          // [8630 ] push local 3
@SP                                                          // [8631 ] push local 3
M=M+1                                                        // [8632 ] push local 3
A=M-1                                                        // [8633 ] push local 3
M=D                                                          // [8634 ] push local 3
@SP                                                          // [8635 ] pop local 2
AM=M-1                                                       // [8636 ] pop local 2
D=M                                                          // [8637 ] pop local 2
@R13                                                         // [8638 ] pop local 2
M=D                                                          // [8639 ] pop local 2
@LCL                                                         // [8640 ] pop local 2
D=M                                                          // [8641 ] pop local 2
@2                                                           // [8642 ] pop local 2
D=D+A                                                        // [8643 ] pop local 2
@R14                                                         // [8644 ] pop local 2
M=D                                                          // [8645 ] pop local 2
@R13                                                         // [8646 ] pop local 2
D=M                                                          // [8647 ] pop local 2
@R14                                                         // [8648 ] pop local 2
A=M                                                          // [8649 ] pop local 2
M=D                                                          // [8650 ] pop local 2
@LCL                                                         // [8651 ] push local 2
D=M                                                          // [8652 ] push local 2
@2                                                           // [8653 ] push local 2
A=D+A                                                        // [8654 ] push local 2
D=M                                                          // [8655 ] push local 2
@SP                                                          // [8656 ] push local 2
M=M+1                                                        // [8657 ] push local 2
A=M-1                                                        // [8658 ] push local 2
M=D                                                          // [8659 ] push local 2
@1                                                           // [8660 ] call Memory.peek 1
D=A                                                          // [8661 ] call Memory.peek 1
@R13                                                         // [8662 ] call Memory.peek 1
M=D                                                          // [8663 ] call Memory.peek 1
@Memory.peek                                                 // [8664 ] call Memory.peek 1
D=A                                                          // [8665 ] call Memory.peek 1
@R14                                                         // [8666 ] call Memory.peek 1
M=D                                                          // [8667 ] call Memory.peek 1
@return-89                                                   // [8668 ] call Memory.peek 1
D=A                                                          // [8669 ] call Memory.peek 1
@CALL                                                        // [8670 ] call Memory.peek 1
0;JEQ                                                        // [8671 ] call Memory.peek 1
(return-89)                                                  // [     ] call Memory.peek 1
@SP                                                          // [8672 ] pop local 1
AM=M-1                                                       // [8673 ] pop local 1
D=M                                                          // [8674 ] pop local 1
@R13                                                         // [8675 ] pop local 1
M=D                                                          // [8676 ] pop local 1
@LCL                                                         // [8677 ] pop local 1
D=M                                                          // [8678 ] pop local 1
@1                                                           // [8679 ] pop local 1
D=D+A                                                        // [8680 ] pop local 1
@R14                                                         // [8681 ] pop local 1
M=D                                                          // [8682 ] pop local 1
@R13                                                         // [8683 ] pop local 1
D=M                                                          // [8684 ] pop local 1
@R14                                                         // [8685 ] pop local 1
A=M                                                          // [8686 ] pop local 1
M=D                                                          // [8687 ] pop local 1
@LCL                                                         // [8688 ] push local 2
D=M                                                          // [8689 ] push local 2
@2                                                           // [8690 ] push local 2
A=D+A                                                        // [8691 ] push local 2
D=M                                                          // [8692 ] push local 2
@SP                                                          // [8693 ] push local 2
M=M+1                                                        // [8694 ] push local 2
A=M-1                                                        // [8695 ] push local 2
M=D                                                          // [8696 ] push local 2
@SP                                                          // [8697 ] push constant 1
M=M+1                                                        // [8698 ] push constant 1
A=M-1                                                        // [8699 ] push constant 1
M=1                                                          // [8700 ] push constant 1
@SP                                                          // [8701 ] add
AM=M-1                                                       // [8702 ] add
D=M                                                          // [8703 ] add
A=A-1                                                        // [8704 ] add
M=D+M                                                        // [8705 ] add
@1                                                           // [8706 ] call Memory.peek 1
D=A                                                          // [8707 ] call Memory.peek 1
@R13                                                         // [8708 ] call Memory.peek 1
M=D                                                          // [8709 ] call Memory.peek 1
@Memory.peek                                                 // [8710 ] call Memory.peek 1
D=A                                                          // [8711 ] call Memory.peek 1
@R14                                                         // [8712 ] call Memory.peek 1
M=D                                                          // [8713 ] call Memory.peek 1
@return-90                                                   // [8714 ] call Memory.peek 1
D=A                                                          // [8715 ] call Memory.peek 1
@CALL                                                        // [8716 ] call Memory.peek 1
0;JEQ                                                        // [8717 ] call Memory.peek 1
(return-90)                                                  // [     ] call Memory.peek 1
@SP                                                          // [8718 ] pop local 3
AM=M-1                                                       // [8719 ] pop local 3
D=M                                                          // [8720 ] pop local 3
@R13                                                         // [8721 ] pop local 3
M=D                                                          // [8722 ] pop local 3
@LCL                                                         // [8723 ] pop local 3
D=M                                                          // [8724 ] pop local 3
@3                                                           // [8725 ] pop local 3
D=D+A                                                        // [8726 ] pop local 3
@R14                                                         // [8727 ] pop local 3
M=D                                                          // [8728 ] pop local 3
@R13                                                         // [8729 ] pop local 3
D=M                                                          // [8730 ] pop local 3
@R14                                                         // [8731 ] pop local 3
A=M                                                          // [8732 ] pop local 3
M=D                                                          // [8733 ] pop local 3
@Memory.alloc$WHILE_EXP0                                     // [8734 ] goto WHILE_EXP0
0;JEQ                                                        // [8735 ] goto WHILE_EXP0
(Memory.alloc$WHILE_END0)                                    // [     ] label WHILE_END0
@LCL                                                         // [8736 ] push local 1
D=M                                                          // [8737 ] push local 1
@1                                                           // [8738 ] push local 1
A=D+A                                                        // [8739 ] push local 1
D=M                                                          // [8740 ] push local 1
@SP                                                          // [8741 ] push local 1
M=M+1                                                        // [8742 ] push local 1
A=M-1                                                        // [8743 ] push local 1
M=D                                                          // [8744 ] push local 1
@ARG                                                         // [8745 ] push argument 0
D=M                                                          // [8746 ] push argument 0
@0                                                           // [8747 ] push argument 0
A=D+A                                                        // [8748 ] push argument 0
D=M                                                          // [8749 ] push argument 0
@SP                                                          // [8750 ] push argument 0
M=M+1                                                        // [8751 ] push argument 0
A=M-1                                                        // [8752 ] push argument 0
M=D                                                          // [8753 ] push argument 0
@CONTINUE_LT_19                                              // [8754 ] lt
D=A                                                          // [8755 ] lt
@R13                                                         // [8756 ] lt
M=D                                                          // [8757 ] lt
@SP                                                          // [8758 ] lt
AM=M-1                                                       // [8759 ] lt
D=M                                                          // [8760 ] lt
A=A-1                                                        // [8761 ] lt
D=D-M                                                        // [8762 ] lt
@INTERNAL_LT                                                 // [8763 ] lt
0;JEQ                                                        // [8764 ] lt
(CONTINUE_LT_19)                                             // [     ] lt
@SP                                                          // [8765 ] not
A=M-1                                                        // [8766 ] not
D=M                                                          // [8767 ] not
M=!D                                                         // [8768 ] not
@SP                                                          // [8769 ] if-goto IF_TRUE0
AM=M-1                                                       // [8770 ] if-goto IF_TRUE0
D=M                                                          // [8771 ] if-goto IF_TRUE0
@Memory.alloc$IF_TRUE0                                       // [8772 ] if-goto IF_TRUE0
D;JNE                                                        // [8773 ] if-goto IF_TRUE0
@Memory.alloc$IF_FALSE0                                      // [8774 ] goto IF_FALSE0
0;JEQ                                                        // [8775 ] goto IF_FALSE0
(Memory.alloc$IF_TRUE0)                                      // [     ] label IF_TRUE0
@LCL                                                         // [8776 ] push local 2
D=M                                                          // [8777 ] push local 2
@2                                                           // [8778 ] push local 2
A=D+A                                                        // [8779 ] push local 2
D=M                                                          // [8780 ] push local 2
@SP                                                          // [8781 ] push local 2
M=M+1                                                        // [8782 ] push local 2
A=M-1                                                        // [8783 ] push local 2
M=D                                                          // [8784 ] push local 2
@ARG                                                         // [8785 ] push argument 0
D=M                                                          // [8786 ] push argument 0
@0                                                           // [8787 ] push argument 0
A=D+A                                                        // [8788 ] push argument 0
D=M                                                          // [8789 ] push argument 0
@SP                                                          // [8790 ] push argument 0
M=M+1                                                        // [8791 ] push argument 0
A=M-1                                                        // [8792 ] push argument 0
M=D                                                          // [8793 ] push argument 0
@SP                                                          // [8794 ] sub
AM=M-1                                                       // [8795 ] sub
D=M                                                          // [8796 ] sub
A=A-1                                                        // [8797 ] sub
M=M-D                                                        // [8798 ] sub
@SP                                                          // [8799 ] pop local 4
AM=M-1                                                       // [8800 ] pop local 4
D=M                                                          // [8801 ] pop local 4
@R13                                                         // [8802 ] pop local 4
M=D                                                          // [8803 ] pop local 4
@LCL                                                         // [8804 ] pop local 4
D=M                                                          // [8805 ] pop local 4
@4                                                           // [8806 ] pop local 4
D=D+A                                                        // [8807 ] pop local 4
@R14                                                         // [8808 ] pop local 4
M=D                                                          // [8809 ] pop local 4
@R13                                                         // [8810 ] pop local 4
D=M                                                          // [8811 ] pop local 4
@R14                                                         // [8812 ] pop local 4
A=M                                                          // [8813 ] pop local 4
M=D                                                          // [8814 ] pop local 4
@LCL                                                         // [8815 ] push local 2
D=M                                                          // [8816 ] push local 2
@2                                                           // [8817 ] push local 2
A=D+A                                                        // [8818 ] push local 2
D=M                                                          // [8819 ] push local 2
@SP                                                          // [8820 ] push local 2
M=M+1                                                        // [8821 ] push local 2
A=M-1                                                        // [8822 ] push local 2
M=D                                                          // [8823 ] push local 2
@SP                                                          // [8824 ] pop local 5
AM=M-1                                                       // [8825 ] pop local 5
D=M                                                          // [8826 ] pop local 5
@R13                                                         // [8827 ] pop local 5
M=D                                                          // [8828 ] pop local 5
@LCL                                                         // [8829 ] pop local 5
D=M                                                          // [8830 ] pop local 5
@5                                                           // [8831 ] pop local 5
D=D+A                                                        // [8832 ] pop local 5
@R14                                                         // [8833 ] pop local 5
M=D                                                          // [8834 ] pop local 5
@R13                                                         // [8835 ] pop local 5
D=M                                                          // [8836 ] pop local 5
@R14                                                         // [8837 ] pop local 5
A=M                                                          // [8838 ] pop local 5
M=D                                                          // [8839 ] pop local 5
@LCL                                                         // [8840 ] push local 5
D=M                                                          // [8841 ] push local 5
@5                                                           // [8842 ] push local 5
A=D+A                                                        // [8843 ] push local 5
D=M                                                          // [8844 ] push local 5
@SP                                                          // [8845 ] push local 5
M=M+1                                                        // [8846 ] push local 5
A=M-1                                                        // [8847 ] push local 5
M=D                                                          // [8848 ] push local 5
@Memory.0                                                    // [8849 ] push static 0
D=M                                                          // [8850 ] push static 0
@SP                                                          // [8851 ] push static 0
M=M+1                                                        // [8852 ] push static 0
A=M-1                                                        // [8853 ] push static 0
M=D                                                          // [8854 ] push static 0
@SP                                                          // [8855 ] add
AM=M-1                                                       // [8856 ] add
D=M                                                          // [8857 ] add
A=A-1                                                        // [8858 ] add
M=D+M                                                        // [8859 ] add
@ARG                                                         // [8860 ] push argument 0
D=M                                                          // [8861 ] push argument 0
@0                                                           // [8862 ] push argument 0
A=D+A                                                        // [8863 ] push argument 0
D=M                                                          // [8864 ] push argument 0
@SP                                                          // [8865 ] push argument 0
M=M+1                                                        // [8866 ] push argument 0
A=M-1                                                        // [8867 ] push argument 0
M=D                                                          // [8868 ] push argument 0
@SP                                                          // [8869 ] pop temp 0
AM=M-1                                                       // [8870 ] pop temp 0
D=M                                                          // [8871 ] pop temp 0
@5                                                           // [8872 ] pop temp 0
M=D                                                          // [8873 ] pop temp 0
@SP                                                          // [8874 ] pop pointer 1
AM=M-1                                                       // [8875 ] pop pointer 1
D=M                                                          // [8876 ] pop pointer 1
@4                                                           // [8877 ] pop pointer 1
M=D                                                          // [8878 ] pop pointer 1
@5                                                           // [8879 ] push temp 0
D=M                                                          // [8880 ] push temp 0
@SP                                                          // [8881 ] push temp 0
M=M+1                                                        // [8882 ] push temp 0
A=M-1                                                        // [8883 ] push temp 0
M=D                                                          // [8884 ] push temp 0
@SP                                                          // [8885 ] pop that 0
AM=M-1                                                       // [8886 ] pop that 0
D=M                                                          // [8887 ] pop that 0
@R13                                                         // [8888 ] pop that 0
M=D                                                          // [8889 ] pop that 0
@THAT                                                        // [8890 ] pop that 0
D=M                                                          // [8891 ] pop that 0
@0                                                           // [8892 ] pop that 0
D=D+A                                                        // [8893 ] pop that 0
@R14                                                         // [8894 ] pop that 0
M=D                                                          // [8895 ] pop that 0
@R13                                                         // [8896 ] pop that 0
D=M                                                          // [8897 ] pop that 0
@R14                                                         // [8898 ] pop that 0
A=M                                                          // [8899 ] pop that 0
M=D                                                          // [8900 ] pop that 0
@LCL                                                         // [8901 ] push local 0
D=M                                                          // [8902 ] push local 0
@0                                                           // [8903 ] push local 0
A=D+A                                                        // [8904 ] push local 0
D=M                                                          // [8905 ] push local 0
@SP                                                          // [8906 ] push local 0
M=M+1                                                        // [8907 ] push local 0
A=M-1                                                        // [8908 ] push local 0
M=D                                                          // [8909 ] push local 0
@SP                                                          // [8910 ] push constant 0
M=M+1                                                        // [8911 ] push constant 0
A=M-1                                                        // [8912 ] push constant 0
M=0                                                          // [8913 ] push constant 0
@CONTINUE_EQ_13                                              // [8914 ] eq
D=A                                                          // [8915 ] eq
@R13                                                         // [8916 ] eq
M=D                                                          // [8917 ] eq
@SP                                                          // [8918 ] eq
AM=M-1                                                       // [8919 ] eq
D=M                                                          // [8920 ] eq
A=A-1                                                        // [8921 ] eq
D=D-M                                                        // [8922 ] eq
@INTERNAL_EQ                                                 // [8923 ] eq
0;JEQ                                                        // [8924 ] eq
(CONTINUE_EQ_13)                                             // [     ] eq
@SP                                                          // [8925 ] if-goto IF_TRUE1
AM=M-1                                                       // [8926 ] if-goto IF_TRUE1
D=M                                                          // [8927 ] if-goto IF_TRUE1
@Memory.alloc$IF_TRUE1                                       // [8928 ] if-goto IF_TRUE1
D;JNE                                                        // [8929 ] if-goto IF_TRUE1
@Memory.alloc$IF_FALSE1                                      // [8930 ] goto IF_FALSE1
0;JEQ                                                        // [8931 ] goto IF_FALSE1
(Memory.alloc$IF_TRUE1)                                      // [     ] label IF_TRUE1
@LCL                                                         // [8932 ] push local 5
D=M                                                          // [8933 ] push local 5
@5                                                           // [8934 ] push local 5
A=D+A                                                        // [8935 ] push local 5
D=M                                                          // [8936 ] push local 5
@SP                                                          // [8937 ] push local 5
M=M+1                                                        // [8938 ] push local 5
A=M-1                                                        // [8939 ] push local 5
M=D                                                          // [8940 ] push local 5
@ARG                                                         // [8941 ] push argument 0
D=M                                                          // [8942 ] push argument 0
@0                                                           // [8943 ] push argument 0
A=D+A                                                        // [8944 ] push argument 0
D=M                                                          // [8945 ] push argument 0
@SP                                                          // [8946 ] push argument 0
M=M+1                                                        // [8947 ] push argument 0
A=M-1                                                        // [8948 ] push argument 0
M=D                                                          // [8949 ] push argument 0
@SP                                                          // [8950 ] add
AM=M-1                                                       // [8951 ] add
D=M                                                          // [8952 ] add
A=A-1                                                        // [8953 ] add
M=D+M                                                        // [8954 ] add
@SP                                                          // [8955 ] pop static 3
AM=M-1                                                       // [8956 ] pop static 3
D=M                                                          // [8957 ] pop static 3
@Memory.3                                                    // [8958 ] pop static 3
M=D                                                          // [8959 ] pop static 3
@Memory.3                                                    // [8960 ] push static 3
D=M                                                          // [8961 ] push static 3
@SP                                                          // [8962 ] push static 3
M=M+1                                                        // [8963 ] push static 3
A=M-1                                                        // [8964 ] push static 3
M=D                                                          // [8965 ] push static 3
@Memory.0                                                    // [8966 ] push static 0
D=M                                                          // [8967 ] push static 0
@SP                                                          // [8968 ] push static 0
M=M+1                                                        // [8969 ] push static 0
A=M-1                                                        // [8970 ] push static 0
M=D                                                          // [8971 ] push static 0
@SP                                                          // [8972 ] add
AM=M-1                                                       // [8973 ] add
D=M                                                          // [8974 ] add
A=A-1                                                        // [8975 ] add
M=D+M                                                        // [8976 ] add
@LCL                                                         // [8977 ] push local 4
D=M                                                          // [8978 ] push local 4
@4                                                           // [8979 ] push local 4
A=D+A                                                        // [8980 ] push local 4
D=M                                                          // [8981 ] push local 4
@SP                                                          // [8982 ] push local 4
M=M+1                                                        // [8983 ] push local 4
A=M-1                                                        // [8984 ] push local 4
M=D                                                          // [8985 ] push local 4
@SP                                                          // [8986 ] pop temp 0
AM=M-1                                                       // [8987 ] pop temp 0
D=M                                                          // [8988 ] pop temp 0
@5                                                           // [8989 ] pop temp 0
M=D                                                          // [8990 ] pop temp 0
@SP                                                          // [8991 ] pop pointer 1
AM=M-1                                                       // [8992 ] pop pointer 1
D=M                                                          // [8993 ] pop pointer 1
@4                                                           // [8994 ] pop pointer 1
M=D                                                          // [8995 ] pop pointer 1
@5                                                           // [8996 ] push temp 0
D=M                                                          // [8997 ] push temp 0
@SP                                                          // [8998 ] push temp 0
M=M+1                                                        // [8999 ] push temp 0
A=M-1                                                        // [9000 ] push temp 0
M=D                                                          // [9001 ] push temp 0
@SP                                                          // [9002 ] pop that 0
AM=M-1                                                       // [9003 ] pop that 0
D=M                                                          // [9004 ] pop that 0
@R13                                                         // [9005 ] pop that 0
M=D                                                          // [9006 ] pop that 0
@THAT                                                        // [9007 ] pop that 0
D=M                                                          // [9008 ] pop that 0
@0                                                           // [9009 ] pop that 0
D=D+A                                                        // [9010 ] pop that 0
@R14                                                         // [9011 ] pop that 0
M=D                                                          // [9012 ] pop that 0
@R13                                                         // [9013 ] pop that 0
D=M                                                          // [9014 ] pop that 0
@R14                                                         // [9015 ] pop that 0
A=M                                                          // [9016 ] pop that 0
M=D                                                          // [9017 ] pop that 0
@Memory.3                                                    // [9018 ] push static 3
D=M                                                          // [9019 ] push static 3
@SP                                                          // [9020 ] push static 3
M=M+1                                                        // [9021 ] push static 3
A=M-1                                                        // [9022 ] push static 3
M=D                                                          // [9023 ] push static 3
@SP                                                          // [9024 ] push constant 1
M=M+1                                                        // [9025 ] push constant 1
A=M-1                                                        // [9026 ] push constant 1
M=1                                                          // [9027 ] push constant 1
@SP                                                          // [9028 ] add
AM=M-1                                                       // [9029 ] add
D=M                                                          // [9030 ] add
A=A-1                                                        // [9031 ] add
M=D+M                                                        // [9032 ] add
@Memory.0                                                    // [9033 ] push static 0
D=M                                                          // [9034 ] push static 0
@SP                                                          // [9035 ] push static 0
M=M+1                                                        // [9036 ] push static 0
A=M-1                                                        // [9037 ] push static 0
M=D                                                          // [9038 ] push static 0
@SP                                                          // [9039 ] add
AM=M-1                                                       // [9040 ] add
D=M                                                          // [9041 ] add
A=A-1                                                        // [9042 ] add
M=D+M                                                        // [9043 ] add
@SP                                                          // [9044 ] push constant 0
M=M+1                                                        // [9045 ] push constant 0
A=M-1                                                        // [9046 ] push constant 0
M=0                                                          // [9047 ] push constant 0
@SP                                                          // [9048 ] pop temp 0
AM=M-1                                                       // [9049 ] pop temp 0
D=M                                                          // [9050 ] pop temp 0
@5                                                           // [9051 ] pop temp 0
M=D                                                          // [9052 ] pop temp 0
@SP                                                          // [9053 ] pop pointer 1
AM=M-1                                                       // [9054 ] pop pointer 1
D=M                                                          // [9055 ] pop pointer 1
@4                                                           // [9056 ] pop pointer 1
M=D                                                          // [9057 ] pop pointer 1
@5                                                           // [9058 ] push temp 0
D=M                                                          // [9059 ] push temp 0
@SP                                                          // [9060 ] push temp 0
M=M+1                                                        // [9061 ] push temp 0
A=M-1                                                        // [9062 ] push temp 0
M=D                                                          // [9063 ] push temp 0
@SP                                                          // [9064 ] pop that 0
AM=M-1                                                       // [9065 ] pop that 0
D=M                                                          // [9066 ] pop that 0
@R13                                                         // [9067 ] pop that 0
M=D                                                          // [9068 ] pop that 0
@THAT                                                        // [9069 ] pop that 0
D=M                                                          // [9070 ] pop that 0
@0                                                           // [9071 ] pop that 0
D=D+A                                                        // [9072 ] pop that 0
@R14                                                         // [9073 ] pop that 0
M=D                                                          // [9074 ] pop that 0
@R13                                                         // [9075 ] pop that 0
D=M                                                          // [9076 ] pop that 0
@R14                                                         // [9077 ] pop that 0
A=M                                                          // [9078 ] pop that 0
M=D                                                          // [9079 ] pop that 0
@Memory.alloc$IF_END1                                        // [9080 ] goto IF_END1
0;JEQ                                                        // [9081 ] goto IF_END1
(Memory.alloc$IF_FALSE1)                                     // [     ] label IF_FALSE1
@LCL                                                         // [9082 ] push local 0
D=M                                                          // [9083 ] push local 0
@0                                                           // [9084 ] push local 0
A=D+A                                                        // [9085 ] push local 0
D=M                                                          // [9086 ] push local 0
@SP                                                          // [9087 ] push local 0
M=M+1                                                        // [9088 ] push local 0
A=M-1                                                        // [9089 ] push local 0
M=D                                                          // [9090 ] push local 0
@SP                                                          // [9091 ] push constant 1
M=M+1                                                        // [9092 ] push constant 1
A=M-1                                                        // [9093 ] push constant 1
M=1                                                          // [9094 ] push constant 1
@SP                                                          // [9095 ] add
AM=M-1                                                       // [9096 ] add
D=M                                                          // [9097 ] add
A=A-1                                                        // [9098 ] add
M=D+M                                                        // [9099 ] add
@Memory.0                                                    // [9100 ] push static 0
D=M                                                          // [9101 ] push static 0
@SP                                                          // [9102 ] push static 0
M=M+1                                                        // [9103 ] push static 0
A=M-1                                                        // [9104 ] push static 0
M=D                                                          // [9105 ] push static 0
@SP                                                          // [9106 ] add
AM=M-1                                                       // [9107 ] add
D=M                                                          // [9108 ] add
A=A-1                                                        // [9109 ] add
M=D+M                                                        // [9110 ] add
@LCL                                                         // [9111 ] push local 5
D=M                                                          // [9112 ] push local 5
@5                                                           // [9113 ] push local 5
A=D+A                                                        // [9114 ] push local 5
D=M                                                          // [9115 ] push local 5
@SP                                                          // [9116 ] push local 5
M=M+1                                                        // [9117 ] push local 5
A=M-1                                                        // [9118 ] push local 5
M=D                                                          // [9119 ] push local 5
@ARG                                                         // [9120 ] push argument 0
D=M                                                          // [9121 ] push argument 0
@0                                                           // [9122 ] push argument 0
A=D+A                                                        // [9123 ] push argument 0
D=M                                                          // [9124 ] push argument 0
@SP                                                          // [9125 ] push argument 0
M=M+1                                                        // [9126 ] push argument 0
A=M-1                                                        // [9127 ] push argument 0
M=D                                                          // [9128 ] push argument 0
@SP                                                          // [9129 ] add
AM=M-1                                                       // [9130 ] add
D=M                                                          // [9131 ] add
A=A-1                                                        // [9132 ] add
M=D+M                                                        // [9133 ] add
@SP                                                          // [9134 ] pop temp 0
AM=M-1                                                       // [9135 ] pop temp 0
D=M                                                          // [9136 ] pop temp 0
@5                                                           // [9137 ] pop temp 0
M=D                                                          // [9138 ] pop temp 0
@SP                                                          // [9139 ] pop pointer 1
AM=M-1                                                       // [9140 ] pop pointer 1
D=M                                                          // [9141 ] pop pointer 1
@4                                                           // [9142 ] pop pointer 1
M=D                                                          // [9143 ] pop pointer 1
@5                                                           // [9144 ] push temp 0
D=M                                                          // [9145 ] push temp 0
@SP                                                          // [9146 ] push temp 0
M=M+1                                                        // [9147 ] push temp 0
A=M-1                                                        // [9148 ] push temp 0
M=D                                                          // [9149 ] push temp 0
@SP                                                          // [9150 ] pop that 0
AM=M-1                                                       // [9151 ] pop that 0
D=M                                                          // [9152 ] pop that 0
@R13                                                         // [9153 ] pop that 0
M=D                                                          // [9154 ] pop that 0
@THAT                                                        // [9155 ] pop that 0
D=M                                                          // [9156 ] pop that 0
@0                                                           // [9157 ] pop that 0
D=D+A                                                        // [9158 ] pop that 0
@R14                                                         // [9159 ] pop that 0
M=D                                                          // [9160 ] pop that 0
@R13                                                         // [9161 ] pop that 0
D=M                                                          // [9162 ] pop that 0
@R14                                                         // [9163 ] pop that 0
A=M                                                          // [9164 ] pop that 0
M=D                                                          // [9165 ] pop that 0
@LCL                                                         // [9166 ] push local 5
D=M                                                          // [9167 ] push local 5
@5                                                           // [9168 ] push local 5
A=D+A                                                        // [9169 ] push local 5
D=M                                                          // [9170 ] push local 5
@SP                                                          // [9171 ] push local 5
M=M+1                                                        // [9172 ] push local 5
A=M-1                                                        // [9173 ] push local 5
M=D                                                          // [9174 ] push local 5
@ARG                                                         // [9175 ] push argument 0
D=M                                                          // [9176 ] push argument 0
@0                                                           // [9177 ] push argument 0
A=D+A                                                        // [9178 ] push argument 0
D=M                                                          // [9179 ] push argument 0
@SP                                                          // [9180 ] push argument 0
M=M+1                                                        // [9181 ] push argument 0
A=M-1                                                        // [9182 ] push argument 0
M=D                                                          // [9183 ] push argument 0
@SP                                                          // [9184 ] add
AM=M-1                                                       // [9185 ] add
D=M                                                          // [9186 ] add
A=A-1                                                        // [9187 ] add
M=D+M                                                        // [9188 ] add
@Memory.0                                                    // [9189 ] push static 0
D=M                                                          // [9190 ] push static 0
@SP                                                          // [9191 ] push static 0
M=M+1                                                        // [9192 ] push static 0
A=M-1                                                        // [9193 ] push static 0
M=D                                                          // [9194 ] push static 0
@SP                                                          // [9195 ] add
AM=M-1                                                       // [9196 ] add
D=M                                                          // [9197 ] add
A=A-1                                                        // [9198 ] add
M=D+M                                                        // [9199 ] add
@LCL                                                         // [9200 ] push local 4
D=M                                                          // [9201 ] push local 4
@4                                                           // [9202 ] push local 4
A=D+A                                                        // [9203 ] push local 4
D=M                                                          // [9204 ] push local 4
@SP                                                          // [9205 ] push local 4
M=M+1                                                        // [9206 ] push local 4
A=M-1                                                        // [9207 ] push local 4
M=D                                                          // [9208 ] push local 4
@SP                                                          // [9209 ] pop temp 0
AM=M-1                                                       // [9210 ] pop temp 0
D=M                                                          // [9211 ] pop temp 0
@5                                                           // [9212 ] pop temp 0
M=D                                                          // [9213 ] pop temp 0
@SP                                                          // [9214 ] pop pointer 1
AM=M-1                                                       // [9215 ] pop pointer 1
D=M                                                          // [9216 ] pop pointer 1
@4                                                           // [9217 ] pop pointer 1
M=D                                                          // [9218 ] pop pointer 1
@5                                                           // [9219 ] push temp 0
D=M                                                          // [9220 ] push temp 0
@SP                                                          // [9221 ] push temp 0
M=M+1                                                        // [9222 ] push temp 0
A=M-1                                                        // [9223 ] push temp 0
M=D                                                          // [9224 ] push temp 0
@SP                                                          // [9225 ] pop that 0
AM=M-1                                                       // [9226 ] pop that 0
D=M                                                          // [9227 ] pop that 0
@R13                                                         // [9228 ] pop that 0
M=D                                                          // [9229 ] pop that 0
@THAT                                                        // [9230 ] pop that 0
D=M                                                          // [9231 ] pop that 0
@0                                                           // [9232 ] pop that 0
D=D+A                                                        // [9233 ] pop that 0
@R14                                                         // [9234 ] pop that 0
M=D                                                          // [9235 ] pop that 0
@R13                                                         // [9236 ] pop that 0
D=M                                                          // [9237 ] pop that 0
@R14                                                         // [9238 ] pop that 0
A=M                                                          // [9239 ] pop that 0
M=D                                                          // [9240 ] pop that 0
@LCL                                                         // [9241 ] push local 5
D=M                                                          // [9242 ] push local 5
@5                                                           // [9243 ] push local 5
A=D+A                                                        // [9244 ] push local 5
D=M                                                          // [9245 ] push local 5
@SP                                                          // [9246 ] push local 5
M=M+1                                                        // [9247 ] push local 5
A=M-1                                                        // [9248 ] push local 5
M=D                                                          // [9249 ] push local 5
@ARG                                                         // [9250 ] push argument 0
D=M                                                          // [9251 ] push argument 0
@0                                                           // [9252 ] push argument 0
A=D+A                                                        // [9253 ] push argument 0
D=M                                                          // [9254 ] push argument 0
@SP                                                          // [9255 ] push argument 0
M=M+1                                                        // [9256 ] push argument 0
A=M-1                                                        // [9257 ] push argument 0
M=D                                                          // [9258 ] push argument 0
@SP                                                          // [9259 ] add
AM=M-1                                                       // [9260 ] add
D=M                                                          // [9261 ] add
A=A-1                                                        // [9262 ] add
M=D+M                                                        // [9263 ] add
@SP                                                          // [9264 ] push constant 1
M=M+1                                                        // [9265 ] push constant 1
A=M-1                                                        // [9266 ] push constant 1
M=1                                                          // [9267 ] push constant 1
@SP                                                          // [9268 ] add
AM=M-1                                                       // [9269 ] add
D=M                                                          // [9270 ] add
A=A-1                                                        // [9271 ] add
M=D+M                                                        // [9272 ] add
@Memory.0                                                    // [9273 ] push static 0
D=M                                                          // [9274 ] push static 0
@SP                                                          // [9275 ] push static 0
M=M+1                                                        // [9276 ] push static 0
A=M-1                                                        // [9277 ] push static 0
M=D                                                          // [9278 ] push static 0
@SP                                                          // [9279 ] add
AM=M-1                                                       // [9280 ] add
D=M                                                          // [9281 ] add
A=A-1                                                        // [9282 ] add
M=D+M                                                        // [9283 ] add
@LCL                                                         // [9284 ] push local 3
D=M                                                          // [9285 ] push local 3
@3                                                           // [9286 ] push local 3
A=D+A                                                        // [9287 ] push local 3
D=M                                                          // [9288 ] push local 3
@SP                                                          // [9289 ] push local 3
M=M+1                                                        // [9290 ] push local 3
A=M-1                                                        // [9291 ] push local 3
M=D                                                          // [9292 ] push local 3
@SP                                                          // [9293 ] pop temp 0
AM=M-1                                                       // [9294 ] pop temp 0
D=M                                                          // [9295 ] pop temp 0
@5                                                           // [9296 ] pop temp 0
M=D                                                          // [9297 ] pop temp 0
@SP                                                          // [9298 ] pop pointer 1
AM=M-1                                                       // [9299 ] pop pointer 1
D=M                                                          // [9300 ] pop pointer 1
@4                                                           // [9301 ] pop pointer 1
M=D                                                          // [9302 ] pop pointer 1
@5                                                           // [9303 ] push temp 0
D=M                                                          // [9304 ] push temp 0
@SP                                                          // [9305 ] push temp 0
M=M+1                                                        // [9306 ] push temp 0
A=M-1                                                        // [9307 ] push temp 0
M=D                                                          // [9308 ] push temp 0
@SP                                                          // [9309 ] pop that 0
AM=M-1                                                       // [9310 ] pop that 0
D=M                                                          // [9311 ] pop that 0
@R13                                                         // [9312 ] pop that 0
M=D                                                          // [9313 ] pop that 0
@THAT                                                        // [9314 ] pop that 0
D=M                                                          // [9315 ] pop that 0
@0                                                           // [9316 ] pop that 0
D=D+A                                                        // [9317 ] pop that 0
@R14                                                         // [9318 ] pop that 0
M=D                                                          // [9319 ] pop that 0
@R13                                                         // [9320 ] pop that 0
D=M                                                          // [9321 ] pop that 0
@R14                                                         // [9322 ] pop that 0
A=M                                                          // [9323 ] pop that 0
M=D                                                          // [9324 ] pop that 0
(Memory.alloc$IF_END1)                                       // [     ] label IF_END1
@LCL                                                         // [9325 ] push local 5
D=M                                                          // [9326 ] push local 5
@5                                                           // [9327 ] push local 5
A=D+A                                                        // [9328 ] push local 5
D=M                                                          // [9329 ] push local 5
@SP                                                          // [9330 ] push local 5
M=M+1                                                        // [9331 ] push local 5
A=M-1                                                        // [9332 ] push local 5
M=D                                                          // [9333 ] push local 5
@SP                                                          // [9334 ] push constant 1
M=M+1                                                        // [9335 ] push constant 1
A=M-1                                                        // [9336 ] push constant 1
M=1                                                          // [9337 ] push constant 1
@SP                                                          // [9338 ] add
AM=M-1                                                       // [9339 ] add
D=M                                                          // [9340 ] add
A=A-1                                                        // [9341 ] add
M=D+M                                                        // [9342 ] add
@RETURN                                                      // [9343 ] return
0;JEQ                                                        // [9344 ] return
(Memory.alloc$IF_FALSE0)                                     // [     ] label IF_FALSE0
@SP                                                          // [9345 ] push constant 1
M=M+1                                                        // [9346 ] push constant 1
A=M-1                                                        // [9347 ] push constant 1
M=1                                                          // [9348 ] push constant 1
@1                                                           // [9349 ] call Sys.error 1
D=A                                                          // [9350 ] call Sys.error 1
@R13                                                         // [9351 ] call Sys.error 1
M=D                                                          // [9352 ] call Sys.error 1
@Sys.error                                                   // [9353 ] call Sys.error 1
D=A                                                          // [9354 ] call Sys.error 1
@R14                                                         // [9355 ] call Sys.error 1
M=D                                                          // [9356 ] call Sys.error 1
@return-91                                                   // [9357 ] call Sys.error 1
D=A                                                          // [9358 ] call Sys.error 1
@CALL                                                        // [9359 ] call Sys.error 1
0;JEQ                                                        // [9360 ] call Sys.error 1
(return-91)                                                  // [     ] call Sys.error 1
@SP                                                          // [9361 ] pop temp 0
AM=M-1                                                       // [9362 ] pop temp 0
D=M                                                          // [9363 ] pop temp 0
@5                                                           // [9364 ] pop temp 0
M=D                                                          // [9365 ] pop temp 0
@SP                                                          // [9366 ] push constant 1
M=M+1                                                        // [9367 ] push constant 1
A=M-1                                                        // [9368 ] push constant 1
M=1                                                          // [9369 ] push constant 1
@SP                                                          // [9370 ] neg
A=M-1                                                        // [9371 ] neg
D=M                                                          // [9372 ] neg
M=-D                                                         // [9373 ] neg
@RETURN                                                      // [9374 ] return
0;JEQ                                                        // [9375 ] return
(Memory.deAlloc)                                             // [     ] function Memory.deAlloc 2
@SP                                                          // [9376 ] function Memory.deAlloc 2
A=M                                                          // [9377 ] function Memory.deAlloc 2
M=0                                                          // [9378 ] function Memory.deAlloc 2
@SP                                                          // [9379 ] function Memory.deAlloc 2
M=M+1                                                        // [9380 ] function Memory.deAlloc 2
@SP                                                          // [9381 ] function Memory.deAlloc 2
A=M                                                          // [9382 ] function Memory.deAlloc 2
M=0                                                          // [9383 ] function Memory.deAlloc 2
@SP                                                          // [9384 ] function Memory.deAlloc 2
M=M+1                                                        // [9385 ] function Memory.deAlloc 2
@ARG                                                         // [9386 ] push argument 0
D=M                                                          // [9387 ] push argument 0
@0                                                           // [9388 ] push argument 0
A=D+A                                                        // [9389 ] push argument 0
D=M                                                          // [9390 ] push argument 0
@SP                                                          // [9391 ] push argument 0
M=M+1                                                        // [9392 ] push argument 0
A=M-1                                                        // [9393 ] push argument 0
M=D                                                          // [9394 ] push argument 0
@SP                                                          // [9395 ] push constant 1
M=M+1                                                        // [9396 ] push constant 1
A=M-1                                                        // [9397 ] push constant 1
M=1                                                          // [9398 ] push constant 1
@SP                                                          // [9399 ] sub
AM=M-1                                                       // [9400 ] sub
D=M                                                          // [9401 ] sub
A=A-1                                                        // [9402 ] sub
M=M-D                                                        // [9403 ] sub
@SP                                                          // [9404 ] pop local 0
AM=M-1                                                       // [9405 ] pop local 0
D=M                                                          // [9406 ] pop local 0
@R13                                                         // [9407 ] pop local 0
M=D                                                          // [9408 ] pop local 0
@LCL                                                         // [9409 ] pop local 0
D=M                                                          // [9410 ] pop local 0
@0                                                           // [9411 ] pop local 0
D=D+A                                                        // [9412 ] pop local 0
@R14                                                         // [9413 ] pop local 0
M=D                                                          // [9414 ] pop local 0
@R13                                                         // [9415 ] pop local 0
D=M                                                          // [9416 ] pop local 0
@R14                                                         // [9417 ] pop local 0
A=M                                                          // [9418 ] pop local 0
M=D                                                          // [9419 ] pop local 0
@LCL                                                         // [9420 ] push local 0
D=M                                                          // [9421 ] push local 0
@0                                                           // [9422 ] push local 0
A=D+A                                                        // [9423 ] push local 0
D=M                                                          // [9424 ] push local 0
@SP                                                          // [9425 ] push local 0
M=M+1                                                        // [9426 ] push local 0
A=M-1                                                        // [9427 ] push local 0
M=D                                                          // [9428 ] push local 0
@Memory.0                                                    // [9429 ] push static 0
D=M                                                          // [9430 ] push static 0
@SP                                                          // [9431 ] push static 0
M=M+1                                                        // [9432 ] push static 0
A=M-1                                                        // [9433 ] push static 0
M=D                                                          // [9434 ] push static 0
@SP                                                          // [9435 ] add
AM=M-1                                                       // [9436 ] add
D=M                                                          // [9437 ] add
A=A-1                                                        // [9438 ] add
M=D+M                                                        // [9439 ] add
@SP                                                          // [9440 ] pop pointer 1
AM=M-1                                                       // [9441 ] pop pointer 1
D=M                                                          // [9442 ] pop pointer 1
@4                                                           // [9443 ] pop pointer 1
M=D                                                          // [9444 ] pop pointer 1
@THAT                                                        // [9445 ] push that 0
D=M                                                          // [9446 ] push that 0
@0                                                           // [9447 ] push that 0
A=D+A                                                        // [9448 ] push that 0
D=M                                                          // [9449 ] push that 0
@SP                                                          // [9450 ] push that 0
M=M+1                                                        // [9451 ] push that 0
A=M-1                                                        // [9452 ] push that 0
M=D                                                          // [9453 ] push that 0
@SP                                                          // [9454 ] pop local 1
AM=M-1                                                       // [9455 ] pop local 1
D=M                                                          // [9456 ] pop local 1
@R13                                                         // [9457 ] pop local 1
M=D                                                          // [9458 ] pop local 1
@LCL                                                         // [9459 ] pop local 1
D=M                                                          // [9460 ] pop local 1
@1                                                           // [9461 ] pop local 1
D=D+A                                                        // [9462 ] pop local 1
@R14                                                         // [9463 ] pop local 1
M=D                                                          // [9464 ] pop local 1
@R13                                                         // [9465 ] pop local 1
D=M                                                          // [9466 ] pop local 1
@R14                                                         // [9467 ] pop local 1
A=M                                                          // [9468 ] pop local 1
M=D                                                          // [9469 ] pop local 1
@LCL                                                         // [9470 ] push local 0
D=M                                                          // [9471 ] push local 0
@0                                                           // [9472 ] push local 0
A=D+A                                                        // [9473 ] push local 0
D=M                                                          // [9474 ] push local 0
@SP                                                          // [9475 ] push local 0
M=M+1                                                        // [9476 ] push local 0
A=M-1                                                        // [9477 ] push local 0
M=D                                                          // [9478 ] push local 0
@SP                                                          // [9479 ] push constant 1
M=M+1                                                        // [9480 ] push constant 1
A=M-1                                                        // [9481 ] push constant 1
M=1                                                          // [9482 ] push constant 1
@SP                                                          // [9483 ] add
AM=M-1                                                       // [9484 ] add
D=M                                                          // [9485 ] add
A=A-1                                                        // [9486 ] add
M=D+M                                                        // [9487 ] add
@Memory.0                                                    // [9488 ] push static 0
D=M                                                          // [9489 ] push static 0
@SP                                                          // [9490 ] push static 0
M=M+1                                                        // [9491 ] push static 0
A=M-1                                                        // [9492 ] push static 0
M=D                                                          // [9493 ] push static 0
@SP                                                          // [9494 ] add
AM=M-1                                                       // [9495 ] add
D=M                                                          // [9496 ] add
A=A-1                                                        // [9497 ] add
M=D+M                                                        // [9498 ] add
@Memory.3                                                    // [9499 ] push static 3
D=M                                                          // [9500 ] push static 3
@SP                                                          // [9501 ] push static 3
M=M+1                                                        // [9502 ] push static 3
A=M-1                                                        // [9503 ] push static 3
M=D                                                          // [9504 ] push static 3
@SP                                                          // [9505 ] pop temp 0
AM=M-1                                                       // [9506 ] pop temp 0
D=M                                                          // [9507 ] pop temp 0
@5                                                           // [9508 ] pop temp 0
M=D                                                          // [9509 ] pop temp 0
@SP                                                          // [9510 ] pop pointer 1
AM=M-1                                                       // [9511 ] pop pointer 1
D=M                                                          // [9512 ] pop pointer 1
@4                                                           // [9513 ] pop pointer 1
M=D                                                          // [9514 ] pop pointer 1
@5                                                           // [9515 ] push temp 0
D=M                                                          // [9516 ] push temp 0
@SP                                                          // [9517 ] push temp 0
M=M+1                                                        // [9518 ] push temp 0
A=M-1                                                        // [9519 ] push temp 0
M=D                                                          // [9520 ] push temp 0
@SP                                                          // [9521 ] pop that 0
AM=M-1                                                       // [9522 ] pop that 0
D=M                                                          // [9523 ] pop that 0
@R13                                                         // [9524 ] pop that 0
M=D                                                          // [9525 ] pop that 0
@THAT                                                        // [9526 ] pop that 0
D=M                                                          // [9527 ] pop that 0
@0                                                           // [9528 ] pop that 0
D=D+A                                                        // [9529 ] pop that 0
@R14                                                         // [9530 ] pop that 0
M=D                                                          // [9531 ] pop that 0
@R13                                                         // [9532 ] pop that 0
D=M                                                          // [9533 ] pop that 0
@R14                                                         // [9534 ] pop that 0
A=M                                                          // [9535 ] pop that 0
M=D                                                          // [9536 ] pop that 0
@LCL                                                         // [9537 ] push local 0
D=M                                                          // [9538 ] push local 0
@0                                                           // [9539 ] push local 0
A=D+A                                                        // [9540 ] push local 0
D=M                                                          // [9541 ] push local 0
@SP                                                          // [9542 ] push local 0
M=M+1                                                        // [9543 ] push local 0
A=M-1                                                        // [9544 ] push local 0
M=D                                                          // [9545 ] push local 0
@SP                                                          // [9546 ] pop static 3
AM=M-1                                                       // [9547 ] pop static 3
D=M                                                          // [9548 ] pop static 3
@Memory.3                                                    // [9549 ] pop static 3
M=D                                                          // [9550 ] pop static 3
@SP                                                          // [9551 ] push constant 0
M=M+1                                                        // [9552 ] push constant 0
A=M-1                                                        // [9553 ] push constant 0
M=0                                                          // [9554 ] push constant 0
@RETURN                                                      // [9555 ] return
0;JEQ                                                        // [9556 ] return
(Output.init)                                                // [     ] function Output.init 0
@SP                                                          // [9557 ] push constant 0
M=M+1                                                        // [9558 ] push constant 0
A=M-1                                                        // [9559 ] push constant 0
M=0                                                          // [9560 ] push constant 0
@SP                                                          // [9561 ] pop static 1
AM=M-1                                                       // [9562 ] pop static 1
D=M                                                          // [9563 ] pop static 1
@Output.1                                                    // [9564 ] pop static 1
M=D                                                          // [9565 ] pop static 1
@SP                                                          // [9566 ] push constant 0
M=M+1                                                        // [9567 ] push constant 0
A=M-1                                                        // [9568 ] push constant 0
M=0                                                          // [9569 ] push constant 0
@SP                                                          // [9570 ] pop static 2
AM=M-1                                                       // [9571 ] pop static 2
D=M                                                          // [9572 ] pop static 2
@Output.2                                                    // [9573 ] pop static 2
M=D                                                          // [9574 ] pop static 2
@16384                                                       // [9575 ] push constant 16384
D=A                                                          // [9576 ] push constant 16384
@SP                                                          // [9577 ] push constant 16384
M=M+1                                                        // [9578 ] push constant 16384
A=M-1                                                        // [9579 ] push constant 16384
M=D                                                          // [9580 ] push constant 16384
@SP                                                          // [9581 ] pop static 3
AM=M-1                                                       // [9582 ] pop static 3
D=M                                                          // [9583 ] pop static 3
@Output.3                                                    // [9584 ] pop static 3
M=D                                                          // [9585 ] pop static 3
@6                                                           // [9586 ] push constant 6
D=A                                                          // [9587 ] push constant 6
@SP                                                          // [9588 ] push constant 6
M=M+1                                                        // [9589 ] push constant 6
A=M-1                                                        // [9590 ] push constant 6
M=D                                                          // [9591 ] push constant 6
@1                                                           // [9592 ] call String.new 1
D=A                                                          // [9593 ] call String.new 1
@R13                                                         // [9594 ] call String.new 1
M=D                                                          // [9595 ] call String.new 1
@String.new                                                  // [9596 ] call String.new 1
D=A                                                          // [9597 ] call String.new 1
@R14                                                         // [9598 ] call String.new 1
M=D                                                          // [9599 ] call String.new 1
@return-92                                                   // [9600 ] call String.new 1
D=A                                                          // [9601 ] call String.new 1
@CALL                                                        // [9602 ] call String.new 1
0;JEQ                                                        // [9603 ] call String.new 1
(return-92)                                                  // [     ] call String.new 1
@SP                                                          // [9604 ] pop static 4
AM=M-1                                                       // [9605 ] pop static 4
D=M                                                          // [9606 ] pop static 4
@Output.4                                                    // [9607 ] pop static 4
M=D                                                          // [9608 ] pop static 4
@0                                                           // [9609 ] call Output.initMap 0
D=A                                                          // [9610 ] call Output.initMap 0
@R13                                                         // [9611 ] call Output.initMap 0
M=D                                                          // [9612 ] call Output.initMap 0
@Output.initMap                                              // [9613 ] call Output.initMap 0
D=A                                                          // [9614 ] call Output.initMap 0
@R14                                                         // [9615 ] call Output.initMap 0
M=D                                                          // [9616 ] call Output.initMap 0
@return-93                                                   // [9617 ] call Output.initMap 0
D=A                                                          // [9618 ] call Output.initMap 0
@CALL                                                        // [9619 ] call Output.initMap 0
0;JEQ                                                        // [9620 ] call Output.initMap 0
(return-93)                                                  // [     ] call Output.initMap 0
@SP                                                          // [9621 ] pop temp 0
AM=M-1                                                       // [9622 ] pop temp 0
D=M                                                          // [9623 ] pop temp 0
@5                                                           // [9624 ] pop temp 0
M=D                                                          // [9625 ] pop temp 0
@SP                                                          // [9626 ] push constant 0
M=M+1                                                        // [9627 ] push constant 0
A=M-1                                                        // [9628 ] push constant 0
M=0                                                          // [9629 ] push constant 0
@RETURN                                                      // [9630 ] return
0;JEQ                                                        // [9631 ] return
(Output.initMap)                                             // [     ] function Output.initMap 1
@SP                                                          // [9632 ] function Output.initMap 1
A=M                                                          // [9633 ] function Output.initMap 1
M=0                                                          // [9634 ] function Output.initMap 1
@SP                                                          // [9635 ] function Output.initMap 1
M=M+1                                                        // [9636 ] function Output.initMap 1
@127                                                         // [9637 ] push constant 127
D=A                                                          // [9638 ] push constant 127
@SP                                                          // [9639 ] push constant 127
M=M+1                                                        // [9640 ] push constant 127
A=M-1                                                        // [9641 ] push constant 127
M=D                                                          // [9642 ] push constant 127
@1                                                           // [9643 ] call Array.new 1
D=A                                                          // [9644 ] call Array.new 1
@R13                                                         // [9645 ] call Array.new 1
M=D                                                          // [9646 ] call Array.new 1
@Array.new                                                   // [9647 ] call Array.new 1
D=A                                                          // [9648 ] call Array.new 1
@R14                                                         // [9649 ] call Array.new 1
M=D                                                          // [9650 ] call Array.new 1
@return-94                                                   // [9651 ] call Array.new 1
D=A                                                          // [9652 ] call Array.new 1
@CALL                                                        // [9653 ] call Array.new 1
0;JEQ                                                        // [9654 ] call Array.new 1
(return-94)                                                  // [     ] call Array.new 1
@SP                                                          // [9655 ] pop static 0
AM=M-1                                                       // [9656 ] pop static 0
D=M                                                          // [9657 ] pop static 0
@Output.0                                                    // [9658 ] pop static 0
M=D                                                          // [9659 ] pop static 0
@SP                                                          // [9660 ] push constant 0
M=M+1                                                        // [9661 ] push constant 0
A=M-1                                                        // [9662 ] push constant 0
M=0                                                          // [9663 ] push constant 0
@63                                                          // [9664 ] push constant 63
D=A                                                          // [9665 ] push constant 63
@SP                                                          // [9666 ] push constant 63
M=M+1                                                        // [9667 ] push constant 63
A=M-1                                                        // [9668 ] push constant 63
M=D                                                          // [9669 ] push constant 63
@63                                                          // [9670 ] push constant 63
D=A                                                          // [9671 ] push constant 63
@SP                                                          // [9672 ] push constant 63
M=M+1                                                        // [9673 ] push constant 63
A=M-1                                                        // [9674 ] push constant 63
M=D                                                          // [9675 ] push constant 63
@63                                                          // [9676 ] push constant 63
D=A                                                          // [9677 ] push constant 63
@SP                                                          // [9678 ] push constant 63
M=M+1                                                        // [9679 ] push constant 63
A=M-1                                                        // [9680 ] push constant 63
M=D                                                          // [9681 ] push constant 63
@63                                                          // [9682 ] push constant 63
D=A                                                          // [9683 ] push constant 63
@SP                                                          // [9684 ] push constant 63
M=M+1                                                        // [9685 ] push constant 63
A=M-1                                                        // [9686 ] push constant 63
M=D                                                          // [9687 ] push constant 63
@63                                                          // [9688 ] push constant 63
D=A                                                          // [9689 ] push constant 63
@SP                                                          // [9690 ] push constant 63
M=M+1                                                        // [9691 ] push constant 63
A=M-1                                                        // [9692 ] push constant 63
M=D                                                          // [9693 ] push constant 63
@63                                                          // [9694 ] push constant 63
D=A                                                          // [9695 ] push constant 63
@SP                                                          // [9696 ] push constant 63
M=M+1                                                        // [9697 ] push constant 63
A=M-1                                                        // [9698 ] push constant 63
M=D                                                          // [9699 ] push constant 63
@63                                                          // [9700 ] push constant 63
D=A                                                          // [9701 ] push constant 63
@SP                                                          // [9702 ] push constant 63
M=M+1                                                        // [9703 ] push constant 63
A=M-1                                                        // [9704 ] push constant 63
M=D                                                          // [9705 ] push constant 63
@63                                                          // [9706 ] push constant 63
D=A                                                          // [9707 ] push constant 63
@SP                                                          // [9708 ] push constant 63
M=M+1                                                        // [9709 ] push constant 63
A=M-1                                                        // [9710 ] push constant 63
M=D                                                          // [9711 ] push constant 63
@63                                                          // [9712 ] push constant 63
D=A                                                          // [9713 ] push constant 63
@SP                                                          // [9714 ] push constant 63
M=M+1                                                        // [9715 ] push constant 63
A=M-1                                                        // [9716 ] push constant 63
M=D                                                          // [9717 ] push constant 63
@SP                                                          // [9718 ] push constant 0
M=M+1                                                        // [9719 ] push constant 0
A=M-1                                                        // [9720 ] push constant 0
M=0                                                          // [9721 ] push constant 0
@SP                                                          // [9722 ] push constant 0
M=M+1                                                        // [9723 ] push constant 0
A=M-1                                                        // [9724 ] push constant 0
M=0                                                          // [9725 ] push constant 0
@12                                                          // [9726 ] call Output.create 12
D=A                                                          // [9727 ] call Output.create 12
@R13                                                         // [9728 ] call Output.create 12
M=D                                                          // [9729 ] call Output.create 12
@Output.create                                               // [9730 ] call Output.create 12
D=A                                                          // [9731 ] call Output.create 12
@R14                                                         // [9732 ] call Output.create 12
M=D                                                          // [9733 ] call Output.create 12
@return-95                                                   // [9734 ] call Output.create 12
D=A                                                          // [9735 ] call Output.create 12
@CALL                                                        // [9736 ] call Output.create 12
0;JEQ                                                        // [9737 ] call Output.create 12
(return-95)                                                  // [     ] call Output.create 12
@SP                                                          // [9738 ] pop temp 0
AM=M-1                                                       // [9739 ] pop temp 0
D=M                                                          // [9740 ] pop temp 0
@5                                                           // [9741 ] pop temp 0
M=D                                                          // [9742 ] pop temp 0
@32                                                          // [9743 ] push constant 32
D=A                                                          // [9744 ] push constant 32
@SP                                                          // [9745 ] push constant 32
M=M+1                                                        // [9746 ] push constant 32
A=M-1                                                        // [9747 ] push constant 32
M=D                                                          // [9748 ] push constant 32
@SP                                                          // [9749 ] push constant 0
M=M+1                                                        // [9750 ] push constant 0
A=M-1                                                        // [9751 ] push constant 0
M=0                                                          // [9752 ] push constant 0
@SP                                                          // [9753 ] push constant 0
M=M+1                                                        // [9754 ] push constant 0
A=M-1                                                        // [9755 ] push constant 0
M=0                                                          // [9756 ] push constant 0
@SP                                                          // [9757 ] push constant 0
M=M+1                                                        // [9758 ] push constant 0
A=M-1                                                        // [9759 ] push constant 0
M=0                                                          // [9760 ] push constant 0
@SP                                                          // [9761 ] push constant 0
M=M+1                                                        // [9762 ] push constant 0
A=M-1                                                        // [9763 ] push constant 0
M=0                                                          // [9764 ] push constant 0
@SP                                                          // [9765 ] push constant 0
M=M+1                                                        // [9766 ] push constant 0
A=M-1                                                        // [9767 ] push constant 0
M=0                                                          // [9768 ] push constant 0
@SP                                                          // [9769 ] push constant 0
M=M+1                                                        // [9770 ] push constant 0
A=M-1                                                        // [9771 ] push constant 0
M=0                                                          // [9772 ] push constant 0
@SP                                                          // [9773 ] push constant 0
M=M+1                                                        // [9774 ] push constant 0
A=M-1                                                        // [9775 ] push constant 0
M=0                                                          // [9776 ] push constant 0
@SP                                                          // [9777 ] push constant 0
M=M+1                                                        // [9778 ] push constant 0
A=M-1                                                        // [9779 ] push constant 0
M=0                                                          // [9780 ] push constant 0
@SP                                                          // [9781 ] push constant 0
M=M+1                                                        // [9782 ] push constant 0
A=M-1                                                        // [9783 ] push constant 0
M=0                                                          // [9784 ] push constant 0
@SP                                                          // [9785 ] push constant 0
M=M+1                                                        // [9786 ] push constant 0
A=M-1                                                        // [9787 ] push constant 0
M=0                                                          // [9788 ] push constant 0
@SP                                                          // [9789 ] push constant 0
M=M+1                                                        // [9790 ] push constant 0
A=M-1                                                        // [9791 ] push constant 0
M=0                                                          // [9792 ] push constant 0
@12                                                          // [9793 ] call Output.create 12
D=A                                                          // [9794 ] call Output.create 12
@R13                                                         // [9795 ] call Output.create 12
M=D                                                          // [9796 ] call Output.create 12
@Output.create                                               // [9797 ] call Output.create 12
D=A                                                          // [9798 ] call Output.create 12
@R14                                                         // [9799 ] call Output.create 12
M=D                                                          // [9800 ] call Output.create 12
@return-96                                                   // [9801 ] call Output.create 12
D=A                                                          // [9802 ] call Output.create 12
@CALL                                                        // [9803 ] call Output.create 12
0;JEQ                                                        // [9804 ] call Output.create 12
(return-96)                                                  // [     ] call Output.create 12
@SP                                                          // [9805 ] pop temp 0
AM=M-1                                                       // [9806 ] pop temp 0
D=M                                                          // [9807 ] pop temp 0
@5                                                           // [9808 ] pop temp 0
M=D                                                          // [9809 ] pop temp 0
@33                                                          // [9810 ] push constant 33
D=A                                                          // [9811 ] push constant 33
@SP                                                          // [9812 ] push constant 33
M=M+1                                                        // [9813 ] push constant 33
A=M-1                                                        // [9814 ] push constant 33
M=D                                                          // [9815 ] push constant 33
@12                                                          // [9816 ] push constant 12
D=A                                                          // [9817 ] push constant 12
@SP                                                          // [9818 ] push constant 12
M=M+1                                                        // [9819 ] push constant 12
A=M-1                                                        // [9820 ] push constant 12
M=D                                                          // [9821 ] push constant 12
@30                                                          // [9822 ] push constant 30
D=A                                                          // [9823 ] push constant 30
@SP                                                          // [9824 ] push constant 30
M=M+1                                                        // [9825 ] push constant 30
A=M-1                                                        // [9826 ] push constant 30
M=D                                                          // [9827 ] push constant 30
@30                                                          // [9828 ] push constant 30
D=A                                                          // [9829 ] push constant 30
@SP                                                          // [9830 ] push constant 30
M=M+1                                                        // [9831 ] push constant 30
A=M-1                                                        // [9832 ] push constant 30
M=D                                                          // [9833 ] push constant 30
@30                                                          // [9834 ] push constant 30
D=A                                                          // [9835 ] push constant 30
@SP                                                          // [9836 ] push constant 30
M=M+1                                                        // [9837 ] push constant 30
A=M-1                                                        // [9838 ] push constant 30
M=D                                                          // [9839 ] push constant 30
@12                                                          // [9840 ] push constant 12
D=A                                                          // [9841 ] push constant 12
@SP                                                          // [9842 ] push constant 12
M=M+1                                                        // [9843 ] push constant 12
A=M-1                                                        // [9844 ] push constant 12
M=D                                                          // [9845 ] push constant 12
@12                                                          // [9846 ] push constant 12
D=A                                                          // [9847 ] push constant 12
@SP                                                          // [9848 ] push constant 12
M=M+1                                                        // [9849 ] push constant 12
A=M-1                                                        // [9850 ] push constant 12
M=D                                                          // [9851 ] push constant 12
@SP                                                          // [9852 ] push constant 0
M=M+1                                                        // [9853 ] push constant 0
A=M-1                                                        // [9854 ] push constant 0
M=0                                                          // [9855 ] push constant 0
@12                                                          // [9856 ] push constant 12
D=A                                                          // [9857 ] push constant 12
@SP                                                          // [9858 ] push constant 12
M=M+1                                                        // [9859 ] push constant 12
A=M-1                                                        // [9860 ] push constant 12
M=D                                                          // [9861 ] push constant 12
@12                                                          // [9862 ] push constant 12
D=A                                                          // [9863 ] push constant 12
@SP                                                          // [9864 ] push constant 12
M=M+1                                                        // [9865 ] push constant 12
A=M-1                                                        // [9866 ] push constant 12
M=D                                                          // [9867 ] push constant 12
@SP                                                          // [9868 ] push constant 0
M=M+1                                                        // [9869 ] push constant 0
A=M-1                                                        // [9870 ] push constant 0
M=0                                                          // [9871 ] push constant 0
@SP                                                          // [9872 ] push constant 0
M=M+1                                                        // [9873 ] push constant 0
A=M-1                                                        // [9874 ] push constant 0
M=0                                                          // [9875 ] push constant 0
@12                                                          // [9876 ] call Output.create 12
D=A                                                          // [9877 ] call Output.create 12
@R13                                                         // [9878 ] call Output.create 12
M=D                                                          // [9879 ] call Output.create 12
@Output.create                                               // [9880 ] call Output.create 12
D=A                                                          // [9881 ] call Output.create 12
@R14                                                         // [9882 ] call Output.create 12
M=D                                                          // [9883 ] call Output.create 12
@return-97                                                   // [9884 ] call Output.create 12
D=A                                                          // [9885 ] call Output.create 12
@CALL                                                        // [9886 ] call Output.create 12
0;JEQ                                                        // [9887 ] call Output.create 12
(return-97)                                                  // [     ] call Output.create 12
@SP                                                          // [9888 ] pop temp 0
AM=M-1                                                       // [9889 ] pop temp 0
D=M                                                          // [9890 ] pop temp 0
@5                                                           // [9891 ] pop temp 0
M=D                                                          // [9892 ] pop temp 0
@34                                                          // [9893 ] push constant 34
D=A                                                          // [9894 ] push constant 34
@SP                                                          // [9895 ] push constant 34
M=M+1                                                        // [9896 ] push constant 34
A=M-1                                                        // [9897 ] push constant 34
M=D                                                          // [9898 ] push constant 34
@54                                                          // [9899 ] push constant 54
D=A                                                          // [9900 ] push constant 54
@SP                                                          // [9901 ] push constant 54
M=M+1                                                        // [9902 ] push constant 54
A=M-1                                                        // [9903 ] push constant 54
M=D                                                          // [9904 ] push constant 54
@54                                                          // [9905 ] push constant 54
D=A                                                          // [9906 ] push constant 54
@SP                                                          // [9907 ] push constant 54
M=M+1                                                        // [9908 ] push constant 54
A=M-1                                                        // [9909 ] push constant 54
M=D                                                          // [9910 ] push constant 54
@20                                                          // [9911 ] push constant 20
D=A                                                          // [9912 ] push constant 20
@SP                                                          // [9913 ] push constant 20
M=M+1                                                        // [9914 ] push constant 20
A=M-1                                                        // [9915 ] push constant 20
M=D                                                          // [9916 ] push constant 20
@SP                                                          // [9917 ] push constant 0
M=M+1                                                        // [9918 ] push constant 0
A=M-1                                                        // [9919 ] push constant 0
M=0                                                          // [9920 ] push constant 0
@SP                                                          // [9921 ] push constant 0
M=M+1                                                        // [9922 ] push constant 0
A=M-1                                                        // [9923 ] push constant 0
M=0                                                          // [9924 ] push constant 0
@SP                                                          // [9925 ] push constant 0
M=M+1                                                        // [9926 ] push constant 0
A=M-1                                                        // [9927 ] push constant 0
M=0                                                          // [9928 ] push constant 0
@SP                                                          // [9929 ] push constant 0
M=M+1                                                        // [9930 ] push constant 0
A=M-1                                                        // [9931 ] push constant 0
M=0                                                          // [9932 ] push constant 0
@SP                                                          // [9933 ] push constant 0
M=M+1                                                        // [9934 ] push constant 0
A=M-1                                                        // [9935 ] push constant 0
M=0                                                          // [9936 ] push constant 0
@SP                                                          // [9937 ] push constant 0
M=M+1                                                        // [9938 ] push constant 0
A=M-1                                                        // [9939 ] push constant 0
M=0                                                          // [9940 ] push constant 0
@SP                                                          // [9941 ] push constant 0
M=M+1                                                        // [9942 ] push constant 0
A=M-1                                                        // [9943 ] push constant 0
M=0                                                          // [9944 ] push constant 0
@SP                                                          // [9945 ] push constant 0
M=M+1                                                        // [9946 ] push constant 0
A=M-1                                                        // [9947 ] push constant 0
M=0                                                          // [9948 ] push constant 0
@12                                                          // [9949 ] call Output.create 12
D=A                                                          // [9950 ] call Output.create 12
@R13                                                         // [9951 ] call Output.create 12
M=D                                                          // [9952 ] call Output.create 12
@Output.create                                               // [9953 ] call Output.create 12
D=A                                                          // [9954 ] call Output.create 12
@R14                                                         // [9955 ] call Output.create 12
M=D                                                          // [9956 ] call Output.create 12
@return-98                                                   // [9957 ] call Output.create 12
D=A                                                          // [9958 ] call Output.create 12
@CALL                                                        // [9959 ] call Output.create 12
0;JEQ                                                        // [9960 ] call Output.create 12
(return-98)                                                  // [     ] call Output.create 12
@SP                                                          // [9961 ] pop temp 0
AM=M-1                                                       // [9962 ] pop temp 0
D=M                                                          // [9963 ] pop temp 0
@5                                                           // [9964 ] pop temp 0
M=D                                                          // [9965 ] pop temp 0
@35                                                          // [9966 ] push constant 35
D=A                                                          // [9967 ] push constant 35
@SP                                                          // [9968 ] push constant 35
M=M+1                                                        // [9969 ] push constant 35
A=M-1                                                        // [9970 ] push constant 35
M=D                                                          // [9971 ] push constant 35
@SP                                                          // [9972 ] push constant 0
M=M+1                                                        // [9973 ] push constant 0
A=M-1                                                        // [9974 ] push constant 0
M=0                                                          // [9975 ] push constant 0
@18                                                          // [9976 ] push constant 18
D=A                                                          // [9977 ] push constant 18
@SP                                                          // [9978 ] push constant 18
M=M+1                                                        // [9979 ] push constant 18
A=M-1                                                        // [9980 ] push constant 18
M=D                                                          // [9981 ] push constant 18
@18                                                          // [9982 ] push constant 18
D=A                                                          // [9983 ] push constant 18
@SP                                                          // [9984 ] push constant 18
M=M+1                                                        // [9985 ] push constant 18
A=M-1                                                        // [9986 ] push constant 18
M=D                                                          // [9987 ] push constant 18
@63                                                          // [9988 ] push constant 63
D=A                                                          // [9989 ] push constant 63
@SP                                                          // [9990 ] push constant 63
M=M+1                                                        // [9991 ] push constant 63
A=M-1                                                        // [9992 ] push constant 63
M=D                                                          // [9993 ] push constant 63
@18                                                          // [9994 ] push constant 18
D=A                                                          // [9995 ] push constant 18
@SP                                                          // [9996 ] push constant 18
M=M+1                                                        // [9997 ] push constant 18
A=M-1                                                        // [9998 ] push constant 18
M=D                                                          // [9999 ] push constant 18
@18                                                          // [10000] push constant 18
D=A                                                          // [10001] push constant 18
@SP                                                          // [10002] push constant 18
M=M+1                                                        // [10003] push constant 18
A=M-1                                                        // [10004] push constant 18
M=D                                                          // [10005] push constant 18
@63                                                          // [10006] push constant 63
D=A                                                          // [10007] push constant 63
@SP                                                          // [10008] push constant 63
M=M+1                                                        // [10009] push constant 63
A=M-1                                                        // [10010] push constant 63
M=D                                                          // [10011] push constant 63
@18                                                          // [10012] push constant 18
D=A                                                          // [10013] push constant 18
@SP                                                          // [10014] push constant 18
M=M+1                                                        // [10015] push constant 18
A=M-1                                                        // [10016] push constant 18
M=D                                                          // [10017] push constant 18
@18                                                          // [10018] push constant 18
D=A                                                          // [10019] push constant 18
@SP                                                          // [10020] push constant 18
M=M+1                                                        // [10021] push constant 18
A=M-1                                                        // [10022] push constant 18
M=D                                                          // [10023] push constant 18
@SP                                                          // [10024] push constant 0
M=M+1                                                        // [10025] push constant 0
A=M-1                                                        // [10026] push constant 0
M=0                                                          // [10027] push constant 0
@SP                                                          // [10028] push constant 0
M=M+1                                                        // [10029] push constant 0
A=M-1                                                        // [10030] push constant 0
M=0                                                          // [10031] push constant 0
@12                                                          // [10032] call Output.create 12
D=A                                                          // [10033] call Output.create 12
@R13                                                         // [10034] call Output.create 12
M=D                                                          // [10035] call Output.create 12
@Output.create                                               // [10036] call Output.create 12
D=A                                                          // [10037] call Output.create 12
@R14                                                         // [10038] call Output.create 12
M=D                                                          // [10039] call Output.create 12
@return-99                                                   // [10040] call Output.create 12
D=A                                                          // [10041] call Output.create 12
@CALL                                                        // [10042] call Output.create 12
0;JEQ                                                        // [10043] call Output.create 12
(return-99)                                                  // [     ] call Output.create 12
@SP                                                          // [10044] pop temp 0
AM=M-1                                                       // [10045] pop temp 0
D=M                                                          // [10046] pop temp 0
@5                                                           // [10047] pop temp 0
M=D                                                          // [10048] pop temp 0
@36                                                          // [10049] push constant 36
D=A                                                          // [10050] push constant 36
@SP                                                          // [10051] push constant 36
M=M+1                                                        // [10052] push constant 36
A=M-1                                                        // [10053] push constant 36
M=D                                                          // [10054] push constant 36
@12                                                          // [10055] push constant 12
D=A                                                          // [10056] push constant 12
@SP                                                          // [10057] push constant 12
M=M+1                                                        // [10058] push constant 12
A=M-1                                                        // [10059] push constant 12
M=D                                                          // [10060] push constant 12
@30                                                          // [10061] push constant 30
D=A                                                          // [10062] push constant 30
@SP                                                          // [10063] push constant 30
M=M+1                                                        // [10064] push constant 30
A=M-1                                                        // [10065] push constant 30
M=D                                                          // [10066] push constant 30
@51                                                          // [10067] push constant 51
D=A                                                          // [10068] push constant 51
@SP                                                          // [10069] push constant 51
M=M+1                                                        // [10070] push constant 51
A=M-1                                                        // [10071] push constant 51
M=D                                                          // [10072] push constant 51
@3                                                           // [10073] push constant 3
D=A                                                          // [10074] push constant 3
@SP                                                          // [10075] push constant 3
M=M+1                                                        // [10076] push constant 3
A=M-1                                                        // [10077] push constant 3
M=D                                                          // [10078] push constant 3
@30                                                          // [10079] push constant 30
D=A                                                          // [10080] push constant 30
@SP                                                          // [10081] push constant 30
M=M+1                                                        // [10082] push constant 30
A=M-1                                                        // [10083] push constant 30
M=D                                                          // [10084] push constant 30
@48                                                          // [10085] push constant 48
D=A                                                          // [10086] push constant 48
@SP                                                          // [10087] push constant 48
M=M+1                                                        // [10088] push constant 48
A=M-1                                                        // [10089] push constant 48
M=D                                                          // [10090] push constant 48
@51                                                          // [10091] push constant 51
D=A                                                          // [10092] push constant 51
@SP                                                          // [10093] push constant 51
M=M+1                                                        // [10094] push constant 51
A=M-1                                                        // [10095] push constant 51
M=D                                                          // [10096] push constant 51
@30                                                          // [10097] push constant 30
D=A                                                          // [10098] push constant 30
@SP                                                          // [10099] push constant 30
M=M+1                                                        // [10100] push constant 30
A=M-1                                                        // [10101] push constant 30
M=D                                                          // [10102] push constant 30
@12                                                          // [10103] push constant 12
D=A                                                          // [10104] push constant 12
@SP                                                          // [10105] push constant 12
M=M+1                                                        // [10106] push constant 12
A=M-1                                                        // [10107] push constant 12
M=D                                                          // [10108] push constant 12
@12                                                          // [10109] push constant 12
D=A                                                          // [10110] push constant 12
@SP                                                          // [10111] push constant 12
M=M+1                                                        // [10112] push constant 12
A=M-1                                                        // [10113] push constant 12
M=D                                                          // [10114] push constant 12
@SP                                                          // [10115] push constant 0
M=M+1                                                        // [10116] push constant 0
A=M-1                                                        // [10117] push constant 0
M=0                                                          // [10118] push constant 0
@12                                                          // [10119] call Output.create 12
D=A                                                          // [10120] call Output.create 12
@R13                                                         // [10121] call Output.create 12
M=D                                                          // [10122] call Output.create 12
@Output.create                                               // [10123] call Output.create 12
D=A                                                          // [10124] call Output.create 12
@R14                                                         // [10125] call Output.create 12
M=D                                                          // [10126] call Output.create 12
@return-100                                                  // [10127] call Output.create 12
D=A                                                          // [10128] call Output.create 12
@CALL                                                        // [10129] call Output.create 12
0;JEQ                                                        // [10130] call Output.create 12
(return-100)                                                 // [     ] call Output.create 12
@SP                                                          // [10131] pop temp 0
AM=M-1                                                       // [10132] pop temp 0
D=M                                                          // [10133] pop temp 0
@5                                                           // [10134] pop temp 0
M=D                                                          // [10135] pop temp 0
@37                                                          // [10136] push constant 37
D=A                                                          // [10137] push constant 37
@SP                                                          // [10138] push constant 37
M=M+1                                                        // [10139] push constant 37
A=M-1                                                        // [10140] push constant 37
M=D                                                          // [10141] push constant 37
@SP                                                          // [10142] push constant 0
M=M+1                                                        // [10143] push constant 0
A=M-1                                                        // [10144] push constant 0
M=0                                                          // [10145] push constant 0
@SP                                                          // [10146] push constant 0
M=M+1                                                        // [10147] push constant 0
A=M-1                                                        // [10148] push constant 0
M=0                                                          // [10149] push constant 0
@35                                                          // [10150] push constant 35
D=A                                                          // [10151] push constant 35
@SP                                                          // [10152] push constant 35
M=M+1                                                        // [10153] push constant 35
A=M-1                                                        // [10154] push constant 35
M=D                                                          // [10155] push constant 35
@51                                                          // [10156] push constant 51
D=A                                                          // [10157] push constant 51
@SP                                                          // [10158] push constant 51
M=M+1                                                        // [10159] push constant 51
A=M-1                                                        // [10160] push constant 51
M=D                                                          // [10161] push constant 51
@24                                                          // [10162] push constant 24
D=A                                                          // [10163] push constant 24
@SP                                                          // [10164] push constant 24
M=M+1                                                        // [10165] push constant 24
A=M-1                                                        // [10166] push constant 24
M=D                                                          // [10167] push constant 24
@12                                                          // [10168] push constant 12
D=A                                                          // [10169] push constant 12
@SP                                                          // [10170] push constant 12
M=M+1                                                        // [10171] push constant 12
A=M-1                                                        // [10172] push constant 12
M=D                                                          // [10173] push constant 12
@6                                                           // [10174] push constant 6
D=A                                                          // [10175] push constant 6
@SP                                                          // [10176] push constant 6
M=M+1                                                        // [10177] push constant 6
A=M-1                                                        // [10178] push constant 6
M=D                                                          // [10179] push constant 6
@51                                                          // [10180] push constant 51
D=A                                                          // [10181] push constant 51
@SP                                                          // [10182] push constant 51
M=M+1                                                        // [10183] push constant 51
A=M-1                                                        // [10184] push constant 51
M=D                                                          // [10185] push constant 51
@49                                                          // [10186] push constant 49
D=A                                                          // [10187] push constant 49
@SP                                                          // [10188] push constant 49
M=M+1                                                        // [10189] push constant 49
A=M-1                                                        // [10190] push constant 49
M=D                                                          // [10191] push constant 49
@SP                                                          // [10192] push constant 0
M=M+1                                                        // [10193] push constant 0
A=M-1                                                        // [10194] push constant 0
M=0                                                          // [10195] push constant 0
@SP                                                          // [10196] push constant 0
M=M+1                                                        // [10197] push constant 0
A=M-1                                                        // [10198] push constant 0
M=0                                                          // [10199] push constant 0
@12                                                          // [10200] call Output.create 12
D=A                                                          // [10201] call Output.create 12
@R13                                                         // [10202] call Output.create 12
M=D                                                          // [10203] call Output.create 12
@Output.create                                               // [10204] call Output.create 12
D=A                                                          // [10205] call Output.create 12
@R14                                                         // [10206] call Output.create 12
M=D                                                          // [10207] call Output.create 12
@return-101                                                  // [10208] call Output.create 12
D=A                                                          // [10209] call Output.create 12
@CALL                                                        // [10210] call Output.create 12
0;JEQ                                                        // [10211] call Output.create 12
(return-101)                                                 // [     ] call Output.create 12
@SP                                                          // [10212] pop temp 0
AM=M-1                                                       // [10213] pop temp 0
D=M                                                          // [10214] pop temp 0
@5                                                           // [10215] pop temp 0
M=D                                                          // [10216] pop temp 0
@38                                                          // [10217] push constant 38
D=A                                                          // [10218] push constant 38
@SP                                                          // [10219] push constant 38
M=M+1                                                        // [10220] push constant 38
A=M-1                                                        // [10221] push constant 38
M=D                                                          // [10222] push constant 38
@12                                                          // [10223] push constant 12
D=A                                                          // [10224] push constant 12
@SP                                                          // [10225] push constant 12
M=M+1                                                        // [10226] push constant 12
A=M-1                                                        // [10227] push constant 12
M=D                                                          // [10228] push constant 12
@30                                                          // [10229] push constant 30
D=A                                                          // [10230] push constant 30
@SP                                                          // [10231] push constant 30
M=M+1                                                        // [10232] push constant 30
A=M-1                                                        // [10233] push constant 30
M=D                                                          // [10234] push constant 30
@30                                                          // [10235] push constant 30
D=A                                                          // [10236] push constant 30
@SP                                                          // [10237] push constant 30
M=M+1                                                        // [10238] push constant 30
A=M-1                                                        // [10239] push constant 30
M=D                                                          // [10240] push constant 30
@12                                                          // [10241] push constant 12
D=A                                                          // [10242] push constant 12
@SP                                                          // [10243] push constant 12
M=M+1                                                        // [10244] push constant 12
A=M-1                                                        // [10245] push constant 12
M=D                                                          // [10246] push constant 12
@54                                                          // [10247] push constant 54
D=A                                                          // [10248] push constant 54
@SP                                                          // [10249] push constant 54
M=M+1                                                        // [10250] push constant 54
A=M-1                                                        // [10251] push constant 54
M=D                                                          // [10252] push constant 54
@27                                                          // [10253] push constant 27
D=A                                                          // [10254] push constant 27
@SP                                                          // [10255] push constant 27
M=M+1                                                        // [10256] push constant 27
A=M-1                                                        // [10257] push constant 27
M=D                                                          // [10258] push constant 27
@27                                                          // [10259] push constant 27
D=A                                                          // [10260] push constant 27
@SP                                                          // [10261] push constant 27
M=M+1                                                        // [10262] push constant 27
A=M-1                                                        // [10263] push constant 27
M=D                                                          // [10264] push constant 27
@27                                                          // [10265] push constant 27
D=A                                                          // [10266] push constant 27
@SP                                                          // [10267] push constant 27
M=M+1                                                        // [10268] push constant 27
A=M-1                                                        // [10269] push constant 27
M=D                                                          // [10270] push constant 27
@54                                                          // [10271] push constant 54
D=A                                                          // [10272] push constant 54
@SP                                                          // [10273] push constant 54
M=M+1                                                        // [10274] push constant 54
A=M-1                                                        // [10275] push constant 54
M=D                                                          // [10276] push constant 54
@SP                                                          // [10277] push constant 0
M=M+1                                                        // [10278] push constant 0
A=M-1                                                        // [10279] push constant 0
M=0                                                          // [10280] push constant 0
@SP                                                          // [10281] push constant 0
M=M+1                                                        // [10282] push constant 0
A=M-1                                                        // [10283] push constant 0
M=0                                                          // [10284] push constant 0
@12                                                          // [10285] call Output.create 12
D=A                                                          // [10286] call Output.create 12
@R13                                                         // [10287] call Output.create 12
M=D                                                          // [10288] call Output.create 12
@Output.create                                               // [10289] call Output.create 12
D=A                                                          // [10290] call Output.create 12
@R14                                                         // [10291] call Output.create 12
M=D                                                          // [10292] call Output.create 12
@return-102                                                  // [10293] call Output.create 12
D=A                                                          // [10294] call Output.create 12
@CALL                                                        // [10295] call Output.create 12
0;JEQ                                                        // [10296] call Output.create 12
(return-102)                                                 // [     ] call Output.create 12
@SP                                                          // [10297] pop temp 0
AM=M-1                                                       // [10298] pop temp 0
D=M                                                          // [10299] pop temp 0
@5                                                           // [10300] pop temp 0
M=D                                                          // [10301] pop temp 0
@39                                                          // [10302] push constant 39
D=A                                                          // [10303] push constant 39
@SP                                                          // [10304] push constant 39
M=M+1                                                        // [10305] push constant 39
A=M-1                                                        // [10306] push constant 39
M=D                                                          // [10307] push constant 39
@12                                                          // [10308] push constant 12
D=A                                                          // [10309] push constant 12
@SP                                                          // [10310] push constant 12
M=M+1                                                        // [10311] push constant 12
A=M-1                                                        // [10312] push constant 12
M=D                                                          // [10313] push constant 12
@12                                                          // [10314] push constant 12
D=A                                                          // [10315] push constant 12
@SP                                                          // [10316] push constant 12
M=M+1                                                        // [10317] push constant 12
A=M-1                                                        // [10318] push constant 12
M=D                                                          // [10319] push constant 12
@6                                                           // [10320] push constant 6
D=A                                                          // [10321] push constant 6
@SP                                                          // [10322] push constant 6
M=M+1                                                        // [10323] push constant 6
A=M-1                                                        // [10324] push constant 6
M=D                                                          // [10325] push constant 6
@SP                                                          // [10326] push constant 0
M=M+1                                                        // [10327] push constant 0
A=M-1                                                        // [10328] push constant 0
M=0                                                          // [10329] push constant 0
@SP                                                          // [10330] push constant 0
M=M+1                                                        // [10331] push constant 0
A=M-1                                                        // [10332] push constant 0
M=0                                                          // [10333] push constant 0
@SP                                                          // [10334] push constant 0
M=M+1                                                        // [10335] push constant 0
A=M-1                                                        // [10336] push constant 0
M=0                                                          // [10337] push constant 0
@SP                                                          // [10338] push constant 0
M=M+1                                                        // [10339] push constant 0
A=M-1                                                        // [10340] push constant 0
M=0                                                          // [10341] push constant 0
@SP                                                          // [10342] push constant 0
M=M+1                                                        // [10343] push constant 0
A=M-1                                                        // [10344] push constant 0
M=0                                                          // [10345] push constant 0
@SP                                                          // [10346] push constant 0
M=M+1                                                        // [10347] push constant 0
A=M-1                                                        // [10348] push constant 0
M=0                                                          // [10349] push constant 0
@SP                                                          // [10350] push constant 0
M=M+1                                                        // [10351] push constant 0
A=M-1                                                        // [10352] push constant 0
M=0                                                          // [10353] push constant 0
@SP                                                          // [10354] push constant 0
M=M+1                                                        // [10355] push constant 0
A=M-1                                                        // [10356] push constant 0
M=0                                                          // [10357] push constant 0
@12                                                          // [10358] call Output.create 12
D=A                                                          // [10359] call Output.create 12
@R13                                                         // [10360] call Output.create 12
M=D                                                          // [10361] call Output.create 12
@Output.create                                               // [10362] call Output.create 12
D=A                                                          // [10363] call Output.create 12
@R14                                                         // [10364] call Output.create 12
M=D                                                          // [10365] call Output.create 12
@return-103                                                  // [10366] call Output.create 12
D=A                                                          // [10367] call Output.create 12
@CALL                                                        // [10368] call Output.create 12
0;JEQ                                                        // [10369] call Output.create 12
(return-103)                                                 // [     ] call Output.create 12
@SP                                                          // [10370] pop temp 0
AM=M-1                                                       // [10371] pop temp 0
D=M                                                          // [10372] pop temp 0
@5                                                           // [10373] pop temp 0
M=D                                                          // [10374] pop temp 0
@40                                                          // [10375] push constant 40
D=A                                                          // [10376] push constant 40
@SP                                                          // [10377] push constant 40
M=M+1                                                        // [10378] push constant 40
A=M-1                                                        // [10379] push constant 40
M=D                                                          // [10380] push constant 40
@24                                                          // [10381] push constant 24
D=A                                                          // [10382] push constant 24
@SP                                                          // [10383] push constant 24
M=M+1                                                        // [10384] push constant 24
A=M-1                                                        // [10385] push constant 24
M=D                                                          // [10386] push constant 24
@12                                                          // [10387] push constant 12
D=A                                                          // [10388] push constant 12
@SP                                                          // [10389] push constant 12
M=M+1                                                        // [10390] push constant 12
A=M-1                                                        // [10391] push constant 12
M=D                                                          // [10392] push constant 12
@6                                                           // [10393] push constant 6
D=A                                                          // [10394] push constant 6
@SP                                                          // [10395] push constant 6
M=M+1                                                        // [10396] push constant 6
A=M-1                                                        // [10397] push constant 6
M=D                                                          // [10398] push constant 6
@6                                                           // [10399] push constant 6
D=A                                                          // [10400] push constant 6
@SP                                                          // [10401] push constant 6
M=M+1                                                        // [10402] push constant 6
A=M-1                                                        // [10403] push constant 6
M=D                                                          // [10404] push constant 6
@6                                                           // [10405] push constant 6
D=A                                                          // [10406] push constant 6
@SP                                                          // [10407] push constant 6
M=M+1                                                        // [10408] push constant 6
A=M-1                                                        // [10409] push constant 6
M=D                                                          // [10410] push constant 6
@6                                                           // [10411] push constant 6
D=A                                                          // [10412] push constant 6
@SP                                                          // [10413] push constant 6
M=M+1                                                        // [10414] push constant 6
A=M-1                                                        // [10415] push constant 6
M=D                                                          // [10416] push constant 6
@6                                                           // [10417] push constant 6
D=A                                                          // [10418] push constant 6
@SP                                                          // [10419] push constant 6
M=M+1                                                        // [10420] push constant 6
A=M-1                                                        // [10421] push constant 6
M=D                                                          // [10422] push constant 6
@12                                                          // [10423] push constant 12
D=A                                                          // [10424] push constant 12
@SP                                                          // [10425] push constant 12
M=M+1                                                        // [10426] push constant 12
A=M-1                                                        // [10427] push constant 12
M=D                                                          // [10428] push constant 12
@24                                                          // [10429] push constant 24
D=A                                                          // [10430] push constant 24
@SP                                                          // [10431] push constant 24
M=M+1                                                        // [10432] push constant 24
A=M-1                                                        // [10433] push constant 24
M=D                                                          // [10434] push constant 24
@SP                                                          // [10435] push constant 0
M=M+1                                                        // [10436] push constant 0
A=M-1                                                        // [10437] push constant 0
M=0                                                          // [10438] push constant 0
@SP                                                          // [10439] push constant 0
M=M+1                                                        // [10440] push constant 0
A=M-1                                                        // [10441] push constant 0
M=0                                                          // [10442] push constant 0
@12                                                          // [10443] call Output.create 12
D=A                                                          // [10444] call Output.create 12
@R13                                                         // [10445] call Output.create 12
M=D                                                          // [10446] call Output.create 12
@Output.create                                               // [10447] call Output.create 12
D=A                                                          // [10448] call Output.create 12
@R14                                                         // [10449] call Output.create 12
M=D                                                          // [10450] call Output.create 12
@return-104                                                  // [10451] call Output.create 12
D=A                                                          // [10452] call Output.create 12
@CALL                                                        // [10453] call Output.create 12
0;JEQ                                                        // [10454] call Output.create 12
(return-104)                                                 // [     ] call Output.create 12
@SP                                                          // [10455] pop temp 0
AM=M-1                                                       // [10456] pop temp 0
D=M                                                          // [10457] pop temp 0
@5                                                           // [10458] pop temp 0
M=D                                                          // [10459] pop temp 0
@41                                                          // [10460] push constant 41
D=A                                                          // [10461] push constant 41
@SP                                                          // [10462] push constant 41
M=M+1                                                        // [10463] push constant 41
A=M-1                                                        // [10464] push constant 41
M=D                                                          // [10465] push constant 41
@6                                                           // [10466] push constant 6
D=A                                                          // [10467] push constant 6
@SP                                                          // [10468] push constant 6
M=M+1                                                        // [10469] push constant 6
A=M-1                                                        // [10470] push constant 6
M=D                                                          // [10471] push constant 6
@12                                                          // [10472] push constant 12
D=A                                                          // [10473] push constant 12
@SP                                                          // [10474] push constant 12
M=M+1                                                        // [10475] push constant 12
A=M-1                                                        // [10476] push constant 12
M=D                                                          // [10477] push constant 12
@24                                                          // [10478] push constant 24
D=A                                                          // [10479] push constant 24
@SP                                                          // [10480] push constant 24
M=M+1                                                        // [10481] push constant 24
A=M-1                                                        // [10482] push constant 24
M=D                                                          // [10483] push constant 24
@24                                                          // [10484] push constant 24
D=A                                                          // [10485] push constant 24
@SP                                                          // [10486] push constant 24
M=M+1                                                        // [10487] push constant 24
A=M-1                                                        // [10488] push constant 24
M=D                                                          // [10489] push constant 24
@24                                                          // [10490] push constant 24
D=A                                                          // [10491] push constant 24
@SP                                                          // [10492] push constant 24
M=M+1                                                        // [10493] push constant 24
A=M-1                                                        // [10494] push constant 24
M=D                                                          // [10495] push constant 24
@24                                                          // [10496] push constant 24
D=A                                                          // [10497] push constant 24
@SP                                                          // [10498] push constant 24
M=M+1                                                        // [10499] push constant 24
A=M-1                                                        // [10500] push constant 24
M=D                                                          // [10501] push constant 24
@24                                                          // [10502] push constant 24
D=A                                                          // [10503] push constant 24
@SP                                                          // [10504] push constant 24
M=M+1                                                        // [10505] push constant 24
A=M-1                                                        // [10506] push constant 24
M=D                                                          // [10507] push constant 24
@12                                                          // [10508] push constant 12
D=A                                                          // [10509] push constant 12
@SP                                                          // [10510] push constant 12
M=M+1                                                        // [10511] push constant 12
A=M-1                                                        // [10512] push constant 12
M=D                                                          // [10513] push constant 12
@6                                                           // [10514] push constant 6
D=A                                                          // [10515] push constant 6
@SP                                                          // [10516] push constant 6
M=M+1                                                        // [10517] push constant 6
A=M-1                                                        // [10518] push constant 6
M=D                                                          // [10519] push constant 6
@SP                                                          // [10520] push constant 0
M=M+1                                                        // [10521] push constant 0
A=M-1                                                        // [10522] push constant 0
M=0                                                          // [10523] push constant 0
@SP                                                          // [10524] push constant 0
M=M+1                                                        // [10525] push constant 0
A=M-1                                                        // [10526] push constant 0
M=0                                                          // [10527] push constant 0
@12                                                          // [10528] call Output.create 12
D=A                                                          // [10529] call Output.create 12
@R13                                                         // [10530] call Output.create 12
M=D                                                          // [10531] call Output.create 12
@Output.create                                               // [10532] call Output.create 12
D=A                                                          // [10533] call Output.create 12
@R14                                                         // [10534] call Output.create 12
M=D                                                          // [10535] call Output.create 12
@return-105                                                  // [10536] call Output.create 12
D=A                                                          // [10537] call Output.create 12
@CALL                                                        // [10538] call Output.create 12
0;JEQ                                                        // [10539] call Output.create 12
(return-105)                                                 // [     ] call Output.create 12
@SP                                                          // [10540] pop temp 0
AM=M-1                                                       // [10541] pop temp 0
D=M                                                          // [10542] pop temp 0
@5                                                           // [10543] pop temp 0
M=D                                                          // [10544] pop temp 0
@42                                                          // [10545] push constant 42
D=A                                                          // [10546] push constant 42
@SP                                                          // [10547] push constant 42
M=M+1                                                        // [10548] push constant 42
A=M-1                                                        // [10549] push constant 42
M=D                                                          // [10550] push constant 42
@SP                                                          // [10551] push constant 0
M=M+1                                                        // [10552] push constant 0
A=M-1                                                        // [10553] push constant 0
M=0                                                          // [10554] push constant 0
@SP                                                          // [10555] push constant 0
M=M+1                                                        // [10556] push constant 0
A=M-1                                                        // [10557] push constant 0
M=0                                                          // [10558] push constant 0
@SP                                                          // [10559] push constant 0
M=M+1                                                        // [10560] push constant 0
A=M-1                                                        // [10561] push constant 0
M=0                                                          // [10562] push constant 0
@51                                                          // [10563] push constant 51
D=A                                                          // [10564] push constant 51
@SP                                                          // [10565] push constant 51
M=M+1                                                        // [10566] push constant 51
A=M-1                                                        // [10567] push constant 51
M=D                                                          // [10568] push constant 51
@30                                                          // [10569] push constant 30
D=A                                                          // [10570] push constant 30
@SP                                                          // [10571] push constant 30
M=M+1                                                        // [10572] push constant 30
A=M-1                                                        // [10573] push constant 30
M=D                                                          // [10574] push constant 30
@63                                                          // [10575] push constant 63
D=A                                                          // [10576] push constant 63
@SP                                                          // [10577] push constant 63
M=M+1                                                        // [10578] push constant 63
A=M-1                                                        // [10579] push constant 63
M=D                                                          // [10580] push constant 63
@30                                                          // [10581] push constant 30
D=A                                                          // [10582] push constant 30
@SP                                                          // [10583] push constant 30
M=M+1                                                        // [10584] push constant 30
A=M-1                                                        // [10585] push constant 30
M=D                                                          // [10586] push constant 30
@51                                                          // [10587] push constant 51
D=A                                                          // [10588] push constant 51
@SP                                                          // [10589] push constant 51
M=M+1                                                        // [10590] push constant 51
A=M-1                                                        // [10591] push constant 51
M=D                                                          // [10592] push constant 51
@SP                                                          // [10593] push constant 0
M=M+1                                                        // [10594] push constant 0
A=M-1                                                        // [10595] push constant 0
M=0                                                          // [10596] push constant 0
@SP                                                          // [10597] push constant 0
M=M+1                                                        // [10598] push constant 0
A=M-1                                                        // [10599] push constant 0
M=0                                                          // [10600] push constant 0
@SP                                                          // [10601] push constant 0
M=M+1                                                        // [10602] push constant 0
A=M-1                                                        // [10603] push constant 0
M=0                                                          // [10604] push constant 0
@12                                                          // [10605] call Output.create 12
D=A                                                          // [10606] call Output.create 12
@R13                                                         // [10607] call Output.create 12
M=D                                                          // [10608] call Output.create 12
@Output.create                                               // [10609] call Output.create 12
D=A                                                          // [10610] call Output.create 12
@R14                                                         // [10611] call Output.create 12
M=D                                                          // [10612] call Output.create 12
@return-106                                                  // [10613] call Output.create 12
D=A                                                          // [10614] call Output.create 12
@CALL                                                        // [10615] call Output.create 12
0;JEQ                                                        // [10616] call Output.create 12
(return-106)                                                 // [     ] call Output.create 12
@SP                                                          // [10617] pop temp 0
AM=M-1                                                       // [10618] pop temp 0
D=M                                                          // [10619] pop temp 0
@5                                                           // [10620] pop temp 0
M=D                                                          // [10621] pop temp 0
@43                                                          // [10622] push constant 43
D=A                                                          // [10623] push constant 43
@SP                                                          // [10624] push constant 43
M=M+1                                                        // [10625] push constant 43
A=M-1                                                        // [10626] push constant 43
M=D                                                          // [10627] push constant 43
@SP                                                          // [10628] push constant 0
M=M+1                                                        // [10629] push constant 0
A=M-1                                                        // [10630] push constant 0
M=0                                                          // [10631] push constant 0
@SP                                                          // [10632] push constant 0
M=M+1                                                        // [10633] push constant 0
A=M-1                                                        // [10634] push constant 0
M=0                                                          // [10635] push constant 0
@SP                                                          // [10636] push constant 0
M=M+1                                                        // [10637] push constant 0
A=M-1                                                        // [10638] push constant 0
M=0                                                          // [10639] push constant 0
@12                                                          // [10640] push constant 12
D=A                                                          // [10641] push constant 12
@SP                                                          // [10642] push constant 12
M=M+1                                                        // [10643] push constant 12
A=M-1                                                        // [10644] push constant 12
M=D                                                          // [10645] push constant 12
@12                                                          // [10646] push constant 12
D=A                                                          // [10647] push constant 12
@SP                                                          // [10648] push constant 12
M=M+1                                                        // [10649] push constant 12
A=M-1                                                        // [10650] push constant 12
M=D                                                          // [10651] push constant 12
@63                                                          // [10652] push constant 63
D=A                                                          // [10653] push constant 63
@SP                                                          // [10654] push constant 63
M=M+1                                                        // [10655] push constant 63
A=M-1                                                        // [10656] push constant 63
M=D                                                          // [10657] push constant 63
@12                                                          // [10658] push constant 12
D=A                                                          // [10659] push constant 12
@SP                                                          // [10660] push constant 12
M=M+1                                                        // [10661] push constant 12
A=M-1                                                        // [10662] push constant 12
M=D                                                          // [10663] push constant 12
@12                                                          // [10664] push constant 12
D=A                                                          // [10665] push constant 12
@SP                                                          // [10666] push constant 12
M=M+1                                                        // [10667] push constant 12
A=M-1                                                        // [10668] push constant 12
M=D                                                          // [10669] push constant 12
@SP                                                          // [10670] push constant 0
M=M+1                                                        // [10671] push constant 0
A=M-1                                                        // [10672] push constant 0
M=0                                                          // [10673] push constant 0
@SP                                                          // [10674] push constant 0
M=M+1                                                        // [10675] push constant 0
A=M-1                                                        // [10676] push constant 0
M=0                                                          // [10677] push constant 0
@SP                                                          // [10678] push constant 0
M=M+1                                                        // [10679] push constant 0
A=M-1                                                        // [10680] push constant 0
M=0                                                          // [10681] push constant 0
@12                                                          // [10682] call Output.create 12
D=A                                                          // [10683] call Output.create 12
@R13                                                         // [10684] call Output.create 12
M=D                                                          // [10685] call Output.create 12
@Output.create                                               // [10686] call Output.create 12
D=A                                                          // [10687] call Output.create 12
@R14                                                         // [10688] call Output.create 12
M=D                                                          // [10689] call Output.create 12
@return-107                                                  // [10690] call Output.create 12
D=A                                                          // [10691] call Output.create 12
@CALL                                                        // [10692] call Output.create 12
0;JEQ                                                        // [10693] call Output.create 12
(return-107)                                                 // [     ] call Output.create 12
@SP                                                          // [10694] pop temp 0
AM=M-1                                                       // [10695] pop temp 0
D=M                                                          // [10696] pop temp 0
@5                                                           // [10697] pop temp 0
M=D                                                          // [10698] pop temp 0
@44                                                          // [10699] push constant 44
D=A                                                          // [10700] push constant 44
@SP                                                          // [10701] push constant 44
M=M+1                                                        // [10702] push constant 44
A=M-1                                                        // [10703] push constant 44
M=D                                                          // [10704] push constant 44
@SP                                                          // [10705] push constant 0
M=M+1                                                        // [10706] push constant 0
A=M-1                                                        // [10707] push constant 0
M=0                                                          // [10708] push constant 0
@SP                                                          // [10709] push constant 0
M=M+1                                                        // [10710] push constant 0
A=M-1                                                        // [10711] push constant 0
M=0                                                          // [10712] push constant 0
@SP                                                          // [10713] push constant 0
M=M+1                                                        // [10714] push constant 0
A=M-1                                                        // [10715] push constant 0
M=0                                                          // [10716] push constant 0
@SP                                                          // [10717] push constant 0
M=M+1                                                        // [10718] push constant 0
A=M-1                                                        // [10719] push constant 0
M=0                                                          // [10720] push constant 0
@SP                                                          // [10721] push constant 0
M=M+1                                                        // [10722] push constant 0
A=M-1                                                        // [10723] push constant 0
M=0                                                          // [10724] push constant 0
@SP                                                          // [10725] push constant 0
M=M+1                                                        // [10726] push constant 0
A=M-1                                                        // [10727] push constant 0
M=0                                                          // [10728] push constant 0
@SP                                                          // [10729] push constant 0
M=M+1                                                        // [10730] push constant 0
A=M-1                                                        // [10731] push constant 0
M=0                                                          // [10732] push constant 0
@12                                                          // [10733] push constant 12
D=A                                                          // [10734] push constant 12
@SP                                                          // [10735] push constant 12
M=M+1                                                        // [10736] push constant 12
A=M-1                                                        // [10737] push constant 12
M=D                                                          // [10738] push constant 12
@12                                                          // [10739] push constant 12
D=A                                                          // [10740] push constant 12
@SP                                                          // [10741] push constant 12
M=M+1                                                        // [10742] push constant 12
A=M-1                                                        // [10743] push constant 12
M=D                                                          // [10744] push constant 12
@6                                                           // [10745] push constant 6
D=A                                                          // [10746] push constant 6
@SP                                                          // [10747] push constant 6
M=M+1                                                        // [10748] push constant 6
A=M-1                                                        // [10749] push constant 6
M=D                                                          // [10750] push constant 6
@SP                                                          // [10751] push constant 0
M=M+1                                                        // [10752] push constant 0
A=M-1                                                        // [10753] push constant 0
M=0                                                          // [10754] push constant 0
@12                                                          // [10755] call Output.create 12
D=A                                                          // [10756] call Output.create 12
@R13                                                         // [10757] call Output.create 12
M=D                                                          // [10758] call Output.create 12
@Output.create                                               // [10759] call Output.create 12
D=A                                                          // [10760] call Output.create 12
@R14                                                         // [10761] call Output.create 12
M=D                                                          // [10762] call Output.create 12
@return-108                                                  // [10763] call Output.create 12
D=A                                                          // [10764] call Output.create 12
@CALL                                                        // [10765] call Output.create 12
0;JEQ                                                        // [10766] call Output.create 12
(return-108)                                                 // [     ] call Output.create 12
@SP                                                          // [10767] pop temp 0
AM=M-1                                                       // [10768] pop temp 0
D=M                                                          // [10769] pop temp 0
@5                                                           // [10770] pop temp 0
M=D                                                          // [10771] pop temp 0
@45                                                          // [10772] push constant 45
D=A                                                          // [10773] push constant 45
@SP                                                          // [10774] push constant 45
M=M+1                                                        // [10775] push constant 45
A=M-1                                                        // [10776] push constant 45
M=D                                                          // [10777] push constant 45
@SP                                                          // [10778] push constant 0
M=M+1                                                        // [10779] push constant 0
A=M-1                                                        // [10780] push constant 0
M=0                                                          // [10781] push constant 0
@SP                                                          // [10782] push constant 0
M=M+1                                                        // [10783] push constant 0
A=M-1                                                        // [10784] push constant 0
M=0                                                          // [10785] push constant 0
@SP                                                          // [10786] push constant 0
M=M+1                                                        // [10787] push constant 0
A=M-1                                                        // [10788] push constant 0
M=0                                                          // [10789] push constant 0
@SP                                                          // [10790] push constant 0
M=M+1                                                        // [10791] push constant 0
A=M-1                                                        // [10792] push constant 0
M=0                                                          // [10793] push constant 0
@SP                                                          // [10794] push constant 0
M=M+1                                                        // [10795] push constant 0
A=M-1                                                        // [10796] push constant 0
M=0                                                          // [10797] push constant 0
@63                                                          // [10798] push constant 63
D=A                                                          // [10799] push constant 63
@SP                                                          // [10800] push constant 63
M=M+1                                                        // [10801] push constant 63
A=M-1                                                        // [10802] push constant 63
M=D                                                          // [10803] push constant 63
@SP                                                          // [10804] push constant 0
M=M+1                                                        // [10805] push constant 0
A=M-1                                                        // [10806] push constant 0
M=0                                                          // [10807] push constant 0
@SP                                                          // [10808] push constant 0
M=M+1                                                        // [10809] push constant 0
A=M-1                                                        // [10810] push constant 0
M=0                                                          // [10811] push constant 0
@SP                                                          // [10812] push constant 0
M=M+1                                                        // [10813] push constant 0
A=M-1                                                        // [10814] push constant 0
M=0                                                          // [10815] push constant 0
@SP                                                          // [10816] push constant 0
M=M+1                                                        // [10817] push constant 0
A=M-1                                                        // [10818] push constant 0
M=0                                                          // [10819] push constant 0
@SP                                                          // [10820] push constant 0
M=M+1                                                        // [10821] push constant 0
A=M-1                                                        // [10822] push constant 0
M=0                                                          // [10823] push constant 0
@12                                                          // [10824] call Output.create 12
D=A                                                          // [10825] call Output.create 12
@R13                                                         // [10826] call Output.create 12
M=D                                                          // [10827] call Output.create 12
@Output.create                                               // [10828] call Output.create 12
D=A                                                          // [10829] call Output.create 12
@R14                                                         // [10830] call Output.create 12
M=D                                                          // [10831] call Output.create 12
@return-109                                                  // [10832] call Output.create 12
D=A                                                          // [10833] call Output.create 12
@CALL                                                        // [10834] call Output.create 12
0;JEQ                                                        // [10835] call Output.create 12
(return-109)                                                 // [     ] call Output.create 12
@SP                                                          // [10836] pop temp 0
AM=M-1                                                       // [10837] pop temp 0
D=M                                                          // [10838] pop temp 0
@5                                                           // [10839] pop temp 0
M=D                                                          // [10840] pop temp 0
@46                                                          // [10841] push constant 46
D=A                                                          // [10842] push constant 46
@SP                                                          // [10843] push constant 46
M=M+1                                                        // [10844] push constant 46
A=M-1                                                        // [10845] push constant 46
M=D                                                          // [10846] push constant 46
@SP                                                          // [10847] push constant 0
M=M+1                                                        // [10848] push constant 0
A=M-1                                                        // [10849] push constant 0
M=0                                                          // [10850] push constant 0
@SP                                                          // [10851] push constant 0
M=M+1                                                        // [10852] push constant 0
A=M-1                                                        // [10853] push constant 0
M=0                                                          // [10854] push constant 0
@SP                                                          // [10855] push constant 0
M=M+1                                                        // [10856] push constant 0
A=M-1                                                        // [10857] push constant 0
M=0                                                          // [10858] push constant 0
@SP                                                          // [10859] push constant 0
M=M+1                                                        // [10860] push constant 0
A=M-1                                                        // [10861] push constant 0
M=0                                                          // [10862] push constant 0
@SP                                                          // [10863] push constant 0
M=M+1                                                        // [10864] push constant 0
A=M-1                                                        // [10865] push constant 0
M=0                                                          // [10866] push constant 0
@SP                                                          // [10867] push constant 0
M=M+1                                                        // [10868] push constant 0
A=M-1                                                        // [10869] push constant 0
M=0                                                          // [10870] push constant 0
@SP                                                          // [10871] push constant 0
M=M+1                                                        // [10872] push constant 0
A=M-1                                                        // [10873] push constant 0
M=0                                                          // [10874] push constant 0
@12                                                          // [10875] push constant 12
D=A                                                          // [10876] push constant 12
@SP                                                          // [10877] push constant 12
M=M+1                                                        // [10878] push constant 12
A=M-1                                                        // [10879] push constant 12
M=D                                                          // [10880] push constant 12
@12                                                          // [10881] push constant 12
D=A                                                          // [10882] push constant 12
@SP                                                          // [10883] push constant 12
M=M+1                                                        // [10884] push constant 12
A=M-1                                                        // [10885] push constant 12
M=D                                                          // [10886] push constant 12
@SP                                                          // [10887] push constant 0
M=M+1                                                        // [10888] push constant 0
A=M-1                                                        // [10889] push constant 0
M=0                                                          // [10890] push constant 0
@SP                                                          // [10891] push constant 0
M=M+1                                                        // [10892] push constant 0
A=M-1                                                        // [10893] push constant 0
M=0                                                          // [10894] push constant 0
@12                                                          // [10895] call Output.create 12
D=A                                                          // [10896] call Output.create 12
@R13                                                         // [10897] call Output.create 12
M=D                                                          // [10898] call Output.create 12
@Output.create                                               // [10899] call Output.create 12
D=A                                                          // [10900] call Output.create 12
@R14                                                         // [10901] call Output.create 12
M=D                                                          // [10902] call Output.create 12
@return-110                                                  // [10903] call Output.create 12
D=A                                                          // [10904] call Output.create 12
@CALL                                                        // [10905] call Output.create 12
0;JEQ                                                        // [10906] call Output.create 12
(return-110)                                                 // [     ] call Output.create 12
@SP                                                          // [10907] pop temp 0
AM=M-1                                                       // [10908] pop temp 0
D=M                                                          // [10909] pop temp 0
@5                                                           // [10910] pop temp 0
M=D                                                          // [10911] pop temp 0
@47                                                          // [10912] push constant 47
D=A                                                          // [10913] push constant 47
@SP                                                          // [10914] push constant 47
M=M+1                                                        // [10915] push constant 47
A=M-1                                                        // [10916] push constant 47
M=D                                                          // [10917] push constant 47
@SP                                                          // [10918] push constant 0
M=M+1                                                        // [10919] push constant 0
A=M-1                                                        // [10920] push constant 0
M=0                                                          // [10921] push constant 0
@SP                                                          // [10922] push constant 0
M=M+1                                                        // [10923] push constant 0
A=M-1                                                        // [10924] push constant 0
M=0                                                          // [10925] push constant 0
@32                                                          // [10926] push constant 32
D=A                                                          // [10927] push constant 32
@SP                                                          // [10928] push constant 32
M=M+1                                                        // [10929] push constant 32
A=M-1                                                        // [10930] push constant 32
M=D                                                          // [10931] push constant 32
@48                                                          // [10932] push constant 48
D=A                                                          // [10933] push constant 48
@SP                                                          // [10934] push constant 48
M=M+1                                                        // [10935] push constant 48
A=M-1                                                        // [10936] push constant 48
M=D                                                          // [10937] push constant 48
@24                                                          // [10938] push constant 24
D=A                                                          // [10939] push constant 24
@SP                                                          // [10940] push constant 24
M=M+1                                                        // [10941] push constant 24
A=M-1                                                        // [10942] push constant 24
M=D                                                          // [10943] push constant 24
@12                                                          // [10944] push constant 12
D=A                                                          // [10945] push constant 12
@SP                                                          // [10946] push constant 12
M=M+1                                                        // [10947] push constant 12
A=M-1                                                        // [10948] push constant 12
M=D                                                          // [10949] push constant 12
@6                                                           // [10950] push constant 6
D=A                                                          // [10951] push constant 6
@SP                                                          // [10952] push constant 6
M=M+1                                                        // [10953] push constant 6
A=M-1                                                        // [10954] push constant 6
M=D                                                          // [10955] push constant 6
@3                                                           // [10956] push constant 3
D=A                                                          // [10957] push constant 3
@SP                                                          // [10958] push constant 3
M=M+1                                                        // [10959] push constant 3
A=M-1                                                        // [10960] push constant 3
M=D                                                          // [10961] push constant 3
@SP                                                          // [10962] push constant 1
M=M+1                                                        // [10963] push constant 1
A=M-1                                                        // [10964] push constant 1
M=1                                                          // [10965] push constant 1
@SP                                                          // [10966] push constant 0
M=M+1                                                        // [10967] push constant 0
A=M-1                                                        // [10968] push constant 0
M=0                                                          // [10969] push constant 0
@SP                                                          // [10970] push constant 0
M=M+1                                                        // [10971] push constant 0
A=M-1                                                        // [10972] push constant 0
M=0                                                          // [10973] push constant 0
@12                                                          // [10974] call Output.create 12
D=A                                                          // [10975] call Output.create 12
@R13                                                         // [10976] call Output.create 12
M=D                                                          // [10977] call Output.create 12
@Output.create                                               // [10978] call Output.create 12
D=A                                                          // [10979] call Output.create 12
@R14                                                         // [10980] call Output.create 12
M=D                                                          // [10981] call Output.create 12
@return-111                                                  // [10982] call Output.create 12
D=A                                                          // [10983] call Output.create 12
@CALL                                                        // [10984] call Output.create 12
0;JEQ                                                        // [10985] call Output.create 12
(return-111)                                                 // [     ] call Output.create 12
@SP                                                          // [10986] pop temp 0
AM=M-1                                                       // [10987] pop temp 0
D=M                                                          // [10988] pop temp 0
@5                                                           // [10989] pop temp 0
M=D                                                          // [10990] pop temp 0
@48                                                          // [10991] push constant 48
D=A                                                          // [10992] push constant 48
@SP                                                          // [10993] push constant 48
M=M+1                                                        // [10994] push constant 48
A=M-1                                                        // [10995] push constant 48
M=D                                                          // [10996] push constant 48
@12                                                          // [10997] push constant 12
D=A                                                          // [10998] push constant 12
@SP                                                          // [10999] push constant 12
M=M+1                                                        // [11000] push constant 12
A=M-1                                                        // [11001] push constant 12
M=D                                                          // [11002] push constant 12
@30                                                          // [11003] push constant 30
D=A                                                          // [11004] push constant 30
@SP                                                          // [11005] push constant 30
M=M+1                                                        // [11006] push constant 30
A=M-1                                                        // [11007] push constant 30
M=D                                                          // [11008] push constant 30
@51                                                          // [11009] push constant 51
D=A                                                          // [11010] push constant 51
@SP                                                          // [11011] push constant 51
M=M+1                                                        // [11012] push constant 51
A=M-1                                                        // [11013] push constant 51
M=D                                                          // [11014] push constant 51
@51                                                          // [11015] push constant 51
D=A                                                          // [11016] push constant 51
@SP                                                          // [11017] push constant 51
M=M+1                                                        // [11018] push constant 51
A=M-1                                                        // [11019] push constant 51
M=D                                                          // [11020] push constant 51
@51                                                          // [11021] push constant 51
D=A                                                          // [11022] push constant 51
@SP                                                          // [11023] push constant 51
M=M+1                                                        // [11024] push constant 51
A=M-1                                                        // [11025] push constant 51
M=D                                                          // [11026] push constant 51
@51                                                          // [11027] push constant 51
D=A                                                          // [11028] push constant 51
@SP                                                          // [11029] push constant 51
M=M+1                                                        // [11030] push constant 51
A=M-1                                                        // [11031] push constant 51
M=D                                                          // [11032] push constant 51
@51                                                          // [11033] push constant 51
D=A                                                          // [11034] push constant 51
@SP                                                          // [11035] push constant 51
M=M+1                                                        // [11036] push constant 51
A=M-1                                                        // [11037] push constant 51
M=D                                                          // [11038] push constant 51
@30                                                          // [11039] push constant 30
D=A                                                          // [11040] push constant 30
@SP                                                          // [11041] push constant 30
M=M+1                                                        // [11042] push constant 30
A=M-1                                                        // [11043] push constant 30
M=D                                                          // [11044] push constant 30
@12                                                          // [11045] push constant 12
D=A                                                          // [11046] push constant 12
@SP                                                          // [11047] push constant 12
M=M+1                                                        // [11048] push constant 12
A=M-1                                                        // [11049] push constant 12
M=D                                                          // [11050] push constant 12
@SP                                                          // [11051] push constant 0
M=M+1                                                        // [11052] push constant 0
A=M-1                                                        // [11053] push constant 0
M=0                                                          // [11054] push constant 0
@SP                                                          // [11055] push constant 0
M=M+1                                                        // [11056] push constant 0
A=M-1                                                        // [11057] push constant 0
M=0                                                          // [11058] push constant 0
@12                                                          // [11059] call Output.create 12
D=A                                                          // [11060] call Output.create 12
@R13                                                         // [11061] call Output.create 12
M=D                                                          // [11062] call Output.create 12
@Output.create                                               // [11063] call Output.create 12
D=A                                                          // [11064] call Output.create 12
@R14                                                         // [11065] call Output.create 12
M=D                                                          // [11066] call Output.create 12
@return-112                                                  // [11067] call Output.create 12
D=A                                                          // [11068] call Output.create 12
@CALL                                                        // [11069] call Output.create 12
0;JEQ                                                        // [11070] call Output.create 12
(return-112)                                                 // [     ] call Output.create 12
@SP                                                          // [11071] pop temp 0
AM=M-1                                                       // [11072] pop temp 0
D=M                                                          // [11073] pop temp 0
@5                                                           // [11074] pop temp 0
M=D                                                          // [11075] pop temp 0
@49                                                          // [11076] push constant 49
D=A                                                          // [11077] push constant 49
@SP                                                          // [11078] push constant 49
M=M+1                                                        // [11079] push constant 49
A=M-1                                                        // [11080] push constant 49
M=D                                                          // [11081] push constant 49
@12                                                          // [11082] push constant 12
D=A                                                          // [11083] push constant 12
@SP                                                          // [11084] push constant 12
M=M+1                                                        // [11085] push constant 12
A=M-1                                                        // [11086] push constant 12
M=D                                                          // [11087] push constant 12
@14                                                          // [11088] push constant 14
D=A                                                          // [11089] push constant 14
@SP                                                          // [11090] push constant 14
M=M+1                                                        // [11091] push constant 14
A=M-1                                                        // [11092] push constant 14
M=D                                                          // [11093] push constant 14
@15                                                          // [11094] push constant 15
D=A                                                          // [11095] push constant 15
@SP                                                          // [11096] push constant 15
M=M+1                                                        // [11097] push constant 15
A=M-1                                                        // [11098] push constant 15
M=D                                                          // [11099] push constant 15
@12                                                          // [11100] push constant 12
D=A                                                          // [11101] push constant 12
@SP                                                          // [11102] push constant 12
M=M+1                                                        // [11103] push constant 12
A=M-1                                                        // [11104] push constant 12
M=D                                                          // [11105] push constant 12
@12                                                          // [11106] push constant 12
D=A                                                          // [11107] push constant 12
@SP                                                          // [11108] push constant 12
M=M+1                                                        // [11109] push constant 12
A=M-1                                                        // [11110] push constant 12
M=D                                                          // [11111] push constant 12
@12                                                          // [11112] push constant 12
D=A                                                          // [11113] push constant 12
@SP                                                          // [11114] push constant 12
M=M+1                                                        // [11115] push constant 12
A=M-1                                                        // [11116] push constant 12
M=D                                                          // [11117] push constant 12
@12                                                          // [11118] push constant 12
D=A                                                          // [11119] push constant 12
@SP                                                          // [11120] push constant 12
M=M+1                                                        // [11121] push constant 12
A=M-1                                                        // [11122] push constant 12
M=D                                                          // [11123] push constant 12
@12                                                          // [11124] push constant 12
D=A                                                          // [11125] push constant 12
@SP                                                          // [11126] push constant 12
M=M+1                                                        // [11127] push constant 12
A=M-1                                                        // [11128] push constant 12
M=D                                                          // [11129] push constant 12
@63                                                          // [11130] push constant 63
D=A                                                          // [11131] push constant 63
@SP                                                          // [11132] push constant 63
M=M+1                                                        // [11133] push constant 63
A=M-1                                                        // [11134] push constant 63
M=D                                                          // [11135] push constant 63
@SP                                                          // [11136] push constant 0
M=M+1                                                        // [11137] push constant 0
A=M-1                                                        // [11138] push constant 0
M=0                                                          // [11139] push constant 0
@SP                                                          // [11140] push constant 0
M=M+1                                                        // [11141] push constant 0
A=M-1                                                        // [11142] push constant 0
M=0                                                          // [11143] push constant 0
@12                                                          // [11144] call Output.create 12
D=A                                                          // [11145] call Output.create 12
@R13                                                         // [11146] call Output.create 12
M=D                                                          // [11147] call Output.create 12
@Output.create                                               // [11148] call Output.create 12
D=A                                                          // [11149] call Output.create 12
@R14                                                         // [11150] call Output.create 12
M=D                                                          // [11151] call Output.create 12
@return-113                                                  // [11152] call Output.create 12
D=A                                                          // [11153] call Output.create 12
@CALL                                                        // [11154] call Output.create 12
0;JEQ                                                        // [11155] call Output.create 12
(return-113)                                                 // [     ] call Output.create 12
@SP                                                          // [11156] pop temp 0
AM=M-1                                                       // [11157] pop temp 0
D=M                                                          // [11158] pop temp 0
@5                                                           // [11159] pop temp 0
M=D                                                          // [11160] pop temp 0
@50                                                          // [11161] push constant 50
D=A                                                          // [11162] push constant 50
@SP                                                          // [11163] push constant 50
M=M+1                                                        // [11164] push constant 50
A=M-1                                                        // [11165] push constant 50
M=D                                                          // [11166] push constant 50
@30                                                          // [11167] push constant 30
D=A                                                          // [11168] push constant 30
@SP                                                          // [11169] push constant 30
M=M+1                                                        // [11170] push constant 30
A=M-1                                                        // [11171] push constant 30
M=D                                                          // [11172] push constant 30
@51                                                          // [11173] push constant 51
D=A                                                          // [11174] push constant 51
@SP                                                          // [11175] push constant 51
M=M+1                                                        // [11176] push constant 51
A=M-1                                                        // [11177] push constant 51
M=D                                                          // [11178] push constant 51
@48                                                          // [11179] push constant 48
D=A                                                          // [11180] push constant 48
@SP                                                          // [11181] push constant 48
M=M+1                                                        // [11182] push constant 48
A=M-1                                                        // [11183] push constant 48
M=D                                                          // [11184] push constant 48
@24                                                          // [11185] push constant 24
D=A                                                          // [11186] push constant 24
@SP                                                          // [11187] push constant 24
M=M+1                                                        // [11188] push constant 24
A=M-1                                                        // [11189] push constant 24
M=D                                                          // [11190] push constant 24
@12                                                          // [11191] push constant 12
D=A                                                          // [11192] push constant 12
@SP                                                          // [11193] push constant 12
M=M+1                                                        // [11194] push constant 12
A=M-1                                                        // [11195] push constant 12
M=D                                                          // [11196] push constant 12
@6                                                           // [11197] push constant 6
D=A                                                          // [11198] push constant 6
@SP                                                          // [11199] push constant 6
M=M+1                                                        // [11200] push constant 6
A=M-1                                                        // [11201] push constant 6
M=D                                                          // [11202] push constant 6
@3                                                           // [11203] push constant 3
D=A                                                          // [11204] push constant 3
@SP                                                          // [11205] push constant 3
M=M+1                                                        // [11206] push constant 3
A=M-1                                                        // [11207] push constant 3
M=D                                                          // [11208] push constant 3
@51                                                          // [11209] push constant 51
D=A                                                          // [11210] push constant 51
@SP                                                          // [11211] push constant 51
M=M+1                                                        // [11212] push constant 51
A=M-1                                                        // [11213] push constant 51
M=D                                                          // [11214] push constant 51
@63                                                          // [11215] push constant 63
D=A                                                          // [11216] push constant 63
@SP                                                          // [11217] push constant 63
M=M+1                                                        // [11218] push constant 63
A=M-1                                                        // [11219] push constant 63
M=D                                                          // [11220] push constant 63
@SP                                                          // [11221] push constant 0
M=M+1                                                        // [11222] push constant 0
A=M-1                                                        // [11223] push constant 0
M=0                                                          // [11224] push constant 0
@SP                                                          // [11225] push constant 0
M=M+1                                                        // [11226] push constant 0
A=M-1                                                        // [11227] push constant 0
M=0                                                          // [11228] push constant 0
@12                                                          // [11229] call Output.create 12
D=A                                                          // [11230] call Output.create 12
@R13                                                         // [11231] call Output.create 12
M=D                                                          // [11232] call Output.create 12
@Output.create                                               // [11233] call Output.create 12
D=A                                                          // [11234] call Output.create 12
@R14                                                         // [11235] call Output.create 12
M=D                                                          // [11236] call Output.create 12
@return-114                                                  // [11237] call Output.create 12
D=A                                                          // [11238] call Output.create 12
@CALL                                                        // [11239] call Output.create 12
0;JEQ                                                        // [11240] call Output.create 12
(return-114)                                                 // [     ] call Output.create 12
@SP                                                          // [11241] pop temp 0
AM=M-1                                                       // [11242] pop temp 0
D=M                                                          // [11243] pop temp 0
@5                                                           // [11244] pop temp 0
M=D                                                          // [11245] pop temp 0
@51                                                          // [11246] push constant 51
D=A                                                          // [11247] push constant 51
@SP                                                          // [11248] push constant 51
M=M+1                                                        // [11249] push constant 51
A=M-1                                                        // [11250] push constant 51
M=D                                                          // [11251] push constant 51
@30                                                          // [11252] push constant 30
D=A                                                          // [11253] push constant 30
@SP                                                          // [11254] push constant 30
M=M+1                                                        // [11255] push constant 30
A=M-1                                                        // [11256] push constant 30
M=D                                                          // [11257] push constant 30
@51                                                          // [11258] push constant 51
D=A                                                          // [11259] push constant 51
@SP                                                          // [11260] push constant 51
M=M+1                                                        // [11261] push constant 51
A=M-1                                                        // [11262] push constant 51
M=D                                                          // [11263] push constant 51
@48                                                          // [11264] push constant 48
D=A                                                          // [11265] push constant 48
@SP                                                          // [11266] push constant 48
M=M+1                                                        // [11267] push constant 48
A=M-1                                                        // [11268] push constant 48
M=D                                                          // [11269] push constant 48
@48                                                          // [11270] push constant 48
D=A                                                          // [11271] push constant 48
@SP                                                          // [11272] push constant 48
M=M+1                                                        // [11273] push constant 48
A=M-1                                                        // [11274] push constant 48
M=D                                                          // [11275] push constant 48
@28                                                          // [11276] push constant 28
D=A                                                          // [11277] push constant 28
@SP                                                          // [11278] push constant 28
M=M+1                                                        // [11279] push constant 28
A=M-1                                                        // [11280] push constant 28
M=D                                                          // [11281] push constant 28
@48                                                          // [11282] push constant 48
D=A                                                          // [11283] push constant 48
@SP                                                          // [11284] push constant 48
M=M+1                                                        // [11285] push constant 48
A=M-1                                                        // [11286] push constant 48
M=D                                                          // [11287] push constant 48
@48                                                          // [11288] push constant 48
D=A                                                          // [11289] push constant 48
@SP                                                          // [11290] push constant 48
M=M+1                                                        // [11291] push constant 48
A=M-1                                                        // [11292] push constant 48
M=D                                                          // [11293] push constant 48
@51                                                          // [11294] push constant 51
D=A                                                          // [11295] push constant 51
@SP                                                          // [11296] push constant 51
M=M+1                                                        // [11297] push constant 51
A=M-1                                                        // [11298] push constant 51
M=D                                                          // [11299] push constant 51
@30                                                          // [11300] push constant 30
D=A                                                          // [11301] push constant 30
@SP                                                          // [11302] push constant 30
M=M+1                                                        // [11303] push constant 30
A=M-1                                                        // [11304] push constant 30
M=D                                                          // [11305] push constant 30
@SP                                                          // [11306] push constant 0
M=M+1                                                        // [11307] push constant 0
A=M-1                                                        // [11308] push constant 0
M=0                                                          // [11309] push constant 0
@SP                                                          // [11310] push constant 0
M=M+1                                                        // [11311] push constant 0
A=M-1                                                        // [11312] push constant 0
M=0                                                          // [11313] push constant 0
@12                                                          // [11314] call Output.create 12
D=A                                                          // [11315] call Output.create 12
@R13                                                         // [11316] call Output.create 12
M=D                                                          // [11317] call Output.create 12
@Output.create                                               // [11318] call Output.create 12
D=A                                                          // [11319] call Output.create 12
@R14                                                         // [11320] call Output.create 12
M=D                                                          // [11321] call Output.create 12
@return-115                                                  // [11322] call Output.create 12
D=A                                                          // [11323] call Output.create 12
@CALL                                                        // [11324] call Output.create 12
0;JEQ                                                        // [11325] call Output.create 12
(return-115)                                                 // [     ] call Output.create 12
@SP                                                          // [11326] pop temp 0
AM=M-1                                                       // [11327] pop temp 0
D=M                                                          // [11328] pop temp 0
@5                                                           // [11329] pop temp 0
M=D                                                          // [11330] pop temp 0
@52                                                          // [11331] push constant 52
D=A                                                          // [11332] push constant 52
@SP                                                          // [11333] push constant 52
M=M+1                                                        // [11334] push constant 52
A=M-1                                                        // [11335] push constant 52
M=D                                                          // [11336] push constant 52
@16                                                          // [11337] push constant 16
D=A                                                          // [11338] push constant 16
@SP                                                          // [11339] push constant 16
M=M+1                                                        // [11340] push constant 16
A=M-1                                                        // [11341] push constant 16
M=D                                                          // [11342] push constant 16
@24                                                          // [11343] push constant 24
D=A                                                          // [11344] push constant 24
@SP                                                          // [11345] push constant 24
M=M+1                                                        // [11346] push constant 24
A=M-1                                                        // [11347] push constant 24
M=D                                                          // [11348] push constant 24
@28                                                          // [11349] push constant 28
D=A                                                          // [11350] push constant 28
@SP                                                          // [11351] push constant 28
M=M+1                                                        // [11352] push constant 28
A=M-1                                                        // [11353] push constant 28
M=D                                                          // [11354] push constant 28
@26                                                          // [11355] push constant 26
D=A                                                          // [11356] push constant 26
@SP                                                          // [11357] push constant 26
M=M+1                                                        // [11358] push constant 26
A=M-1                                                        // [11359] push constant 26
M=D                                                          // [11360] push constant 26
@25                                                          // [11361] push constant 25
D=A                                                          // [11362] push constant 25
@SP                                                          // [11363] push constant 25
M=M+1                                                        // [11364] push constant 25
A=M-1                                                        // [11365] push constant 25
M=D                                                          // [11366] push constant 25
@63                                                          // [11367] push constant 63
D=A                                                          // [11368] push constant 63
@SP                                                          // [11369] push constant 63
M=M+1                                                        // [11370] push constant 63
A=M-1                                                        // [11371] push constant 63
M=D                                                          // [11372] push constant 63
@24                                                          // [11373] push constant 24
D=A                                                          // [11374] push constant 24
@SP                                                          // [11375] push constant 24
M=M+1                                                        // [11376] push constant 24
A=M-1                                                        // [11377] push constant 24
M=D                                                          // [11378] push constant 24
@24                                                          // [11379] push constant 24
D=A                                                          // [11380] push constant 24
@SP                                                          // [11381] push constant 24
M=M+1                                                        // [11382] push constant 24
A=M-1                                                        // [11383] push constant 24
M=D                                                          // [11384] push constant 24
@60                                                          // [11385] push constant 60
D=A                                                          // [11386] push constant 60
@SP                                                          // [11387] push constant 60
M=M+1                                                        // [11388] push constant 60
A=M-1                                                        // [11389] push constant 60
M=D                                                          // [11390] push constant 60
@SP                                                          // [11391] push constant 0
M=M+1                                                        // [11392] push constant 0
A=M-1                                                        // [11393] push constant 0
M=0                                                          // [11394] push constant 0
@SP                                                          // [11395] push constant 0
M=M+1                                                        // [11396] push constant 0
A=M-1                                                        // [11397] push constant 0
M=0                                                          // [11398] push constant 0
@12                                                          // [11399] call Output.create 12
D=A                                                          // [11400] call Output.create 12
@R13                                                         // [11401] call Output.create 12
M=D                                                          // [11402] call Output.create 12
@Output.create                                               // [11403] call Output.create 12
D=A                                                          // [11404] call Output.create 12
@R14                                                         // [11405] call Output.create 12
M=D                                                          // [11406] call Output.create 12
@return-116                                                  // [11407] call Output.create 12
D=A                                                          // [11408] call Output.create 12
@CALL                                                        // [11409] call Output.create 12
0;JEQ                                                        // [11410] call Output.create 12
(return-116)                                                 // [     ] call Output.create 12
@SP                                                          // [11411] pop temp 0
AM=M-1                                                       // [11412] pop temp 0
D=M                                                          // [11413] pop temp 0
@5                                                           // [11414] pop temp 0
M=D                                                          // [11415] pop temp 0
@53                                                          // [11416] push constant 53
D=A                                                          // [11417] push constant 53
@SP                                                          // [11418] push constant 53
M=M+1                                                        // [11419] push constant 53
A=M-1                                                        // [11420] push constant 53
M=D                                                          // [11421] push constant 53
@63                                                          // [11422] push constant 63
D=A                                                          // [11423] push constant 63
@SP                                                          // [11424] push constant 63
M=M+1                                                        // [11425] push constant 63
A=M-1                                                        // [11426] push constant 63
M=D                                                          // [11427] push constant 63
@3                                                           // [11428] push constant 3
D=A                                                          // [11429] push constant 3
@SP                                                          // [11430] push constant 3
M=M+1                                                        // [11431] push constant 3
A=M-1                                                        // [11432] push constant 3
M=D                                                          // [11433] push constant 3
@3                                                           // [11434] push constant 3
D=A                                                          // [11435] push constant 3
@SP                                                          // [11436] push constant 3
M=M+1                                                        // [11437] push constant 3
A=M-1                                                        // [11438] push constant 3
M=D                                                          // [11439] push constant 3
@31                                                          // [11440] push constant 31
D=A                                                          // [11441] push constant 31
@SP                                                          // [11442] push constant 31
M=M+1                                                        // [11443] push constant 31
A=M-1                                                        // [11444] push constant 31
M=D                                                          // [11445] push constant 31
@48                                                          // [11446] push constant 48
D=A                                                          // [11447] push constant 48
@SP                                                          // [11448] push constant 48
M=M+1                                                        // [11449] push constant 48
A=M-1                                                        // [11450] push constant 48
M=D                                                          // [11451] push constant 48
@48                                                          // [11452] push constant 48
D=A                                                          // [11453] push constant 48
@SP                                                          // [11454] push constant 48
M=M+1                                                        // [11455] push constant 48
A=M-1                                                        // [11456] push constant 48
M=D                                                          // [11457] push constant 48
@48                                                          // [11458] push constant 48
D=A                                                          // [11459] push constant 48
@SP                                                          // [11460] push constant 48
M=M+1                                                        // [11461] push constant 48
A=M-1                                                        // [11462] push constant 48
M=D                                                          // [11463] push constant 48
@51                                                          // [11464] push constant 51
D=A                                                          // [11465] push constant 51
@SP                                                          // [11466] push constant 51
M=M+1                                                        // [11467] push constant 51
A=M-1                                                        // [11468] push constant 51
M=D                                                          // [11469] push constant 51
@30                                                          // [11470] push constant 30
D=A                                                          // [11471] push constant 30
@SP                                                          // [11472] push constant 30
M=M+1                                                        // [11473] push constant 30
A=M-1                                                        // [11474] push constant 30
M=D                                                          // [11475] push constant 30
@SP                                                          // [11476] push constant 0
M=M+1                                                        // [11477] push constant 0
A=M-1                                                        // [11478] push constant 0
M=0                                                          // [11479] push constant 0
@SP                                                          // [11480] push constant 0
M=M+1                                                        // [11481] push constant 0
A=M-1                                                        // [11482] push constant 0
M=0                                                          // [11483] push constant 0
@12                                                          // [11484] call Output.create 12
D=A                                                          // [11485] call Output.create 12
@R13                                                         // [11486] call Output.create 12
M=D                                                          // [11487] call Output.create 12
@Output.create                                               // [11488] call Output.create 12
D=A                                                          // [11489] call Output.create 12
@R14                                                         // [11490] call Output.create 12
M=D                                                          // [11491] call Output.create 12
@return-117                                                  // [11492] call Output.create 12
D=A                                                          // [11493] call Output.create 12
@CALL                                                        // [11494] call Output.create 12
0;JEQ                                                        // [11495] call Output.create 12
(return-117)                                                 // [     ] call Output.create 12
@SP                                                          // [11496] pop temp 0
AM=M-1                                                       // [11497] pop temp 0
D=M                                                          // [11498] pop temp 0
@5                                                           // [11499] pop temp 0
M=D                                                          // [11500] pop temp 0
@54                                                          // [11501] push constant 54
D=A                                                          // [11502] push constant 54
@SP                                                          // [11503] push constant 54
M=M+1                                                        // [11504] push constant 54
A=M-1                                                        // [11505] push constant 54
M=D                                                          // [11506] push constant 54
@28                                                          // [11507] push constant 28
D=A                                                          // [11508] push constant 28
@SP                                                          // [11509] push constant 28
M=M+1                                                        // [11510] push constant 28
A=M-1                                                        // [11511] push constant 28
M=D                                                          // [11512] push constant 28
@6                                                           // [11513] push constant 6
D=A                                                          // [11514] push constant 6
@SP                                                          // [11515] push constant 6
M=M+1                                                        // [11516] push constant 6
A=M-1                                                        // [11517] push constant 6
M=D                                                          // [11518] push constant 6
@3                                                           // [11519] push constant 3
D=A                                                          // [11520] push constant 3
@SP                                                          // [11521] push constant 3
M=M+1                                                        // [11522] push constant 3
A=M-1                                                        // [11523] push constant 3
M=D                                                          // [11524] push constant 3
@3                                                           // [11525] push constant 3
D=A                                                          // [11526] push constant 3
@SP                                                          // [11527] push constant 3
M=M+1                                                        // [11528] push constant 3
A=M-1                                                        // [11529] push constant 3
M=D                                                          // [11530] push constant 3
@31                                                          // [11531] push constant 31
D=A                                                          // [11532] push constant 31
@SP                                                          // [11533] push constant 31
M=M+1                                                        // [11534] push constant 31
A=M-1                                                        // [11535] push constant 31
M=D                                                          // [11536] push constant 31
@51                                                          // [11537] push constant 51
D=A                                                          // [11538] push constant 51
@SP                                                          // [11539] push constant 51
M=M+1                                                        // [11540] push constant 51
A=M-1                                                        // [11541] push constant 51
M=D                                                          // [11542] push constant 51
@51                                                          // [11543] push constant 51
D=A                                                          // [11544] push constant 51
@SP                                                          // [11545] push constant 51
M=M+1                                                        // [11546] push constant 51
A=M-1                                                        // [11547] push constant 51
M=D                                                          // [11548] push constant 51
@51                                                          // [11549] push constant 51
D=A                                                          // [11550] push constant 51
@SP                                                          // [11551] push constant 51
M=M+1                                                        // [11552] push constant 51
A=M-1                                                        // [11553] push constant 51
M=D                                                          // [11554] push constant 51
@30                                                          // [11555] push constant 30
D=A                                                          // [11556] push constant 30
@SP                                                          // [11557] push constant 30
M=M+1                                                        // [11558] push constant 30
A=M-1                                                        // [11559] push constant 30
M=D                                                          // [11560] push constant 30
@SP                                                          // [11561] push constant 0
M=M+1                                                        // [11562] push constant 0
A=M-1                                                        // [11563] push constant 0
M=0                                                          // [11564] push constant 0
@SP                                                          // [11565] push constant 0
M=M+1                                                        // [11566] push constant 0
A=M-1                                                        // [11567] push constant 0
M=0                                                          // [11568] push constant 0
@12                                                          // [11569] call Output.create 12
D=A                                                          // [11570] call Output.create 12
@R13                                                         // [11571] call Output.create 12
M=D                                                          // [11572] call Output.create 12
@Output.create                                               // [11573] call Output.create 12
D=A                                                          // [11574] call Output.create 12
@R14                                                         // [11575] call Output.create 12
M=D                                                          // [11576] call Output.create 12
@return-118                                                  // [11577] call Output.create 12
D=A                                                          // [11578] call Output.create 12
@CALL                                                        // [11579] call Output.create 12
0;JEQ                                                        // [11580] call Output.create 12
(return-118)                                                 // [     ] call Output.create 12
@SP                                                          // [11581] pop temp 0
AM=M-1                                                       // [11582] pop temp 0
D=M                                                          // [11583] pop temp 0
@5                                                           // [11584] pop temp 0
M=D                                                          // [11585] pop temp 0
@55                                                          // [11586] push constant 55
D=A                                                          // [11587] push constant 55
@SP                                                          // [11588] push constant 55
M=M+1                                                        // [11589] push constant 55
A=M-1                                                        // [11590] push constant 55
M=D                                                          // [11591] push constant 55
@63                                                          // [11592] push constant 63
D=A                                                          // [11593] push constant 63
@SP                                                          // [11594] push constant 63
M=M+1                                                        // [11595] push constant 63
A=M-1                                                        // [11596] push constant 63
M=D                                                          // [11597] push constant 63
@49                                                          // [11598] push constant 49
D=A                                                          // [11599] push constant 49
@SP                                                          // [11600] push constant 49
M=M+1                                                        // [11601] push constant 49
A=M-1                                                        // [11602] push constant 49
M=D                                                          // [11603] push constant 49
@48                                                          // [11604] push constant 48
D=A                                                          // [11605] push constant 48
@SP                                                          // [11606] push constant 48
M=M+1                                                        // [11607] push constant 48
A=M-1                                                        // [11608] push constant 48
M=D                                                          // [11609] push constant 48
@48                                                          // [11610] push constant 48
D=A                                                          // [11611] push constant 48
@SP                                                          // [11612] push constant 48
M=M+1                                                        // [11613] push constant 48
A=M-1                                                        // [11614] push constant 48
M=D                                                          // [11615] push constant 48
@24                                                          // [11616] push constant 24
D=A                                                          // [11617] push constant 24
@SP                                                          // [11618] push constant 24
M=M+1                                                        // [11619] push constant 24
A=M-1                                                        // [11620] push constant 24
M=D                                                          // [11621] push constant 24
@12                                                          // [11622] push constant 12
D=A                                                          // [11623] push constant 12
@SP                                                          // [11624] push constant 12
M=M+1                                                        // [11625] push constant 12
A=M-1                                                        // [11626] push constant 12
M=D                                                          // [11627] push constant 12
@12                                                          // [11628] push constant 12
D=A                                                          // [11629] push constant 12
@SP                                                          // [11630] push constant 12
M=M+1                                                        // [11631] push constant 12
A=M-1                                                        // [11632] push constant 12
M=D                                                          // [11633] push constant 12
@12                                                          // [11634] push constant 12
D=A                                                          // [11635] push constant 12
@SP                                                          // [11636] push constant 12
M=M+1                                                        // [11637] push constant 12
A=M-1                                                        // [11638] push constant 12
M=D                                                          // [11639] push constant 12
@12                                                          // [11640] push constant 12
D=A                                                          // [11641] push constant 12
@SP                                                          // [11642] push constant 12
M=M+1                                                        // [11643] push constant 12
A=M-1                                                        // [11644] push constant 12
M=D                                                          // [11645] push constant 12
@SP                                                          // [11646] push constant 0
M=M+1                                                        // [11647] push constant 0
A=M-1                                                        // [11648] push constant 0
M=0                                                          // [11649] push constant 0
@SP                                                          // [11650] push constant 0
M=M+1                                                        // [11651] push constant 0
A=M-1                                                        // [11652] push constant 0
M=0                                                          // [11653] push constant 0
@12                                                          // [11654] call Output.create 12
D=A                                                          // [11655] call Output.create 12
@R13                                                         // [11656] call Output.create 12
M=D                                                          // [11657] call Output.create 12
@Output.create                                               // [11658] call Output.create 12
D=A                                                          // [11659] call Output.create 12
@R14                                                         // [11660] call Output.create 12
M=D                                                          // [11661] call Output.create 12
@return-119                                                  // [11662] call Output.create 12
D=A                                                          // [11663] call Output.create 12
@CALL                                                        // [11664] call Output.create 12
0;JEQ                                                        // [11665] call Output.create 12
(return-119)                                                 // [     ] call Output.create 12
@SP                                                          // [11666] pop temp 0
AM=M-1                                                       // [11667] pop temp 0
D=M                                                          // [11668] pop temp 0
@5                                                           // [11669] pop temp 0
M=D                                                          // [11670] pop temp 0
@56                                                          // [11671] push constant 56
D=A                                                          // [11672] push constant 56
@SP                                                          // [11673] push constant 56
M=M+1                                                        // [11674] push constant 56
A=M-1                                                        // [11675] push constant 56
M=D                                                          // [11676] push constant 56
@30                                                          // [11677] push constant 30
D=A                                                          // [11678] push constant 30
@SP                                                          // [11679] push constant 30
M=M+1                                                        // [11680] push constant 30
A=M-1                                                        // [11681] push constant 30
M=D                                                          // [11682] push constant 30
@51                                                          // [11683] push constant 51
D=A                                                          // [11684] push constant 51
@SP                                                          // [11685] push constant 51
M=M+1                                                        // [11686] push constant 51
A=M-1                                                        // [11687] push constant 51
M=D                                                          // [11688] push constant 51
@51                                                          // [11689] push constant 51
D=A                                                          // [11690] push constant 51
@SP                                                          // [11691] push constant 51
M=M+1                                                        // [11692] push constant 51
A=M-1                                                        // [11693] push constant 51
M=D                                                          // [11694] push constant 51
@51                                                          // [11695] push constant 51
D=A                                                          // [11696] push constant 51
@SP                                                          // [11697] push constant 51
M=M+1                                                        // [11698] push constant 51
A=M-1                                                        // [11699] push constant 51
M=D                                                          // [11700] push constant 51
@30                                                          // [11701] push constant 30
D=A                                                          // [11702] push constant 30
@SP                                                          // [11703] push constant 30
M=M+1                                                        // [11704] push constant 30
A=M-1                                                        // [11705] push constant 30
M=D                                                          // [11706] push constant 30
@51                                                          // [11707] push constant 51
D=A                                                          // [11708] push constant 51
@SP                                                          // [11709] push constant 51
M=M+1                                                        // [11710] push constant 51
A=M-1                                                        // [11711] push constant 51
M=D                                                          // [11712] push constant 51
@51                                                          // [11713] push constant 51
D=A                                                          // [11714] push constant 51
@SP                                                          // [11715] push constant 51
M=M+1                                                        // [11716] push constant 51
A=M-1                                                        // [11717] push constant 51
M=D                                                          // [11718] push constant 51
@51                                                          // [11719] push constant 51
D=A                                                          // [11720] push constant 51
@SP                                                          // [11721] push constant 51
M=M+1                                                        // [11722] push constant 51
A=M-1                                                        // [11723] push constant 51
M=D                                                          // [11724] push constant 51
@30                                                          // [11725] push constant 30
D=A                                                          // [11726] push constant 30
@SP                                                          // [11727] push constant 30
M=M+1                                                        // [11728] push constant 30
A=M-1                                                        // [11729] push constant 30
M=D                                                          // [11730] push constant 30
@SP                                                          // [11731] push constant 0
M=M+1                                                        // [11732] push constant 0
A=M-1                                                        // [11733] push constant 0
M=0                                                          // [11734] push constant 0
@SP                                                          // [11735] push constant 0
M=M+1                                                        // [11736] push constant 0
A=M-1                                                        // [11737] push constant 0
M=0                                                          // [11738] push constant 0
@12                                                          // [11739] call Output.create 12
D=A                                                          // [11740] call Output.create 12
@R13                                                         // [11741] call Output.create 12
M=D                                                          // [11742] call Output.create 12
@Output.create                                               // [11743] call Output.create 12
D=A                                                          // [11744] call Output.create 12
@R14                                                         // [11745] call Output.create 12
M=D                                                          // [11746] call Output.create 12
@return-120                                                  // [11747] call Output.create 12
D=A                                                          // [11748] call Output.create 12
@CALL                                                        // [11749] call Output.create 12
0;JEQ                                                        // [11750] call Output.create 12
(return-120)                                                 // [     ] call Output.create 12
@SP                                                          // [11751] pop temp 0
AM=M-1                                                       // [11752] pop temp 0
D=M                                                          // [11753] pop temp 0
@5                                                           // [11754] pop temp 0
M=D                                                          // [11755] pop temp 0
@57                                                          // [11756] push constant 57
D=A                                                          // [11757] push constant 57
@SP                                                          // [11758] push constant 57
M=M+1                                                        // [11759] push constant 57
A=M-1                                                        // [11760] push constant 57
M=D                                                          // [11761] push constant 57
@30                                                          // [11762] push constant 30
D=A                                                          // [11763] push constant 30
@SP                                                          // [11764] push constant 30
M=M+1                                                        // [11765] push constant 30
A=M-1                                                        // [11766] push constant 30
M=D                                                          // [11767] push constant 30
@51                                                          // [11768] push constant 51
D=A                                                          // [11769] push constant 51
@SP                                                          // [11770] push constant 51
M=M+1                                                        // [11771] push constant 51
A=M-1                                                        // [11772] push constant 51
M=D                                                          // [11773] push constant 51
@51                                                          // [11774] push constant 51
D=A                                                          // [11775] push constant 51
@SP                                                          // [11776] push constant 51
M=M+1                                                        // [11777] push constant 51
A=M-1                                                        // [11778] push constant 51
M=D                                                          // [11779] push constant 51
@51                                                          // [11780] push constant 51
D=A                                                          // [11781] push constant 51
@SP                                                          // [11782] push constant 51
M=M+1                                                        // [11783] push constant 51
A=M-1                                                        // [11784] push constant 51
M=D                                                          // [11785] push constant 51
@62                                                          // [11786] push constant 62
D=A                                                          // [11787] push constant 62
@SP                                                          // [11788] push constant 62
M=M+1                                                        // [11789] push constant 62
A=M-1                                                        // [11790] push constant 62
M=D                                                          // [11791] push constant 62
@48                                                          // [11792] push constant 48
D=A                                                          // [11793] push constant 48
@SP                                                          // [11794] push constant 48
M=M+1                                                        // [11795] push constant 48
A=M-1                                                        // [11796] push constant 48
M=D                                                          // [11797] push constant 48
@48                                                          // [11798] push constant 48
D=A                                                          // [11799] push constant 48
@SP                                                          // [11800] push constant 48
M=M+1                                                        // [11801] push constant 48
A=M-1                                                        // [11802] push constant 48
M=D                                                          // [11803] push constant 48
@24                                                          // [11804] push constant 24
D=A                                                          // [11805] push constant 24
@SP                                                          // [11806] push constant 24
M=M+1                                                        // [11807] push constant 24
A=M-1                                                        // [11808] push constant 24
M=D                                                          // [11809] push constant 24
@14                                                          // [11810] push constant 14
D=A                                                          // [11811] push constant 14
@SP                                                          // [11812] push constant 14
M=M+1                                                        // [11813] push constant 14
A=M-1                                                        // [11814] push constant 14
M=D                                                          // [11815] push constant 14
@SP                                                          // [11816] push constant 0
M=M+1                                                        // [11817] push constant 0
A=M-1                                                        // [11818] push constant 0
M=0                                                          // [11819] push constant 0
@SP                                                          // [11820] push constant 0
M=M+1                                                        // [11821] push constant 0
A=M-1                                                        // [11822] push constant 0
M=0                                                          // [11823] push constant 0
@12                                                          // [11824] call Output.create 12
D=A                                                          // [11825] call Output.create 12
@R13                                                         // [11826] call Output.create 12
M=D                                                          // [11827] call Output.create 12
@Output.create                                               // [11828] call Output.create 12
D=A                                                          // [11829] call Output.create 12
@R14                                                         // [11830] call Output.create 12
M=D                                                          // [11831] call Output.create 12
@return-121                                                  // [11832] call Output.create 12
D=A                                                          // [11833] call Output.create 12
@CALL                                                        // [11834] call Output.create 12
0;JEQ                                                        // [11835] call Output.create 12
(return-121)                                                 // [     ] call Output.create 12
@SP                                                          // [11836] pop temp 0
AM=M-1                                                       // [11837] pop temp 0
D=M                                                          // [11838] pop temp 0
@5                                                           // [11839] pop temp 0
M=D                                                          // [11840] pop temp 0
@58                                                          // [11841] push constant 58
D=A                                                          // [11842] push constant 58
@SP                                                          // [11843] push constant 58
M=M+1                                                        // [11844] push constant 58
A=M-1                                                        // [11845] push constant 58
M=D                                                          // [11846] push constant 58
@SP                                                          // [11847] push constant 0
M=M+1                                                        // [11848] push constant 0
A=M-1                                                        // [11849] push constant 0
M=0                                                          // [11850] push constant 0
@SP                                                          // [11851] push constant 0
M=M+1                                                        // [11852] push constant 0
A=M-1                                                        // [11853] push constant 0
M=0                                                          // [11854] push constant 0
@12                                                          // [11855] push constant 12
D=A                                                          // [11856] push constant 12
@SP                                                          // [11857] push constant 12
M=M+1                                                        // [11858] push constant 12
A=M-1                                                        // [11859] push constant 12
M=D                                                          // [11860] push constant 12
@12                                                          // [11861] push constant 12
D=A                                                          // [11862] push constant 12
@SP                                                          // [11863] push constant 12
M=M+1                                                        // [11864] push constant 12
A=M-1                                                        // [11865] push constant 12
M=D                                                          // [11866] push constant 12
@SP                                                          // [11867] push constant 0
M=M+1                                                        // [11868] push constant 0
A=M-1                                                        // [11869] push constant 0
M=0                                                          // [11870] push constant 0
@SP                                                          // [11871] push constant 0
M=M+1                                                        // [11872] push constant 0
A=M-1                                                        // [11873] push constant 0
M=0                                                          // [11874] push constant 0
@12                                                          // [11875] push constant 12
D=A                                                          // [11876] push constant 12
@SP                                                          // [11877] push constant 12
M=M+1                                                        // [11878] push constant 12
A=M-1                                                        // [11879] push constant 12
M=D                                                          // [11880] push constant 12
@12                                                          // [11881] push constant 12
D=A                                                          // [11882] push constant 12
@SP                                                          // [11883] push constant 12
M=M+1                                                        // [11884] push constant 12
A=M-1                                                        // [11885] push constant 12
M=D                                                          // [11886] push constant 12
@SP                                                          // [11887] push constant 0
M=M+1                                                        // [11888] push constant 0
A=M-1                                                        // [11889] push constant 0
M=0                                                          // [11890] push constant 0
@SP                                                          // [11891] push constant 0
M=M+1                                                        // [11892] push constant 0
A=M-1                                                        // [11893] push constant 0
M=0                                                          // [11894] push constant 0
@SP                                                          // [11895] push constant 0
M=M+1                                                        // [11896] push constant 0
A=M-1                                                        // [11897] push constant 0
M=0                                                          // [11898] push constant 0
@12                                                          // [11899] call Output.create 12
D=A                                                          // [11900] call Output.create 12
@R13                                                         // [11901] call Output.create 12
M=D                                                          // [11902] call Output.create 12
@Output.create                                               // [11903] call Output.create 12
D=A                                                          // [11904] call Output.create 12
@R14                                                         // [11905] call Output.create 12
M=D                                                          // [11906] call Output.create 12
@return-122                                                  // [11907] call Output.create 12
D=A                                                          // [11908] call Output.create 12
@CALL                                                        // [11909] call Output.create 12
0;JEQ                                                        // [11910] call Output.create 12
(return-122)                                                 // [     ] call Output.create 12
@SP                                                          // [11911] pop temp 0
AM=M-1                                                       // [11912] pop temp 0
D=M                                                          // [11913] pop temp 0
@5                                                           // [11914] pop temp 0
M=D                                                          // [11915] pop temp 0
@59                                                          // [11916] push constant 59
D=A                                                          // [11917] push constant 59
@SP                                                          // [11918] push constant 59
M=M+1                                                        // [11919] push constant 59
A=M-1                                                        // [11920] push constant 59
M=D                                                          // [11921] push constant 59
@SP                                                          // [11922] push constant 0
M=M+1                                                        // [11923] push constant 0
A=M-1                                                        // [11924] push constant 0
M=0                                                          // [11925] push constant 0
@SP                                                          // [11926] push constant 0
M=M+1                                                        // [11927] push constant 0
A=M-1                                                        // [11928] push constant 0
M=0                                                          // [11929] push constant 0
@12                                                          // [11930] push constant 12
D=A                                                          // [11931] push constant 12
@SP                                                          // [11932] push constant 12
M=M+1                                                        // [11933] push constant 12
A=M-1                                                        // [11934] push constant 12
M=D                                                          // [11935] push constant 12
@12                                                          // [11936] push constant 12
D=A                                                          // [11937] push constant 12
@SP                                                          // [11938] push constant 12
M=M+1                                                        // [11939] push constant 12
A=M-1                                                        // [11940] push constant 12
M=D                                                          // [11941] push constant 12
@SP                                                          // [11942] push constant 0
M=M+1                                                        // [11943] push constant 0
A=M-1                                                        // [11944] push constant 0
M=0                                                          // [11945] push constant 0
@SP                                                          // [11946] push constant 0
M=M+1                                                        // [11947] push constant 0
A=M-1                                                        // [11948] push constant 0
M=0                                                          // [11949] push constant 0
@12                                                          // [11950] push constant 12
D=A                                                          // [11951] push constant 12
@SP                                                          // [11952] push constant 12
M=M+1                                                        // [11953] push constant 12
A=M-1                                                        // [11954] push constant 12
M=D                                                          // [11955] push constant 12
@12                                                          // [11956] push constant 12
D=A                                                          // [11957] push constant 12
@SP                                                          // [11958] push constant 12
M=M+1                                                        // [11959] push constant 12
A=M-1                                                        // [11960] push constant 12
M=D                                                          // [11961] push constant 12
@6                                                           // [11962] push constant 6
D=A                                                          // [11963] push constant 6
@SP                                                          // [11964] push constant 6
M=M+1                                                        // [11965] push constant 6
A=M-1                                                        // [11966] push constant 6
M=D                                                          // [11967] push constant 6
@SP                                                          // [11968] push constant 0
M=M+1                                                        // [11969] push constant 0
A=M-1                                                        // [11970] push constant 0
M=0                                                          // [11971] push constant 0
@SP                                                          // [11972] push constant 0
M=M+1                                                        // [11973] push constant 0
A=M-1                                                        // [11974] push constant 0
M=0                                                          // [11975] push constant 0
@12                                                          // [11976] call Output.create 12
D=A                                                          // [11977] call Output.create 12
@R13                                                         // [11978] call Output.create 12
M=D                                                          // [11979] call Output.create 12
@Output.create                                               // [11980] call Output.create 12
D=A                                                          // [11981] call Output.create 12
@R14                                                         // [11982] call Output.create 12
M=D                                                          // [11983] call Output.create 12
@return-123                                                  // [11984] call Output.create 12
D=A                                                          // [11985] call Output.create 12
@CALL                                                        // [11986] call Output.create 12
0;JEQ                                                        // [11987] call Output.create 12
(return-123)                                                 // [     ] call Output.create 12
@SP                                                          // [11988] pop temp 0
AM=M-1                                                       // [11989] pop temp 0
D=M                                                          // [11990] pop temp 0
@5                                                           // [11991] pop temp 0
M=D                                                          // [11992] pop temp 0
@60                                                          // [11993] push constant 60
D=A                                                          // [11994] push constant 60
@SP                                                          // [11995] push constant 60
M=M+1                                                        // [11996] push constant 60
A=M-1                                                        // [11997] push constant 60
M=D                                                          // [11998] push constant 60
@SP                                                          // [11999] push constant 0
M=M+1                                                        // [12000] push constant 0
A=M-1                                                        // [12001] push constant 0
M=0                                                          // [12002] push constant 0
@SP                                                          // [12003] push constant 0
M=M+1                                                        // [12004] push constant 0
A=M-1                                                        // [12005] push constant 0
M=0                                                          // [12006] push constant 0
@24                                                          // [12007] push constant 24
D=A                                                          // [12008] push constant 24
@SP                                                          // [12009] push constant 24
M=M+1                                                        // [12010] push constant 24
A=M-1                                                        // [12011] push constant 24
M=D                                                          // [12012] push constant 24
@12                                                          // [12013] push constant 12
D=A                                                          // [12014] push constant 12
@SP                                                          // [12015] push constant 12
M=M+1                                                        // [12016] push constant 12
A=M-1                                                        // [12017] push constant 12
M=D                                                          // [12018] push constant 12
@6                                                           // [12019] push constant 6
D=A                                                          // [12020] push constant 6
@SP                                                          // [12021] push constant 6
M=M+1                                                        // [12022] push constant 6
A=M-1                                                        // [12023] push constant 6
M=D                                                          // [12024] push constant 6
@3                                                           // [12025] push constant 3
D=A                                                          // [12026] push constant 3
@SP                                                          // [12027] push constant 3
M=M+1                                                        // [12028] push constant 3
A=M-1                                                        // [12029] push constant 3
M=D                                                          // [12030] push constant 3
@6                                                           // [12031] push constant 6
D=A                                                          // [12032] push constant 6
@SP                                                          // [12033] push constant 6
M=M+1                                                        // [12034] push constant 6
A=M-1                                                        // [12035] push constant 6
M=D                                                          // [12036] push constant 6
@12                                                          // [12037] push constant 12
D=A                                                          // [12038] push constant 12
@SP                                                          // [12039] push constant 12
M=M+1                                                        // [12040] push constant 12
A=M-1                                                        // [12041] push constant 12
M=D                                                          // [12042] push constant 12
@24                                                          // [12043] push constant 24
D=A                                                          // [12044] push constant 24
@SP                                                          // [12045] push constant 24
M=M+1                                                        // [12046] push constant 24
A=M-1                                                        // [12047] push constant 24
M=D                                                          // [12048] push constant 24
@SP                                                          // [12049] push constant 0
M=M+1                                                        // [12050] push constant 0
A=M-1                                                        // [12051] push constant 0
M=0                                                          // [12052] push constant 0
@SP                                                          // [12053] push constant 0
M=M+1                                                        // [12054] push constant 0
A=M-1                                                        // [12055] push constant 0
M=0                                                          // [12056] push constant 0
@12                                                          // [12057] call Output.create 12
D=A                                                          // [12058] call Output.create 12
@R13                                                         // [12059] call Output.create 12
M=D                                                          // [12060] call Output.create 12
@Output.create                                               // [12061] call Output.create 12
D=A                                                          // [12062] call Output.create 12
@R14                                                         // [12063] call Output.create 12
M=D                                                          // [12064] call Output.create 12
@return-124                                                  // [12065] call Output.create 12
D=A                                                          // [12066] call Output.create 12
@CALL                                                        // [12067] call Output.create 12
0;JEQ                                                        // [12068] call Output.create 12
(return-124)                                                 // [     ] call Output.create 12
@SP                                                          // [12069] pop temp 0
AM=M-1                                                       // [12070] pop temp 0
D=M                                                          // [12071] pop temp 0
@5                                                           // [12072] pop temp 0
M=D                                                          // [12073] pop temp 0
@61                                                          // [12074] push constant 61
D=A                                                          // [12075] push constant 61
@SP                                                          // [12076] push constant 61
M=M+1                                                        // [12077] push constant 61
A=M-1                                                        // [12078] push constant 61
M=D                                                          // [12079] push constant 61
@SP                                                          // [12080] push constant 0
M=M+1                                                        // [12081] push constant 0
A=M-1                                                        // [12082] push constant 0
M=0                                                          // [12083] push constant 0
@SP                                                          // [12084] push constant 0
M=M+1                                                        // [12085] push constant 0
A=M-1                                                        // [12086] push constant 0
M=0                                                          // [12087] push constant 0
@SP                                                          // [12088] push constant 0
M=M+1                                                        // [12089] push constant 0
A=M-1                                                        // [12090] push constant 0
M=0                                                          // [12091] push constant 0
@63                                                          // [12092] push constant 63
D=A                                                          // [12093] push constant 63
@SP                                                          // [12094] push constant 63
M=M+1                                                        // [12095] push constant 63
A=M-1                                                        // [12096] push constant 63
M=D                                                          // [12097] push constant 63
@SP                                                          // [12098] push constant 0
M=M+1                                                        // [12099] push constant 0
A=M-1                                                        // [12100] push constant 0
M=0                                                          // [12101] push constant 0
@SP                                                          // [12102] push constant 0
M=M+1                                                        // [12103] push constant 0
A=M-1                                                        // [12104] push constant 0
M=0                                                          // [12105] push constant 0
@63                                                          // [12106] push constant 63
D=A                                                          // [12107] push constant 63
@SP                                                          // [12108] push constant 63
M=M+1                                                        // [12109] push constant 63
A=M-1                                                        // [12110] push constant 63
M=D                                                          // [12111] push constant 63
@SP                                                          // [12112] push constant 0
M=M+1                                                        // [12113] push constant 0
A=M-1                                                        // [12114] push constant 0
M=0                                                          // [12115] push constant 0
@SP                                                          // [12116] push constant 0
M=M+1                                                        // [12117] push constant 0
A=M-1                                                        // [12118] push constant 0
M=0                                                          // [12119] push constant 0
@SP                                                          // [12120] push constant 0
M=M+1                                                        // [12121] push constant 0
A=M-1                                                        // [12122] push constant 0
M=0                                                          // [12123] push constant 0
@SP                                                          // [12124] push constant 0
M=M+1                                                        // [12125] push constant 0
A=M-1                                                        // [12126] push constant 0
M=0                                                          // [12127] push constant 0
@12                                                          // [12128] call Output.create 12
D=A                                                          // [12129] call Output.create 12
@R13                                                         // [12130] call Output.create 12
M=D                                                          // [12131] call Output.create 12
@Output.create                                               // [12132] call Output.create 12
D=A                                                          // [12133] call Output.create 12
@R14                                                         // [12134] call Output.create 12
M=D                                                          // [12135] call Output.create 12
@return-125                                                  // [12136] call Output.create 12
D=A                                                          // [12137] call Output.create 12
@CALL                                                        // [12138] call Output.create 12
0;JEQ                                                        // [12139] call Output.create 12
(return-125)                                                 // [     ] call Output.create 12
@SP                                                          // [12140] pop temp 0
AM=M-1                                                       // [12141] pop temp 0
D=M                                                          // [12142] pop temp 0
@5                                                           // [12143] pop temp 0
M=D                                                          // [12144] pop temp 0
@62                                                          // [12145] push constant 62
D=A                                                          // [12146] push constant 62
@SP                                                          // [12147] push constant 62
M=M+1                                                        // [12148] push constant 62
A=M-1                                                        // [12149] push constant 62
M=D                                                          // [12150] push constant 62
@SP                                                          // [12151] push constant 0
M=M+1                                                        // [12152] push constant 0
A=M-1                                                        // [12153] push constant 0
M=0                                                          // [12154] push constant 0
@SP                                                          // [12155] push constant 0
M=M+1                                                        // [12156] push constant 0
A=M-1                                                        // [12157] push constant 0
M=0                                                          // [12158] push constant 0
@3                                                           // [12159] push constant 3
D=A                                                          // [12160] push constant 3
@SP                                                          // [12161] push constant 3
M=M+1                                                        // [12162] push constant 3
A=M-1                                                        // [12163] push constant 3
M=D                                                          // [12164] push constant 3
@6                                                           // [12165] push constant 6
D=A                                                          // [12166] push constant 6
@SP                                                          // [12167] push constant 6
M=M+1                                                        // [12168] push constant 6
A=M-1                                                        // [12169] push constant 6
M=D                                                          // [12170] push constant 6
@12                                                          // [12171] push constant 12
D=A                                                          // [12172] push constant 12
@SP                                                          // [12173] push constant 12
M=M+1                                                        // [12174] push constant 12
A=M-1                                                        // [12175] push constant 12
M=D                                                          // [12176] push constant 12
@24                                                          // [12177] push constant 24
D=A                                                          // [12178] push constant 24
@SP                                                          // [12179] push constant 24
M=M+1                                                        // [12180] push constant 24
A=M-1                                                        // [12181] push constant 24
M=D                                                          // [12182] push constant 24
@12                                                          // [12183] push constant 12
D=A                                                          // [12184] push constant 12
@SP                                                          // [12185] push constant 12
M=M+1                                                        // [12186] push constant 12
A=M-1                                                        // [12187] push constant 12
M=D                                                          // [12188] push constant 12
@6                                                           // [12189] push constant 6
D=A                                                          // [12190] push constant 6
@SP                                                          // [12191] push constant 6
M=M+1                                                        // [12192] push constant 6
A=M-1                                                        // [12193] push constant 6
M=D                                                          // [12194] push constant 6
@3                                                           // [12195] push constant 3
D=A                                                          // [12196] push constant 3
@SP                                                          // [12197] push constant 3
M=M+1                                                        // [12198] push constant 3
A=M-1                                                        // [12199] push constant 3
M=D                                                          // [12200] push constant 3
@SP                                                          // [12201] push constant 0
M=M+1                                                        // [12202] push constant 0
A=M-1                                                        // [12203] push constant 0
M=0                                                          // [12204] push constant 0
@SP                                                          // [12205] push constant 0
M=M+1                                                        // [12206] push constant 0
A=M-1                                                        // [12207] push constant 0
M=0                                                          // [12208] push constant 0
@12                                                          // [12209] call Output.create 12
D=A                                                          // [12210] call Output.create 12
@R13                                                         // [12211] call Output.create 12
M=D                                                          // [12212] call Output.create 12
@Output.create                                               // [12213] call Output.create 12
D=A                                                          // [12214] call Output.create 12
@R14                                                         // [12215] call Output.create 12
M=D                                                          // [12216] call Output.create 12
@return-126                                                  // [12217] call Output.create 12
D=A                                                          // [12218] call Output.create 12
@CALL                                                        // [12219] call Output.create 12
0;JEQ                                                        // [12220] call Output.create 12
(return-126)                                                 // [     ] call Output.create 12
@SP                                                          // [12221] pop temp 0
AM=M-1                                                       // [12222] pop temp 0
D=M                                                          // [12223] pop temp 0
@5                                                           // [12224] pop temp 0
M=D                                                          // [12225] pop temp 0
@64                                                          // [12226] push constant 64
D=A                                                          // [12227] push constant 64
@SP                                                          // [12228] push constant 64
M=M+1                                                        // [12229] push constant 64
A=M-1                                                        // [12230] push constant 64
M=D                                                          // [12231] push constant 64
@30                                                          // [12232] push constant 30
D=A                                                          // [12233] push constant 30
@SP                                                          // [12234] push constant 30
M=M+1                                                        // [12235] push constant 30
A=M-1                                                        // [12236] push constant 30
M=D                                                          // [12237] push constant 30
@51                                                          // [12238] push constant 51
D=A                                                          // [12239] push constant 51
@SP                                                          // [12240] push constant 51
M=M+1                                                        // [12241] push constant 51
A=M-1                                                        // [12242] push constant 51
M=D                                                          // [12243] push constant 51
@51                                                          // [12244] push constant 51
D=A                                                          // [12245] push constant 51
@SP                                                          // [12246] push constant 51
M=M+1                                                        // [12247] push constant 51
A=M-1                                                        // [12248] push constant 51
M=D                                                          // [12249] push constant 51
@59                                                          // [12250] push constant 59
D=A                                                          // [12251] push constant 59
@SP                                                          // [12252] push constant 59
M=M+1                                                        // [12253] push constant 59
A=M-1                                                        // [12254] push constant 59
M=D                                                          // [12255] push constant 59
@59                                                          // [12256] push constant 59
D=A                                                          // [12257] push constant 59
@SP                                                          // [12258] push constant 59
M=M+1                                                        // [12259] push constant 59
A=M-1                                                        // [12260] push constant 59
M=D                                                          // [12261] push constant 59
@59                                                          // [12262] push constant 59
D=A                                                          // [12263] push constant 59
@SP                                                          // [12264] push constant 59
M=M+1                                                        // [12265] push constant 59
A=M-1                                                        // [12266] push constant 59
M=D                                                          // [12267] push constant 59
@27                                                          // [12268] push constant 27
D=A                                                          // [12269] push constant 27
@SP                                                          // [12270] push constant 27
M=M+1                                                        // [12271] push constant 27
A=M-1                                                        // [12272] push constant 27
M=D                                                          // [12273] push constant 27
@3                                                           // [12274] push constant 3
D=A                                                          // [12275] push constant 3
@SP                                                          // [12276] push constant 3
M=M+1                                                        // [12277] push constant 3
A=M-1                                                        // [12278] push constant 3
M=D                                                          // [12279] push constant 3
@30                                                          // [12280] push constant 30
D=A                                                          // [12281] push constant 30
@SP                                                          // [12282] push constant 30
M=M+1                                                        // [12283] push constant 30
A=M-1                                                        // [12284] push constant 30
M=D                                                          // [12285] push constant 30
@SP                                                          // [12286] push constant 0
M=M+1                                                        // [12287] push constant 0
A=M-1                                                        // [12288] push constant 0
M=0                                                          // [12289] push constant 0
@SP                                                          // [12290] push constant 0
M=M+1                                                        // [12291] push constant 0
A=M-1                                                        // [12292] push constant 0
M=0                                                          // [12293] push constant 0
@12                                                          // [12294] call Output.create 12
D=A                                                          // [12295] call Output.create 12
@R13                                                         // [12296] call Output.create 12
M=D                                                          // [12297] call Output.create 12
@Output.create                                               // [12298] call Output.create 12
D=A                                                          // [12299] call Output.create 12
@R14                                                         // [12300] call Output.create 12
M=D                                                          // [12301] call Output.create 12
@return-127                                                  // [12302] call Output.create 12
D=A                                                          // [12303] call Output.create 12
@CALL                                                        // [12304] call Output.create 12
0;JEQ                                                        // [12305] call Output.create 12
(return-127)                                                 // [     ] call Output.create 12
@SP                                                          // [12306] pop temp 0
AM=M-1                                                       // [12307] pop temp 0
D=M                                                          // [12308] pop temp 0
@5                                                           // [12309] pop temp 0
M=D                                                          // [12310] pop temp 0
@63                                                          // [12311] push constant 63
D=A                                                          // [12312] push constant 63
@SP                                                          // [12313] push constant 63
M=M+1                                                        // [12314] push constant 63
A=M-1                                                        // [12315] push constant 63
M=D                                                          // [12316] push constant 63
@30                                                          // [12317] push constant 30
D=A                                                          // [12318] push constant 30
@SP                                                          // [12319] push constant 30
M=M+1                                                        // [12320] push constant 30
A=M-1                                                        // [12321] push constant 30
M=D                                                          // [12322] push constant 30
@51                                                          // [12323] push constant 51
D=A                                                          // [12324] push constant 51
@SP                                                          // [12325] push constant 51
M=M+1                                                        // [12326] push constant 51
A=M-1                                                        // [12327] push constant 51
M=D                                                          // [12328] push constant 51
@51                                                          // [12329] push constant 51
D=A                                                          // [12330] push constant 51
@SP                                                          // [12331] push constant 51
M=M+1                                                        // [12332] push constant 51
A=M-1                                                        // [12333] push constant 51
M=D                                                          // [12334] push constant 51
@24                                                          // [12335] push constant 24
D=A                                                          // [12336] push constant 24
@SP                                                          // [12337] push constant 24
M=M+1                                                        // [12338] push constant 24
A=M-1                                                        // [12339] push constant 24
M=D                                                          // [12340] push constant 24
@12                                                          // [12341] push constant 12
D=A                                                          // [12342] push constant 12
@SP                                                          // [12343] push constant 12
M=M+1                                                        // [12344] push constant 12
A=M-1                                                        // [12345] push constant 12
M=D                                                          // [12346] push constant 12
@12                                                          // [12347] push constant 12
D=A                                                          // [12348] push constant 12
@SP                                                          // [12349] push constant 12
M=M+1                                                        // [12350] push constant 12
A=M-1                                                        // [12351] push constant 12
M=D                                                          // [12352] push constant 12
@SP                                                          // [12353] push constant 0
M=M+1                                                        // [12354] push constant 0
A=M-1                                                        // [12355] push constant 0
M=0                                                          // [12356] push constant 0
@12                                                          // [12357] push constant 12
D=A                                                          // [12358] push constant 12
@SP                                                          // [12359] push constant 12
M=M+1                                                        // [12360] push constant 12
A=M-1                                                        // [12361] push constant 12
M=D                                                          // [12362] push constant 12
@12                                                          // [12363] push constant 12
D=A                                                          // [12364] push constant 12
@SP                                                          // [12365] push constant 12
M=M+1                                                        // [12366] push constant 12
A=M-1                                                        // [12367] push constant 12
M=D                                                          // [12368] push constant 12
@SP                                                          // [12369] push constant 0
M=M+1                                                        // [12370] push constant 0
A=M-1                                                        // [12371] push constant 0
M=0                                                          // [12372] push constant 0
@SP                                                          // [12373] push constant 0
M=M+1                                                        // [12374] push constant 0
A=M-1                                                        // [12375] push constant 0
M=0                                                          // [12376] push constant 0
@12                                                          // [12377] call Output.create 12
D=A                                                          // [12378] call Output.create 12
@R13                                                         // [12379] call Output.create 12
M=D                                                          // [12380] call Output.create 12
@Output.create                                               // [12381] call Output.create 12
D=A                                                          // [12382] call Output.create 12
@R14                                                         // [12383] call Output.create 12
M=D                                                          // [12384] call Output.create 12
@return-128                                                  // [12385] call Output.create 12
D=A                                                          // [12386] call Output.create 12
@CALL                                                        // [12387] call Output.create 12
0;JEQ                                                        // [12388] call Output.create 12
(return-128)                                                 // [     ] call Output.create 12
@SP                                                          // [12389] pop temp 0
AM=M-1                                                       // [12390] pop temp 0
D=M                                                          // [12391] pop temp 0
@5                                                           // [12392] pop temp 0
M=D                                                          // [12393] pop temp 0
@65                                                          // [12394] push constant 65
D=A                                                          // [12395] push constant 65
@SP                                                          // [12396] push constant 65
M=M+1                                                        // [12397] push constant 65
A=M-1                                                        // [12398] push constant 65
M=D                                                          // [12399] push constant 65
@12                                                          // [12400] push constant 12
D=A                                                          // [12401] push constant 12
@SP                                                          // [12402] push constant 12
M=M+1                                                        // [12403] push constant 12
A=M-1                                                        // [12404] push constant 12
M=D                                                          // [12405] push constant 12
@30                                                          // [12406] push constant 30
D=A                                                          // [12407] push constant 30
@SP                                                          // [12408] push constant 30
M=M+1                                                        // [12409] push constant 30
A=M-1                                                        // [12410] push constant 30
M=D                                                          // [12411] push constant 30
@51                                                          // [12412] push constant 51
D=A                                                          // [12413] push constant 51
@SP                                                          // [12414] push constant 51
M=M+1                                                        // [12415] push constant 51
A=M-1                                                        // [12416] push constant 51
M=D                                                          // [12417] push constant 51
@51                                                          // [12418] push constant 51
D=A                                                          // [12419] push constant 51
@SP                                                          // [12420] push constant 51
M=M+1                                                        // [12421] push constant 51
A=M-1                                                        // [12422] push constant 51
M=D                                                          // [12423] push constant 51
@63                                                          // [12424] push constant 63
D=A                                                          // [12425] push constant 63
@SP                                                          // [12426] push constant 63
M=M+1                                                        // [12427] push constant 63
A=M-1                                                        // [12428] push constant 63
M=D                                                          // [12429] push constant 63
@51                                                          // [12430] push constant 51
D=A                                                          // [12431] push constant 51
@SP                                                          // [12432] push constant 51
M=M+1                                                        // [12433] push constant 51
A=M-1                                                        // [12434] push constant 51
M=D                                                          // [12435] push constant 51
@51                                                          // [12436] push constant 51
D=A                                                          // [12437] push constant 51
@SP                                                          // [12438] push constant 51
M=M+1                                                        // [12439] push constant 51
A=M-1                                                        // [12440] push constant 51
M=D                                                          // [12441] push constant 51
@51                                                          // [12442] push constant 51
D=A                                                          // [12443] push constant 51
@SP                                                          // [12444] push constant 51
M=M+1                                                        // [12445] push constant 51
A=M-1                                                        // [12446] push constant 51
M=D                                                          // [12447] push constant 51
@51                                                          // [12448] push constant 51
D=A                                                          // [12449] push constant 51
@SP                                                          // [12450] push constant 51
M=M+1                                                        // [12451] push constant 51
A=M-1                                                        // [12452] push constant 51
M=D                                                          // [12453] push constant 51
@SP                                                          // [12454] push constant 0
M=M+1                                                        // [12455] push constant 0
A=M-1                                                        // [12456] push constant 0
M=0                                                          // [12457] push constant 0
@SP                                                          // [12458] push constant 0
M=M+1                                                        // [12459] push constant 0
A=M-1                                                        // [12460] push constant 0
M=0                                                          // [12461] push constant 0
@12                                                          // [12462] call Output.create 12
D=A                                                          // [12463] call Output.create 12
@R13                                                         // [12464] call Output.create 12
M=D                                                          // [12465] call Output.create 12
@Output.create                                               // [12466] call Output.create 12
D=A                                                          // [12467] call Output.create 12
@R14                                                         // [12468] call Output.create 12
M=D                                                          // [12469] call Output.create 12
@return-129                                                  // [12470] call Output.create 12
D=A                                                          // [12471] call Output.create 12
@CALL                                                        // [12472] call Output.create 12
0;JEQ                                                        // [12473] call Output.create 12
(return-129)                                                 // [     ] call Output.create 12
@SP                                                          // [12474] pop temp 0
AM=M-1                                                       // [12475] pop temp 0
D=M                                                          // [12476] pop temp 0
@5                                                           // [12477] pop temp 0
M=D                                                          // [12478] pop temp 0
@66                                                          // [12479] push constant 66
D=A                                                          // [12480] push constant 66
@SP                                                          // [12481] push constant 66
M=M+1                                                        // [12482] push constant 66
A=M-1                                                        // [12483] push constant 66
M=D                                                          // [12484] push constant 66
@31                                                          // [12485] push constant 31
D=A                                                          // [12486] push constant 31
@SP                                                          // [12487] push constant 31
M=M+1                                                        // [12488] push constant 31
A=M-1                                                        // [12489] push constant 31
M=D                                                          // [12490] push constant 31
@51                                                          // [12491] push constant 51
D=A                                                          // [12492] push constant 51
@SP                                                          // [12493] push constant 51
M=M+1                                                        // [12494] push constant 51
A=M-1                                                        // [12495] push constant 51
M=D                                                          // [12496] push constant 51
@51                                                          // [12497] push constant 51
D=A                                                          // [12498] push constant 51
@SP                                                          // [12499] push constant 51
M=M+1                                                        // [12500] push constant 51
A=M-1                                                        // [12501] push constant 51
M=D                                                          // [12502] push constant 51
@51                                                          // [12503] push constant 51
D=A                                                          // [12504] push constant 51
@SP                                                          // [12505] push constant 51
M=M+1                                                        // [12506] push constant 51
A=M-1                                                        // [12507] push constant 51
M=D                                                          // [12508] push constant 51
@31                                                          // [12509] push constant 31
D=A                                                          // [12510] push constant 31
@SP                                                          // [12511] push constant 31
M=M+1                                                        // [12512] push constant 31
A=M-1                                                        // [12513] push constant 31
M=D                                                          // [12514] push constant 31
@51                                                          // [12515] push constant 51
D=A                                                          // [12516] push constant 51
@SP                                                          // [12517] push constant 51
M=M+1                                                        // [12518] push constant 51
A=M-1                                                        // [12519] push constant 51
M=D                                                          // [12520] push constant 51
@51                                                          // [12521] push constant 51
D=A                                                          // [12522] push constant 51
@SP                                                          // [12523] push constant 51
M=M+1                                                        // [12524] push constant 51
A=M-1                                                        // [12525] push constant 51
M=D                                                          // [12526] push constant 51
@51                                                          // [12527] push constant 51
D=A                                                          // [12528] push constant 51
@SP                                                          // [12529] push constant 51
M=M+1                                                        // [12530] push constant 51
A=M-1                                                        // [12531] push constant 51
M=D                                                          // [12532] push constant 51
@31                                                          // [12533] push constant 31
D=A                                                          // [12534] push constant 31
@SP                                                          // [12535] push constant 31
M=M+1                                                        // [12536] push constant 31
A=M-1                                                        // [12537] push constant 31
M=D                                                          // [12538] push constant 31
@SP                                                          // [12539] push constant 0
M=M+1                                                        // [12540] push constant 0
A=M-1                                                        // [12541] push constant 0
M=0                                                          // [12542] push constant 0
@SP                                                          // [12543] push constant 0
M=M+1                                                        // [12544] push constant 0
A=M-1                                                        // [12545] push constant 0
M=0                                                          // [12546] push constant 0
@12                                                          // [12547] call Output.create 12
D=A                                                          // [12548] call Output.create 12
@R13                                                         // [12549] call Output.create 12
M=D                                                          // [12550] call Output.create 12
@Output.create                                               // [12551] call Output.create 12
D=A                                                          // [12552] call Output.create 12
@R14                                                         // [12553] call Output.create 12
M=D                                                          // [12554] call Output.create 12
@return-130                                                  // [12555] call Output.create 12
D=A                                                          // [12556] call Output.create 12
@CALL                                                        // [12557] call Output.create 12
0;JEQ                                                        // [12558] call Output.create 12
(return-130)                                                 // [     ] call Output.create 12
@SP                                                          // [12559] pop temp 0
AM=M-1                                                       // [12560] pop temp 0
D=M                                                          // [12561] pop temp 0
@5                                                           // [12562] pop temp 0
M=D                                                          // [12563] pop temp 0
@67                                                          // [12564] push constant 67
D=A                                                          // [12565] push constant 67
@SP                                                          // [12566] push constant 67
M=M+1                                                        // [12567] push constant 67
A=M-1                                                        // [12568] push constant 67
M=D                                                          // [12569] push constant 67
@28                                                          // [12570] push constant 28
D=A                                                          // [12571] push constant 28
@SP                                                          // [12572] push constant 28
M=M+1                                                        // [12573] push constant 28
A=M-1                                                        // [12574] push constant 28
M=D                                                          // [12575] push constant 28
@54                                                          // [12576] push constant 54
D=A                                                          // [12577] push constant 54
@SP                                                          // [12578] push constant 54
M=M+1                                                        // [12579] push constant 54
A=M-1                                                        // [12580] push constant 54
M=D                                                          // [12581] push constant 54
@35                                                          // [12582] push constant 35
D=A                                                          // [12583] push constant 35
@SP                                                          // [12584] push constant 35
M=M+1                                                        // [12585] push constant 35
A=M-1                                                        // [12586] push constant 35
M=D                                                          // [12587] push constant 35
@3                                                           // [12588] push constant 3
D=A                                                          // [12589] push constant 3
@SP                                                          // [12590] push constant 3
M=M+1                                                        // [12591] push constant 3
A=M-1                                                        // [12592] push constant 3
M=D                                                          // [12593] push constant 3
@3                                                           // [12594] push constant 3
D=A                                                          // [12595] push constant 3
@SP                                                          // [12596] push constant 3
M=M+1                                                        // [12597] push constant 3
A=M-1                                                        // [12598] push constant 3
M=D                                                          // [12599] push constant 3
@3                                                           // [12600] push constant 3
D=A                                                          // [12601] push constant 3
@SP                                                          // [12602] push constant 3
M=M+1                                                        // [12603] push constant 3
A=M-1                                                        // [12604] push constant 3
M=D                                                          // [12605] push constant 3
@35                                                          // [12606] push constant 35
D=A                                                          // [12607] push constant 35
@SP                                                          // [12608] push constant 35
M=M+1                                                        // [12609] push constant 35
A=M-1                                                        // [12610] push constant 35
M=D                                                          // [12611] push constant 35
@54                                                          // [12612] push constant 54
D=A                                                          // [12613] push constant 54
@SP                                                          // [12614] push constant 54
M=M+1                                                        // [12615] push constant 54
A=M-1                                                        // [12616] push constant 54
M=D                                                          // [12617] push constant 54
@28                                                          // [12618] push constant 28
D=A                                                          // [12619] push constant 28
@SP                                                          // [12620] push constant 28
M=M+1                                                        // [12621] push constant 28
A=M-1                                                        // [12622] push constant 28
M=D                                                          // [12623] push constant 28
@SP                                                          // [12624] push constant 0
M=M+1                                                        // [12625] push constant 0
A=M-1                                                        // [12626] push constant 0
M=0                                                          // [12627] push constant 0
@SP                                                          // [12628] push constant 0
M=M+1                                                        // [12629] push constant 0
A=M-1                                                        // [12630] push constant 0
M=0                                                          // [12631] push constant 0
@12                                                          // [12632] call Output.create 12
D=A                                                          // [12633] call Output.create 12
@R13                                                         // [12634] call Output.create 12
M=D                                                          // [12635] call Output.create 12
@Output.create                                               // [12636] call Output.create 12
D=A                                                          // [12637] call Output.create 12
@R14                                                         // [12638] call Output.create 12
M=D                                                          // [12639] call Output.create 12
@return-131                                                  // [12640] call Output.create 12
D=A                                                          // [12641] call Output.create 12
@CALL                                                        // [12642] call Output.create 12
0;JEQ                                                        // [12643] call Output.create 12
(return-131)                                                 // [     ] call Output.create 12
@SP                                                          // [12644] pop temp 0
AM=M-1                                                       // [12645] pop temp 0
D=M                                                          // [12646] pop temp 0
@5                                                           // [12647] pop temp 0
M=D                                                          // [12648] pop temp 0
@68                                                          // [12649] push constant 68
D=A                                                          // [12650] push constant 68
@SP                                                          // [12651] push constant 68
M=M+1                                                        // [12652] push constant 68
A=M-1                                                        // [12653] push constant 68
M=D                                                          // [12654] push constant 68
@15                                                          // [12655] push constant 15
D=A                                                          // [12656] push constant 15
@SP                                                          // [12657] push constant 15
M=M+1                                                        // [12658] push constant 15
A=M-1                                                        // [12659] push constant 15
M=D                                                          // [12660] push constant 15
@27                                                          // [12661] push constant 27
D=A                                                          // [12662] push constant 27
@SP                                                          // [12663] push constant 27
M=M+1                                                        // [12664] push constant 27
A=M-1                                                        // [12665] push constant 27
M=D                                                          // [12666] push constant 27
@51                                                          // [12667] push constant 51
D=A                                                          // [12668] push constant 51
@SP                                                          // [12669] push constant 51
M=M+1                                                        // [12670] push constant 51
A=M-1                                                        // [12671] push constant 51
M=D                                                          // [12672] push constant 51
@51                                                          // [12673] push constant 51
D=A                                                          // [12674] push constant 51
@SP                                                          // [12675] push constant 51
M=M+1                                                        // [12676] push constant 51
A=M-1                                                        // [12677] push constant 51
M=D                                                          // [12678] push constant 51
@51                                                          // [12679] push constant 51
D=A                                                          // [12680] push constant 51
@SP                                                          // [12681] push constant 51
M=M+1                                                        // [12682] push constant 51
A=M-1                                                        // [12683] push constant 51
M=D                                                          // [12684] push constant 51
@51                                                          // [12685] push constant 51
D=A                                                          // [12686] push constant 51
@SP                                                          // [12687] push constant 51
M=M+1                                                        // [12688] push constant 51
A=M-1                                                        // [12689] push constant 51
M=D                                                          // [12690] push constant 51
@51                                                          // [12691] push constant 51
D=A                                                          // [12692] push constant 51
@SP                                                          // [12693] push constant 51
M=M+1                                                        // [12694] push constant 51
A=M-1                                                        // [12695] push constant 51
M=D                                                          // [12696] push constant 51
@27                                                          // [12697] push constant 27
D=A                                                          // [12698] push constant 27
@SP                                                          // [12699] push constant 27
M=M+1                                                        // [12700] push constant 27
A=M-1                                                        // [12701] push constant 27
M=D                                                          // [12702] push constant 27
@15                                                          // [12703] push constant 15
D=A                                                          // [12704] push constant 15
@SP                                                          // [12705] push constant 15
M=M+1                                                        // [12706] push constant 15
A=M-1                                                        // [12707] push constant 15
M=D                                                          // [12708] push constant 15
@SP                                                          // [12709] push constant 0
M=M+1                                                        // [12710] push constant 0
A=M-1                                                        // [12711] push constant 0
M=0                                                          // [12712] push constant 0
@SP                                                          // [12713] push constant 0
M=M+1                                                        // [12714] push constant 0
A=M-1                                                        // [12715] push constant 0
M=0                                                          // [12716] push constant 0
@12                                                          // [12717] call Output.create 12
D=A                                                          // [12718] call Output.create 12
@R13                                                         // [12719] call Output.create 12
M=D                                                          // [12720] call Output.create 12
@Output.create                                               // [12721] call Output.create 12
D=A                                                          // [12722] call Output.create 12
@R14                                                         // [12723] call Output.create 12
M=D                                                          // [12724] call Output.create 12
@return-132                                                  // [12725] call Output.create 12
D=A                                                          // [12726] call Output.create 12
@CALL                                                        // [12727] call Output.create 12
0;JEQ                                                        // [12728] call Output.create 12
(return-132)                                                 // [     ] call Output.create 12
@SP                                                          // [12729] pop temp 0
AM=M-1                                                       // [12730] pop temp 0
D=M                                                          // [12731] pop temp 0
@5                                                           // [12732] pop temp 0
M=D                                                          // [12733] pop temp 0
@69                                                          // [12734] push constant 69
D=A                                                          // [12735] push constant 69
@SP                                                          // [12736] push constant 69
M=M+1                                                        // [12737] push constant 69
A=M-1                                                        // [12738] push constant 69
M=D                                                          // [12739] push constant 69
@63                                                          // [12740] push constant 63
D=A                                                          // [12741] push constant 63
@SP                                                          // [12742] push constant 63
M=M+1                                                        // [12743] push constant 63
A=M-1                                                        // [12744] push constant 63
M=D                                                          // [12745] push constant 63
@51                                                          // [12746] push constant 51
D=A                                                          // [12747] push constant 51
@SP                                                          // [12748] push constant 51
M=M+1                                                        // [12749] push constant 51
A=M-1                                                        // [12750] push constant 51
M=D                                                          // [12751] push constant 51
@35                                                          // [12752] push constant 35
D=A                                                          // [12753] push constant 35
@SP                                                          // [12754] push constant 35
M=M+1                                                        // [12755] push constant 35
A=M-1                                                        // [12756] push constant 35
M=D                                                          // [12757] push constant 35
@11                                                          // [12758] push constant 11
D=A                                                          // [12759] push constant 11
@SP                                                          // [12760] push constant 11
M=M+1                                                        // [12761] push constant 11
A=M-1                                                        // [12762] push constant 11
M=D                                                          // [12763] push constant 11
@15                                                          // [12764] push constant 15
D=A                                                          // [12765] push constant 15
@SP                                                          // [12766] push constant 15
M=M+1                                                        // [12767] push constant 15
A=M-1                                                        // [12768] push constant 15
M=D                                                          // [12769] push constant 15
@11                                                          // [12770] push constant 11
D=A                                                          // [12771] push constant 11
@SP                                                          // [12772] push constant 11
M=M+1                                                        // [12773] push constant 11
A=M-1                                                        // [12774] push constant 11
M=D                                                          // [12775] push constant 11
@35                                                          // [12776] push constant 35
D=A                                                          // [12777] push constant 35
@SP                                                          // [12778] push constant 35
M=M+1                                                        // [12779] push constant 35
A=M-1                                                        // [12780] push constant 35
M=D                                                          // [12781] push constant 35
@51                                                          // [12782] push constant 51
D=A                                                          // [12783] push constant 51
@SP                                                          // [12784] push constant 51
M=M+1                                                        // [12785] push constant 51
A=M-1                                                        // [12786] push constant 51
M=D                                                          // [12787] push constant 51
@63                                                          // [12788] push constant 63
D=A                                                          // [12789] push constant 63
@SP                                                          // [12790] push constant 63
M=M+1                                                        // [12791] push constant 63
A=M-1                                                        // [12792] push constant 63
M=D                                                          // [12793] push constant 63
@SP                                                          // [12794] push constant 0
M=M+1                                                        // [12795] push constant 0
A=M-1                                                        // [12796] push constant 0
M=0                                                          // [12797] push constant 0
@SP                                                          // [12798] push constant 0
M=M+1                                                        // [12799] push constant 0
A=M-1                                                        // [12800] push constant 0
M=0                                                          // [12801] push constant 0
@12                                                          // [12802] call Output.create 12
D=A                                                          // [12803] call Output.create 12
@R13                                                         // [12804] call Output.create 12
M=D                                                          // [12805] call Output.create 12
@Output.create                                               // [12806] call Output.create 12
D=A                                                          // [12807] call Output.create 12
@R14                                                         // [12808] call Output.create 12
M=D                                                          // [12809] call Output.create 12
@return-133                                                  // [12810] call Output.create 12
D=A                                                          // [12811] call Output.create 12
@CALL                                                        // [12812] call Output.create 12
0;JEQ                                                        // [12813] call Output.create 12
(return-133)                                                 // [     ] call Output.create 12
@SP                                                          // [12814] pop temp 0
AM=M-1                                                       // [12815] pop temp 0
D=M                                                          // [12816] pop temp 0
@5                                                           // [12817] pop temp 0
M=D                                                          // [12818] pop temp 0
@70                                                          // [12819] push constant 70
D=A                                                          // [12820] push constant 70
@SP                                                          // [12821] push constant 70
M=M+1                                                        // [12822] push constant 70
A=M-1                                                        // [12823] push constant 70
M=D                                                          // [12824] push constant 70
@63                                                          // [12825] push constant 63
D=A                                                          // [12826] push constant 63
@SP                                                          // [12827] push constant 63
M=M+1                                                        // [12828] push constant 63
A=M-1                                                        // [12829] push constant 63
M=D                                                          // [12830] push constant 63
@51                                                          // [12831] push constant 51
D=A                                                          // [12832] push constant 51
@SP                                                          // [12833] push constant 51
M=M+1                                                        // [12834] push constant 51
A=M-1                                                        // [12835] push constant 51
M=D                                                          // [12836] push constant 51
@35                                                          // [12837] push constant 35
D=A                                                          // [12838] push constant 35
@SP                                                          // [12839] push constant 35
M=M+1                                                        // [12840] push constant 35
A=M-1                                                        // [12841] push constant 35
M=D                                                          // [12842] push constant 35
@11                                                          // [12843] push constant 11
D=A                                                          // [12844] push constant 11
@SP                                                          // [12845] push constant 11
M=M+1                                                        // [12846] push constant 11
A=M-1                                                        // [12847] push constant 11
M=D                                                          // [12848] push constant 11
@15                                                          // [12849] push constant 15
D=A                                                          // [12850] push constant 15
@SP                                                          // [12851] push constant 15
M=M+1                                                        // [12852] push constant 15
A=M-1                                                        // [12853] push constant 15
M=D                                                          // [12854] push constant 15
@11                                                          // [12855] push constant 11
D=A                                                          // [12856] push constant 11
@SP                                                          // [12857] push constant 11
M=M+1                                                        // [12858] push constant 11
A=M-1                                                        // [12859] push constant 11
M=D                                                          // [12860] push constant 11
@3                                                           // [12861] push constant 3
D=A                                                          // [12862] push constant 3
@SP                                                          // [12863] push constant 3
M=M+1                                                        // [12864] push constant 3
A=M-1                                                        // [12865] push constant 3
M=D                                                          // [12866] push constant 3
@3                                                           // [12867] push constant 3
D=A                                                          // [12868] push constant 3
@SP                                                          // [12869] push constant 3
M=M+1                                                        // [12870] push constant 3
A=M-1                                                        // [12871] push constant 3
M=D                                                          // [12872] push constant 3
@3                                                           // [12873] push constant 3
D=A                                                          // [12874] push constant 3
@SP                                                          // [12875] push constant 3
M=M+1                                                        // [12876] push constant 3
A=M-1                                                        // [12877] push constant 3
M=D                                                          // [12878] push constant 3
@SP                                                          // [12879] push constant 0
M=M+1                                                        // [12880] push constant 0
A=M-1                                                        // [12881] push constant 0
M=0                                                          // [12882] push constant 0
@SP                                                          // [12883] push constant 0
M=M+1                                                        // [12884] push constant 0
A=M-1                                                        // [12885] push constant 0
M=0                                                          // [12886] push constant 0
@12                                                          // [12887] call Output.create 12
D=A                                                          // [12888] call Output.create 12
@R13                                                         // [12889] call Output.create 12
M=D                                                          // [12890] call Output.create 12
@Output.create                                               // [12891] call Output.create 12
D=A                                                          // [12892] call Output.create 12
@R14                                                         // [12893] call Output.create 12
M=D                                                          // [12894] call Output.create 12
@return-134                                                  // [12895] call Output.create 12
D=A                                                          // [12896] call Output.create 12
@CALL                                                        // [12897] call Output.create 12
0;JEQ                                                        // [12898] call Output.create 12
(return-134)                                                 // [     ] call Output.create 12
@SP                                                          // [12899] pop temp 0
AM=M-1                                                       // [12900] pop temp 0
D=M                                                          // [12901] pop temp 0
@5                                                           // [12902] pop temp 0
M=D                                                          // [12903] pop temp 0
@71                                                          // [12904] push constant 71
D=A                                                          // [12905] push constant 71
@SP                                                          // [12906] push constant 71
M=M+1                                                        // [12907] push constant 71
A=M-1                                                        // [12908] push constant 71
M=D                                                          // [12909] push constant 71
@28                                                          // [12910] push constant 28
D=A                                                          // [12911] push constant 28
@SP                                                          // [12912] push constant 28
M=M+1                                                        // [12913] push constant 28
A=M-1                                                        // [12914] push constant 28
M=D                                                          // [12915] push constant 28
@54                                                          // [12916] push constant 54
D=A                                                          // [12917] push constant 54
@SP                                                          // [12918] push constant 54
M=M+1                                                        // [12919] push constant 54
A=M-1                                                        // [12920] push constant 54
M=D                                                          // [12921] push constant 54
@35                                                          // [12922] push constant 35
D=A                                                          // [12923] push constant 35
@SP                                                          // [12924] push constant 35
M=M+1                                                        // [12925] push constant 35
A=M-1                                                        // [12926] push constant 35
M=D                                                          // [12927] push constant 35
@3                                                           // [12928] push constant 3
D=A                                                          // [12929] push constant 3
@SP                                                          // [12930] push constant 3
M=M+1                                                        // [12931] push constant 3
A=M-1                                                        // [12932] push constant 3
M=D                                                          // [12933] push constant 3
@59                                                          // [12934] push constant 59
D=A                                                          // [12935] push constant 59
@SP                                                          // [12936] push constant 59
M=M+1                                                        // [12937] push constant 59
A=M-1                                                        // [12938] push constant 59
M=D                                                          // [12939] push constant 59
@51                                                          // [12940] push constant 51
D=A                                                          // [12941] push constant 51
@SP                                                          // [12942] push constant 51
M=M+1                                                        // [12943] push constant 51
A=M-1                                                        // [12944] push constant 51
M=D                                                          // [12945] push constant 51
@51                                                          // [12946] push constant 51
D=A                                                          // [12947] push constant 51
@SP                                                          // [12948] push constant 51
M=M+1                                                        // [12949] push constant 51
A=M-1                                                        // [12950] push constant 51
M=D                                                          // [12951] push constant 51
@54                                                          // [12952] push constant 54
D=A                                                          // [12953] push constant 54
@SP                                                          // [12954] push constant 54
M=M+1                                                        // [12955] push constant 54
A=M-1                                                        // [12956] push constant 54
M=D                                                          // [12957] push constant 54
@44                                                          // [12958] push constant 44
D=A                                                          // [12959] push constant 44
@SP                                                          // [12960] push constant 44
M=M+1                                                        // [12961] push constant 44
A=M-1                                                        // [12962] push constant 44
M=D                                                          // [12963] push constant 44
@SP                                                          // [12964] push constant 0
M=M+1                                                        // [12965] push constant 0
A=M-1                                                        // [12966] push constant 0
M=0                                                          // [12967] push constant 0
@SP                                                          // [12968] push constant 0
M=M+1                                                        // [12969] push constant 0
A=M-1                                                        // [12970] push constant 0
M=0                                                          // [12971] push constant 0
@12                                                          // [12972] call Output.create 12
D=A                                                          // [12973] call Output.create 12
@R13                                                         // [12974] call Output.create 12
M=D                                                          // [12975] call Output.create 12
@Output.create                                               // [12976] call Output.create 12
D=A                                                          // [12977] call Output.create 12
@R14                                                         // [12978] call Output.create 12
M=D                                                          // [12979] call Output.create 12
@return-135                                                  // [12980] call Output.create 12
D=A                                                          // [12981] call Output.create 12
@CALL                                                        // [12982] call Output.create 12
0;JEQ                                                        // [12983] call Output.create 12
(return-135)                                                 // [     ] call Output.create 12
@SP                                                          // [12984] pop temp 0
AM=M-1                                                       // [12985] pop temp 0
D=M                                                          // [12986] pop temp 0
@5                                                           // [12987] pop temp 0
M=D                                                          // [12988] pop temp 0
@72                                                          // [12989] push constant 72
D=A                                                          // [12990] push constant 72
@SP                                                          // [12991] push constant 72
M=M+1                                                        // [12992] push constant 72
A=M-1                                                        // [12993] push constant 72
M=D                                                          // [12994] push constant 72
@51                                                          // [12995] push constant 51
D=A                                                          // [12996] push constant 51
@SP                                                          // [12997] push constant 51
M=M+1                                                        // [12998] push constant 51
A=M-1                                                        // [12999] push constant 51
M=D                                                          // [13000] push constant 51
@51                                                          // [13001] push constant 51
D=A                                                          // [13002] push constant 51
@SP                                                          // [13003] push constant 51
M=M+1                                                        // [13004] push constant 51
A=M-1                                                        // [13005] push constant 51
M=D                                                          // [13006] push constant 51
@51                                                          // [13007] push constant 51
D=A                                                          // [13008] push constant 51
@SP                                                          // [13009] push constant 51
M=M+1                                                        // [13010] push constant 51
A=M-1                                                        // [13011] push constant 51
M=D                                                          // [13012] push constant 51
@51                                                          // [13013] push constant 51
D=A                                                          // [13014] push constant 51
@SP                                                          // [13015] push constant 51
M=M+1                                                        // [13016] push constant 51
A=M-1                                                        // [13017] push constant 51
M=D                                                          // [13018] push constant 51
@63                                                          // [13019] push constant 63
D=A                                                          // [13020] push constant 63
@SP                                                          // [13021] push constant 63
M=M+1                                                        // [13022] push constant 63
A=M-1                                                        // [13023] push constant 63
M=D                                                          // [13024] push constant 63
@51                                                          // [13025] push constant 51
D=A                                                          // [13026] push constant 51
@SP                                                          // [13027] push constant 51
M=M+1                                                        // [13028] push constant 51
A=M-1                                                        // [13029] push constant 51
M=D                                                          // [13030] push constant 51
@51                                                          // [13031] push constant 51
D=A                                                          // [13032] push constant 51
@SP                                                          // [13033] push constant 51
M=M+1                                                        // [13034] push constant 51
A=M-1                                                        // [13035] push constant 51
M=D                                                          // [13036] push constant 51
@51                                                          // [13037] push constant 51
D=A                                                          // [13038] push constant 51
@SP                                                          // [13039] push constant 51
M=M+1                                                        // [13040] push constant 51
A=M-1                                                        // [13041] push constant 51
M=D                                                          // [13042] push constant 51
@51                                                          // [13043] push constant 51
D=A                                                          // [13044] push constant 51
@SP                                                          // [13045] push constant 51
M=M+1                                                        // [13046] push constant 51
A=M-1                                                        // [13047] push constant 51
M=D                                                          // [13048] push constant 51
@SP                                                          // [13049] push constant 0
M=M+1                                                        // [13050] push constant 0
A=M-1                                                        // [13051] push constant 0
M=0                                                          // [13052] push constant 0
@SP                                                          // [13053] push constant 0
M=M+1                                                        // [13054] push constant 0
A=M-1                                                        // [13055] push constant 0
M=0                                                          // [13056] push constant 0
@12                                                          // [13057] call Output.create 12
D=A                                                          // [13058] call Output.create 12
@R13                                                         // [13059] call Output.create 12
M=D                                                          // [13060] call Output.create 12
@Output.create                                               // [13061] call Output.create 12
D=A                                                          // [13062] call Output.create 12
@R14                                                         // [13063] call Output.create 12
M=D                                                          // [13064] call Output.create 12
@return-136                                                  // [13065] call Output.create 12
D=A                                                          // [13066] call Output.create 12
@CALL                                                        // [13067] call Output.create 12
0;JEQ                                                        // [13068] call Output.create 12
(return-136)                                                 // [     ] call Output.create 12
@SP                                                          // [13069] pop temp 0
AM=M-1                                                       // [13070] pop temp 0
D=M                                                          // [13071] pop temp 0
@5                                                           // [13072] pop temp 0
M=D                                                          // [13073] pop temp 0
@73                                                          // [13074] push constant 73
D=A                                                          // [13075] push constant 73
@SP                                                          // [13076] push constant 73
M=M+1                                                        // [13077] push constant 73
A=M-1                                                        // [13078] push constant 73
M=D                                                          // [13079] push constant 73
@30                                                          // [13080] push constant 30
D=A                                                          // [13081] push constant 30
@SP                                                          // [13082] push constant 30
M=M+1                                                        // [13083] push constant 30
A=M-1                                                        // [13084] push constant 30
M=D                                                          // [13085] push constant 30
@12                                                          // [13086] push constant 12
D=A                                                          // [13087] push constant 12
@SP                                                          // [13088] push constant 12
M=M+1                                                        // [13089] push constant 12
A=M-1                                                        // [13090] push constant 12
M=D                                                          // [13091] push constant 12
@12                                                          // [13092] push constant 12
D=A                                                          // [13093] push constant 12
@SP                                                          // [13094] push constant 12
M=M+1                                                        // [13095] push constant 12
A=M-1                                                        // [13096] push constant 12
M=D                                                          // [13097] push constant 12
@12                                                          // [13098] push constant 12
D=A                                                          // [13099] push constant 12
@SP                                                          // [13100] push constant 12
M=M+1                                                        // [13101] push constant 12
A=M-1                                                        // [13102] push constant 12
M=D                                                          // [13103] push constant 12
@12                                                          // [13104] push constant 12
D=A                                                          // [13105] push constant 12
@SP                                                          // [13106] push constant 12
M=M+1                                                        // [13107] push constant 12
A=M-1                                                        // [13108] push constant 12
M=D                                                          // [13109] push constant 12
@12                                                          // [13110] push constant 12
D=A                                                          // [13111] push constant 12
@SP                                                          // [13112] push constant 12
M=M+1                                                        // [13113] push constant 12
A=M-1                                                        // [13114] push constant 12
M=D                                                          // [13115] push constant 12
@12                                                          // [13116] push constant 12
D=A                                                          // [13117] push constant 12
@SP                                                          // [13118] push constant 12
M=M+1                                                        // [13119] push constant 12
A=M-1                                                        // [13120] push constant 12
M=D                                                          // [13121] push constant 12
@12                                                          // [13122] push constant 12
D=A                                                          // [13123] push constant 12
@SP                                                          // [13124] push constant 12
M=M+1                                                        // [13125] push constant 12
A=M-1                                                        // [13126] push constant 12
M=D                                                          // [13127] push constant 12
@30                                                          // [13128] push constant 30
D=A                                                          // [13129] push constant 30
@SP                                                          // [13130] push constant 30
M=M+1                                                        // [13131] push constant 30
A=M-1                                                        // [13132] push constant 30
M=D                                                          // [13133] push constant 30
@SP                                                          // [13134] push constant 0
M=M+1                                                        // [13135] push constant 0
A=M-1                                                        // [13136] push constant 0
M=0                                                          // [13137] push constant 0
@SP                                                          // [13138] push constant 0
M=M+1                                                        // [13139] push constant 0
A=M-1                                                        // [13140] push constant 0
M=0                                                          // [13141] push constant 0
@12                                                          // [13142] call Output.create 12
D=A                                                          // [13143] call Output.create 12
@R13                                                         // [13144] call Output.create 12
M=D                                                          // [13145] call Output.create 12
@Output.create                                               // [13146] call Output.create 12
D=A                                                          // [13147] call Output.create 12
@R14                                                         // [13148] call Output.create 12
M=D                                                          // [13149] call Output.create 12
@return-137                                                  // [13150] call Output.create 12
D=A                                                          // [13151] call Output.create 12
@CALL                                                        // [13152] call Output.create 12
0;JEQ                                                        // [13153] call Output.create 12
(return-137)                                                 // [     ] call Output.create 12
@SP                                                          // [13154] pop temp 0
AM=M-1                                                       // [13155] pop temp 0
D=M                                                          // [13156] pop temp 0
@5                                                           // [13157] pop temp 0
M=D                                                          // [13158] pop temp 0
@74                                                          // [13159] push constant 74
D=A                                                          // [13160] push constant 74
@SP                                                          // [13161] push constant 74
M=M+1                                                        // [13162] push constant 74
A=M-1                                                        // [13163] push constant 74
M=D                                                          // [13164] push constant 74
@60                                                          // [13165] push constant 60
D=A                                                          // [13166] push constant 60
@SP                                                          // [13167] push constant 60
M=M+1                                                        // [13168] push constant 60
A=M-1                                                        // [13169] push constant 60
M=D                                                          // [13170] push constant 60
@24                                                          // [13171] push constant 24
D=A                                                          // [13172] push constant 24
@SP                                                          // [13173] push constant 24
M=M+1                                                        // [13174] push constant 24
A=M-1                                                        // [13175] push constant 24
M=D                                                          // [13176] push constant 24
@24                                                          // [13177] push constant 24
D=A                                                          // [13178] push constant 24
@SP                                                          // [13179] push constant 24
M=M+1                                                        // [13180] push constant 24
A=M-1                                                        // [13181] push constant 24
M=D                                                          // [13182] push constant 24
@24                                                          // [13183] push constant 24
D=A                                                          // [13184] push constant 24
@SP                                                          // [13185] push constant 24
M=M+1                                                        // [13186] push constant 24
A=M-1                                                        // [13187] push constant 24
M=D                                                          // [13188] push constant 24
@24                                                          // [13189] push constant 24
D=A                                                          // [13190] push constant 24
@SP                                                          // [13191] push constant 24
M=M+1                                                        // [13192] push constant 24
A=M-1                                                        // [13193] push constant 24
M=D                                                          // [13194] push constant 24
@24                                                          // [13195] push constant 24
D=A                                                          // [13196] push constant 24
@SP                                                          // [13197] push constant 24
M=M+1                                                        // [13198] push constant 24
A=M-1                                                        // [13199] push constant 24
M=D                                                          // [13200] push constant 24
@27                                                          // [13201] push constant 27
D=A                                                          // [13202] push constant 27
@SP                                                          // [13203] push constant 27
M=M+1                                                        // [13204] push constant 27
A=M-1                                                        // [13205] push constant 27
M=D                                                          // [13206] push constant 27
@27                                                          // [13207] push constant 27
D=A                                                          // [13208] push constant 27
@SP                                                          // [13209] push constant 27
M=M+1                                                        // [13210] push constant 27
A=M-1                                                        // [13211] push constant 27
M=D                                                          // [13212] push constant 27
@14                                                          // [13213] push constant 14
D=A                                                          // [13214] push constant 14
@SP                                                          // [13215] push constant 14
M=M+1                                                        // [13216] push constant 14
A=M-1                                                        // [13217] push constant 14
M=D                                                          // [13218] push constant 14
@SP                                                          // [13219] push constant 0
M=M+1                                                        // [13220] push constant 0
A=M-1                                                        // [13221] push constant 0
M=0                                                          // [13222] push constant 0
@SP                                                          // [13223] push constant 0
M=M+1                                                        // [13224] push constant 0
A=M-1                                                        // [13225] push constant 0
M=0                                                          // [13226] push constant 0
@12                                                          // [13227] call Output.create 12
D=A                                                          // [13228] call Output.create 12
@R13                                                         // [13229] call Output.create 12
M=D                                                          // [13230] call Output.create 12
@Output.create                                               // [13231] call Output.create 12
D=A                                                          // [13232] call Output.create 12
@R14                                                         // [13233] call Output.create 12
M=D                                                          // [13234] call Output.create 12
@return-138                                                  // [13235] call Output.create 12
D=A                                                          // [13236] call Output.create 12
@CALL                                                        // [13237] call Output.create 12
0;JEQ                                                        // [13238] call Output.create 12
(return-138)                                                 // [     ] call Output.create 12
@SP                                                          // [13239] pop temp 0
AM=M-1                                                       // [13240] pop temp 0
D=M                                                          // [13241] pop temp 0
@5                                                           // [13242] pop temp 0
M=D                                                          // [13243] pop temp 0
@75                                                          // [13244] push constant 75
D=A                                                          // [13245] push constant 75
@SP                                                          // [13246] push constant 75
M=M+1                                                        // [13247] push constant 75
A=M-1                                                        // [13248] push constant 75
M=D                                                          // [13249] push constant 75
@51                                                          // [13250] push constant 51
D=A                                                          // [13251] push constant 51
@SP                                                          // [13252] push constant 51
M=M+1                                                        // [13253] push constant 51
A=M-1                                                        // [13254] push constant 51
M=D                                                          // [13255] push constant 51
@51                                                          // [13256] push constant 51
D=A                                                          // [13257] push constant 51
@SP                                                          // [13258] push constant 51
M=M+1                                                        // [13259] push constant 51
A=M-1                                                        // [13260] push constant 51
M=D                                                          // [13261] push constant 51
@51                                                          // [13262] push constant 51
D=A                                                          // [13263] push constant 51
@SP                                                          // [13264] push constant 51
M=M+1                                                        // [13265] push constant 51
A=M-1                                                        // [13266] push constant 51
M=D                                                          // [13267] push constant 51
@27                                                          // [13268] push constant 27
D=A                                                          // [13269] push constant 27
@SP                                                          // [13270] push constant 27
M=M+1                                                        // [13271] push constant 27
A=M-1                                                        // [13272] push constant 27
M=D                                                          // [13273] push constant 27
@15                                                          // [13274] push constant 15
D=A                                                          // [13275] push constant 15
@SP                                                          // [13276] push constant 15
M=M+1                                                        // [13277] push constant 15
A=M-1                                                        // [13278] push constant 15
M=D                                                          // [13279] push constant 15
@27                                                          // [13280] push constant 27
D=A                                                          // [13281] push constant 27
@SP                                                          // [13282] push constant 27
M=M+1                                                        // [13283] push constant 27
A=M-1                                                        // [13284] push constant 27
M=D                                                          // [13285] push constant 27
@51                                                          // [13286] push constant 51
D=A                                                          // [13287] push constant 51
@SP                                                          // [13288] push constant 51
M=M+1                                                        // [13289] push constant 51
A=M-1                                                        // [13290] push constant 51
M=D                                                          // [13291] push constant 51
@51                                                          // [13292] push constant 51
D=A                                                          // [13293] push constant 51
@SP                                                          // [13294] push constant 51
M=M+1                                                        // [13295] push constant 51
A=M-1                                                        // [13296] push constant 51
M=D                                                          // [13297] push constant 51
@51                                                          // [13298] push constant 51
D=A                                                          // [13299] push constant 51
@SP                                                          // [13300] push constant 51
M=M+1                                                        // [13301] push constant 51
A=M-1                                                        // [13302] push constant 51
M=D                                                          // [13303] push constant 51
@SP                                                          // [13304] push constant 0
M=M+1                                                        // [13305] push constant 0
A=M-1                                                        // [13306] push constant 0
M=0                                                          // [13307] push constant 0
@SP                                                          // [13308] push constant 0
M=M+1                                                        // [13309] push constant 0
A=M-1                                                        // [13310] push constant 0
M=0                                                          // [13311] push constant 0
@12                                                          // [13312] call Output.create 12
D=A                                                          // [13313] call Output.create 12
@R13                                                         // [13314] call Output.create 12
M=D                                                          // [13315] call Output.create 12
@Output.create                                               // [13316] call Output.create 12
D=A                                                          // [13317] call Output.create 12
@R14                                                         // [13318] call Output.create 12
M=D                                                          // [13319] call Output.create 12
@return-139                                                  // [13320] call Output.create 12
D=A                                                          // [13321] call Output.create 12
@CALL                                                        // [13322] call Output.create 12
0;JEQ                                                        // [13323] call Output.create 12
(return-139)                                                 // [     ] call Output.create 12
@SP                                                          // [13324] pop temp 0
AM=M-1                                                       // [13325] pop temp 0
D=M                                                          // [13326] pop temp 0
@5                                                           // [13327] pop temp 0
M=D                                                          // [13328] pop temp 0
@76                                                          // [13329] push constant 76
D=A                                                          // [13330] push constant 76
@SP                                                          // [13331] push constant 76
M=M+1                                                        // [13332] push constant 76
A=M-1                                                        // [13333] push constant 76
M=D                                                          // [13334] push constant 76
@3                                                           // [13335] push constant 3
D=A                                                          // [13336] push constant 3
@SP                                                          // [13337] push constant 3
M=M+1                                                        // [13338] push constant 3
A=M-1                                                        // [13339] push constant 3
M=D                                                          // [13340] push constant 3
@3                                                           // [13341] push constant 3
D=A                                                          // [13342] push constant 3
@SP                                                          // [13343] push constant 3
M=M+1                                                        // [13344] push constant 3
A=M-1                                                        // [13345] push constant 3
M=D                                                          // [13346] push constant 3
@3                                                           // [13347] push constant 3
D=A                                                          // [13348] push constant 3
@SP                                                          // [13349] push constant 3
M=M+1                                                        // [13350] push constant 3
A=M-1                                                        // [13351] push constant 3
M=D                                                          // [13352] push constant 3
@3                                                           // [13353] push constant 3
D=A                                                          // [13354] push constant 3
@SP                                                          // [13355] push constant 3
M=M+1                                                        // [13356] push constant 3
A=M-1                                                        // [13357] push constant 3
M=D                                                          // [13358] push constant 3
@3                                                           // [13359] push constant 3
D=A                                                          // [13360] push constant 3
@SP                                                          // [13361] push constant 3
M=M+1                                                        // [13362] push constant 3
A=M-1                                                        // [13363] push constant 3
M=D                                                          // [13364] push constant 3
@3                                                           // [13365] push constant 3
D=A                                                          // [13366] push constant 3
@SP                                                          // [13367] push constant 3
M=M+1                                                        // [13368] push constant 3
A=M-1                                                        // [13369] push constant 3
M=D                                                          // [13370] push constant 3
@35                                                          // [13371] push constant 35
D=A                                                          // [13372] push constant 35
@SP                                                          // [13373] push constant 35
M=M+1                                                        // [13374] push constant 35
A=M-1                                                        // [13375] push constant 35
M=D                                                          // [13376] push constant 35
@51                                                          // [13377] push constant 51
D=A                                                          // [13378] push constant 51
@SP                                                          // [13379] push constant 51
M=M+1                                                        // [13380] push constant 51
A=M-1                                                        // [13381] push constant 51
M=D                                                          // [13382] push constant 51
@63                                                          // [13383] push constant 63
D=A                                                          // [13384] push constant 63
@SP                                                          // [13385] push constant 63
M=M+1                                                        // [13386] push constant 63
A=M-1                                                        // [13387] push constant 63
M=D                                                          // [13388] push constant 63
@SP                                                          // [13389] push constant 0
M=M+1                                                        // [13390] push constant 0
A=M-1                                                        // [13391] push constant 0
M=0                                                          // [13392] push constant 0
@SP                                                          // [13393] push constant 0
M=M+1                                                        // [13394] push constant 0
A=M-1                                                        // [13395] push constant 0
M=0                                                          // [13396] push constant 0
@12                                                          // [13397] call Output.create 12
D=A                                                          // [13398] call Output.create 12
@R13                                                         // [13399] call Output.create 12
M=D                                                          // [13400] call Output.create 12
@Output.create                                               // [13401] call Output.create 12
D=A                                                          // [13402] call Output.create 12
@R14                                                         // [13403] call Output.create 12
M=D                                                          // [13404] call Output.create 12
@return-140                                                  // [13405] call Output.create 12
D=A                                                          // [13406] call Output.create 12
@CALL                                                        // [13407] call Output.create 12
0;JEQ                                                        // [13408] call Output.create 12
(return-140)                                                 // [     ] call Output.create 12
@SP                                                          // [13409] pop temp 0
AM=M-1                                                       // [13410] pop temp 0
D=M                                                          // [13411] pop temp 0
@5                                                           // [13412] pop temp 0
M=D                                                          // [13413] pop temp 0
@77                                                          // [13414] push constant 77
D=A                                                          // [13415] push constant 77
@SP                                                          // [13416] push constant 77
M=M+1                                                        // [13417] push constant 77
A=M-1                                                        // [13418] push constant 77
M=D                                                          // [13419] push constant 77
@33                                                          // [13420] push constant 33
D=A                                                          // [13421] push constant 33
@SP                                                          // [13422] push constant 33
M=M+1                                                        // [13423] push constant 33
A=M-1                                                        // [13424] push constant 33
M=D                                                          // [13425] push constant 33
@51                                                          // [13426] push constant 51
D=A                                                          // [13427] push constant 51
@SP                                                          // [13428] push constant 51
M=M+1                                                        // [13429] push constant 51
A=M-1                                                        // [13430] push constant 51
M=D                                                          // [13431] push constant 51
@63                                                          // [13432] push constant 63
D=A                                                          // [13433] push constant 63
@SP                                                          // [13434] push constant 63
M=M+1                                                        // [13435] push constant 63
A=M-1                                                        // [13436] push constant 63
M=D                                                          // [13437] push constant 63
@63                                                          // [13438] push constant 63
D=A                                                          // [13439] push constant 63
@SP                                                          // [13440] push constant 63
M=M+1                                                        // [13441] push constant 63
A=M-1                                                        // [13442] push constant 63
M=D                                                          // [13443] push constant 63
@51                                                          // [13444] push constant 51
D=A                                                          // [13445] push constant 51
@SP                                                          // [13446] push constant 51
M=M+1                                                        // [13447] push constant 51
A=M-1                                                        // [13448] push constant 51
M=D                                                          // [13449] push constant 51
@51                                                          // [13450] push constant 51
D=A                                                          // [13451] push constant 51
@SP                                                          // [13452] push constant 51
M=M+1                                                        // [13453] push constant 51
A=M-1                                                        // [13454] push constant 51
M=D                                                          // [13455] push constant 51
@51                                                          // [13456] push constant 51
D=A                                                          // [13457] push constant 51
@SP                                                          // [13458] push constant 51
M=M+1                                                        // [13459] push constant 51
A=M-1                                                        // [13460] push constant 51
M=D                                                          // [13461] push constant 51
@51                                                          // [13462] push constant 51
D=A                                                          // [13463] push constant 51
@SP                                                          // [13464] push constant 51
M=M+1                                                        // [13465] push constant 51
A=M-1                                                        // [13466] push constant 51
M=D                                                          // [13467] push constant 51
@51                                                          // [13468] push constant 51
D=A                                                          // [13469] push constant 51
@SP                                                          // [13470] push constant 51
M=M+1                                                        // [13471] push constant 51
A=M-1                                                        // [13472] push constant 51
M=D                                                          // [13473] push constant 51
@SP                                                          // [13474] push constant 0
M=M+1                                                        // [13475] push constant 0
A=M-1                                                        // [13476] push constant 0
M=0                                                          // [13477] push constant 0
@SP                                                          // [13478] push constant 0
M=M+1                                                        // [13479] push constant 0
A=M-1                                                        // [13480] push constant 0
M=0                                                          // [13481] push constant 0
@12                                                          // [13482] call Output.create 12
D=A                                                          // [13483] call Output.create 12
@R13                                                         // [13484] call Output.create 12
M=D                                                          // [13485] call Output.create 12
@Output.create                                               // [13486] call Output.create 12
D=A                                                          // [13487] call Output.create 12
@R14                                                         // [13488] call Output.create 12
M=D                                                          // [13489] call Output.create 12
@return-141                                                  // [13490] call Output.create 12
D=A                                                          // [13491] call Output.create 12
@CALL                                                        // [13492] call Output.create 12
0;JEQ                                                        // [13493] call Output.create 12
(return-141)                                                 // [     ] call Output.create 12
@SP                                                          // [13494] pop temp 0
AM=M-1                                                       // [13495] pop temp 0
D=M                                                          // [13496] pop temp 0
@5                                                           // [13497] pop temp 0
M=D                                                          // [13498] pop temp 0
@78                                                          // [13499] push constant 78
D=A                                                          // [13500] push constant 78
@SP                                                          // [13501] push constant 78
M=M+1                                                        // [13502] push constant 78
A=M-1                                                        // [13503] push constant 78
M=D                                                          // [13504] push constant 78
@51                                                          // [13505] push constant 51
D=A                                                          // [13506] push constant 51
@SP                                                          // [13507] push constant 51
M=M+1                                                        // [13508] push constant 51
A=M-1                                                        // [13509] push constant 51
M=D                                                          // [13510] push constant 51
@51                                                          // [13511] push constant 51
D=A                                                          // [13512] push constant 51
@SP                                                          // [13513] push constant 51
M=M+1                                                        // [13514] push constant 51
A=M-1                                                        // [13515] push constant 51
M=D                                                          // [13516] push constant 51
@55                                                          // [13517] push constant 55
D=A                                                          // [13518] push constant 55
@SP                                                          // [13519] push constant 55
M=M+1                                                        // [13520] push constant 55
A=M-1                                                        // [13521] push constant 55
M=D                                                          // [13522] push constant 55
@55                                                          // [13523] push constant 55
D=A                                                          // [13524] push constant 55
@SP                                                          // [13525] push constant 55
M=M+1                                                        // [13526] push constant 55
A=M-1                                                        // [13527] push constant 55
M=D                                                          // [13528] push constant 55
@63                                                          // [13529] push constant 63
D=A                                                          // [13530] push constant 63
@SP                                                          // [13531] push constant 63
M=M+1                                                        // [13532] push constant 63
A=M-1                                                        // [13533] push constant 63
M=D                                                          // [13534] push constant 63
@59                                                          // [13535] push constant 59
D=A                                                          // [13536] push constant 59
@SP                                                          // [13537] push constant 59
M=M+1                                                        // [13538] push constant 59
A=M-1                                                        // [13539] push constant 59
M=D                                                          // [13540] push constant 59
@59                                                          // [13541] push constant 59
D=A                                                          // [13542] push constant 59
@SP                                                          // [13543] push constant 59
M=M+1                                                        // [13544] push constant 59
A=M-1                                                        // [13545] push constant 59
M=D                                                          // [13546] push constant 59
@51                                                          // [13547] push constant 51
D=A                                                          // [13548] push constant 51
@SP                                                          // [13549] push constant 51
M=M+1                                                        // [13550] push constant 51
A=M-1                                                        // [13551] push constant 51
M=D                                                          // [13552] push constant 51
@51                                                          // [13553] push constant 51
D=A                                                          // [13554] push constant 51
@SP                                                          // [13555] push constant 51
M=M+1                                                        // [13556] push constant 51
A=M-1                                                        // [13557] push constant 51
M=D                                                          // [13558] push constant 51
@SP                                                          // [13559] push constant 0
M=M+1                                                        // [13560] push constant 0
A=M-1                                                        // [13561] push constant 0
M=0                                                          // [13562] push constant 0
@SP                                                          // [13563] push constant 0
M=M+1                                                        // [13564] push constant 0
A=M-1                                                        // [13565] push constant 0
M=0                                                          // [13566] push constant 0
@12                                                          // [13567] call Output.create 12
D=A                                                          // [13568] call Output.create 12
@R13                                                         // [13569] call Output.create 12
M=D                                                          // [13570] call Output.create 12
@Output.create                                               // [13571] call Output.create 12
D=A                                                          // [13572] call Output.create 12
@R14                                                         // [13573] call Output.create 12
M=D                                                          // [13574] call Output.create 12
@return-142                                                  // [13575] call Output.create 12
D=A                                                          // [13576] call Output.create 12
@CALL                                                        // [13577] call Output.create 12
0;JEQ                                                        // [13578] call Output.create 12
(return-142)                                                 // [     ] call Output.create 12
@SP                                                          // [13579] pop temp 0
AM=M-1                                                       // [13580] pop temp 0
D=M                                                          // [13581] pop temp 0
@5                                                           // [13582] pop temp 0
M=D                                                          // [13583] pop temp 0
@79                                                          // [13584] push constant 79
D=A                                                          // [13585] push constant 79
@SP                                                          // [13586] push constant 79
M=M+1                                                        // [13587] push constant 79
A=M-1                                                        // [13588] push constant 79
M=D                                                          // [13589] push constant 79
@30                                                          // [13590] push constant 30
D=A                                                          // [13591] push constant 30
@SP                                                          // [13592] push constant 30
M=M+1                                                        // [13593] push constant 30
A=M-1                                                        // [13594] push constant 30
M=D                                                          // [13595] push constant 30
@51                                                          // [13596] push constant 51
D=A                                                          // [13597] push constant 51
@SP                                                          // [13598] push constant 51
M=M+1                                                        // [13599] push constant 51
A=M-1                                                        // [13600] push constant 51
M=D                                                          // [13601] push constant 51
@51                                                          // [13602] push constant 51
D=A                                                          // [13603] push constant 51
@SP                                                          // [13604] push constant 51
M=M+1                                                        // [13605] push constant 51
A=M-1                                                        // [13606] push constant 51
M=D                                                          // [13607] push constant 51
@51                                                          // [13608] push constant 51
D=A                                                          // [13609] push constant 51
@SP                                                          // [13610] push constant 51
M=M+1                                                        // [13611] push constant 51
A=M-1                                                        // [13612] push constant 51
M=D                                                          // [13613] push constant 51
@51                                                          // [13614] push constant 51
D=A                                                          // [13615] push constant 51
@SP                                                          // [13616] push constant 51
M=M+1                                                        // [13617] push constant 51
A=M-1                                                        // [13618] push constant 51
M=D                                                          // [13619] push constant 51
@51                                                          // [13620] push constant 51
D=A                                                          // [13621] push constant 51
@SP                                                          // [13622] push constant 51
M=M+1                                                        // [13623] push constant 51
A=M-1                                                        // [13624] push constant 51
M=D                                                          // [13625] push constant 51
@51                                                          // [13626] push constant 51
D=A                                                          // [13627] push constant 51
@SP                                                          // [13628] push constant 51
M=M+1                                                        // [13629] push constant 51
A=M-1                                                        // [13630] push constant 51
M=D                                                          // [13631] push constant 51
@51                                                          // [13632] push constant 51
D=A                                                          // [13633] push constant 51
@SP                                                          // [13634] push constant 51
M=M+1                                                        // [13635] push constant 51
A=M-1                                                        // [13636] push constant 51
M=D                                                          // [13637] push constant 51
@30                                                          // [13638] push constant 30
D=A                                                          // [13639] push constant 30
@SP                                                          // [13640] push constant 30
M=M+1                                                        // [13641] push constant 30
A=M-1                                                        // [13642] push constant 30
M=D                                                          // [13643] push constant 30
@SP                                                          // [13644] push constant 0
M=M+1                                                        // [13645] push constant 0
A=M-1                                                        // [13646] push constant 0
M=0                                                          // [13647] push constant 0
@SP                                                          // [13648] push constant 0
M=M+1                                                        // [13649] push constant 0
A=M-1                                                        // [13650] push constant 0
M=0                                                          // [13651] push constant 0
@12                                                          // [13652] call Output.create 12
D=A                                                          // [13653] call Output.create 12
@R13                                                         // [13654] call Output.create 12
M=D                                                          // [13655] call Output.create 12
@Output.create                                               // [13656] call Output.create 12
D=A                                                          // [13657] call Output.create 12
@R14                                                         // [13658] call Output.create 12
M=D                                                          // [13659] call Output.create 12
@return-143                                                  // [13660] call Output.create 12
D=A                                                          // [13661] call Output.create 12
@CALL                                                        // [13662] call Output.create 12
0;JEQ                                                        // [13663] call Output.create 12
(return-143)                                                 // [     ] call Output.create 12
@SP                                                          // [13664] pop temp 0
AM=M-1                                                       // [13665] pop temp 0
D=M                                                          // [13666] pop temp 0
@5                                                           // [13667] pop temp 0
M=D                                                          // [13668] pop temp 0
@80                                                          // [13669] push constant 80
D=A                                                          // [13670] push constant 80
@SP                                                          // [13671] push constant 80
M=M+1                                                        // [13672] push constant 80
A=M-1                                                        // [13673] push constant 80
M=D                                                          // [13674] push constant 80
@31                                                          // [13675] push constant 31
D=A                                                          // [13676] push constant 31
@SP                                                          // [13677] push constant 31
M=M+1                                                        // [13678] push constant 31
A=M-1                                                        // [13679] push constant 31
M=D                                                          // [13680] push constant 31
@51                                                          // [13681] push constant 51
D=A                                                          // [13682] push constant 51
@SP                                                          // [13683] push constant 51
M=M+1                                                        // [13684] push constant 51
A=M-1                                                        // [13685] push constant 51
M=D                                                          // [13686] push constant 51
@51                                                          // [13687] push constant 51
D=A                                                          // [13688] push constant 51
@SP                                                          // [13689] push constant 51
M=M+1                                                        // [13690] push constant 51
A=M-1                                                        // [13691] push constant 51
M=D                                                          // [13692] push constant 51
@51                                                          // [13693] push constant 51
D=A                                                          // [13694] push constant 51
@SP                                                          // [13695] push constant 51
M=M+1                                                        // [13696] push constant 51
A=M-1                                                        // [13697] push constant 51
M=D                                                          // [13698] push constant 51
@31                                                          // [13699] push constant 31
D=A                                                          // [13700] push constant 31
@SP                                                          // [13701] push constant 31
M=M+1                                                        // [13702] push constant 31
A=M-1                                                        // [13703] push constant 31
M=D                                                          // [13704] push constant 31
@3                                                           // [13705] push constant 3
D=A                                                          // [13706] push constant 3
@SP                                                          // [13707] push constant 3
M=M+1                                                        // [13708] push constant 3
A=M-1                                                        // [13709] push constant 3
M=D                                                          // [13710] push constant 3
@3                                                           // [13711] push constant 3
D=A                                                          // [13712] push constant 3
@SP                                                          // [13713] push constant 3
M=M+1                                                        // [13714] push constant 3
A=M-1                                                        // [13715] push constant 3
M=D                                                          // [13716] push constant 3
@3                                                           // [13717] push constant 3
D=A                                                          // [13718] push constant 3
@SP                                                          // [13719] push constant 3
M=M+1                                                        // [13720] push constant 3
A=M-1                                                        // [13721] push constant 3
M=D                                                          // [13722] push constant 3
@3                                                           // [13723] push constant 3
D=A                                                          // [13724] push constant 3
@SP                                                          // [13725] push constant 3
M=M+1                                                        // [13726] push constant 3
A=M-1                                                        // [13727] push constant 3
M=D                                                          // [13728] push constant 3
@SP                                                          // [13729] push constant 0
M=M+1                                                        // [13730] push constant 0
A=M-1                                                        // [13731] push constant 0
M=0                                                          // [13732] push constant 0
@SP                                                          // [13733] push constant 0
M=M+1                                                        // [13734] push constant 0
A=M-1                                                        // [13735] push constant 0
M=0                                                          // [13736] push constant 0
@12                                                          // [13737] call Output.create 12
D=A                                                          // [13738] call Output.create 12
@R13                                                         // [13739] call Output.create 12
M=D                                                          // [13740] call Output.create 12
@Output.create                                               // [13741] call Output.create 12
D=A                                                          // [13742] call Output.create 12
@R14                                                         // [13743] call Output.create 12
M=D                                                          // [13744] call Output.create 12
@return-144                                                  // [13745] call Output.create 12
D=A                                                          // [13746] call Output.create 12
@CALL                                                        // [13747] call Output.create 12
0;JEQ                                                        // [13748] call Output.create 12
(return-144)                                                 // [     ] call Output.create 12
@SP                                                          // [13749] pop temp 0
AM=M-1                                                       // [13750] pop temp 0
D=M                                                          // [13751] pop temp 0
@5                                                           // [13752] pop temp 0
M=D                                                          // [13753] pop temp 0
@81                                                          // [13754] push constant 81
D=A                                                          // [13755] push constant 81
@SP                                                          // [13756] push constant 81
M=M+1                                                        // [13757] push constant 81
A=M-1                                                        // [13758] push constant 81
M=D                                                          // [13759] push constant 81
@30                                                          // [13760] push constant 30
D=A                                                          // [13761] push constant 30
@SP                                                          // [13762] push constant 30
M=M+1                                                        // [13763] push constant 30
A=M-1                                                        // [13764] push constant 30
M=D                                                          // [13765] push constant 30
@51                                                          // [13766] push constant 51
D=A                                                          // [13767] push constant 51
@SP                                                          // [13768] push constant 51
M=M+1                                                        // [13769] push constant 51
A=M-1                                                        // [13770] push constant 51
M=D                                                          // [13771] push constant 51
@51                                                          // [13772] push constant 51
D=A                                                          // [13773] push constant 51
@SP                                                          // [13774] push constant 51
M=M+1                                                        // [13775] push constant 51
A=M-1                                                        // [13776] push constant 51
M=D                                                          // [13777] push constant 51
@51                                                          // [13778] push constant 51
D=A                                                          // [13779] push constant 51
@SP                                                          // [13780] push constant 51
M=M+1                                                        // [13781] push constant 51
A=M-1                                                        // [13782] push constant 51
M=D                                                          // [13783] push constant 51
@51                                                          // [13784] push constant 51
D=A                                                          // [13785] push constant 51
@SP                                                          // [13786] push constant 51
M=M+1                                                        // [13787] push constant 51
A=M-1                                                        // [13788] push constant 51
M=D                                                          // [13789] push constant 51
@51                                                          // [13790] push constant 51
D=A                                                          // [13791] push constant 51
@SP                                                          // [13792] push constant 51
M=M+1                                                        // [13793] push constant 51
A=M-1                                                        // [13794] push constant 51
M=D                                                          // [13795] push constant 51
@63                                                          // [13796] push constant 63
D=A                                                          // [13797] push constant 63
@SP                                                          // [13798] push constant 63
M=M+1                                                        // [13799] push constant 63
A=M-1                                                        // [13800] push constant 63
M=D                                                          // [13801] push constant 63
@59                                                          // [13802] push constant 59
D=A                                                          // [13803] push constant 59
@SP                                                          // [13804] push constant 59
M=M+1                                                        // [13805] push constant 59
A=M-1                                                        // [13806] push constant 59
M=D                                                          // [13807] push constant 59
@30                                                          // [13808] push constant 30
D=A                                                          // [13809] push constant 30
@SP                                                          // [13810] push constant 30
M=M+1                                                        // [13811] push constant 30
A=M-1                                                        // [13812] push constant 30
M=D                                                          // [13813] push constant 30
@48                                                          // [13814] push constant 48
D=A                                                          // [13815] push constant 48
@SP                                                          // [13816] push constant 48
M=M+1                                                        // [13817] push constant 48
A=M-1                                                        // [13818] push constant 48
M=D                                                          // [13819] push constant 48
@SP                                                          // [13820] push constant 0
M=M+1                                                        // [13821] push constant 0
A=M-1                                                        // [13822] push constant 0
M=0                                                          // [13823] push constant 0
@12                                                          // [13824] call Output.create 12
D=A                                                          // [13825] call Output.create 12
@R13                                                         // [13826] call Output.create 12
M=D                                                          // [13827] call Output.create 12
@Output.create                                               // [13828] call Output.create 12
D=A                                                          // [13829] call Output.create 12
@R14                                                         // [13830] call Output.create 12
M=D                                                          // [13831] call Output.create 12
@return-145                                                  // [13832] call Output.create 12
D=A                                                          // [13833] call Output.create 12
@CALL                                                        // [13834] call Output.create 12
0;JEQ                                                        // [13835] call Output.create 12
(return-145)                                                 // [     ] call Output.create 12
@SP                                                          // [13836] pop temp 0
AM=M-1                                                       // [13837] pop temp 0
D=M                                                          // [13838] pop temp 0
@5                                                           // [13839] pop temp 0
M=D                                                          // [13840] pop temp 0
@82                                                          // [13841] push constant 82
D=A                                                          // [13842] push constant 82
@SP                                                          // [13843] push constant 82
M=M+1                                                        // [13844] push constant 82
A=M-1                                                        // [13845] push constant 82
M=D                                                          // [13846] push constant 82
@31                                                          // [13847] push constant 31
D=A                                                          // [13848] push constant 31
@SP                                                          // [13849] push constant 31
M=M+1                                                        // [13850] push constant 31
A=M-1                                                        // [13851] push constant 31
M=D                                                          // [13852] push constant 31
@51                                                          // [13853] push constant 51
D=A                                                          // [13854] push constant 51
@SP                                                          // [13855] push constant 51
M=M+1                                                        // [13856] push constant 51
A=M-1                                                        // [13857] push constant 51
M=D                                                          // [13858] push constant 51
@51                                                          // [13859] push constant 51
D=A                                                          // [13860] push constant 51
@SP                                                          // [13861] push constant 51
M=M+1                                                        // [13862] push constant 51
A=M-1                                                        // [13863] push constant 51
M=D                                                          // [13864] push constant 51
@51                                                          // [13865] push constant 51
D=A                                                          // [13866] push constant 51
@SP                                                          // [13867] push constant 51
M=M+1                                                        // [13868] push constant 51
A=M-1                                                        // [13869] push constant 51
M=D                                                          // [13870] push constant 51
@31                                                          // [13871] push constant 31
D=A                                                          // [13872] push constant 31
@SP                                                          // [13873] push constant 31
M=M+1                                                        // [13874] push constant 31
A=M-1                                                        // [13875] push constant 31
M=D                                                          // [13876] push constant 31
@27                                                          // [13877] push constant 27
D=A                                                          // [13878] push constant 27
@SP                                                          // [13879] push constant 27
M=M+1                                                        // [13880] push constant 27
A=M-1                                                        // [13881] push constant 27
M=D                                                          // [13882] push constant 27
@51                                                          // [13883] push constant 51
D=A                                                          // [13884] push constant 51
@SP                                                          // [13885] push constant 51
M=M+1                                                        // [13886] push constant 51
A=M-1                                                        // [13887] push constant 51
M=D                                                          // [13888] push constant 51
@51                                                          // [13889] push constant 51
D=A                                                          // [13890] push constant 51
@SP                                                          // [13891] push constant 51
M=M+1                                                        // [13892] push constant 51
A=M-1                                                        // [13893] push constant 51
M=D                                                          // [13894] push constant 51
@51                                                          // [13895] push constant 51
D=A                                                          // [13896] push constant 51
@SP                                                          // [13897] push constant 51
M=M+1                                                        // [13898] push constant 51
A=M-1                                                        // [13899] push constant 51
M=D                                                          // [13900] push constant 51
@SP                                                          // [13901] push constant 0
M=M+1                                                        // [13902] push constant 0
A=M-1                                                        // [13903] push constant 0
M=0                                                          // [13904] push constant 0
@SP                                                          // [13905] push constant 0
M=M+1                                                        // [13906] push constant 0
A=M-1                                                        // [13907] push constant 0
M=0                                                          // [13908] push constant 0
@12                                                          // [13909] call Output.create 12
D=A                                                          // [13910] call Output.create 12
@R13                                                         // [13911] call Output.create 12
M=D                                                          // [13912] call Output.create 12
@Output.create                                               // [13913] call Output.create 12
D=A                                                          // [13914] call Output.create 12
@R14                                                         // [13915] call Output.create 12
M=D                                                          // [13916] call Output.create 12
@return-146                                                  // [13917] call Output.create 12
D=A                                                          // [13918] call Output.create 12
@CALL                                                        // [13919] call Output.create 12
0;JEQ                                                        // [13920] call Output.create 12
(return-146)                                                 // [     ] call Output.create 12
@SP                                                          // [13921] pop temp 0
AM=M-1                                                       // [13922] pop temp 0
D=M                                                          // [13923] pop temp 0
@5                                                           // [13924] pop temp 0
M=D                                                          // [13925] pop temp 0
@83                                                          // [13926] push constant 83
D=A                                                          // [13927] push constant 83
@SP                                                          // [13928] push constant 83
M=M+1                                                        // [13929] push constant 83
A=M-1                                                        // [13930] push constant 83
M=D                                                          // [13931] push constant 83
@30                                                          // [13932] push constant 30
D=A                                                          // [13933] push constant 30
@SP                                                          // [13934] push constant 30
M=M+1                                                        // [13935] push constant 30
A=M-1                                                        // [13936] push constant 30
M=D                                                          // [13937] push constant 30
@51                                                          // [13938] push constant 51
D=A                                                          // [13939] push constant 51
@SP                                                          // [13940] push constant 51
M=M+1                                                        // [13941] push constant 51
A=M-1                                                        // [13942] push constant 51
M=D                                                          // [13943] push constant 51
@51                                                          // [13944] push constant 51
D=A                                                          // [13945] push constant 51
@SP                                                          // [13946] push constant 51
M=M+1                                                        // [13947] push constant 51
A=M-1                                                        // [13948] push constant 51
M=D                                                          // [13949] push constant 51
@6                                                           // [13950] push constant 6
D=A                                                          // [13951] push constant 6
@SP                                                          // [13952] push constant 6
M=M+1                                                        // [13953] push constant 6
A=M-1                                                        // [13954] push constant 6
M=D                                                          // [13955] push constant 6
@28                                                          // [13956] push constant 28
D=A                                                          // [13957] push constant 28
@SP                                                          // [13958] push constant 28
M=M+1                                                        // [13959] push constant 28
A=M-1                                                        // [13960] push constant 28
M=D                                                          // [13961] push constant 28
@48                                                          // [13962] push constant 48
D=A                                                          // [13963] push constant 48
@SP                                                          // [13964] push constant 48
M=M+1                                                        // [13965] push constant 48
A=M-1                                                        // [13966] push constant 48
M=D                                                          // [13967] push constant 48
@51                                                          // [13968] push constant 51
D=A                                                          // [13969] push constant 51
@SP                                                          // [13970] push constant 51
M=M+1                                                        // [13971] push constant 51
A=M-1                                                        // [13972] push constant 51
M=D                                                          // [13973] push constant 51
@51                                                          // [13974] push constant 51
D=A                                                          // [13975] push constant 51
@SP                                                          // [13976] push constant 51
M=M+1                                                        // [13977] push constant 51
A=M-1                                                        // [13978] push constant 51
M=D                                                          // [13979] push constant 51
@30                                                          // [13980] push constant 30
D=A                                                          // [13981] push constant 30
@SP                                                          // [13982] push constant 30
M=M+1                                                        // [13983] push constant 30
A=M-1                                                        // [13984] push constant 30
M=D                                                          // [13985] push constant 30
@SP                                                          // [13986] push constant 0
M=M+1                                                        // [13987] push constant 0
A=M-1                                                        // [13988] push constant 0
M=0                                                          // [13989] push constant 0
@SP                                                          // [13990] push constant 0
M=M+1                                                        // [13991] push constant 0
A=M-1                                                        // [13992] push constant 0
M=0                                                          // [13993] push constant 0
@12                                                          // [13994] call Output.create 12
D=A                                                          // [13995] call Output.create 12
@R13                                                         // [13996] call Output.create 12
M=D                                                          // [13997] call Output.create 12
@Output.create                                               // [13998] call Output.create 12
D=A                                                          // [13999] call Output.create 12
@R14                                                         // [14000] call Output.create 12
M=D                                                          // [14001] call Output.create 12
@return-147                                                  // [14002] call Output.create 12
D=A                                                          // [14003] call Output.create 12
@CALL                                                        // [14004] call Output.create 12
0;JEQ                                                        // [14005] call Output.create 12
(return-147)                                                 // [     ] call Output.create 12
@SP                                                          // [14006] pop temp 0
AM=M-1                                                       // [14007] pop temp 0
D=M                                                          // [14008] pop temp 0
@5                                                           // [14009] pop temp 0
M=D                                                          // [14010] pop temp 0
@84                                                          // [14011] push constant 84
D=A                                                          // [14012] push constant 84
@SP                                                          // [14013] push constant 84
M=M+1                                                        // [14014] push constant 84
A=M-1                                                        // [14015] push constant 84
M=D                                                          // [14016] push constant 84
@63                                                          // [14017] push constant 63
D=A                                                          // [14018] push constant 63
@SP                                                          // [14019] push constant 63
M=M+1                                                        // [14020] push constant 63
A=M-1                                                        // [14021] push constant 63
M=D                                                          // [14022] push constant 63
@63                                                          // [14023] push constant 63
D=A                                                          // [14024] push constant 63
@SP                                                          // [14025] push constant 63
M=M+1                                                        // [14026] push constant 63
A=M-1                                                        // [14027] push constant 63
M=D                                                          // [14028] push constant 63
@45                                                          // [14029] push constant 45
D=A                                                          // [14030] push constant 45
@SP                                                          // [14031] push constant 45
M=M+1                                                        // [14032] push constant 45
A=M-1                                                        // [14033] push constant 45
M=D                                                          // [14034] push constant 45
@12                                                          // [14035] push constant 12
D=A                                                          // [14036] push constant 12
@SP                                                          // [14037] push constant 12
M=M+1                                                        // [14038] push constant 12
A=M-1                                                        // [14039] push constant 12
M=D                                                          // [14040] push constant 12
@12                                                          // [14041] push constant 12
D=A                                                          // [14042] push constant 12
@SP                                                          // [14043] push constant 12
M=M+1                                                        // [14044] push constant 12
A=M-1                                                        // [14045] push constant 12
M=D                                                          // [14046] push constant 12
@12                                                          // [14047] push constant 12
D=A                                                          // [14048] push constant 12
@SP                                                          // [14049] push constant 12
M=M+1                                                        // [14050] push constant 12
A=M-1                                                        // [14051] push constant 12
M=D                                                          // [14052] push constant 12
@12                                                          // [14053] push constant 12
D=A                                                          // [14054] push constant 12
@SP                                                          // [14055] push constant 12
M=M+1                                                        // [14056] push constant 12
A=M-1                                                        // [14057] push constant 12
M=D                                                          // [14058] push constant 12
@12                                                          // [14059] push constant 12
D=A                                                          // [14060] push constant 12
@SP                                                          // [14061] push constant 12
M=M+1                                                        // [14062] push constant 12
A=M-1                                                        // [14063] push constant 12
M=D                                                          // [14064] push constant 12
@30                                                          // [14065] push constant 30
D=A                                                          // [14066] push constant 30
@SP                                                          // [14067] push constant 30
M=M+1                                                        // [14068] push constant 30
A=M-1                                                        // [14069] push constant 30
M=D                                                          // [14070] push constant 30
@SP                                                          // [14071] push constant 0
M=M+1                                                        // [14072] push constant 0
A=M-1                                                        // [14073] push constant 0
M=0                                                          // [14074] push constant 0
@SP                                                          // [14075] push constant 0
M=M+1                                                        // [14076] push constant 0
A=M-1                                                        // [14077] push constant 0
M=0                                                          // [14078] push constant 0
@12                                                          // [14079] call Output.create 12
D=A                                                          // [14080] call Output.create 12
@R13                                                         // [14081] call Output.create 12
M=D                                                          // [14082] call Output.create 12
@Output.create                                               // [14083] call Output.create 12
D=A                                                          // [14084] call Output.create 12
@R14                                                         // [14085] call Output.create 12
M=D                                                          // [14086] call Output.create 12
@return-148                                                  // [14087] call Output.create 12
D=A                                                          // [14088] call Output.create 12
@CALL                                                        // [14089] call Output.create 12
0;JEQ                                                        // [14090] call Output.create 12
(return-148)                                                 // [     ] call Output.create 12
@SP                                                          // [14091] pop temp 0
AM=M-1                                                       // [14092] pop temp 0
D=M                                                          // [14093] pop temp 0
@5                                                           // [14094] pop temp 0
M=D                                                          // [14095] pop temp 0
@85                                                          // [14096] push constant 85
D=A                                                          // [14097] push constant 85
@SP                                                          // [14098] push constant 85
M=M+1                                                        // [14099] push constant 85
A=M-1                                                        // [14100] push constant 85
M=D                                                          // [14101] push constant 85
@51                                                          // [14102] push constant 51
D=A                                                          // [14103] push constant 51
@SP                                                          // [14104] push constant 51
M=M+1                                                        // [14105] push constant 51
A=M-1                                                        // [14106] push constant 51
M=D                                                          // [14107] push constant 51
@51                                                          // [14108] push constant 51
D=A                                                          // [14109] push constant 51
@SP                                                          // [14110] push constant 51
M=M+1                                                        // [14111] push constant 51
A=M-1                                                        // [14112] push constant 51
M=D                                                          // [14113] push constant 51
@51                                                          // [14114] push constant 51
D=A                                                          // [14115] push constant 51
@SP                                                          // [14116] push constant 51
M=M+1                                                        // [14117] push constant 51
A=M-1                                                        // [14118] push constant 51
M=D                                                          // [14119] push constant 51
@51                                                          // [14120] push constant 51
D=A                                                          // [14121] push constant 51
@SP                                                          // [14122] push constant 51
M=M+1                                                        // [14123] push constant 51
A=M-1                                                        // [14124] push constant 51
M=D                                                          // [14125] push constant 51
@51                                                          // [14126] push constant 51
D=A                                                          // [14127] push constant 51
@SP                                                          // [14128] push constant 51
M=M+1                                                        // [14129] push constant 51
A=M-1                                                        // [14130] push constant 51
M=D                                                          // [14131] push constant 51
@51                                                          // [14132] push constant 51
D=A                                                          // [14133] push constant 51
@SP                                                          // [14134] push constant 51
M=M+1                                                        // [14135] push constant 51
A=M-1                                                        // [14136] push constant 51
M=D                                                          // [14137] push constant 51
@51                                                          // [14138] push constant 51
D=A                                                          // [14139] push constant 51
@SP                                                          // [14140] push constant 51
M=M+1                                                        // [14141] push constant 51
A=M-1                                                        // [14142] push constant 51
M=D                                                          // [14143] push constant 51
@51                                                          // [14144] push constant 51
D=A                                                          // [14145] push constant 51
@SP                                                          // [14146] push constant 51
M=M+1                                                        // [14147] push constant 51
A=M-1                                                        // [14148] push constant 51
M=D                                                          // [14149] push constant 51
@30                                                          // [14150] push constant 30
D=A                                                          // [14151] push constant 30
@SP                                                          // [14152] push constant 30
M=M+1                                                        // [14153] push constant 30
A=M-1                                                        // [14154] push constant 30
M=D                                                          // [14155] push constant 30
@SP                                                          // [14156] push constant 0
M=M+1                                                        // [14157] push constant 0
A=M-1                                                        // [14158] push constant 0
M=0                                                          // [14159] push constant 0
@SP                                                          // [14160] push constant 0
M=M+1                                                        // [14161] push constant 0
A=M-1                                                        // [14162] push constant 0
M=0                                                          // [14163] push constant 0
@12                                                          // [14164] call Output.create 12
D=A                                                          // [14165] call Output.create 12
@R13                                                         // [14166] call Output.create 12
M=D                                                          // [14167] call Output.create 12
@Output.create                                               // [14168] call Output.create 12
D=A                                                          // [14169] call Output.create 12
@R14                                                         // [14170] call Output.create 12
M=D                                                          // [14171] call Output.create 12
@return-149                                                  // [14172] call Output.create 12
D=A                                                          // [14173] call Output.create 12
@CALL                                                        // [14174] call Output.create 12
0;JEQ                                                        // [14175] call Output.create 12
(return-149)                                                 // [     ] call Output.create 12
@SP                                                          // [14176] pop temp 0
AM=M-1                                                       // [14177] pop temp 0
D=M                                                          // [14178] pop temp 0
@5                                                           // [14179] pop temp 0
M=D                                                          // [14180] pop temp 0
@86                                                          // [14181] push constant 86
D=A                                                          // [14182] push constant 86
@SP                                                          // [14183] push constant 86
M=M+1                                                        // [14184] push constant 86
A=M-1                                                        // [14185] push constant 86
M=D                                                          // [14186] push constant 86
@51                                                          // [14187] push constant 51
D=A                                                          // [14188] push constant 51
@SP                                                          // [14189] push constant 51
M=M+1                                                        // [14190] push constant 51
A=M-1                                                        // [14191] push constant 51
M=D                                                          // [14192] push constant 51
@51                                                          // [14193] push constant 51
D=A                                                          // [14194] push constant 51
@SP                                                          // [14195] push constant 51
M=M+1                                                        // [14196] push constant 51
A=M-1                                                        // [14197] push constant 51
M=D                                                          // [14198] push constant 51
@51                                                          // [14199] push constant 51
D=A                                                          // [14200] push constant 51
@SP                                                          // [14201] push constant 51
M=M+1                                                        // [14202] push constant 51
A=M-1                                                        // [14203] push constant 51
M=D                                                          // [14204] push constant 51
@51                                                          // [14205] push constant 51
D=A                                                          // [14206] push constant 51
@SP                                                          // [14207] push constant 51
M=M+1                                                        // [14208] push constant 51
A=M-1                                                        // [14209] push constant 51
M=D                                                          // [14210] push constant 51
@51                                                          // [14211] push constant 51
D=A                                                          // [14212] push constant 51
@SP                                                          // [14213] push constant 51
M=M+1                                                        // [14214] push constant 51
A=M-1                                                        // [14215] push constant 51
M=D                                                          // [14216] push constant 51
@30                                                          // [14217] push constant 30
D=A                                                          // [14218] push constant 30
@SP                                                          // [14219] push constant 30
M=M+1                                                        // [14220] push constant 30
A=M-1                                                        // [14221] push constant 30
M=D                                                          // [14222] push constant 30
@30                                                          // [14223] push constant 30
D=A                                                          // [14224] push constant 30
@SP                                                          // [14225] push constant 30
M=M+1                                                        // [14226] push constant 30
A=M-1                                                        // [14227] push constant 30
M=D                                                          // [14228] push constant 30
@12                                                          // [14229] push constant 12
D=A                                                          // [14230] push constant 12
@SP                                                          // [14231] push constant 12
M=M+1                                                        // [14232] push constant 12
A=M-1                                                        // [14233] push constant 12
M=D                                                          // [14234] push constant 12
@12                                                          // [14235] push constant 12
D=A                                                          // [14236] push constant 12
@SP                                                          // [14237] push constant 12
M=M+1                                                        // [14238] push constant 12
A=M-1                                                        // [14239] push constant 12
M=D                                                          // [14240] push constant 12
@SP                                                          // [14241] push constant 0
M=M+1                                                        // [14242] push constant 0
A=M-1                                                        // [14243] push constant 0
M=0                                                          // [14244] push constant 0
@SP                                                          // [14245] push constant 0
M=M+1                                                        // [14246] push constant 0
A=M-1                                                        // [14247] push constant 0
M=0                                                          // [14248] push constant 0
@12                                                          // [14249] call Output.create 12
D=A                                                          // [14250] call Output.create 12
@R13                                                         // [14251] call Output.create 12
M=D                                                          // [14252] call Output.create 12
@Output.create                                               // [14253] call Output.create 12
D=A                                                          // [14254] call Output.create 12
@R14                                                         // [14255] call Output.create 12
M=D                                                          // [14256] call Output.create 12
@return-150                                                  // [14257] call Output.create 12
D=A                                                          // [14258] call Output.create 12
@CALL                                                        // [14259] call Output.create 12
0;JEQ                                                        // [14260] call Output.create 12
(return-150)                                                 // [     ] call Output.create 12
@SP                                                          // [14261] pop temp 0
AM=M-1                                                       // [14262] pop temp 0
D=M                                                          // [14263] pop temp 0
@5                                                           // [14264] pop temp 0
M=D                                                          // [14265] pop temp 0
@87                                                          // [14266] push constant 87
D=A                                                          // [14267] push constant 87
@SP                                                          // [14268] push constant 87
M=M+1                                                        // [14269] push constant 87
A=M-1                                                        // [14270] push constant 87
M=D                                                          // [14271] push constant 87
@51                                                          // [14272] push constant 51
D=A                                                          // [14273] push constant 51
@SP                                                          // [14274] push constant 51
M=M+1                                                        // [14275] push constant 51
A=M-1                                                        // [14276] push constant 51
M=D                                                          // [14277] push constant 51
@51                                                          // [14278] push constant 51
D=A                                                          // [14279] push constant 51
@SP                                                          // [14280] push constant 51
M=M+1                                                        // [14281] push constant 51
A=M-1                                                        // [14282] push constant 51
M=D                                                          // [14283] push constant 51
@51                                                          // [14284] push constant 51
D=A                                                          // [14285] push constant 51
@SP                                                          // [14286] push constant 51
M=M+1                                                        // [14287] push constant 51
A=M-1                                                        // [14288] push constant 51
M=D                                                          // [14289] push constant 51
@51                                                          // [14290] push constant 51
D=A                                                          // [14291] push constant 51
@SP                                                          // [14292] push constant 51
M=M+1                                                        // [14293] push constant 51
A=M-1                                                        // [14294] push constant 51
M=D                                                          // [14295] push constant 51
@51                                                          // [14296] push constant 51
D=A                                                          // [14297] push constant 51
@SP                                                          // [14298] push constant 51
M=M+1                                                        // [14299] push constant 51
A=M-1                                                        // [14300] push constant 51
M=D                                                          // [14301] push constant 51
@63                                                          // [14302] push constant 63
D=A                                                          // [14303] push constant 63
@SP                                                          // [14304] push constant 63
M=M+1                                                        // [14305] push constant 63
A=M-1                                                        // [14306] push constant 63
M=D                                                          // [14307] push constant 63
@63                                                          // [14308] push constant 63
D=A                                                          // [14309] push constant 63
@SP                                                          // [14310] push constant 63
M=M+1                                                        // [14311] push constant 63
A=M-1                                                        // [14312] push constant 63
M=D                                                          // [14313] push constant 63
@63                                                          // [14314] push constant 63
D=A                                                          // [14315] push constant 63
@SP                                                          // [14316] push constant 63
M=M+1                                                        // [14317] push constant 63
A=M-1                                                        // [14318] push constant 63
M=D                                                          // [14319] push constant 63
@18                                                          // [14320] push constant 18
D=A                                                          // [14321] push constant 18
@SP                                                          // [14322] push constant 18
M=M+1                                                        // [14323] push constant 18
A=M-1                                                        // [14324] push constant 18
M=D                                                          // [14325] push constant 18
@SP                                                          // [14326] push constant 0
M=M+1                                                        // [14327] push constant 0
A=M-1                                                        // [14328] push constant 0
M=0                                                          // [14329] push constant 0
@SP                                                          // [14330] push constant 0
M=M+1                                                        // [14331] push constant 0
A=M-1                                                        // [14332] push constant 0
M=0                                                          // [14333] push constant 0
@12                                                          // [14334] call Output.create 12
D=A                                                          // [14335] call Output.create 12
@R13                                                         // [14336] call Output.create 12
M=D                                                          // [14337] call Output.create 12
@Output.create                                               // [14338] call Output.create 12
D=A                                                          // [14339] call Output.create 12
@R14                                                         // [14340] call Output.create 12
M=D                                                          // [14341] call Output.create 12
@return-151                                                  // [14342] call Output.create 12
D=A                                                          // [14343] call Output.create 12
@CALL                                                        // [14344] call Output.create 12
0;JEQ                                                        // [14345] call Output.create 12
(return-151)                                                 // [     ] call Output.create 12
@SP                                                          // [14346] pop temp 0
AM=M-1                                                       // [14347] pop temp 0
D=M                                                          // [14348] pop temp 0
@5                                                           // [14349] pop temp 0
M=D                                                          // [14350] pop temp 0
@88                                                          // [14351] push constant 88
D=A                                                          // [14352] push constant 88
@SP                                                          // [14353] push constant 88
M=M+1                                                        // [14354] push constant 88
A=M-1                                                        // [14355] push constant 88
M=D                                                          // [14356] push constant 88
@51                                                          // [14357] push constant 51
D=A                                                          // [14358] push constant 51
@SP                                                          // [14359] push constant 51
M=M+1                                                        // [14360] push constant 51
A=M-1                                                        // [14361] push constant 51
M=D                                                          // [14362] push constant 51
@51                                                          // [14363] push constant 51
D=A                                                          // [14364] push constant 51
@SP                                                          // [14365] push constant 51
M=M+1                                                        // [14366] push constant 51
A=M-1                                                        // [14367] push constant 51
M=D                                                          // [14368] push constant 51
@30                                                          // [14369] push constant 30
D=A                                                          // [14370] push constant 30
@SP                                                          // [14371] push constant 30
M=M+1                                                        // [14372] push constant 30
A=M-1                                                        // [14373] push constant 30
M=D                                                          // [14374] push constant 30
@30                                                          // [14375] push constant 30
D=A                                                          // [14376] push constant 30
@SP                                                          // [14377] push constant 30
M=M+1                                                        // [14378] push constant 30
A=M-1                                                        // [14379] push constant 30
M=D                                                          // [14380] push constant 30
@12                                                          // [14381] push constant 12
D=A                                                          // [14382] push constant 12
@SP                                                          // [14383] push constant 12
M=M+1                                                        // [14384] push constant 12
A=M-1                                                        // [14385] push constant 12
M=D                                                          // [14386] push constant 12
@30                                                          // [14387] push constant 30
D=A                                                          // [14388] push constant 30
@SP                                                          // [14389] push constant 30
M=M+1                                                        // [14390] push constant 30
A=M-1                                                        // [14391] push constant 30
M=D                                                          // [14392] push constant 30
@30                                                          // [14393] push constant 30
D=A                                                          // [14394] push constant 30
@SP                                                          // [14395] push constant 30
M=M+1                                                        // [14396] push constant 30
A=M-1                                                        // [14397] push constant 30
M=D                                                          // [14398] push constant 30
@51                                                          // [14399] push constant 51
D=A                                                          // [14400] push constant 51
@SP                                                          // [14401] push constant 51
M=M+1                                                        // [14402] push constant 51
A=M-1                                                        // [14403] push constant 51
M=D                                                          // [14404] push constant 51
@51                                                          // [14405] push constant 51
D=A                                                          // [14406] push constant 51
@SP                                                          // [14407] push constant 51
M=M+1                                                        // [14408] push constant 51
A=M-1                                                        // [14409] push constant 51
M=D                                                          // [14410] push constant 51
@SP                                                          // [14411] push constant 0
M=M+1                                                        // [14412] push constant 0
A=M-1                                                        // [14413] push constant 0
M=0                                                          // [14414] push constant 0
@SP                                                          // [14415] push constant 0
M=M+1                                                        // [14416] push constant 0
A=M-1                                                        // [14417] push constant 0
M=0                                                          // [14418] push constant 0
@12                                                          // [14419] call Output.create 12
D=A                                                          // [14420] call Output.create 12
@R13                                                         // [14421] call Output.create 12
M=D                                                          // [14422] call Output.create 12
@Output.create                                               // [14423] call Output.create 12
D=A                                                          // [14424] call Output.create 12
@R14                                                         // [14425] call Output.create 12
M=D                                                          // [14426] call Output.create 12
@return-152                                                  // [14427] call Output.create 12
D=A                                                          // [14428] call Output.create 12
@CALL                                                        // [14429] call Output.create 12
0;JEQ                                                        // [14430] call Output.create 12
(return-152)                                                 // [     ] call Output.create 12
@SP                                                          // [14431] pop temp 0
AM=M-1                                                       // [14432] pop temp 0
D=M                                                          // [14433] pop temp 0
@5                                                           // [14434] pop temp 0
M=D                                                          // [14435] pop temp 0
@89                                                          // [14436] push constant 89
D=A                                                          // [14437] push constant 89
@SP                                                          // [14438] push constant 89
M=M+1                                                        // [14439] push constant 89
A=M-1                                                        // [14440] push constant 89
M=D                                                          // [14441] push constant 89
@51                                                          // [14442] push constant 51
D=A                                                          // [14443] push constant 51
@SP                                                          // [14444] push constant 51
M=M+1                                                        // [14445] push constant 51
A=M-1                                                        // [14446] push constant 51
M=D                                                          // [14447] push constant 51
@51                                                          // [14448] push constant 51
D=A                                                          // [14449] push constant 51
@SP                                                          // [14450] push constant 51
M=M+1                                                        // [14451] push constant 51
A=M-1                                                        // [14452] push constant 51
M=D                                                          // [14453] push constant 51
@51                                                          // [14454] push constant 51
D=A                                                          // [14455] push constant 51
@SP                                                          // [14456] push constant 51
M=M+1                                                        // [14457] push constant 51
A=M-1                                                        // [14458] push constant 51
M=D                                                          // [14459] push constant 51
@51                                                          // [14460] push constant 51
D=A                                                          // [14461] push constant 51
@SP                                                          // [14462] push constant 51
M=M+1                                                        // [14463] push constant 51
A=M-1                                                        // [14464] push constant 51
M=D                                                          // [14465] push constant 51
@30                                                          // [14466] push constant 30
D=A                                                          // [14467] push constant 30
@SP                                                          // [14468] push constant 30
M=M+1                                                        // [14469] push constant 30
A=M-1                                                        // [14470] push constant 30
M=D                                                          // [14471] push constant 30
@12                                                          // [14472] push constant 12
D=A                                                          // [14473] push constant 12
@SP                                                          // [14474] push constant 12
M=M+1                                                        // [14475] push constant 12
A=M-1                                                        // [14476] push constant 12
M=D                                                          // [14477] push constant 12
@12                                                          // [14478] push constant 12
D=A                                                          // [14479] push constant 12
@SP                                                          // [14480] push constant 12
M=M+1                                                        // [14481] push constant 12
A=M-1                                                        // [14482] push constant 12
M=D                                                          // [14483] push constant 12
@12                                                          // [14484] push constant 12
D=A                                                          // [14485] push constant 12
@SP                                                          // [14486] push constant 12
M=M+1                                                        // [14487] push constant 12
A=M-1                                                        // [14488] push constant 12
M=D                                                          // [14489] push constant 12
@30                                                          // [14490] push constant 30
D=A                                                          // [14491] push constant 30
@SP                                                          // [14492] push constant 30
M=M+1                                                        // [14493] push constant 30
A=M-1                                                        // [14494] push constant 30
M=D                                                          // [14495] push constant 30
@SP                                                          // [14496] push constant 0
M=M+1                                                        // [14497] push constant 0
A=M-1                                                        // [14498] push constant 0
M=0                                                          // [14499] push constant 0
@SP                                                          // [14500] push constant 0
M=M+1                                                        // [14501] push constant 0
A=M-1                                                        // [14502] push constant 0
M=0                                                          // [14503] push constant 0
@12                                                          // [14504] call Output.create 12
D=A                                                          // [14505] call Output.create 12
@R13                                                         // [14506] call Output.create 12
M=D                                                          // [14507] call Output.create 12
@Output.create                                               // [14508] call Output.create 12
D=A                                                          // [14509] call Output.create 12
@R14                                                         // [14510] call Output.create 12
M=D                                                          // [14511] call Output.create 12
@return-153                                                  // [14512] call Output.create 12
D=A                                                          // [14513] call Output.create 12
@CALL                                                        // [14514] call Output.create 12
0;JEQ                                                        // [14515] call Output.create 12
(return-153)                                                 // [     ] call Output.create 12
@SP                                                          // [14516] pop temp 0
AM=M-1                                                       // [14517] pop temp 0
D=M                                                          // [14518] pop temp 0
@5                                                           // [14519] pop temp 0
M=D                                                          // [14520] pop temp 0
@90                                                          // [14521] push constant 90
D=A                                                          // [14522] push constant 90
@SP                                                          // [14523] push constant 90
M=M+1                                                        // [14524] push constant 90
A=M-1                                                        // [14525] push constant 90
M=D                                                          // [14526] push constant 90
@63                                                          // [14527] push constant 63
D=A                                                          // [14528] push constant 63
@SP                                                          // [14529] push constant 63
M=M+1                                                        // [14530] push constant 63
A=M-1                                                        // [14531] push constant 63
M=D                                                          // [14532] push constant 63
@51                                                          // [14533] push constant 51
D=A                                                          // [14534] push constant 51
@SP                                                          // [14535] push constant 51
M=M+1                                                        // [14536] push constant 51
A=M-1                                                        // [14537] push constant 51
M=D                                                          // [14538] push constant 51
@49                                                          // [14539] push constant 49
D=A                                                          // [14540] push constant 49
@SP                                                          // [14541] push constant 49
M=M+1                                                        // [14542] push constant 49
A=M-1                                                        // [14543] push constant 49
M=D                                                          // [14544] push constant 49
@24                                                          // [14545] push constant 24
D=A                                                          // [14546] push constant 24
@SP                                                          // [14547] push constant 24
M=M+1                                                        // [14548] push constant 24
A=M-1                                                        // [14549] push constant 24
M=D                                                          // [14550] push constant 24
@12                                                          // [14551] push constant 12
D=A                                                          // [14552] push constant 12
@SP                                                          // [14553] push constant 12
M=M+1                                                        // [14554] push constant 12
A=M-1                                                        // [14555] push constant 12
M=D                                                          // [14556] push constant 12
@6                                                           // [14557] push constant 6
D=A                                                          // [14558] push constant 6
@SP                                                          // [14559] push constant 6
M=M+1                                                        // [14560] push constant 6
A=M-1                                                        // [14561] push constant 6
M=D                                                          // [14562] push constant 6
@35                                                          // [14563] push constant 35
D=A                                                          // [14564] push constant 35
@SP                                                          // [14565] push constant 35
M=M+1                                                        // [14566] push constant 35
A=M-1                                                        // [14567] push constant 35
M=D                                                          // [14568] push constant 35
@51                                                          // [14569] push constant 51
D=A                                                          // [14570] push constant 51
@SP                                                          // [14571] push constant 51
M=M+1                                                        // [14572] push constant 51
A=M-1                                                        // [14573] push constant 51
M=D                                                          // [14574] push constant 51
@63                                                          // [14575] push constant 63
D=A                                                          // [14576] push constant 63
@SP                                                          // [14577] push constant 63
M=M+1                                                        // [14578] push constant 63
A=M-1                                                        // [14579] push constant 63
M=D                                                          // [14580] push constant 63
@SP                                                          // [14581] push constant 0
M=M+1                                                        // [14582] push constant 0
A=M-1                                                        // [14583] push constant 0
M=0                                                          // [14584] push constant 0
@SP                                                          // [14585] push constant 0
M=M+1                                                        // [14586] push constant 0
A=M-1                                                        // [14587] push constant 0
M=0                                                          // [14588] push constant 0
@12                                                          // [14589] call Output.create 12
D=A                                                          // [14590] call Output.create 12
@R13                                                         // [14591] call Output.create 12
M=D                                                          // [14592] call Output.create 12
@Output.create                                               // [14593] call Output.create 12
D=A                                                          // [14594] call Output.create 12
@R14                                                         // [14595] call Output.create 12
M=D                                                          // [14596] call Output.create 12
@return-154                                                  // [14597] call Output.create 12
D=A                                                          // [14598] call Output.create 12
@CALL                                                        // [14599] call Output.create 12
0;JEQ                                                        // [14600] call Output.create 12
(return-154)                                                 // [     ] call Output.create 12
@SP                                                          // [14601] pop temp 0
AM=M-1                                                       // [14602] pop temp 0
D=M                                                          // [14603] pop temp 0
@5                                                           // [14604] pop temp 0
M=D                                                          // [14605] pop temp 0
@91                                                          // [14606] push constant 91
D=A                                                          // [14607] push constant 91
@SP                                                          // [14608] push constant 91
M=M+1                                                        // [14609] push constant 91
A=M-1                                                        // [14610] push constant 91
M=D                                                          // [14611] push constant 91
@30                                                          // [14612] push constant 30
D=A                                                          // [14613] push constant 30
@SP                                                          // [14614] push constant 30
M=M+1                                                        // [14615] push constant 30
A=M-1                                                        // [14616] push constant 30
M=D                                                          // [14617] push constant 30
@6                                                           // [14618] push constant 6
D=A                                                          // [14619] push constant 6
@SP                                                          // [14620] push constant 6
M=M+1                                                        // [14621] push constant 6
A=M-1                                                        // [14622] push constant 6
M=D                                                          // [14623] push constant 6
@6                                                           // [14624] push constant 6
D=A                                                          // [14625] push constant 6
@SP                                                          // [14626] push constant 6
M=M+1                                                        // [14627] push constant 6
A=M-1                                                        // [14628] push constant 6
M=D                                                          // [14629] push constant 6
@6                                                           // [14630] push constant 6
D=A                                                          // [14631] push constant 6
@SP                                                          // [14632] push constant 6
M=M+1                                                        // [14633] push constant 6
A=M-1                                                        // [14634] push constant 6
M=D                                                          // [14635] push constant 6
@6                                                           // [14636] push constant 6
D=A                                                          // [14637] push constant 6
@SP                                                          // [14638] push constant 6
M=M+1                                                        // [14639] push constant 6
A=M-1                                                        // [14640] push constant 6
M=D                                                          // [14641] push constant 6
@6                                                           // [14642] push constant 6
D=A                                                          // [14643] push constant 6
@SP                                                          // [14644] push constant 6
M=M+1                                                        // [14645] push constant 6
A=M-1                                                        // [14646] push constant 6
M=D                                                          // [14647] push constant 6
@6                                                           // [14648] push constant 6
D=A                                                          // [14649] push constant 6
@SP                                                          // [14650] push constant 6
M=M+1                                                        // [14651] push constant 6
A=M-1                                                        // [14652] push constant 6
M=D                                                          // [14653] push constant 6
@6                                                           // [14654] push constant 6
D=A                                                          // [14655] push constant 6
@SP                                                          // [14656] push constant 6
M=M+1                                                        // [14657] push constant 6
A=M-1                                                        // [14658] push constant 6
M=D                                                          // [14659] push constant 6
@30                                                          // [14660] push constant 30
D=A                                                          // [14661] push constant 30
@SP                                                          // [14662] push constant 30
M=M+1                                                        // [14663] push constant 30
A=M-1                                                        // [14664] push constant 30
M=D                                                          // [14665] push constant 30
@SP                                                          // [14666] push constant 0
M=M+1                                                        // [14667] push constant 0
A=M-1                                                        // [14668] push constant 0
M=0                                                          // [14669] push constant 0
@SP                                                          // [14670] push constant 0
M=M+1                                                        // [14671] push constant 0
A=M-1                                                        // [14672] push constant 0
M=0                                                          // [14673] push constant 0
@12                                                          // [14674] call Output.create 12
D=A                                                          // [14675] call Output.create 12
@R13                                                         // [14676] call Output.create 12
M=D                                                          // [14677] call Output.create 12
@Output.create                                               // [14678] call Output.create 12
D=A                                                          // [14679] call Output.create 12
@R14                                                         // [14680] call Output.create 12
M=D                                                          // [14681] call Output.create 12
@return-155                                                  // [14682] call Output.create 12
D=A                                                          // [14683] call Output.create 12
@CALL                                                        // [14684] call Output.create 12
0;JEQ                                                        // [14685] call Output.create 12
(return-155)                                                 // [     ] call Output.create 12
@SP                                                          // [14686] pop temp 0
AM=M-1                                                       // [14687] pop temp 0
D=M                                                          // [14688] pop temp 0
@5                                                           // [14689] pop temp 0
M=D                                                          // [14690] pop temp 0
@92                                                          // [14691] push constant 92
D=A                                                          // [14692] push constant 92
@SP                                                          // [14693] push constant 92
M=M+1                                                        // [14694] push constant 92
A=M-1                                                        // [14695] push constant 92
M=D                                                          // [14696] push constant 92
@SP                                                          // [14697] push constant 0
M=M+1                                                        // [14698] push constant 0
A=M-1                                                        // [14699] push constant 0
M=0                                                          // [14700] push constant 0
@SP                                                          // [14701] push constant 0
M=M+1                                                        // [14702] push constant 0
A=M-1                                                        // [14703] push constant 0
M=0                                                          // [14704] push constant 0
@SP                                                          // [14705] push constant 1
M=M+1                                                        // [14706] push constant 1
A=M-1                                                        // [14707] push constant 1
M=1                                                          // [14708] push constant 1
@3                                                           // [14709] push constant 3
D=A                                                          // [14710] push constant 3
@SP                                                          // [14711] push constant 3
M=M+1                                                        // [14712] push constant 3
A=M-1                                                        // [14713] push constant 3
M=D                                                          // [14714] push constant 3
@6                                                           // [14715] push constant 6
D=A                                                          // [14716] push constant 6
@SP                                                          // [14717] push constant 6
M=M+1                                                        // [14718] push constant 6
A=M-1                                                        // [14719] push constant 6
M=D                                                          // [14720] push constant 6
@12                                                          // [14721] push constant 12
D=A                                                          // [14722] push constant 12
@SP                                                          // [14723] push constant 12
M=M+1                                                        // [14724] push constant 12
A=M-1                                                        // [14725] push constant 12
M=D                                                          // [14726] push constant 12
@24                                                          // [14727] push constant 24
D=A                                                          // [14728] push constant 24
@SP                                                          // [14729] push constant 24
M=M+1                                                        // [14730] push constant 24
A=M-1                                                        // [14731] push constant 24
M=D                                                          // [14732] push constant 24
@48                                                          // [14733] push constant 48
D=A                                                          // [14734] push constant 48
@SP                                                          // [14735] push constant 48
M=M+1                                                        // [14736] push constant 48
A=M-1                                                        // [14737] push constant 48
M=D                                                          // [14738] push constant 48
@32                                                          // [14739] push constant 32
D=A                                                          // [14740] push constant 32
@SP                                                          // [14741] push constant 32
M=M+1                                                        // [14742] push constant 32
A=M-1                                                        // [14743] push constant 32
M=D                                                          // [14744] push constant 32
@SP                                                          // [14745] push constant 0
M=M+1                                                        // [14746] push constant 0
A=M-1                                                        // [14747] push constant 0
M=0                                                          // [14748] push constant 0
@SP                                                          // [14749] push constant 0
M=M+1                                                        // [14750] push constant 0
A=M-1                                                        // [14751] push constant 0
M=0                                                          // [14752] push constant 0
@12                                                          // [14753] call Output.create 12
D=A                                                          // [14754] call Output.create 12
@R13                                                         // [14755] call Output.create 12
M=D                                                          // [14756] call Output.create 12
@Output.create                                               // [14757] call Output.create 12
D=A                                                          // [14758] call Output.create 12
@R14                                                         // [14759] call Output.create 12
M=D                                                          // [14760] call Output.create 12
@return-156                                                  // [14761] call Output.create 12
D=A                                                          // [14762] call Output.create 12
@CALL                                                        // [14763] call Output.create 12
0;JEQ                                                        // [14764] call Output.create 12
(return-156)                                                 // [     ] call Output.create 12
@SP                                                          // [14765] pop temp 0
AM=M-1                                                       // [14766] pop temp 0
D=M                                                          // [14767] pop temp 0
@5                                                           // [14768] pop temp 0
M=D                                                          // [14769] pop temp 0
@93                                                          // [14770] push constant 93
D=A                                                          // [14771] push constant 93
@SP                                                          // [14772] push constant 93
M=M+1                                                        // [14773] push constant 93
A=M-1                                                        // [14774] push constant 93
M=D                                                          // [14775] push constant 93
@30                                                          // [14776] push constant 30
D=A                                                          // [14777] push constant 30
@SP                                                          // [14778] push constant 30
M=M+1                                                        // [14779] push constant 30
A=M-1                                                        // [14780] push constant 30
M=D                                                          // [14781] push constant 30
@24                                                          // [14782] push constant 24
D=A                                                          // [14783] push constant 24
@SP                                                          // [14784] push constant 24
M=M+1                                                        // [14785] push constant 24
A=M-1                                                        // [14786] push constant 24
M=D                                                          // [14787] push constant 24
@24                                                          // [14788] push constant 24
D=A                                                          // [14789] push constant 24
@SP                                                          // [14790] push constant 24
M=M+1                                                        // [14791] push constant 24
A=M-1                                                        // [14792] push constant 24
M=D                                                          // [14793] push constant 24
@24                                                          // [14794] push constant 24
D=A                                                          // [14795] push constant 24
@SP                                                          // [14796] push constant 24
M=M+1                                                        // [14797] push constant 24
A=M-1                                                        // [14798] push constant 24
M=D                                                          // [14799] push constant 24
@24                                                          // [14800] push constant 24
D=A                                                          // [14801] push constant 24
@SP                                                          // [14802] push constant 24
M=M+1                                                        // [14803] push constant 24
A=M-1                                                        // [14804] push constant 24
M=D                                                          // [14805] push constant 24
@24                                                          // [14806] push constant 24
D=A                                                          // [14807] push constant 24
@SP                                                          // [14808] push constant 24
M=M+1                                                        // [14809] push constant 24
A=M-1                                                        // [14810] push constant 24
M=D                                                          // [14811] push constant 24
@24                                                          // [14812] push constant 24
D=A                                                          // [14813] push constant 24
@SP                                                          // [14814] push constant 24
M=M+1                                                        // [14815] push constant 24
A=M-1                                                        // [14816] push constant 24
M=D                                                          // [14817] push constant 24
@24                                                          // [14818] push constant 24
D=A                                                          // [14819] push constant 24
@SP                                                          // [14820] push constant 24
M=M+1                                                        // [14821] push constant 24
A=M-1                                                        // [14822] push constant 24
M=D                                                          // [14823] push constant 24
@30                                                          // [14824] push constant 30
D=A                                                          // [14825] push constant 30
@SP                                                          // [14826] push constant 30
M=M+1                                                        // [14827] push constant 30
A=M-1                                                        // [14828] push constant 30
M=D                                                          // [14829] push constant 30
@SP                                                          // [14830] push constant 0
M=M+1                                                        // [14831] push constant 0
A=M-1                                                        // [14832] push constant 0
M=0                                                          // [14833] push constant 0
@SP                                                          // [14834] push constant 0
M=M+1                                                        // [14835] push constant 0
A=M-1                                                        // [14836] push constant 0
M=0                                                          // [14837] push constant 0
@12                                                          // [14838] call Output.create 12
D=A                                                          // [14839] call Output.create 12
@R13                                                         // [14840] call Output.create 12
M=D                                                          // [14841] call Output.create 12
@Output.create                                               // [14842] call Output.create 12
D=A                                                          // [14843] call Output.create 12
@R14                                                         // [14844] call Output.create 12
M=D                                                          // [14845] call Output.create 12
@return-157                                                  // [14846] call Output.create 12
D=A                                                          // [14847] call Output.create 12
@CALL                                                        // [14848] call Output.create 12
0;JEQ                                                        // [14849] call Output.create 12
(return-157)                                                 // [     ] call Output.create 12
@SP                                                          // [14850] pop temp 0
AM=M-1                                                       // [14851] pop temp 0
D=M                                                          // [14852] pop temp 0
@5                                                           // [14853] pop temp 0
M=D                                                          // [14854] pop temp 0
@94                                                          // [14855] push constant 94
D=A                                                          // [14856] push constant 94
@SP                                                          // [14857] push constant 94
M=M+1                                                        // [14858] push constant 94
A=M-1                                                        // [14859] push constant 94
M=D                                                          // [14860] push constant 94
@8                                                           // [14861] push constant 8
D=A                                                          // [14862] push constant 8
@SP                                                          // [14863] push constant 8
M=M+1                                                        // [14864] push constant 8
A=M-1                                                        // [14865] push constant 8
M=D                                                          // [14866] push constant 8
@28                                                          // [14867] push constant 28
D=A                                                          // [14868] push constant 28
@SP                                                          // [14869] push constant 28
M=M+1                                                        // [14870] push constant 28
A=M-1                                                        // [14871] push constant 28
M=D                                                          // [14872] push constant 28
@54                                                          // [14873] push constant 54
D=A                                                          // [14874] push constant 54
@SP                                                          // [14875] push constant 54
M=M+1                                                        // [14876] push constant 54
A=M-1                                                        // [14877] push constant 54
M=D                                                          // [14878] push constant 54
@SP                                                          // [14879] push constant 0
M=M+1                                                        // [14880] push constant 0
A=M-1                                                        // [14881] push constant 0
M=0                                                          // [14882] push constant 0
@SP                                                          // [14883] push constant 0
M=M+1                                                        // [14884] push constant 0
A=M-1                                                        // [14885] push constant 0
M=0                                                          // [14886] push constant 0
@SP                                                          // [14887] push constant 0
M=M+1                                                        // [14888] push constant 0
A=M-1                                                        // [14889] push constant 0
M=0                                                          // [14890] push constant 0
@SP                                                          // [14891] push constant 0
M=M+1                                                        // [14892] push constant 0
A=M-1                                                        // [14893] push constant 0
M=0                                                          // [14894] push constant 0
@SP                                                          // [14895] push constant 0
M=M+1                                                        // [14896] push constant 0
A=M-1                                                        // [14897] push constant 0
M=0                                                          // [14898] push constant 0
@SP                                                          // [14899] push constant 0
M=M+1                                                        // [14900] push constant 0
A=M-1                                                        // [14901] push constant 0
M=0                                                          // [14902] push constant 0
@SP                                                          // [14903] push constant 0
M=M+1                                                        // [14904] push constant 0
A=M-1                                                        // [14905] push constant 0
M=0                                                          // [14906] push constant 0
@SP                                                          // [14907] push constant 0
M=M+1                                                        // [14908] push constant 0
A=M-1                                                        // [14909] push constant 0
M=0                                                          // [14910] push constant 0
@12                                                          // [14911] call Output.create 12
D=A                                                          // [14912] call Output.create 12
@R13                                                         // [14913] call Output.create 12
M=D                                                          // [14914] call Output.create 12
@Output.create                                               // [14915] call Output.create 12
D=A                                                          // [14916] call Output.create 12
@R14                                                         // [14917] call Output.create 12
M=D                                                          // [14918] call Output.create 12
@return-158                                                  // [14919] call Output.create 12
D=A                                                          // [14920] call Output.create 12
@CALL                                                        // [14921] call Output.create 12
0;JEQ                                                        // [14922] call Output.create 12
(return-158)                                                 // [     ] call Output.create 12
@SP                                                          // [14923] pop temp 0
AM=M-1                                                       // [14924] pop temp 0
D=M                                                          // [14925] pop temp 0
@5                                                           // [14926] pop temp 0
M=D                                                          // [14927] pop temp 0
@95                                                          // [14928] push constant 95
D=A                                                          // [14929] push constant 95
@SP                                                          // [14930] push constant 95
M=M+1                                                        // [14931] push constant 95
A=M-1                                                        // [14932] push constant 95
M=D                                                          // [14933] push constant 95
@SP                                                          // [14934] push constant 0
M=M+1                                                        // [14935] push constant 0
A=M-1                                                        // [14936] push constant 0
M=0                                                          // [14937] push constant 0
@SP                                                          // [14938] push constant 0
M=M+1                                                        // [14939] push constant 0
A=M-1                                                        // [14940] push constant 0
M=0                                                          // [14941] push constant 0
@SP                                                          // [14942] push constant 0
M=M+1                                                        // [14943] push constant 0
A=M-1                                                        // [14944] push constant 0
M=0                                                          // [14945] push constant 0
@SP                                                          // [14946] push constant 0
M=M+1                                                        // [14947] push constant 0
A=M-1                                                        // [14948] push constant 0
M=0                                                          // [14949] push constant 0
@SP                                                          // [14950] push constant 0
M=M+1                                                        // [14951] push constant 0
A=M-1                                                        // [14952] push constant 0
M=0                                                          // [14953] push constant 0
@SP                                                          // [14954] push constant 0
M=M+1                                                        // [14955] push constant 0
A=M-1                                                        // [14956] push constant 0
M=0                                                          // [14957] push constant 0
@SP                                                          // [14958] push constant 0
M=M+1                                                        // [14959] push constant 0
A=M-1                                                        // [14960] push constant 0
M=0                                                          // [14961] push constant 0
@SP                                                          // [14962] push constant 0
M=M+1                                                        // [14963] push constant 0
A=M-1                                                        // [14964] push constant 0
M=0                                                          // [14965] push constant 0
@SP                                                          // [14966] push constant 0
M=M+1                                                        // [14967] push constant 0
A=M-1                                                        // [14968] push constant 0
M=0                                                          // [14969] push constant 0
@63                                                          // [14970] push constant 63
D=A                                                          // [14971] push constant 63
@SP                                                          // [14972] push constant 63
M=M+1                                                        // [14973] push constant 63
A=M-1                                                        // [14974] push constant 63
M=D                                                          // [14975] push constant 63
@SP                                                          // [14976] push constant 0
M=M+1                                                        // [14977] push constant 0
A=M-1                                                        // [14978] push constant 0
M=0                                                          // [14979] push constant 0
@12                                                          // [14980] call Output.create 12
D=A                                                          // [14981] call Output.create 12
@R13                                                         // [14982] call Output.create 12
M=D                                                          // [14983] call Output.create 12
@Output.create                                               // [14984] call Output.create 12
D=A                                                          // [14985] call Output.create 12
@R14                                                         // [14986] call Output.create 12
M=D                                                          // [14987] call Output.create 12
@return-159                                                  // [14988] call Output.create 12
D=A                                                          // [14989] call Output.create 12
@CALL                                                        // [14990] call Output.create 12
0;JEQ                                                        // [14991] call Output.create 12
(return-159)                                                 // [     ] call Output.create 12
@SP                                                          // [14992] pop temp 0
AM=M-1                                                       // [14993] pop temp 0
D=M                                                          // [14994] pop temp 0
@5                                                           // [14995] pop temp 0
M=D                                                          // [14996] pop temp 0
@96                                                          // [14997] push constant 96
D=A                                                          // [14998] push constant 96
@SP                                                          // [14999] push constant 96
M=M+1                                                        // [15000] push constant 96
A=M-1                                                        // [15001] push constant 96
M=D                                                          // [15002] push constant 96
@6                                                           // [15003] push constant 6
D=A                                                          // [15004] push constant 6
@SP                                                          // [15005] push constant 6
M=M+1                                                        // [15006] push constant 6
A=M-1                                                        // [15007] push constant 6
M=D                                                          // [15008] push constant 6
@12                                                          // [15009] push constant 12
D=A                                                          // [15010] push constant 12
@SP                                                          // [15011] push constant 12
M=M+1                                                        // [15012] push constant 12
A=M-1                                                        // [15013] push constant 12
M=D                                                          // [15014] push constant 12
@24                                                          // [15015] push constant 24
D=A                                                          // [15016] push constant 24
@SP                                                          // [15017] push constant 24
M=M+1                                                        // [15018] push constant 24
A=M-1                                                        // [15019] push constant 24
M=D                                                          // [15020] push constant 24
@SP                                                          // [15021] push constant 0
M=M+1                                                        // [15022] push constant 0
A=M-1                                                        // [15023] push constant 0
M=0                                                          // [15024] push constant 0
@SP                                                          // [15025] push constant 0
M=M+1                                                        // [15026] push constant 0
A=M-1                                                        // [15027] push constant 0
M=0                                                          // [15028] push constant 0
@SP                                                          // [15029] push constant 0
M=M+1                                                        // [15030] push constant 0
A=M-1                                                        // [15031] push constant 0
M=0                                                          // [15032] push constant 0
@SP                                                          // [15033] push constant 0
M=M+1                                                        // [15034] push constant 0
A=M-1                                                        // [15035] push constant 0
M=0                                                          // [15036] push constant 0
@SP                                                          // [15037] push constant 0
M=M+1                                                        // [15038] push constant 0
A=M-1                                                        // [15039] push constant 0
M=0                                                          // [15040] push constant 0
@SP                                                          // [15041] push constant 0
M=M+1                                                        // [15042] push constant 0
A=M-1                                                        // [15043] push constant 0
M=0                                                          // [15044] push constant 0
@SP                                                          // [15045] push constant 0
M=M+1                                                        // [15046] push constant 0
A=M-1                                                        // [15047] push constant 0
M=0                                                          // [15048] push constant 0
@SP                                                          // [15049] push constant 0
M=M+1                                                        // [15050] push constant 0
A=M-1                                                        // [15051] push constant 0
M=0                                                          // [15052] push constant 0
@12                                                          // [15053] call Output.create 12
D=A                                                          // [15054] call Output.create 12
@R13                                                         // [15055] call Output.create 12
M=D                                                          // [15056] call Output.create 12
@Output.create                                               // [15057] call Output.create 12
D=A                                                          // [15058] call Output.create 12
@R14                                                         // [15059] call Output.create 12
M=D                                                          // [15060] call Output.create 12
@return-160                                                  // [15061] call Output.create 12
D=A                                                          // [15062] call Output.create 12
@CALL                                                        // [15063] call Output.create 12
0;JEQ                                                        // [15064] call Output.create 12
(return-160)                                                 // [     ] call Output.create 12
@SP                                                          // [15065] pop temp 0
AM=M-1                                                       // [15066] pop temp 0
D=M                                                          // [15067] pop temp 0
@5                                                           // [15068] pop temp 0
M=D                                                          // [15069] pop temp 0
@97                                                          // [15070] push constant 97
D=A                                                          // [15071] push constant 97
@SP                                                          // [15072] push constant 97
M=M+1                                                        // [15073] push constant 97
A=M-1                                                        // [15074] push constant 97
M=D                                                          // [15075] push constant 97
@SP                                                          // [15076] push constant 0
M=M+1                                                        // [15077] push constant 0
A=M-1                                                        // [15078] push constant 0
M=0                                                          // [15079] push constant 0
@SP                                                          // [15080] push constant 0
M=M+1                                                        // [15081] push constant 0
A=M-1                                                        // [15082] push constant 0
M=0                                                          // [15083] push constant 0
@SP                                                          // [15084] push constant 0
M=M+1                                                        // [15085] push constant 0
A=M-1                                                        // [15086] push constant 0
M=0                                                          // [15087] push constant 0
@14                                                          // [15088] push constant 14
D=A                                                          // [15089] push constant 14
@SP                                                          // [15090] push constant 14
M=M+1                                                        // [15091] push constant 14
A=M-1                                                        // [15092] push constant 14
M=D                                                          // [15093] push constant 14
@24                                                          // [15094] push constant 24
D=A                                                          // [15095] push constant 24
@SP                                                          // [15096] push constant 24
M=M+1                                                        // [15097] push constant 24
A=M-1                                                        // [15098] push constant 24
M=D                                                          // [15099] push constant 24
@30                                                          // [15100] push constant 30
D=A                                                          // [15101] push constant 30
@SP                                                          // [15102] push constant 30
M=M+1                                                        // [15103] push constant 30
A=M-1                                                        // [15104] push constant 30
M=D                                                          // [15105] push constant 30
@27                                                          // [15106] push constant 27
D=A                                                          // [15107] push constant 27
@SP                                                          // [15108] push constant 27
M=M+1                                                        // [15109] push constant 27
A=M-1                                                        // [15110] push constant 27
M=D                                                          // [15111] push constant 27
@27                                                          // [15112] push constant 27
D=A                                                          // [15113] push constant 27
@SP                                                          // [15114] push constant 27
M=M+1                                                        // [15115] push constant 27
A=M-1                                                        // [15116] push constant 27
M=D                                                          // [15117] push constant 27
@54                                                          // [15118] push constant 54
D=A                                                          // [15119] push constant 54
@SP                                                          // [15120] push constant 54
M=M+1                                                        // [15121] push constant 54
A=M-1                                                        // [15122] push constant 54
M=D                                                          // [15123] push constant 54
@SP                                                          // [15124] push constant 0
M=M+1                                                        // [15125] push constant 0
A=M-1                                                        // [15126] push constant 0
M=0                                                          // [15127] push constant 0
@SP                                                          // [15128] push constant 0
M=M+1                                                        // [15129] push constant 0
A=M-1                                                        // [15130] push constant 0
M=0                                                          // [15131] push constant 0
@12                                                          // [15132] call Output.create 12
D=A                                                          // [15133] call Output.create 12
@R13                                                         // [15134] call Output.create 12
M=D                                                          // [15135] call Output.create 12
@Output.create                                               // [15136] call Output.create 12
D=A                                                          // [15137] call Output.create 12
@R14                                                         // [15138] call Output.create 12
M=D                                                          // [15139] call Output.create 12
@return-161                                                  // [15140] call Output.create 12
D=A                                                          // [15141] call Output.create 12
@CALL                                                        // [15142] call Output.create 12
0;JEQ                                                        // [15143] call Output.create 12
(return-161)                                                 // [     ] call Output.create 12
@SP                                                          // [15144] pop temp 0
AM=M-1                                                       // [15145] pop temp 0
D=M                                                          // [15146] pop temp 0
@5                                                           // [15147] pop temp 0
M=D                                                          // [15148] pop temp 0
@98                                                          // [15149] push constant 98
D=A                                                          // [15150] push constant 98
@SP                                                          // [15151] push constant 98
M=M+1                                                        // [15152] push constant 98
A=M-1                                                        // [15153] push constant 98
M=D                                                          // [15154] push constant 98
@3                                                           // [15155] push constant 3
D=A                                                          // [15156] push constant 3
@SP                                                          // [15157] push constant 3
M=M+1                                                        // [15158] push constant 3
A=M-1                                                        // [15159] push constant 3
M=D                                                          // [15160] push constant 3
@3                                                           // [15161] push constant 3
D=A                                                          // [15162] push constant 3
@SP                                                          // [15163] push constant 3
M=M+1                                                        // [15164] push constant 3
A=M-1                                                        // [15165] push constant 3
M=D                                                          // [15166] push constant 3
@3                                                           // [15167] push constant 3
D=A                                                          // [15168] push constant 3
@SP                                                          // [15169] push constant 3
M=M+1                                                        // [15170] push constant 3
A=M-1                                                        // [15171] push constant 3
M=D                                                          // [15172] push constant 3
@15                                                          // [15173] push constant 15
D=A                                                          // [15174] push constant 15
@SP                                                          // [15175] push constant 15
M=M+1                                                        // [15176] push constant 15
A=M-1                                                        // [15177] push constant 15
M=D                                                          // [15178] push constant 15
@27                                                          // [15179] push constant 27
D=A                                                          // [15180] push constant 27
@SP                                                          // [15181] push constant 27
M=M+1                                                        // [15182] push constant 27
A=M-1                                                        // [15183] push constant 27
M=D                                                          // [15184] push constant 27
@51                                                          // [15185] push constant 51
D=A                                                          // [15186] push constant 51
@SP                                                          // [15187] push constant 51
M=M+1                                                        // [15188] push constant 51
A=M-1                                                        // [15189] push constant 51
M=D                                                          // [15190] push constant 51
@51                                                          // [15191] push constant 51
D=A                                                          // [15192] push constant 51
@SP                                                          // [15193] push constant 51
M=M+1                                                        // [15194] push constant 51
A=M-1                                                        // [15195] push constant 51
M=D                                                          // [15196] push constant 51
@51                                                          // [15197] push constant 51
D=A                                                          // [15198] push constant 51
@SP                                                          // [15199] push constant 51
M=M+1                                                        // [15200] push constant 51
A=M-1                                                        // [15201] push constant 51
M=D                                                          // [15202] push constant 51
@30                                                          // [15203] push constant 30
D=A                                                          // [15204] push constant 30
@SP                                                          // [15205] push constant 30
M=M+1                                                        // [15206] push constant 30
A=M-1                                                        // [15207] push constant 30
M=D                                                          // [15208] push constant 30
@SP                                                          // [15209] push constant 0
M=M+1                                                        // [15210] push constant 0
A=M-1                                                        // [15211] push constant 0
M=0                                                          // [15212] push constant 0
@SP                                                          // [15213] push constant 0
M=M+1                                                        // [15214] push constant 0
A=M-1                                                        // [15215] push constant 0
M=0                                                          // [15216] push constant 0
@12                                                          // [15217] call Output.create 12
D=A                                                          // [15218] call Output.create 12
@R13                                                         // [15219] call Output.create 12
M=D                                                          // [15220] call Output.create 12
@Output.create                                               // [15221] call Output.create 12
D=A                                                          // [15222] call Output.create 12
@R14                                                         // [15223] call Output.create 12
M=D                                                          // [15224] call Output.create 12
@return-162                                                  // [15225] call Output.create 12
D=A                                                          // [15226] call Output.create 12
@CALL                                                        // [15227] call Output.create 12
0;JEQ                                                        // [15228] call Output.create 12
(return-162)                                                 // [     ] call Output.create 12
@SP                                                          // [15229] pop temp 0
AM=M-1                                                       // [15230] pop temp 0
D=M                                                          // [15231] pop temp 0
@5                                                           // [15232] pop temp 0
M=D                                                          // [15233] pop temp 0
@99                                                          // [15234] push constant 99
D=A                                                          // [15235] push constant 99
@SP                                                          // [15236] push constant 99
M=M+1                                                        // [15237] push constant 99
A=M-1                                                        // [15238] push constant 99
M=D                                                          // [15239] push constant 99
@SP                                                          // [15240] push constant 0
M=M+1                                                        // [15241] push constant 0
A=M-1                                                        // [15242] push constant 0
M=0                                                          // [15243] push constant 0
@SP                                                          // [15244] push constant 0
M=M+1                                                        // [15245] push constant 0
A=M-1                                                        // [15246] push constant 0
M=0                                                          // [15247] push constant 0
@SP                                                          // [15248] push constant 0
M=M+1                                                        // [15249] push constant 0
A=M-1                                                        // [15250] push constant 0
M=0                                                          // [15251] push constant 0
@30                                                          // [15252] push constant 30
D=A                                                          // [15253] push constant 30
@SP                                                          // [15254] push constant 30
M=M+1                                                        // [15255] push constant 30
A=M-1                                                        // [15256] push constant 30
M=D                                                          // [15257] push constant 30
@51                                                          // [15258] push constant 51
D=A                                                          // [15259] push constant 51
@SP                                                          // [15260] push constant 51
M=M+1                                                        // [15261] push constant 51
A=M-1                                                        // [15262] push constant 51
M=D                                                          // [15263] push constant 51
@3                                                           // [15264] push constant 3
D=A                                                          // [15265] push constant 3
@SP                                                          // [15266] push constant 3
M=M+1                                                        // [15267] push constant 3
A=M-1                                                        // [15268] push constant 3
M=D                                                          // [15269] push constant 3
@3                                                           // [15270] push constant 3
D=A                                                          // [15271] push constant 3
@SP                                                          // [15272] push constant 3
M=M+1                                                        // [15273] push constant 3
A=M-1                                                        // [15274] push constant 3
M=D                                                          // [15275] push constant 3
@51                                                          // [15276] push constant 51
D=A                                                          // [15277] push constant 51
@SP                                                          // [15278] push constant 51
M=M+1                                                        // [15279] push constant 51
A=M-1                                                        // [15280] push constant 51
M=D                                                          // [15281] push constant 51
@30                                                          // [15282] push constant 30
D=A                                                          // [15283] push constant 30
@SP                                                          // [15284] push constant 30
M=M+1                                                        // [15285] push constant 30
A=M-1                                                        // [15286] push constant 30
M=D                                                          // [15287] push constant 30
@SP                                                          // [15288] push constant 0
M=M+1                                                        // [15289] push constant 0
A=M-1                                                        // [15290] push constant 0
M=0                                                          // [15291] push constant 0
@SP                                                          // [15292] push constant 0
M=M+1                                                        // [15293] push constant 0
A=M-1                                                        // [15294] push constant 0
M=0                                                          // [15295] push constant 0
@12                                                          // [15296] call Output.create 12
D=A                                                          // [15297] call Output.create 12
@R13                                                         // [15298] call Output.create 12
M=D                                                          // [15299] call Output.create 12
@Output.create                                               // [15300] call Output.create 12
D=A                                                          // [15301] call Output.create 12
@R14                                                         // [15302] call Output.create 12
M=D                                                          // [15303] call Output.create 12
@return-163                                                  // [15304] call Output.create 12
D=A                                                          // [15305] call Output.create 12
@CALL                                                        // [15306] call Output.create 12
0;JEQ                                                        // [15307] call Output.create 12
(return-163)                                                 // [     ] call Output.create 12
@SP                                                          // [15308] pop temp 0
AM=M-1                                                       // [15309] pop temp 0
D=M                                                          // [15310] pop temp 0
@5                                                           // [15311] pop temp 0
M=D                                                          // [15312] pop temp 0
@100                                                         // [15313] push constant 100
D=A                                                          // [15314] push constant 100
@SP                                                          // [15315] push constant 100
M=M+1                                                        // [15316] push constant 100
A=M-1                                                        // [15317] push constant 100
M=D                                                          // [15318] push constant 100
@48                                                          // [15319] push constant 48
D=A                                                          // [15320] push constant 48
@SP                                                          // [15321] push constant 48
M=M+1                                                        // [15322] push constant 48
A=M-1                                                        // [15323] push constant 48
M=D                                                          // [15324] push constant 48
@48                                                          // [15325] push constant 48
D=A                                                          // [15326] push constant 48
@SP                                                          // [15327] push constant 48
M=M+1                                                        // [15328] push constant 48
A=M-1                                                        // [15329] push constant 48
M=D                                                          // [15330] push constant 48
@48                                                          // [15331] push constant 48
D=A                                                          // [15332] push constant 48
@SP                                                          // [15333] push constant 48
M=M+1                                                        // [15334] push constant 48
A=M-1                                                        // [15335] push constant 48
M=D                                                          // [15336] push constant 48
@60                                                          // [15337] push constant 60
D=A                                                          // [15338] push constant 60
@SP                                                          // [15339] push constant 60
M=M+1                                                        // [15340] push constant 60
A=M-1                                                        // [15341] push constant 60
M=D                                                          // [15342] push constant 60
@54                                                          // [15343] push constant 54
D=A                                                          // [15344] push constant 54
@SP                                                          // [15345] push constant 54
M=M+1                                                        // [15346] push constant 54
A=M-1                                                        // [15347] push constant 54
M=D                                                          // [15348] push constant 54
@51                                                          // [15349] push constant 51
D=A                                                          // [15350] push constant 51
@SP                                                          // [15351] push constant 51
M=M+1                                                        // [15352] push constant 51
A=M-1                                                        // [15353] push constant 51
M=D                                                          // [15354] push constant 51
@51                                                          // [15355] push constant 51
D=A                                                          // [15356] push constant 51
@SP                                                          // [15357] push constant 51
M=M+1                                                        // [15358] push constant 51
A=M-1                                                        // [15359] push constant 51
M=D                                                          // [15360] push constant 51
@51                                                          // [15361] push constant 51
D=A                                                          // [15362] push constant 51
@SP                                                          // [15363] push constant 51
M=M+1                                                        // [15364] push constant 51
A=M-1                                                        // [15365] push constant 51
M=D                                                          // [15366] push constant 51
@30                                                          // [15367] push constant 30
D=A                                                          // [15368] push constant 30
@SP                                                          // [15369] push constant 30
M=M+1                                                        // [15370] push constant 30
A=M-1                                                        // [15371] push constant 30
M=D                                                          // [15372] push constant 30
@SP                                                          // [15373] push constant 0
M=M+1                                                        // [15374] push constant 0
A=M-1                                                        // [15375] push constant 0
M=0                                                          // [15376] push constant 0
@SP                                                          // [15377] push constant 0
M=M+1                                                        // [15378] push constant 0
A=M-1                                                        // [15379] push constant 0
M=0                                                          // [15380] push constant 0
@12                                                          // [15381] call Output.create 12
D=A                                                          // [15382] call Output.create 12
@R13                                                         // [15383] call Output.create 12
M=D                                                          // [15384] call Output.create 12
@Output.create                                               // [15385] call Output.create 12
D=A                                                          // [15386] call Output.create 12
@R14                                                         // [15387] call Output.create 12
M=D                                                          // [15388] call Output.create 12
@return-164                                                  // [15389] call Output.create 12
D=A                                                          // [15390] call Output.create 12
@CALL                                                        // [15391] call Output.create 12
0;JEQ                                                        // [15392] call Output.create 12
(return-164)                                                 // [     ] call Output.create 12
@SP                                                          // [15393] pop temp 0
AM=M-1                                                       // [15394] pop temp 0
D=M                                                          // [15395] pop temp 0
@5                                                           // [15396] pop temp 0
M=D                                                          // [15397] pop temp 0
@101                                                         // [15398] push constant 101
D=A                                                          // [15399] push constant 101
@SP                                                          // [15400] push constant 101
M=M+1                                                        // [15401] push constant 101
A=M-1                                                        // [15402] push constant 101
M=D                                                          // [15403] push constant 101
@SP                                                          // [15404] push constant 0
M=M+1                                                        // [15405] push constant 0
A=M-1                                                        // [15406] push constant 0
M=0                                                          // [15407] push constant 0
@SP                                                          // [15408] push constant 0
M=M+1                                                        // [15409] push constant 0
A=M-1                                                        // [15410] push constant 0
M=0                                                          // [15411] push constant 0
@SP                                                          // [15412] push constant 0
M=M+1                                                        // [15413] push constant 0
A=M-1                                                        // [15414] push constant 0
M=0                                                          // [15415] push constant 0
@30                                                          // [15416] push constant 30
D=A                                                          // [15417] push constant 30
@SP                                                          // [15418] push constant 30
M=M+1                                                        // [15419] push constant 30
A=M-1                                                        // [15420] push constant 30
M=D                                                          // [15421] push constant 30
@51                                                          // [15422] push constant 51
D=A                                                          // [15423] push constant 51
@SP                                                          // [15424] push constant 51
M=M+1                                                        // [15425] push constant 51
A=M-1                                                        // [15426] push constant 51
M=D                                                          // [15427] push constant 51
@63                                                          // [15428] push constant 63
D=A                                                          // [15429] push constant 63
@SP                                                          // [15430] push constant 63
M=M+1                                                        // [15431] push constant 63
A=M-1                                                        // [15432] push constant 63
M=D                                                          // [15433] push constant 63
@3                                                           // [15434] push constant 3
D=A                                                          // [15435] push constant 3
@SP                                                          // [15436] push constant 3
M=M+1                                                        // [15437] push constant 3
A=M-1                                                        // [15438] push constant 3
M=D                                                          // [15439] push constant 3
@51                                                          // [15440] push constant 51
D=A                                                          // [15441] push constant 51
@SP                                                          // [15442] push constant 51
M=M+1                                                        // [15443] push constant 51
A=M-1                                                        // [15444] push constant 51
M=D                                                          // [15445] push constant 51
@30                                                          // [15446] push constant 30
D=A                                                          // [15447] push constant 30
@SP                                                          // [15448] push constant 30
M=M+1                                                        // [15449] push constant 30
A=M-1                                                        // [15450] push constant 30
M=D                                                          // [15451] push constant 30
@SP                                                          // [15452] push constant 0
M=M+1                                                        // [15453] push constant 0
A=M-1                                                        // [15454] push constant 0
M=0                                                          // [15455] push constant 0
@SP                                                          // [15456] push constant 0
M=M+1                                                        // [15457] push constant 0
A=M-1                                                        // [15458] push constant 0
M=0                                                          // [15459] push constant 0
@12                                                          // [15460] call Output.create 12
D=A                                                          // [15461] call Output.create 12
@R13                                                         // [15462] call Output.create 12
M=D                                                          // [15463] call Output.create 12
@Output.create                                               // [15464] call Output.create 12
D=A                                                          // [15465] call Output.create 12
@R14                                                         // [15466] call Output.create 12
M=D                                                          // [15467] call Output.create 12
@return-165                                                  // [15468] call Output.create 12
D=A                                                          // [15469] call Output.create 12
@CALL                                                        // [15470] call Output.create 12
0;JEQ                                                        // [15471] call Output.create 12
(return-165)                                                 // [     ] call Output.create 12
@SP                                                          // [15472] pop temp 0
AM=M-1                                                       // [15473] pop temp 0
D=M                                                          // [15474] pop temp 0
@5                                                           // [15475] pop temp 0
M=D                                                          // [15476] pop temp 0
@102                                                         // [15477] push constant 102
D=A                                                          // [15478] push constant 102
@SP                                                          // [15479] push constant 102
M=M+1                                                        // [15480] push constant 102
A=M-1                                                        // [15481] push constant 102
M=D                                                          // [15482] push constant 102
@28                                                          // [15483] push constant 28
D=A                                                          // [15484] push constant 28
@SP                                                          // [15485] push constant 28
M=M+1                                                        // [15486] push constant 28
A=M-1                                                        // [15487] push constant 28
M=D                                                          // [15488] push constant 28
@54                                                          // [15489] push constant 54
D=A                                                          // [15490] push constant 54
@SP                                                          // [15491] push constant 54
M=M+1                                                        // [15492] push constant 54
A=M-1                                                        // [15493] push constant 54
M=D                                                          // [15494] push constant 54
@38                                                          // [15495] push constant 38
D=A                                                          // [15496] push constant 38
@SP                                                          // [15497] push constant 38
M=M+1                                                        // [15498] push constant 38
A=M-1                                                        // [15499] push constant 38
M=D                                                          // [15500] push constant 38
@6                                                           // [15501] push constant 6
D=A                                                          // [15502] push constant 6
@SP                                                          // [15503] push constant 6
M=M+1                                                        // [15504] push constant 6
A=M-1                                                        // [15505] push constant 6
M=D                                                          // [15506] push constant 6
@15                                                          // [15507] push constant 15
D=A                                                          // [15508] push constant 15
@SP                                                          // [15509] push constant 15
M=M+1                                                        // [15510] push constant 15
A=M-1                                                        // [15511] push constant 15
M=D                                                          // [15512] push constant 15
@6                                                           // [15513] push constant 6
D=A                                                          // [15514] push constant 6
@SP                                                          // [15515] push constant 6
M=M+1                                                        // [15516] push constant 6
A=M-1                                                        // [15517] push constant 6
M=D                                                          // [15518] push constant 6
@6                                                           // [15519] push constant 6
D=A                                                          // [15520] push constant 6
@SP                                                          // [15521] push constant 6
M=M+1                                                        // [15522] push constant 6
A=M-1                                                        // [15523] push constant 6
M=D                                                          // [15524] push constant 6
@6                                                           // [15525] push constant 6
D=A                                                          // [15526] push constant 6
@SP                                                          // [15527] push constant 6
M=M+1                                                        // [15528] push constant 6
A=M-1                                                        // [15529] push constant 6
M=D                                                          // [15530] push constant 6
@15                                                          // [15531] push constant 15
D=A                                                          // [15532] push constant 15
@SP                                                          // [15533] push constant 15
M=M+1                                                        // [15534] push constant 15
A=M-1                                                        // [15535] push constant 15
M=D                                                          // [15536] push constant 15
@SP                                                          // [15537] push constant 0
M=M+1                                                        // [15538] push constant 0
A=M-1                                                        // [15539] push constant 0
M=0                                                          // [15540] push constant 0
@SP                                                          // [15541] push constant 0
M=M+1                                                        // [15542] push constant 0
A=M-1                                                        // [15543] push constant 0
M=0                                                          // [15544] push constant 0
@12                                                          // [15545] call Output.create 12
D=A                                                          // [15546] call Output.create 12
@R13                                                         // [15547] call Output.create 12
M=D                                                          // [15548] call Output.create 12
@Output.create                                               // [15549] call Output.create 12
D=A                                                          // [15550] call Output.create 12
@R14                                                         // [15551] call Output.create 12
M=D                                                          // [15552] call Output.create 12
@return-166                                                  // [15553] call Output.create 12
D=A                                                          // [15554] call Output.create 12
@CALL                                                        // [15555] call Output.create 12
0;JEQ                                                        // [15556] call Output.create 12
(return-166)                                                 // [     ] call Output.create 12
@SP                                                          // [15557] pop temp 0
AM=M-1                                                       // [15558] pop temp 0
D=M                                                          // [15559] pop temp 0
@5                                                           // [15560] pop temp 0
M=D                                                          // [15561] pop temp 0
@103                                                         // [15562] push constant 103
D=A                                                          // [15563] push constant 103
@SP                                                          // [15564] push constant 103
M=M+1                                                        // [15565] push constant 103
A=M-1                                                        // [15566] push constant 103
M=D                                                          // [15567] push constant 103
@SP                                                          // [15568] push constant 0
M=M+1                                                        // [15569] push constant 0
A=M-1                                                        // [15570] push constant 0
M=0                                                          // [15571] push constant 0
@SP                                                          // [15572] push constant 0
M=M+1                                                        // [15573] push constant 0
A=M-1                                                        // [15574] push constant 0
M=0                                                          // [15575] push constant 0
@30                                                          // [15576] push constant 30
D=A                                                          // [15577] push constant 30
@SP                                                          // [15578] push constant 30
M=M+1                                                        // [15579] push constant 30
A=M-1                                                        // [15580] push constant 30
M=D                                                          // [15581] push constant 30
@51                                                          // [15582] push constant 51
D=A                                                          // [15583] push constant 51
@SP                                                          // [15584] push constant 51
M=M+1                                                        // [15585] push constant 51
A=M-1                                                        // [15586] push constant 51
M=D                                                          // [15587] push constant 51
@51                                                          // [15588] push constant 51
D=A                                                          // [15589] push constant 51
@SP                                                          // [15590] push constant 51
M=M+1                                                        // [15591] push constant 51
A=M-1                                                        // [15592] push constant 51
M=D                                                          // [15593] push constant 51
@51                                                          // [15594] push constant 51
D=A                                                          // [15595] push constant 51
@SP                                                          // [15596] push constant 51
M=M+1                                                        // [15597] push constant 51
A=M-1                                                        // [15598] push constant 51
M=D                                                          // [15599] push constant 51
@62                                                          // [15600] push constant 62
D=A                                                          // [15601] push constant 62
@SP                                                          // [15602] push constant 62
M=M+1                                                        // [15603] push constant 62
A=M-1                                                        // [15604] push constant 62
M=D                                                          // [15605] push constant 62
@48                                                          // [15606] push constant 48
D=A                                                          // [15607] push constant 48
@SP                                                          // [15608] push constant 48
M=M+1                                                        // [15609] push constant 48
A=M-1                                                        // [15610] push constant 48
M=D                                                          // [15611] push constant 48
@51                                                          // [15612] push constant 51
D=A                                                          // [15613] push constant 51
@SP                                                          // [15614] push constant 51
M=M+1                                                        // [15615] push constant 51
A=M-1                                                        // [15616] push constant 51
M=D                                                          // [15617] push constant 51
@30                                                          // [15618] push constant 30
D=A                                                          // [15619] push constant 30
@SP                                                          // [15620] push constant 30
M=M+1                                                        // [15621] push constant 30
A=M-1                                                        // [15622] push constant 30
M=D                                                          // [15623] push constant 30
@SP                                                          // [15624] push constant 0
M=M+1                                                        // [15625] push constant 0
A=M-1                                                        // [15626] push constant 0
M=0                                                          // [15627] push constant 0
@12                                                          // [15628] call Output.create 12
D=A                                                          // [15629] call Output.create 12
@R13                                                         // [15630] call Output.create 12
M=D                                                          // [15631] call Output.create 12
@Output.create                                               // [15632] call Output.create 12
D=A                                                          // [15633] call Output.create 12
@R14                                                         // [15634] call Output.create 12
M=D                                                          // [15635] call Output.create 12
@return-167                                                  // [15636] call Output.create 12
D=A                                                          // [15637] call Output.create 12
@CALL                                                        // [15638] call Output.create 12
0;JEQ                                                        // [15639] call Output.create 12
(return-167)                                                 // [     ] call Output.create 12
@SP                                                          // [15640] pop temp 0
AM=M-1                                                       // [15641] pop temp 0
D=M                                                          // [15642] pop temp 0
@5                                                           // [15643] pop temp 0
M=D                                                          // [15644] pop temp 0
@104                                                         // [15645] push constant 104
D=A                                                          // [15646] push constant 104
@SP                                                          // [15647] push constant 104
M=M+1                                                        // [15648] push constant 104
A=M-1                                                        // [15649] push constant 104
M=D                                                          // [15650] push constant 104
@3                                                           // [15651] push constant 3
D=A                                                          // [15652] push constant 3
@SP                                                          // [15653] push constant 3
M=M+1                                                        // [15654] push constant 3
A=M-1                                                        // [15655] push constant 3
M=D                                                          // [15656] push constant 3
@3                                                           // [15657] push constant 3
D=A                                                          // [15658] push constant 3
@SP                                                          // [15659] push constant 3
M=M+1                                                        // [15660] push constant 3
A=M-1                                                        // [15661] push constant 3
M=D                                                          // [15662] push constant 3
@3                                                           // [15663] push constant 3
D=A                                                          // [15664] push constant 3
@SP                                                          // [15665] push constant 3
M=M+1                                                        // [15666] push constant 3
A=M-1                                                        // [15667] push constant 3
M=D                                                          // [15668] push constant 3
@27                                                          // [15669] push constant 27
D=A                                                          // [15670] push constant 27
@SP                                                          // [15671] push constant 27
M=M+1                                                        // [15672] push constant 27
A=M-1                                                        // [15673] push constant 27
M=D                                                          // [15674] push constant 27
@55                                                          // [15675] push constant 55
D=A                                                          // [15676] push constant 55
@SP                                                          // [15677] push constant 55
M=M+1                                                        // [15678] push constant 55
A=M-1                                                        // [15679] push constant 55
M=D                                                          // [15680] push constant 55
@51                                                          // [15681] push constant 51
D=A                                                          // [15682] push constant 51
@SP                                                          // [15683] push constant 51
M=M+1                                                        // [15684] push constant 51
A=M-1                                                        // [15685] push constant 51
M=D                                                          // [15686] push constant 51
@51                                                          // [15687] push constant 51
D=A                                                          // [15688] push constant 51
@SP                                                          // [15689] push constant 51
M=M+1                                                        // [15690] push constant 51
A=M-1                                                        // [15691] push constant 51
M=D                                                          // [15692] push constant 51
@51                                                          // [15693] push constant 51
D=A                                                          // [15694] push constant 51
@SP                                                          // [15695] push constant 51
M=M+1                                                        // [15696] push constant 51
A=M-1                                                        // [15697] push constant 51
M=D                                                          // [15698] push constant 51
@51                                                          // [15699] push constant 51
D=A                                                          // [15700] push constant 51
@SP                                                          // [15701] push constant 51
M=M+1                                                        // [15702] push constant 51
A=M-1                                                        // [15703] push constant 51
M=D                                                          // [15704] push constant 51
@SP                                                          // [15705] push constant 0
M=M+1                                                        // [15706] push constant 0
A=M-1                                                        // [15707] push constant 0
M=0                                                          // [15708] push constant 0
@SP                                                          // [15709] push constant 0
M=M+1                                                        // [15710] push constant 0
A=M-1                                                        // [15711] push constant 0
M=0                                                          // [15712] push constant 0
@12                                                          // [15713] call Output.create 12
D=A                                                          // [15714] call Output.create 12
@R13                                                         // [15715] call Output.create 12
M=D                                                          // [15716] call Output.create 12
@Output.create                                               // [15717] call Output.create 12
D=A                                                          // [15718] call Output.create 12
@R14                                                         // [15719] call Output.create 12
M=D                                                          // [15720] call Output.create 12
@return-168                                                  // [15721] call Output.create 12
D=A                                                          // [15722] call Output.create 12
@CALL                                                        // [15723] call Output.create 12
0;JEQ                                                        // [15724] call Output.create 12
(return-168)                                                 // [     ] call Output.create 12
@SP                                                          // [15725] pop temp 0
AM=M-1                                                       // [15726] pop temp 0
D=M                                                          // [15727] pop temp 0
@5                                                           // [15728] pop temp 0
M=D                                                          // [15729] pop temp 0
@105                                                         // [15730] push constant 105
D=A                                                          // [15731] push constant 105
@SP                                                          // [15732] push constant 105
M=M+1                                                        // [15733] push constant 105
A=M-1                                                        // [15734] push constant 105
M=D                                                          // [15735] push constant 105
@12                                                          // [15736] push constant 12
D=A                                                          // [15737] push constant 12
@SP                                                          // [15738] push constant 12
M=M+1                                                        // [15739] push constant 12
A=M-1                                                        // [15740] push constant 12
M=D                                                          // [15741] push constant 12
@12                                                          // [15742] push constant 12
D=A                                                          // [15743] push constant 12
@SP                                                          // [15744] push constant 12
M=M+1                                                        // [15745] push constant 12
A=M-1                                                        // [15746] push constant 12
M=D                                                          // [15747] push constant 12
@SP                                                          // [15748] push constant 0
M=M+1                                                        // [15749] push constant 0
A=M-1                                                        // [15750] push constant 0
M=0                                                          // [15751] push constant 0
@14                                                          // [15752] push constant 14
D=A                                                          // [15753] push constant 14
@SP                                                          // [15754] push constant 14
M=M+1                                                        // [15755] push constant 14
A=M-1                                                        // [15756] push constant 14
M=D                                                          // [15757] push constant 14
@12                                                          // [15758] push constant 12
D=A                                                          // [15759] push constant 12
@SP                                                          // [15760] push constant 12
M=M+1                                                        // [15761] push constant 12
A=M-1                                                        // [15762] push constant 12
M=D                                                          // [15763] push constant 12
@12                                                          // [15764] push constant 12
D=A                                                          // [15765] push constant 12
@SP                                                          // [15766] push constant 12
M=M+1                                                        // [15767] push constant 12
A=M-1                                                        // [15768] push constant 12
M=D                                                          // [15769] push constant 12
@12                                                          // [15770] push constant 12
D=A                                                          // [15771] push constant 12
@SP                                                          // [15772] push constant 12
M=M+1                                                        // [15773] push constant 12
A=M-1                                                        // [15774] push constant 12
M=D                                                          // [15775] push constant 12
@12                                                          // [15776] push constant 12
D=A                                                          // [15777] push constant 12
@SP                                                          // [15778] push constant 12
M=M+1                                                        // [15779] push constant 12
A=M-1                                                        // [15780] push constant 12
M=D                                                          // [15781] push constant 12
@30                                                          // [15782] push constant 30
D=A                                                          // [15783] push constant 30
@SP                                                          // [15784] push constant 30
M=M+1                                                        // [15785] push constant 30
A=M-1                                                        // [15786] push constant 30
M=D                                                          // [15787] push constant 30
@SP                                                          // [15788] push constant 0
M=M+1                                                        // [15789] push constant 0
A=M-1                                                        // [15790] push constant 0
M=0                                                          // [15791] push constant 0
@SP                                                          // [15792] push constant 0
M=M+1                                                        // [15793] push constant 0
A=M-1                                                        // [15794] push constant 0
M=0                                                          // [15795] push constant 0
@12                                                          // [15796] call Output.create 12
D=A                                                          // [15797] call Output.create 12
@R13                                                         // [15798] call Output.create 12
M=D                                                          // [15799] call Output.create 12
@Output.create                                               // [15800] call Output.create 12
D=A                                                          // [15801] call Output.create 12
@R14                                                         // [15802] call Output.create 12
M=D                                                          // [15803] call Output.create 12
@return-169                                                  // [15804] call Output.create 12
D=A                                                          // [15805] call Output.create 12
@CALL                                                        // [15806] call Output.create 12
0;JEQ                                                        // [15807] call Output.create 12
(return-169)                                                 // [     ] call Output.create 12
@SP                                                          // [15808] pop temp 0
AM=M-1                                                       // [15809] pop temp 0
D=M                                                          // [15810] pop temp 0
@5                                                           // [15811] pop temp 0
M=D                                                          // [15812] pop temp 0
@106                                                         // [15813] push constant 106
D=A                                                          // [15814] push constant 106
@SP                                                          // [15815] push constant 106
M=M+1                                                        // [15816] push constant 106
A=M-1                                                        // [15817] push constant 106
M=D                                                          // [15818] push constant 106
@48                                                          // [15819] push constant 48
D=A                                                          // [15820] push constant 48
@SP                                                          // [15821] push constant 48
M=M+1                                                        // [15822] push constant 48
A=M-1                                                        // [15823] push constant 48
M=D                                                          // [15824] push constant 48
@48                                                          // [15825] push constant 48
D=A                                                          // [15826] push constant 48
@SP                                                          // [15827] push constant 48
M=M+1                                                        // [15828] push constant 48
A=M-1                                                        // [15829] push constant 48
M=D                                                          // [15830] push constant 48
@SP                                                          // [15831] push constant 0
M=M+1                                                        // [15832] push constant 0
A=M-1                                                        // [15833] push constant 0
M=0                                                          // [15834] push constant 0
@56                                                          // [15835] push constant 56
D=A                                                          // [15836] push constant 56
@SP                                                          // [15837] push constant 56
M=M+1                                                        // [15838] push constant 56
A=M-1                                                        // [15839] push constant 56
M=D                                                          // [15840] push constant 56
@48                                                          // [15841] push constant 48
D=A                                                          // [15842] push constant 48
@SP                                                          // [15843] push constant 48
M=M+1                                                        // [15844] push constant 48
A=M-1                                                        // [15845] push constant 48
M=D                                                          // [15846] push constant 48
@48                                                          // [15847] push constant 48
D=A                                                          // [15848] push constant 48
@SP                                                          // [15849] push constant 48
M=M+1                                                        // [15850] push constant 48
A=M-1                                                        // [15851] push constant 48
M=D                                                          // [15852] push constant 48
@48                                                          // [15853] push constant 48
D=A                                                          // [15854] push constant 48
@SP                                                          // [15855] push constant 48
M=M+1                                                        // [15856] push constant 48
A=M-1                                                        // [15857] push constant 48
M=D                                                          // [15858] push constant 48
@48                                                          // [15859] push constant 48
D=A                                                          // [15860] push constant 48
@SP                                                          // [15861] push constant 48
M=M+1                                                        // [15862] push constant 48
A=M-1                                                        // [15863] push constant 48
M=D                                                          // [15864] push constant 48
@51                                                          // [15865] push constant 51
D=A                                                          // [15866] push constant 51
@SP                                                          // [15867] push constant 51
M=M+1                                                        // [15868] push constant 51
A=M-1                                                        // [15869] push constant 51
M=D                                                          // [15870] push constant 51
@30                                                          // [15871] push constant 30
D=A                                                          // [15872] push constant 30
@SP                                                          // [15873] push constant 30
M=M+1                                                        // [15874] push constant 30
A=M-1                                                        // [15875] push constant 30
M=D                                                          // [15876] push constant 30
@SP                                                          // [15877] push constant 0
M=M+1                                                        // [15878] push constant 0
A=M-1                                                        // [15879] push constant 0
M=0                                                          // [15880] push constant 0
@12                                                          // [15881] call Output.create 12
D=A                                                          // [15882] call Output.create 12
@R13                                                         // [15883] call Output.create 12
M=D                                                          // [15884] call Output.create 12
@Output.create                                               // [15885] call Output.create 12
D=A                                                          // [15886] call Output.create 12
@R14                                                         // [15887] call Output.create 12
M=D                                                          // [15888] call Output.create 12
@return-170                                                  // [15889] call Output.create 12
D=A                                                          // [15890] call Output.create 12
@CALL                                                        // [15891] call Output.create 12
0;JEQ                                                        // [15892] call Output.create 12
(return-170)                                                 // [     ] call Output.create 12
@SP                                                          // [15893] pop temp 0
AM=M-1                                                       // [15894] pop temp 0
D=M                                                          // [15895] pop temp 0
@5                                                           // [15896] pop temp 0
M=D                                                          // [15897] pop temp 0
@107                                                         // [15898] push constant 107
D=A                                                          // [15899] push constant 107
@SP                                                          // [15900] push constant 107
M=M+1                                                        // [15901] push constant 107
A=M-1                                                        // [15902] push constant 107
M=D                                                          // [15903] push constant 107
@3                                                           // [15904] push constant 3
D=A                                                          // [15905] push constant 3
@SP                                                          // [15906] push constant 3
M=M+1                                                        // [15907] push constant 3
A=M-1                                                        // [15908] push constant 3
M=D                                                          // [15909] push constant 3
@3                                                           // [15910] push constant 3
D=A                                                          // [15911] push constant 3
@SP                                                          // [15912] push constant 3
M=M+1                                                        // [15913] push constant 3
A=M-1                                                        // [15914] push constant 3
M=D                                                          // [15915] push constant 3
@3                                                           // [15916] push constant 3
D=A                                                          // [15917] push constant 3
@SP                                                          // [15918] push constant 3
M=M+1                                                        // [15919] push constant 3
A=M-1                                                        // [15920] push constant 3
M=D                                                          // [15921] push constant 3
@51                                                          // [15922] push constant 51
D=A                                                          // [15923] push constant 51
@SP                                                          // [15924] push constant 51
M=M+1                                                        // [15925] push constant 51
A=M-1                                                        // [15926] push constant 51
M=D                                                          // [15927] push constant 51
@27                                                          // [15928] push constant 27
D=A                                                          // [15929] push constant 27
@SP                                                          // [15930] push constant 27
M=M+1                                                        // [15931] push constant 27
A=M-1                                                        // [15932] push constant 27
M=D                                                          // [15933] push constant 27
@15                                                          // [15934] push constant 15
D=A                                                          // [15935] push constant 15
@SP                                                          // [15936] push constant 15
M=M+1                                                        // [15937] push constant 15
A=M-1                                                        // [15938] push constant 15
M=D                                                          // [15939] push constant 15
@15                                                          // [15940] push constant 15
D=A                                                          // [15941] push constant 15
@SP                                                          // [15942] push constant 15
M=M+1                                                        // [15943] push constant 15
A=M-1                                                        // [15944] push constant 15
M=D                                                          // [15945] push constant 15
@27                                                          // [15946] push constant 27
D=A                                                          // [15947] push constant 27
@SP                                                          // [15948] push constant 27
M=M+1                                                        // [15949] push constant 27
A=M-1                                                        // [15950] push constant 27
M=D                                                          // [15951] push constant 27
@51                                                          // [15952] push constant 51
D=A                                                          // [15953] push constant 51
@SP                                                          // [15954] push constant 51
M=M+1                                                        // [15955] push constant 51
A=M-1                                                        // [15956] push constant 51
M=D                                                          // [15957] push constant 51
@SP                                                          // [15958] push constant 0
M=M+1                                                        // [15959] push constant 0
A=M-1                                                        // [15960] push constant 0
M=0                                                          // [15961] push constant 0
@SP                                                          // [15962] push constant 0
M=M+1                                                        // [15963] push constant 0
A=M-1                                                        // [15964] push constant 0
M=0                                                          // [15965] push constant 0
@12                                                          // [15966] call Output.create 12
D=A                                                          // [15967] call Output.create 12
@R13                                                         // [15968] call Output.create 12
M=D                                                          // [15969] call Output.create 12
@Output.create                                               // [15970] call Output.create 12
D=A                                                          // [15971] call Output.create 12
@R14                                                         // [15972] call Output.create 12
M=D                                                          // [15973] call Output.create 12
@return-171                                                  // [15974] call Output.create 12
D=A                                                          // [15975] call Output.create 12
@CALL                                                        // [15976] call Output.create 12
0;JEQ                                                        // [15977] call Output.create 12
(return-171)                                                 // [     ] call Output.create 12
@SP                                                          // [15978] pop temp 0
AM=M-1                                                       // [15979] pop temp 0
D=M                                                          // [15980] pop temp 0
@5                                                           // [15981] pop temp 0
M=D                                                          // [15982] pop temp 0
@108                                                         // [15983] push constant 108
D=A                                                          // [15984] push constant 108
@SP                                                          // [15985] push constant 108
M=M+1                                                        // [15986] push constant 108
A=M-1                                                        // [15987] push constant 108
M=D                                                          // [15988] push constant 108
@14                                                          // [15989] push constant 14
D=A                                                          // [15990] push constant 14
@SP                                                          // [15991] push constant 14
M=M+1                                                        // [15992] push constant 14
A=M-1                                                        // [15993] push constant 14
M=D                                                          // [15994] push constant 14
@12                                                          // [15995] push constant 12
D=A                                                          // [15996] push constant 12
@SP                                                          // [15997] push constant 12
M=M+1                                                        // [15998] push constant 12
A=M-1                                                        // [15999] push constant 12
M=D                                                          // [16000] push constant 12
@12                                                          // [16001] push constant 12
D=A                                                          // [16002] push constant 12
@SP                                                          // [16003] push constant 12
M=M+1                                                        // [16004] push constant 12
A=M-1                                                        // [16005] push constant 12
M=D                                                          // [16006] push constant 12
@12                                                          // [16007] push constant 12
D=A                                                          // [16008] push constant 12
@SP                                                          // [16009] push constant 12
M=M+1                                                        // [16010] push constant 12
A=M-1                                                        // [16011] push constant 12
M=D                                                          // [16012] push constant 12
@12                                                          // [16013] push constant 12
D=A                                                          // [16014] push constant 12
@SP                                                          // [16015] push constant 12
M=M+1                                                        // [16016] push constant 12
A=M-1                                                        // [16017] push constant 12
M=D                                                          // [16018] push constant 12
@12                                                          // [16019] push constant 12
D=A                                                          // [16020] push constant 12
@SP                                                          // [16021] push constant 12
M=M+1                                                        // [16022] push constant 12
A=M-1                                                        // [16023] push constant 12
M=D                                                          // [16024] push constant 12
@12                                                          // [16025] push constant 12
D=A                                                          // [16026] push constant 12
@SP                                                          // [16027] push constant 12
M=M+1                                                        // [16028] push constant 12
A=M-1                                                        // [16029] push constant 12
M=D                                                          // [16030] push constant 12
@12                                                          // [16031] push constant 12
D=A                                                          // [16032] push constant 12
@SP                                                          // [16033] push constant 12
M=M+1                                                        // [16034] push constant 12
A=M-1                                                        // [16035] push constant 12
M=D                                                          // [16036] push constant 12
@30                                                          // [16037] push constant 30
D=A                                                          // [16038] push constant 30
@SP                                                          // [16039] push constant 30
M=M+1                                                        // [16040] push constant 30
A=M-1                                                        // [16041] push constant 30
M=D                                                          // [16042] push constant 30
@SP                                                          // [16043] push constant 0
M=M+1                                                        // [16044] push constant 0
A=M-1                                                        // [16045] push constant 0
M=0                                                          // [16046] push constant 0
@SP                                                          // [16047] push constant 0
M=M+1                                                        // [16048] push constant 0
A=M-1                                                        // [16049] push constant 0
M=0                                                          // [16050] push constant 0
@12                                                          // [16051] call Output.create 12
D=A                                                          // [16052] call Output.create 12
@R13                                                         // [16053] call Output.create 12
M=D                                                          // [16054] call Output.create 12
@Output.create                                               // [16055] call Output.create 12
D=A                                                          // [16056] call Output.create 12
@R14                                                         // [16057] call Output.create 12
M=D                                                          // [16058] call Output.create 12
@return-172                                                  // [16059] call Output.create 12
D=A                                                          // [16060] call Output.create 12
@CALL                                                        // [16061] call Output.create 12
0;JEQ                                                        // [16062] call Output.create 12
(return-172)                                                 // [     ] call Output.create 12
@SP                                                          // [16063] pop temp 0
AM=M-1                                                       // [16064] pop temp 0
D=M                                                          // [16065] pop temp 0
@5                                                           // [16066] pop temp 0
M=D                                                          // [16067] pop temp 0
@109                                                         // [16068] push constant 109
D=A                                                          // [16069] push constant 109
@SP                                                          // [16070] push constant 109
M=M+1                                                        // [16071] push constant 109
A=M-1                                                        // [16072] push constant 109
M=D                                                          // [16073] push constant 109
@SP                                                          // [16074] push constant 0
M=M+1                                                        // [16075] push constant 0
A=M-1                                                        // [16076] push constant 0
M=0                                                          // [16077] push constant 0
@SP                                                          // [16078] push constant 0
M=M+1                                                        // [16079] push constant 0
A=M-1                                                        // [16080] push constant 0
M=0                                                          // [16081] push constant 0
@SP                                                          // [16082] push constant 0
M=M+1                                                        // [16083] push constant 0
A=M-1                                                        // [16084] push constant 0
M=0                                                          // [16085] push constant 0
@29                                                          // [16086] push constant 29
D=A                                                          // [16087] push constant 29
@SP                                                          // [16088] push constant 29
M=M+1                                                        // [16089] push constant 29
A=M-1                                                        // [16090] push constant 29
M=D                                                          // [16091] push constant 29
@63                                                          // [16092] push constant 63
D=A                                                          // [16093] push constant 63
@SP                                                          // [16094] push constant 63
M=M+1                                                        // [16095] push constant 63
A=M-1                                                        // [16096] push constant 63
M=D                                                          // [16097] push constant 63
@43                                                          // [16098] push constant 43
D=A                                                          // [16099] push constant 43
@SP                                                          // [16100] push constant 43
M=M+1                                                        // [16101] push constant 43
A=M-1                                                        // [16102] push constant 43
M=D                                                          // [16103] push constant 43
@43                                                          // [16104] push constant 43
D=A                                                          // [16105] push constant 43
@SP                                                          // [16106] push constant 43
M=M+1                                                        // [16107] push constant 43
A=M-1                                                        // [16108] push constant 43
M=D                                                          // [16109] push constant 43
@43                                                          // [16110] push constant 43
D=A                                                          // [16111] push constant 43
@SP                                                          // [16112] push constant 43
M=M+1                                                        // [16113] push constant 43
A=M-1                                                        // [16114] push constant 43
M=D                                                          // [16115] push constant 43
@43                                                          // [16116] push constant 43
D=A                                                          // [16117] push constant 43
@SP                                                          // [16118] push constant 43
M=M+1                                                        // [16119] push constant 43
A=M-1                                                        // [16120] push constant 43
M=D                                                          // [16121] push constant 43
@SP                                                          // [16122] push constant 0
M=M+1                                                        // [16123] push constant 0
A=M-1                                                        // [16124] push constant 0
M=0                                                          // [16125] push constant 0
@SP                                                          // [16126] push constant 0
M=M+1                                                        // [16127] push constant 0
A=M-1                                                        // [16128] push constant 0
M=0                                                          // [16129] push constant 0
@12                                                          // [16130] call Output.create 12
D=A                                                          // [16131] call Output.create 12
@R13                                                         // [16132] call Output.create 12
M=D                                                          // [16133] call Output.create 12
@Output.create                                               // [16134] call Output.create 12
D=A                                                          // [16135] call Output.create 12
@R14                                                         // [16136] call Output.create 12
M=D                                                          // [16137] call Output.create 12
@return-173                                                  // [16138] call Output.create 12
D=A                                                          // [16139] call Output.create 12
@CALL                                                        // [16140] call Output.create 12
0;JEQ                                                        // [16141] call Output.create 12
(return-173)                                                 // [     ] call Output.create 12
@SP                                                          // [16142] pop temp 0
AM=M-1                                                       // [16143] pop temp 0
D=M                                                          // [16144] pop temp 0
@5                                                           // [16145] pop temp 0
M=D                                                          // [16146] pop temp 0
@110                                                         // [16147] push constant 110
D=A                                                          // [16148] push constant 110
@SP                                                          // [16149] push constant 110
M=M+1                                                        // [16150] push constant 110
A=M-1                                                        // [16151] push constant 110
M=D                                                          // [16152] push constant 110
@SP                                                          // [16153] push constant 0
M=M+1                                                        // [16154] push constant 0
A=M-1                                                        // [16155] push constant 0
M=0                                                          // [16156] push constant 0
@SP                                                          // [16157] push constant 0
M=M+1                                                        // [16158] push constant 0
A=M-1                                                        // [16159] push constant 0
M=0                                                          // [16160] push constant 0
@SP                                                          // [16161] push constant 0
M=M+1                                                        // [16162] push constant 0
A=M-1                                                        // [16163] push constant 0
M=0                                                          // [16164] push constant 0
@29                                                          // [16165] push constant 29
D=A                                                          // [16166] push constant 29
@SP                                                          // [16167] push constant 29
M=M+1                                                        // [16168] push constant 29
A=M-1                                                        // [16169] push constant 29
M=D                                                          // [16170] push constant 29
@51                                                          // [16171] push constant 51
D=A                                                          // [16172] push constant 51
@SP                                                          // [16173] push constant 51
M=M+1                                                        // [16174] push constant 51
A=M-1                                                        // [16175] push constant 51
M=D                                                          // [16176] push constant 51
@51                                                          // [16177] push constant 51
D=A                                                          // [16178] push constant 51
@SP                                                          // [16179] push constant 51
M=M+1                                                        // [16180] push constant 51
A=M-1                                                        // [16181] push constant 51
M=D                                                          // [16182] push constant 51
@51                                                          // [16183] push constant 51
D=A                                                          // [16184] push constant 51
@SP                                                          // [16185] push constant 51
M=M+1                                                        // [16186] push constant 51
A=M-1                                                        // [16187] push constant 51
M=D                                                          // [16188] push constant 51
@51                                                          // [16189] push constant 51
D=A                                                          // [16190] push constant 51
@SP                                                          // [16191] push constant 51
M=M+1                                                        // [16192] push constant 51
A=M-1                                                        // [16193] push constant 51
M=D                                                          // [16194] push constant 51
@51                                                          // [16195] push constant 51
D=A                                                          // [16196] push constant 51
@SP                                                          // [16197] push constant 51
M=M+1                                                        // [16198] push constant 51
A=M-1                                                        // [16199] push constant 51
M=D                                                          // [16200] push constant 51
@SP                                                          // [16201] push constant 0
M=M+1                                                        // [16202] push constant 0
A=M-1                                                        // [16203] push constant 0
M=0                                                          // [16204] push constant 0
@SP                                                          // [16205] push constant 0
M=M+1                                                        // [16206] push constant 0
A=M-1                                                        // [16207] push constant 0
M=0                                                          // [16208] push constant 0
@12                                                          // [16209] call Output.create 12
D=A                                                          // [16210] call Output.create 12
@R13                                                         // [16211] call Output.create 12
M=D                                                          // [16212] call Output.create 12
@Output.create                                               // [16213] call Output.create 12
D=A                                                          // [16214] call Output.create 12
@R14                                                         // [16215] call Output.create 12
M=D                                                          // [16216] call Output.create 12
@return-174                                                  // [16217] call Output.create 12
D=A                                                          // [16218] call Output.create 12
@CALL                                                        // [16219] call Output.create 12
0;JEQ                                                        // [16220] call Output.create 12
(return-174)                                                 // [     ] call Output.create 12
@SP                                                          // [16221] pop temp 0
AM=M-1                                                       // [16222] pop temp 0
D=M                                                          // [16223] pop temp 0
@5                                                           // [16224] pop temp 0
M=D                                                          // [16225] pop temp 0
@111                                                         // [16226] push constant 111
D=A                                                          // [16227] push constant 111
@SP                                                          // [16228] push constant 111
M=M+1                                                        // [16229] push constant 111
A=M-1                                                        // [16230] push constant 111
M=D                                                          // [16231] push constant 111
@SP                                                          // [16232] push constant 0
M=M+1                                                        // [16233] push constant 0
A=M-1                                                        // [16234] push constant 0
M=0                                                          // [16235] push constant 0
@SP                                                          // [16236] push constant 0
M=M+1                                                        // [16237] push constant 0
A=M-1                                                        // [16238] push constant 0
M=0                                                          // [16239] push constant 0
@SP                                                          // [16240] push constant 0
M=M+1                                                        // [16241] push constant 0
A=M-1                                                        // [16242] push constant 0
M=0                                                          // [16243] push constant 0
@30                                                          // [16244] push constant 30
D=A                                                          // [16245] push constant 30
@SP                                                          // [16246] push constant 30
M=M+1                                                        // [16247] push constant 30
A=M-1                                                        // [16248] push constant 30
M=D                                                          // [16249] push constant 30
@51                                                          // [16250] push constant 51
D=A                                                          // [16251] push constant 51
@SP                                                          // [16252] push constant 51
M=M+1                                                        // [16253] push constant 51
A=M-1                                                        // [16254] push constant 51
M=D                                                          // [16255] push constant 51
@51                                                          // [16256] push constant 51
D=A                                                          // [16257] push constant 51
@SP                                                          // [16258] push constant 51
M=M+1                                                        // [16259] push constant 51
A=M-1                                                        // [16260] push constant 51
M=D                                                          // [16261] push constant 51
@51                                                          // [16262] push constant 51
D=A                                                          // [16263] push constant 51
@SP                                                          // [16264] push constant 51
M=M+1                                                        // [16265] push constant 51
A=M-1                                                        // [16266] push constant 51
M=D                                                          // [16267] push constant 51
@51                                                          // [16268] push constant 51
D=A                                                          // [16269] push constant 51
@SP                                                          // [16270] push constant 51
M=M+1                                                        // [16271] push constant 51
A=M-1                                                        // [16272] push constant 51
M=D                                                          // [16273] push constant 51
@30                                                          // [16274] push constant 30
D=A                                                          // [16275] push constant 30
@SP                                                          // [16276] push constant 30
M=M+1                                                        // [16277] push constant 30
A=M-1                                                        // [16278] push constant 30
M=D                                                          // [16279] push constant 30
@SP                                                          // [16280] push constant 0
M=M+1                                                        // [16281] push constant 0
A=M-1                                                        // [16282] push constant 0
M=0                                                          // [16283] push constant 0
@SP                                                          // [16284] push constant 0
M=M+1                                                        // [16285] push constant 0
A=M-1                                                        // [16286] push constant 0
M=0                                                          // [16287] push constant 0
@12                                                          // [16288] call Output.create 12
D=A                                                          // [16289] call Output.create 12
@R13                                                         // [16290] call Output.create 12
M=D                                                          // [16291] call Output.create 12
@Output.create                                               // [16292] call Output.create 12
D=A                                                          // [16293] call Output.create 12
@R14                                                         // [16294] call Output.create 12
M=D                                                          // [16295] call Output.create 12
@return-175                                                  // [16296] call Output.create 12
D=A                                                          // [16297] call Output.create 12
@CALL                                                        // [16298] call Output.create 12
0;JEQ                                                        // [16299] call Output.create 12
(return-175)                                                 // [     ] call Output.create 12
@SP                                                          // [16300] pop temp 0
AM=M-1                                                       // [16301] pop temp 0
D=M                                                          // [16302] pop temp 0
@5                                                           // [16303] pop temp 0
M=D                                                          // [16304] pop temp 0
@112                                                         // [16305] push constant 112
D=A                                                          // [16306] push constant 112
@SP                                                          // [16307] push constant 112
M=M+1                                                        // [16308] push constant 112
A=M-1                                                        // [16309] push constant 112
M=D                                                          // [16310] push constant 112
@SP                                                          // [16311] push constant 0
M=M+1                                                        // [16312] push constant 0
A=M-1                                                        // [16313] push constant 0
M=0                                                          // [16314] push constant 0
@SP                                                          // [16315] push constant 0
M=M+1                                                        // [16316] push constant 0
A=M-1                                                        // [16317] push constant 0
M=0                                                          // [16318] push constant 0
@SP                                                          // [16319] push constant 0
M=M+1                                                        // [16320] push constant 0
A=M-1                                                        // [16321] push constant 0
M=0                                                          // [16322] push constant 0
@30                                                          // [16323] push constant 30
D=A                                                          // [16324] push constant 30
@SP                                                          // [16325] push constant 30
M=M+1                                                        // [16326] push constant 30
A=M-1                                                        // [16327] push constant 30
M=D                                                          // [16328] push constant 30
@51                                                          // [16329] push constant 51
D=A                                                          // [16330] push constant 51
@SP                                                          // [16331] push constant 51
M=M+1                                                        // [16332] push constant 51
A=M-1                                                        // [16333] push constant 51
M=D                                                          // [16334] push constant 51
@51                                                          // [16335] push constant 51
D=A                                                          // [16336] push constant 51
@SP                                                          // [16337] push constant 51
M=M+1                                                        // [16338] push constant 51
A=M-1                                                        // [16339] push constant 51
M=D                                                          // [16340] push constant 51
@51                                                          // [16341] push constant 51
D=A                                                          // [16342] push constant 51
@SP                                                          // [16343] push constant 51
M=M+1                                                        // [16344] push constant 51
A=M-1                                                        // [16345] push constant 51
M=D                                                          // [16346] push constant 51
@31                                                          // [16347] push constant 31
D=A                                                          // [16348] push constant 31
@SP                                                          // [16349] push constant 31
M=M+1                                                        // [16350] push constant 31
A=M-1                                                        // [16351] push constant 31
M=D                                                          // [16352] push constant 31
@3                                                           // [16353] push constant 3
D=A                                                          // [16354] push constant 3
@SP                                                          // [16355] push constant 3
M=M+1                                                        // [16356] push constant 3
A=M-1                                                        // [16357] push constant 3
M=D                                                          // [16358] push constant 3
@3                                                           // [16359] push constant 3
D=A                                                          // [16360] push constant 3
@SP                                                          // [16361] push constant 3
M=M+1                                                        // [16362] push constant 3
A=M-1                                                        // [16363] push constant 3
M=D                                                          // [16364] push constant 3
@SP                                                          // [16365] push constant 0
M=M+1                                                        // [16366] push constant 0
A=M-1                                                        // [16367] push constant 0
M=0                                                          // [16368] push constant 0
@12                                                          // [16369] call Output.create 12
D=A                                                          // [16370] call Output.create 12
@R13                                                         // [16371] call Output.create 12
M=D                                                          // [16372] call Output.create 12
@Output.create                                               // [16373] call Output.create 12
D=A                                                          // [16374] call Output.create 12
@R14                                                         // [16375] call Output.create 12
M=D                                                          // [16376] call Output.create 12
@return-176                                                  // [16377] call Output.create 12
D=A                                                          // [16378] call Output.create 12
@CALL                                                        // [16379] call Output.create 12
0;JEQ                                                        // [16380] call Output.create 12
(return-176)                                                 // [     ] call Output.create 12
@SP                                                          // [16381] pop temp 0
AM=M-1                                                       // [16382] pop temp 0
D=M                                                          // [16383] pop temp 0
@5                                                           // [16384] pop temp 0
M=D                                                          // [16385] pop temp 0
@113                                                         // [16386] push constant 113
D=A                                                          // [16387] push constant 113
@SP                                                          // [16388] push constant 113
M=M+1                                                        // [16389] push constant 113
A=M-1                                                        // [16390] push constant 113
M=D                                                          // [16391] push constant 113
@SP                                                          // [16392] push constant 0
M=M+1                                                        // [16393] push constant 0
A=M-1                                                        // [16394] push constant 0
M=0                                                          // [16395] push constant 0
@SP                                                          // [16396] push constant 0
M=M+1                                                        // [16397] push constant 0
A=M-1                                                        // [16398] push constant 0
M=0                                                          // [16399] push constant 0
@SP                                                          // [16400] push constant 0
M=M+1                                                        // [16401] push constant 0
A=M-1                                                        // [16402] push constant 0
M=0                                                          // [16403] push constant 0
@30                                                          // [16404] push constant 30
D=A                                                          // [16405] push constant 30
@SP                                                          // [16406] push constant 30
M=M+1                                                        // [16407] push constant 30
A=M-1                                                        // [16408] push constant 30
M=D                                                          // [16409] push constant 30
@51                                                          // [16410] push constant 51
D=A                                                          // [16411] push constant 51
@SP                                                          // [16412] push constant 51
M=M+1                                                        // [16413] push constant 51
A=M-1                                                        // [16414] push constant 51
M=D                                                          // [16415] push constant 51
@51                                                          // [16416] push constant 51
D=A                                                          // [16417] push constant 51
@SP                                                          // [16418] push constant 51
M=M+1                                                        // [16419] push constant 51
A=M-1                                                        // [16420] push constant 51
M=D                                                          // [16421] push constant 51
@51                                                          // [16422] push constant 51
D=A                                                          // [16423] push constant 51
@SP                                                          // [16424] push constant 51
M=M+1                                                        // [16425] push constant 51
A=M-1                                                        // [16426] push constant 51
M=D                                                          // [16427] push constant 51
@62                                                          // [16428] push constant 62
D=A                                                          // [16429] push constant 62
@SP                                                          // [16430] push constant 62
M=M+1                                                        // [16431] push constant 62
A=M-1                                                        // [16432] push constant 62
M=D                                                          // [16433] push constant 62
@48                                                          // [16434] push constant 48
D=A                                                          // [16435] push constant 48
@SP                                                          // [16436] push constant 48
M=M+1                                                        // [16437] push constant 48
A=M-1                                                        // [16438] push constant 48
M=D                                                          // [16439] push constant 48
@48                                                          // [16440] push constant 48
D=A                                                          // [16441] push constant 48
@SP                                                          // [16442] push constant 48
M=M+1                                                        // [16443] push constant 48
A=M-1                                                        // [16444] push constant 48
M=D                                                          // [16445] push constant 48
@SP                                                          // [16446] push constant 0
M=M+1                                                        // [16447] push constant 0
A=M-1                                                        // [16448] push constant 0
M=0                                                          // [16449] push constant 0
@12                                                          // [16450] call Output.create 12
D=A                                                          // [16451] call Output.create 12
@R13                                                         // [16452] call Output.create 12
M=D                                                          // [16453] call Output.create 12
@Output.create                                               // [16454] call Output.create 12
D=A                                                          // [16455] call Output.create 12
@R14                                                         // [16456] call Output.create 12
M=D                                                          // [16457] call Output.create 12
@return-177                                                  // [16458] call Output.create 12
D=A                                                          // [16459] call Output.create 12
@CALL                                                        // [16460] call Output.create 12
0;JEQ                                                        // [16461] call Output.create 12
(return-177)                                                 // [     ] call Output.create 12
@SP                                                          // [16462] pop temp 0
AM=M-1                                                       // [16463] pop temp 0
D=M                                                          // [16464] pop temp 0
@5                                                           // [16465] pop temp 0
M=D                                                          // [16466] pop temp 0
@114                                                         // [16467] push constant 114
D=A                                                          // [16468] push constant 114
@SP                                                          // [16469] push constant 114
M=M+1                                                        // [16470] push constant 114
A=M-1                                                        // [16471] push constant 114
M=D                                                          // [16472] push constant 114
@SP                                                          // [16473] push constant 0
M=M+1                                                        // [16474] push constant 0
A=M-1                                                        // [16475] push constant 0
M=0                                                          // [16476] push constant 0
@SP                                                          // [16477] push constant 0
M=M+1                                                        // [16478] push constant 0
A=M-1                                                        // [16479] push constant 0
M=0                                                          // [16480] push constant 0
@SP                                                          // [16481] push constant 0
M=M+1                                                        // [16482] push constant 0
A=M-1                                                        // [16483] push constant 0
M=0                                                          // [16484] push constant 0
@29                                                          // [16485] push constant 29
D=A                                                          // [16486] push constant 29
@SP                                                          // [16487] push constant 29
M=M+1                                                        // [16488] push constant 29
A=M-1                                                        // [16489] push constant 29
M=D                                                          // [16490] push constant 29
@55                                                          // [16491] push constant 55
D=A                                                          // [16492] push constant 55
@SP                                                          // [16493] push constant 55
M=M+1                                                        // [16494] push constant 55
A=M-1                                                        // [16495] push constant 55
M=D                                                          // [16496] push constant 55
@51                                                          // [16497] push constant 51
D=A                                                          // [16498] push constant 51
@SP                                                          // [16499] push constant 51
M=M+1                                                        // [16500] push constant 51
A=M-1                                                        // [16501] push constant 51
M=D                                                          // [16502] push constant 51
@3                                                           // [16503] push constant 3
D=A                                                          // [16504] push constant 3
@SP                                                          // [16505] push constant 3
M=M+1                                                        // [16506] push constant 3
A=M-1                                                        // [16507] push constant 3
M=D                                                          // [16508] push constant 3
@3                                                           // [16509] push constant 3
D=A                                                          // [16510] push constant 3
@SP                                                          // [16511] push constant 3
M=M+1                                                        // [16512] push constant 3
A=M-1                                                        // [16513] push constant 3
M=D                                                          // [16514] push constant 3
@7                                                           // [16515] push constant 7
D=A                                                          // [16516] push constant 7
@SP                                                          // [16517] push constant 7
M=M+1                                                        // [16518] push constant 7
A=M-1                                                        // [16519] push constant 7
M=D                                                          // [16520] push constant 7
@SP                                                          // [16521] push constant 0
M=M+1                                                        // [16522] push constant 0
A=M-1                                                        // [16523] push constant 0
M=0                                                          // [16524] push constant 0
@SP                                                          // [16525] push constant 0
M=M+1                                                        // [16526] push constant 0
A=M-1                                                        // [16527] push constant 0
M=0                                                          // [16528] push constant 0
@12                                                          // [16529] call Output.create 12
D=A                                                          // [16530] call Output.create 12
@R13                                                         // [16531] call Output.create 12
M=D                                                          // [16532] call Output.create 12
@Output.create                                               // [16533] call Output.create 12
D=A                                                          // [16534] call Output.create 12
@R14                                                         // [16535] call Output.create 12
M=D                                                          // [16536] call Output.create 12
@return-178                                                  // [16537] call Output.create 12
D=A                                                          // [16538] call Output.create 12
@CALL                                                        // [16539] call Output.create 12
0;JEQ                                                        // [16540] call Output.create 12
(return-178)                                                 // [     ] call Output.create 12
@SP                                                          // [16541] pop temp 0
AM=M-1                                                       // [16542] pop temp 0
D=M                                                          // [16543] pop temp 0
@5                                                           // [16544] pop temp 0
M=D                                                          // [16545] pop temp 0
@115                                                         // [16546] push constant 115
D=A                                                          // [16547] push constant 115
@SP                                                          // [16548] push constant 115
M=M+1                                                        // [16549] push constant 115
A=M-1                                                        // [16550] push constant 115
M=D                                                          // [16551] push constant 115
@SP                                                          // [16552] push constant 0
M=M+1                                                        // [16553] push constant 0
A=M-1                                                        // [16554] push constant 0
M=0                                                          // [16555] push constant 0
@SP                                                          // [16556] push constant 0
M=M+1                                                        // [16557] push constant 0
A=M-1                                                        // [16558] push constant 0
M=0                                                          // [16559] push constant 0
@SP                                                          // [16560] push constant 0
M=M+1                                                        // [16561] push constant 0
A=M-1                                                        // [16562] push constant 0
M=0                                                          // [16563] push constant 0
@30                                                          // [16564] push constant 30
D=A                                                          // [16565] push constant 30
@SP                                                          // [16566] push constant 30
M=M+1                                                        // [16567] push constant 30
A=M-1                                                        // [16568] push constant 30
M=D                                                          // [16569] push constant 30
@51                                                          // [16570] push constant 51
D=A                                                          // [16571] push constant 51
@SP                                                          // [16572] push constant 51
M=M+1                                                        // [16573] push constant 51
A=M-1                                                        // [16574] push constant 51
M=D                                                          // [16575] push constant 51
@6                                                           // [16576] push constant 6
D=A                                                          // [16577] push constant 6
@SP                                                          // [16578] push constant 6
M=M+1                                                        // [16579] push constant 6
A=M-1                                                        // [16580] push constant 6
M=D                                                          // [16581] push constant 6
@24                                                          // [16582] push constant 24
D=A                                                          // [16583] push constant 24
@SP                                                          // [16584] push constant 24
M=M+1                                                        // [16585] push constant 24
A=M-1                                                        // [16586] push constant 24
M=D                                                          // [16587] push constant 24
@51                                                          // [16588] push constant 51
D=A                                                          // [16589] push constant 51
@SP                                                          // [16590] push constant 51
M=M+1                                                        // [16591] push constant 51
A=M-1                                                        // [16592] push constant 51
M=D                                                          // [16593] push constant 51
@30                                                          // [16594] push constant 30
D=A                                                          // [16595] push constant 30
@SP                                                          // [16596] push constant 30
M=M+1                                                        // [16597] push constant 30
A=M-1                                                        // [16598] push constant 30
M=D                                                          // [16599] push constant 30
@SP                                                          // [16600] push constant 0
M=M+1                                                        // [16601] push constant 0
A=M-1                                                        // [16602] push constant 0
M=0                                                          // [16603] push constant 0
@SP                                                          // [16604] push constant 0
M=M+1                                                        // [16605] push constant 0
A=M-1                                                        // [16606] push constant 0
M=0                                                          // [16607] push constant 0
@12                                                          // [16608] call Output.create 12
D=A                                                          // [16609] call Output.create 12
@R13                                                         // [16610] call Output.create 12
M=D                                                          // [16611] call Output.create 12
@Output.create                                               // [16612] call Output.create 12
D=A                                                          // [16613] call Output.create 12
@R14                                                         // [16614] call Output.create 12
M=D                                                          // [16615] call Output.create 12
@return-179                                                  // [16616] call Output.create 12
D=A                                                          // [16617] call Output.create 12
@CALL                                                        // [16618] call Output.create 12
0;JEQ                                                        // [16619] call Output.create 12
(return-179)                                                 // [     ] call Output.create 12
@SP                                                          // [16620] pop temp 0
AM=M-1                                                       // [16621] pop temp 0
D=M                                                          // [16622] pop temp 0
@5                                                           // [16623] pop temp 0
M=D                                                          // [16624] pop temp 0
@116                                                         // [16625] push constant 116
D=A                                                          // [16626] push constant 116
@SP                                                          // [16627] push constant 116
M=M+1                                                        // [16628] push constant 116
A=M-1                                                        // [16629] push constant 116
M=D                                                          // [16630] push constant 116
@4                                                           // [16631] push constant 4
D=A                                                          // [16632] push constant 4
@SP                                                          // [16633] push constant 4
M=M+1                                                        // [16634] push constant 4
A=M-1                                                        // [16635] push constant 4
M=D                                                          // [16636] push constant 4
@6                                                           // [16637] push constant 6
D=A                                                          // [16638] push constant 6
@SP                                                          // [16639] push constant 6
M=M+1                                                        // [16640] push constant 6
A=M-1                                                        // [16641] push constant 6
M=D                                                          // [16642] push constant 6
@6                                                           // [16643] push constant 6
D=A                                                          // [16644] push constant 6
@SP                                                          // [16645] push constant 6
M=M+1                                                        // [16646] push constant 6
A=M-1                                                        // [16647] push constant 6
M=D                                                          // [16648] push constant 6
@15                                                          // [16649] push constant 15
D=A                                                          // [16650] push constant 15
@SP                                                          // [16651] push constant 15
M=M+1                                                        // [16652] push constant 15
A=M-1                                                        // [16653] push constant 15
M=D                                                          // [16654] push constant 15
@6                                                           // [16655] push constant 6
D=A                                                          // [16656] push constant 6
@SP                                                          // [16657] push constant 6
M=M+1                                                        // [16658] push constant 6
A=M-1                                                        // [16659] push constant 6
M=D                                                          // [16660] push constant 6
@6                                                           // [16661] push constant 6
D=A                                                          // [16662] push constant 6
@SP                                                          // [16663] push constant 6
M=M+1                                                        // [16664] push constant 6
A=M-1                                                        // [16665] push constant 6
M=D                                                          // [16666] push constant 6
@6                                                           // [16667] push constant 6
D=A                                                          // [16668] push constant 6
@SP                                                          // [16669] push constant 6
M=M+1                                                        // [16670] push constant 6
A=M-1                                                        // [16671] push constant 6
M=D                                                          // [16672] push constant 6
@54                                                          // [16673] push constant 54
D=A                                                          // [16674] push constant 54
@SP                                                          // [16675] push constant 54
M=M+1                                                        // [16676] push constant 54
A=M-1                                                        // [16677] push constant 54
M=D                                                          // [16678] push constant 54
@28                                                          // [16679] push constant 28
D=A                                                          // [16680] push constant 28
@SP                                                          // [16681] push constant 28
M=M+1                                                        // [16682] push constant 28
A=M-1                                                        // [16683] push constant 28
M=D                                                          // [16684] push constant 28
@SP                                                          // [16685] push constant 0
M=M+1                                                        // [16686] push constant 0
A=M-1                                                        // [16687] push constant 0
M=0                                                          // [16688] push constant 0
@SP                                                          // [16689] push constant 0
M=M+1                                                        // [16690] push constant 0
A=M-1                                                        // [16691] push constant 0
M=0                                                          // [16692] push constant 0
@12                                                          // [16693] call Output.create 12
D=A                                                          // [16694] call Output.create 12
@R13                                                         // [16695] call Output.create 12
M=D                                                          // [16696] call Output.create 12
@Output.create                                               // [16697] call Output.create 12
D=A                                                          // [16698] call Output.create 12
@R14                                                         // [16699] call Output.create 12
M=D                                                          // [16700] call Output.create 12
@return-180                                                  // [16701] call Output.create 12
D=A                                                          // [16702] call Output.create 12
@CALL                                                        // [16703] call Output.create 12
0;JEQ                                                        // [16704] call Output.create 12
(return-180)                                                 // [     ] call Output.create 12
@SP                                                          // [16705] pop temp 0
AM=M-1                                                       // [16706] pop temp 0
D=M                                                          // [16707] pop temp 0
@5                                                           // [16708] pop temp 0
M=D                                                          // [16709] pop temp 0
@117                                                         // [16710] push constant 117
D=A                                                          // [16711] push constant 117
@SP                                                          // [16712] push constant 117
M=M+1                                                        // [16713] push constant 117
A=M-1                                                        // [16714] push constant 117
M=D                                                          // [16715] push constant 117
@SP                                                          // [16716] push constant 0
M=M+1                                                        // [16717] push constant 0
A=M-1                                                        // [16718] push constant 0
M=0                                                          // [16719] push constant 0
@SP                                                          // [16720] push constant 0
M=M+1                                                        // [16721] push constant 0
A=M-1                                                        // [16722] push constant 0
M=0                                                          // [16723] push constant 0
@SP                                                          // [16724] push constant 0
M=M+1                                                        // [16725] push constant 0
A=M-1                                                        // [16726] push constant 0
M=0                                                          // [16727] push constant 0
@27                                                          // [16728] push constant 27
D=A                                                          // [16729] push constant 27
@SP                                                          // [16730] push constant 27
M=M+1                                                        // [16731] push constant 27
A=M-1                                                        // [16732] push constant 27
M=D                                                          // [16733] push constant 27
@27                                                          // [16734] push constant 27
D=A                                                          // [16735] push constant 27
@SP                                                          // [16736] push constant 27
M=M+1                                                        // [16737] push constant 27
A=M-1                                                        // [16738] push constant 27
M=D                                                          // [16739] push constant 27
@27                                                          // [16740] push constant 27
D=A                                                          // [16741] push constant 27
@SP                                                          // [16742] push constant 27
M=M+1                                                        // [16743] push constant 27
A=M-1                                                        // [16744] push constant 27
M=D                                                          // [16745] push constant 27
@27                                                          // [16746] push constant 27
D=A                                                          // [16747] push constant 27
@SP                                                          // [16748] push constant 27
M=M+1                                                        // [16749] push constant 27
A=M-1                                                        // [16750] push constant 27
M=D                                                          // [16751] push constant 27
@27                                                          // [16752] push constant 27
D=A                                                          // [16753] push constant 27
@SP                                                          // [16754] push constant 27
M=M+1                                                        // [16755] push constant 27
A=M-1                                                        // [16756] push constant 27
M=D                                                          // [16757] push constant 27
@54                                                          // [16758] push constant 54
D=A                                                          // [16759] push constant 54
@SP                                                          // [16760] push constant 54
M=M+1                                                        // [16761] push constant 54
A=M-1                                                        // [16762] push constant 54
M=D                                                          // [16763] push constant 54
@SP                                                          // [16764] push constant 0
M=M+1                                                        // [16765] push constant 0
A=M-1                                                        // [16766] push constant 0
M=0                                                          // [16767] push constant 0
@SP                                                          // [16768] push constant 0
M=M+1                                                        // [16769] push constant 0
A=M-1                                                        // [16770] push constant 0
M=0                                                          // [16771] push constant 0
@12                                                          // [16772] call Output.create 12
D=A                                                          // [16773] call Output.create 12
@R13                                                         // [16774] call Output.create 12
M=D                                                          // [16775] call Output.create 12
@Output.create                                               // [16776] call Output.create 12
D=A                                                          // [16777] call Output.create 12
@R14                                                         // [16778] call Output.create 12
M=D                                                          // [16779] call Output.create 12
@return-181                                                  // [16780] call Output.create 12
D=A                                                          // [16781] call Output.create 12
@CALL                                                        // [16782] call Output.create 12
0;JEQ                                                        // [16783] call Output.create 12
(return-181)                                                 // [     ] call Output.create 12
@SP                                                          // [16784] pop temp 0
AM=M-1                                                       // [16785] pop temp 0
D=M                                                          // [16786] pop temp 0
@5                                                           // [16787] pop temp 0
M=D                                                          // [16788] pop temp 0
@118                                                         // [16789] push constant 118
D=A                                                          // [16790] push constant 118
@SP                                                          // [16791] push constant 118
M=M+1                                                        // [16792] push constant 118
A=M-1                                                        // [16793] push constant 118
M=D                                                          // [16794] push constant 118
@SP                                                          // [16795] push constant 0
M=M+1                                                        // [16796] push constant 0
A=M-1                                                        // [16797] push constant 0
M=0                                                          // [16798] push constant 0
@SP                                                          // [16799] push constant 0
M=M+1                                                        // [16800] push constant 0
A=M-1                                                        // [16801] push constant 0
M=0                                                          // [16802] push constant 0
@SP                                                          // [16803] push constant 0
M=M+1                                                        // [16804] push constant 0
A=M-1                                                        // [16805] push constant 0
M=0                                                          // [16806] push constant 0
@51                                                          // [16807] push constant 51
D=A                                                          // [16808] push constant 51
@SP                                                          // [16809] push constant 51
M=M+1                                                        // [16810] push constant 51
A=M-1                                                        // [16811] push constant 51
M=D                                                          // [16812] push constant 51
@51                                                          // [16813] push constant 51
D=A                                                          // [16814] push constant 51
@SP                                                          // [16815] push constant 51
M=M+1                                                        // [16816] push constant 51
A=M-1                                                        // [16817] push constant 51
M=D                                                          // [16818] push constant 51
@51                                                          // [16819] push constant 51
D=A                                                          // [16820] push constant 51
@SP                                                          // [16821] push constant 51
M=M+1                                                        // [16822] push constant 51
A=M-1                                                        // [16823] push constant 51
M=D                                                          // [16824] push constant 51
@51                                                          // [16825] push constant 51
D=A                                                          // [16826] push constant 51
@SP                                                          // [16827] push constant 51
M=M+1                                                        // [16828] push constant 51
A=M-1                                                        // [16829] push constant 51
M=D                                                          // [16830] push constant 51
@30                                                          // [16831] push constant 30
D=A                                                          // [16832] push constant 30
@SP                                                          // [16833] push constant 30
M=M+1                                                        // [16834] push constant 30
A=M-1                                                        // [16835] push constant 30
M=D                                                          // [16836] push constant 30
@12                                                          // [16837] push constant 12
D=A                                                          // [16838] push constant 12
@SP                                                          // [16839] push constant 12
M=M+1                                                        // [16840] push constant 12
A=M-1                                                        // [16841] push constant 12
M=D                                                          // [16842] push constant 12
@SP                                                          // [16843] push constant 0
M=M+1                                                        // [16844] push constant 0
A=M-1                                                        // [16845] push constant 0
M=0                                                          // [16846] push constant 0
@SP                                                          // [16847] push constant 0
M=M+1                                                        // [16848] push constant 0
A=M-1                                                        // [16849] push constant 0
M=0                                                          // [16850] push constant 0
@12                                                          // [16851] call Output.create 12
D=A                                                          // [16852] call Output.create 12
@R13                                                         // [16853] call Output.create 12
M=D                                                          // [16854] call Output.create 12
@Output.create                                               // [16855] call Output.create 12
D=A                                                          // [16856] call Output.create 12
@R14                                                         // [16857] call Output.create 12
M=D                                                          // [16858] call Output.create 12
@return-182                                                  // [16859] call Output.create 12
D=A                                                          // [16860] call Output.create 12
@CALL                                                        // [16861] call Output.create 12
0;JEQ                                                        // [16862] call Output.create 12
(return-182)                                                 // [     ] call Output.create 12
@SP                                                          // [16863] pop temp 0
AM=M-1                                                       // [16864] pop temp 0
D=M                                                          // [16865] pop temp 0
@5                                                           // [16866] pop temp 0
M=D                                                          // [16867] pop temp 0
@119                                                         // [16868] push constant 119
D=A                                                          // [16869] push constant 119
@SP                                                          // [16870] push constant 119
M=M+1                                                        // [16871] push constant 119
A=M-1                                                        // [16872] push constant 119
M=D                                                          // [16873] push constant 119
@SP                                                          // [16874] push constant 0
M=M+1                                                        // [16875] push constant 0
A=M-1                                                        // [16876] push constant 0
M=0                                                          // [16877] push constant 0
@SP                                                          // [16878] push constant 0
M=M+1                                                        // [16879] push constant 0
A=M-1                                                        // [16880] push constant 0
M=0                                                          // [16881] push constant 0
@SP                                                          // [16882] push constant 0
M=M+1                                                        // [16883] push constant 0
A=M-1                                                        // [16884] push constant 0
M=0                                                          // [16885] push constant 0
@51                                                          // [16886] push constant 51
D=A                                                          // [16887] push constant 51
@SP                                                          // [16888] push constant 51
M=M+1                                                        // [16889] push constant 51
A=M-1                                                        // [16890] push constant 51
M=D                                                          // [16891] push constant 51
@51                                                          // [16892] push constant 51
D=A                                                          // [16893] push constant 51
@SP                                                          // [16894] push constant 51
M=M+1                                                        // [16895] push constant 51
A=M-1                                                        // [16896] push constant 51
M=D                                                          // [16897] push constant 51
@51                                                          // [16898] push constant 51
D=A                                                          // [16899] push constant 51
@SP                                                          // [16900] push constant 51
M=M+1                                                        // [16901] push constant 51
A=M-1                                                        // [16902] push constant 51
M=D                                                          // [16903] push constant 51
@63                                                          // [16904] push constant 63
D=A                                                          // [16905] push constant 63
@SP                                                          // [16906] push constant 63
M=M+1                                                        // [16907] push constant 63
A=M-1                                                        // [16908] push constant 63
M=D                                                          // [16909] push constant 63
@63                                                          // [16910] push constant 63
D=A                                                          // [16911] push constant 63
@SP                                                          // [16912] push constant 63
M=M+1                                                        // [16913] push constant 63
A=M-1                                                        // [16914] push constant 63
M=D                                                          // [16915] push constant 63
@18                                                          // [16916] push constant 18
D=A                                                          // [16917] push constant 18
@SP                                                          // [16918] push constant 18
M=M+1                                                        // [16919] push constant 18
A=M-1                                                        // [16920] push constant 18
M=D                                                          // [16921] push constant 18
@SP                                                          // [16922] push constant 0
M=M+1                                                        // [16923] push constant 0
A=M-1                                                        // [16924] push constant 0
M=0                                                          // [16925] push constant 0
@SP                                                          // [16926] push constant 0
M=M+1                                                        // [16927] push constant 0
A=M-1                                                        // [16928] push constant 0
M=0                                                          // [16929] push constant 0
@12                                                          // [16930] call Output.create 12
D=A                                                          // [16931] call Output.create 12
@R13                                                         // [16932] call Output.create 12
M=D                                                          // [16933] call Output.create 12
@Output.create                                               // [16934] call Output.create 12
D=A                                                          // [16935] call Output.create 12
@R14                                                         // [16936] call Output.create 12
M=D                                                          // [16937] call Output.create 12
@return-183                                                  // [16938] call Output.create 12
D=A                                                          // [16939] call Output.create 12
@CALL                                                        // [16940] call Output.create 12
0;JEQ                                                        // [16941] call Output.create 12
(return-183)                                                 // [     ] call Output.create 12
@SP                                                          // [16942] pop temp 0
AM=M-1                                                       // [16943] pop temp 0
D=M                                                          // [16944] pop temp 0
@5                                                           // [16945] pop temp 0
M=D                                                          // [16946] pop temp 0
@120                                                         // [16947] push constant 120
D=A                                                          // [16948] push constant 120
@SP                                                          // [16949] push constant 120
M=M+1                                                        // [16950] push constant 120
A=M-1                                                        // [16951] push constant 120
M=D                                                          // [16952] push constant 120
@SP                                                          // [16953] push constant 0
M=M+1                                                        // [16954] push constant 0
A=M-1                                                        // [16955] push constant 0
M=0                                                          // [16956] push constant 0
@SP                                                          // [16957] push constant 0
M=M+1                                                        // [16958] push constant 0
A=M-1                                                        // [16959] push constant 0
M=0                                                          // [16960] push constant 0
@SP                                                          // [16961] push constant 0
M=M+1                                                        // [16962] push constant 0
A=M-1                                                        // [16963] push constant 0
M=0                                                          // [16964] push constant 0
@51                                                          // [16965] push constant 51
D=A                                                          // [16966] push constant 51
@SP                                                          // [16967] push constant 51
M=M+1                                                        // [16968] push constant 51
A=M-1                                                        // [16969] push constant 51
M=D                                                          // [16970] push constant 51
@30                                                          // [16971] push constant 30
D=A                                                          // [16972] push constant 30
@SP                                                          // [16973] push constant 30
M=M+1                                                        // [16974] push constant 30
A=M-1                                                        // [16975] push constant 30
M=D                                                          // [16976] push constant 30
@12                                                          // [16977] push constant 12
D=A                                                          // [16978] push constant 12
@SP                                                          // [16979] push constant 12
M=M+1                                                        // [16980] push constant 12
A=M-1                                                        // [16981] push constant 12
M=D                                                          // [16982] push constant 12
@12                                                          // [16983] push constant 12
D=A                                                          // [16984] push constant 12
@SP                                                          // [16985] push constant 12
M=M+1                                                        // [16986] push constant 12
A=M-1                                                        // [16987] push constant 12
M=D                                                          // [16988] push constant 12
@30                                                          // [16989] push constant 30
D=A                                                          // [16990] push constant 30
@SP                                                          // [16991] push constant 30
M=M+1                                                        // [16992] push constant 30
A=M-1                                                        // [16993] push constant 30
M=D                                                          // [16994] push constant 30
@51                                                          // [16995] push constant 51
D=A                                                          // [16996] push constant 51
@SP                                                          // [16997] push constant 51
M=M+1                                                        // [16998] push constant 51
A=M-1                                                        // [16999] push constant 51
M=D                                                          // [17000] push constant 51
@SP                                                          // [17001] push constant 0
M=M+1                                                        // [17002] push constant 0
A=M-1                                                        // [17003] push constant 0
M=0                                                          // [17004] push constant 0
@SP                                                          // [17005] push constant 0
M=M+1                                                        // [17006] push constant 0
A=M-1                                                        // [17007] push constant 0
M=0                                                          // [17008] push constant 0
@12                                                          // [17009] call Output.create 12
D=A                                                          // [17010] call Output.create 12
@R13                                                         // [17011] call Output.create 12
M=D                                                          // [17012] call Output.create 12
@Output.create                                               // [17013] call Output.create 12
D=A                                                          // [17014] call Output.create 12
@R14                                                         // [17015] call Output.create 12
M=D                                                          // [17016] call Output.create 12
@return-184                                                  // [17017] call Output.create 12
D=A                                                          // [17018] call Output.create 12
@CALL                                                        // [17019] call Output.create 12
0;JEQ                                                        // [17020] call Output.create 12
(return-184)                                                 // [     ] call Output.create 12
@SP                                                          // [17021] pop temp 0
AM=M-1                                                       // [17022] pop temp 0
D=M                                                          // [17023] pop temp 0
@5                                                           // [17024] pop temp 0
M=D                                                          // [17025] pop temp 0
@121                                                         // [17026] push constant 121
D=A                                                          // [17027] push constant 121
@SP                                                          // [17028] push constant 121
M=M+1                                                        // [17029] push constant 121
A=M-1                                                        // [17030] push constant 121
M=D                                                          // [17031] push constant 121
@SP                                                          // [17032] push constant 0
M=M+1                                                        // [17033] push constant 0
A=M-1                                                        // [17034] push constant 0
M=0                                                          // [17035] push constant 0
@SP                                                          // [17036] push constant 0
M=M+1                                                        // [17037] push constant 0
A=M-1                                                        // [17038] push constant 0
M=0                                                          // [17039] push constant 0
@SP                                                          // [17040] push constant 0
M=M+1                                                        // [17041] push constant 0
A=M-1                                                        // [17042] push constant 0
M=0                                                          // [17043] push constant 0
@51                                                          // [17044] push constant 51
D=A                                                          // [17045] push constant 51
@SP                                                          // [17046] push constant 51
M=M+1                                                        // [17047] push constant 51
A=M-1                                                        // [17048] push constant 51
M=D                                                          // [17049] push constant 51
@51                                                          // [17050] push constant 51
D=A                                                          // [17051] push constant 51
@SP                                                          // [17052] push constant 51
M=M+1                                                        // [17053] push constant 51
A=M-1                                                        // [17054] push constant 51
M=D                                                          // [17055] push constant 51
@51                                                          // [17056] push constant 51
D=A                                                          // [17057] push constant 51
@SP                                                          // [17058] push constant 51
M=M+1                                                        // [17059] push constant 51
A=M-1                                                        // [17060] push constant 51
M=D                                                          // [17061] push constant 51
@62                                                          // [17062] push constant 62
D=A                                                          // [17063] push constant 62
@SP                                                          // [17064] push constant 62
M=M+1                                                        // [17065] push constant 62
A=M-1                                                        // [17066] push constant 62
M=D                                                          // [17067] push constant 62
@48                                                          // [17068] push constant 48
D=A                                                          // [17069] push constant 48
@SP                                                          // [17070] push constant 48
M=M+1                                                        // [17071] push constant 48
A=M-1                                                        // [17072] push constant 48
M=D                                                          // [17073] push constant 48
@24                                                          // [17074] push constant 24
D=A                                                          // [17075] push constant 24
@SP                                                          // [17076] push constant 24
M=M+1                                                        // [17077] push constant 24
A=M-1                                                        // [17078] push constant 24
M=D                                                          // [17079] push constant 24
@15                                                          // [17080] push constant 15
D=A                                                          // [17081] push constant 15
@SP                                                          // [17082] push constant 15
M=M+1                                                        // [17083] push constant 15
A=M-1                                                        // [17084] push constant 15
M=D                                                          // [17085] push constant 15
@SP                                                          // [17086] push constant 0
M=M+1                                                        // [17087] push constant 0
A=M-1                                                        // [17088] push constant 0
M=0                                                          // [17089] push constant 0
@12                                                          // [17090] call Output.create 12
D=A                                                          // [17091] call Output.create 12
@R13                                                         // [17092] call Output.create 12
M=D                                                          // [17093] call Output.create 12
@Output.create                                               // [17094] call Output.create 12
D=A                                                          // [17095] call Output.create 12
@R14                                                         // [17096] call Output.create 12
M=D                                                          // [17097] call Output.create 12
@return-185                                                  // [17098] call Output.create 12
D=A                                                          // [17099] call Output.create 12
@CALL                                                        // [17100] call Output.create 12
0;JEQ                                                        // [17101] call Output.create 12
(return-185)                                                 // [     ] call Output.create 12
@SP                                                          // [17102] pop temp 0
AM=M-1                                                       // [17103] pop temp 0
D=M                                                          // [17104] pop temp 0
@5                                                           // [17105] pop temp 0
M=D                                                          // [17106] pop temp 0
@122                                                         // [17107] push constant 122
D=A                                                          // [17108] push constant 122
@SP                                                          // [17109] push constant 122
M=M+1                                                        // [17110] push constant 122
A=M-1                                                        // [17111] push constant 122
M=D                                                          // [17112] push constant 122
@SP                                                          // [17113] push constant 0
M=M+1                                                        // [17114] push constant 0
A=M-1                                                        // [17115] push constant 0
M=0                                                          // [17116] push constant 0
@SP                                                          // [17117] push constant 0
M=M+1                                                        // [17118] push constant 0
A=M-1                                                        // [17119] push constant 0
M=0                                                          // [17120] push constant 0
@SP                                                          // [17121] push constant 0
M=M+1                                                        // [17122] push constant 0
A=M-1                                                        // [17123] push constant 0
M=0                                                          // [17124] push constant 0
@63                                                          // [17125] push constant 63
D=A                                                          // [17126] push constant 63
@SP                                                          // [17127] push constant 63
M=M+1                                                        // [17128] push constant 63
A=M-1                                                        // [17129] push constant 63
M=D                                                          // [17130] push constant 63
@27                                                          // [17131] push constant 27
D=A                                                          // [17132] push constant 27
@SP                                                          // [17133] push constant 27
M=M+1                                                        // [17134] push constant 27
A=M-1                                                        // [17135] push constant 27
M=D                                                          // [17136] push constant 27
@12                                                          // [17137] push constant 12
D=A                                                          // [17138] push constant 12
@SP                                                          // [17139] push constant 12
M=M+1                                                        // [17140] push constant 12
A=M-1                                                        // [17141] push constant 12
M=D                                                          // [17142] push constant 12
@6                                                           // [17143] push constant 6
D=A                                                          // [17144] push constant 6
@SP                                                          // [17145] push constant 6
M=M+1                                                        // [17146] push constant 6
A=M-1                                                        // [17147] push constant 6
M=D                                                          // [17148] push constant 6
@51                                                          // [17149] push constant 51
D=A                                                          // [17150] push constant 51
@SP                                                          // [17151] push constant 51
M=M+1                                                        // [17152] push constant 51
A=M-1                                                        // [17153] push constant 51
M=D                                                          // [17154] push constant 51
@63                                                          // [17155] push constant 63
D=A                                                          // [17156] push constant 63
@SP                                                          // [17157] push constant 63
M=M+1                                                        // [17158] push constant 63
A=M-1                                                        // [17159] push constant 63
M=D                                                          // [17160] push constant 63
@SP                                                          // [17161] push constant 0
M=M+1                                                        // [17162] push constant 0
A=M-1                                                        // [17163] push constant 0
M=0                                                          // [17164] push constant 0
@SP                                                          // [17165] push constant 0
M=M+1                                                        // [17166] push constant 0
A=M-1                                                        // [17167] push constant 0
M=0                                                          // [17168] push constant 0
@12                                                          // [17169] call Output.create 12
D=A                                                          // [17170] call Output.create 12
@R13                                                         // [17171] call Output.create 12
M=D                                                          // [17172] call Output.create 12
@Output.create                                               // [17173] call Output.create 12
D=A                                                          // [17174] call Output.create 12
@R14                                                         // [17175] call Output.create 12
M=D                                                          // [17176] call Output.create 12
@return-186                                                  // [17177] call Output.create 12
D=A                                                          // [17178] call Output.create 12
@CALL                                                        // [17179] call Output.create 12
0;JEQ                                                        // [17180] call Output.create 12
(return-186)                                                 // [     ] call Output.create 12
@SP                                                          // [17181] pop temp 0
AM=M-1                                                       // [17182] pop temp 0
D=M                                                          // [17183] pop temp 0
@5                                                           // [17184] pop temp 0
M=D                                                          // [17185] pop temp 0
@123                                                         // [17186] push constant 123
D=A                                                          // [17187] push constant 123
@SP                                                          // [17188] push constant 123
M=M+1                                                        // [17189] push constant 123
A=M-1                                                        // [17190] push constant 123
M=D                                                          // [17191] push constant 123
@56                                                          // [17192] push constant 56
D=A                                                          // [17193] push constant 56
@SP                                                          // [17194] push constant 56
M=M+1                                                        // [17195] push constant 56
A=M-1                                                        // [17196] push constant 56
M=D                                                          // [17197] push constant 56
@12                                                          // [17198] push constant 12
D=A                                                          // [17199] push constant 12
@SP                                                          // [17200] push constant 12
M=M+1                                                        // [17201] push constant 12
A=M-1                                                        // [17202] push constant 12
M=D                                                          // [17203] push constant 12
@12                                                          // [17204] push constant 12
D=A                                                          // [17205] push constant 12
@SP                                                          // [17206] push constant 12
M=M+1                                                        // [17207] push constant 12
A=M-1                                                        // [17208] push constant 12
M=D                                                          // [17209] push constant 12
@12                                                          // [17210] push constant 12
D=A                                                          // [17211] push constant 12
@SP                                                          // [17212] push constant 12
M=M+1                                                        // [17213] push constant 12
A=M-1                                                        // [17214] push constant 12
M=D                                                          // [17215] push constant 12
@7                                                           // [17216] push constant 7
D=A                                                          // [17217] push constant 7
@SP                                                          // [17218] push constant 7
M=M+1                                                        // [17219] push constant 7
A=M-1                                                        // [17220] push constant 7
M=D                                                          // [17221] push constant 7
@12                                                          // [17222] push constant 12
D=A                                                          // [17223] push constant 12
@SP                                                          // [17224] push constant 12
M=M+1                                                        // [17225] push constant 12
A=M-1                                                        // [17226] push constant 12
M=D                                                          // [17227] push constant 12
@12                                                          // [17228] push constant 12
D=A                                                          // [17229] push constant 12
@SP                                                          // [17230] push constant 12
M=M+1                                                        // [17231] push constant 12
A=M-1                                                        // [17232] push constant 12
M=D                                                          // [17233] push constant 12
@12                                                          // [17234] push constant 12
D=A                                                          // [17235] push constant 12
@SP                                                          // [17236] push constant 12
M=M+1                                                        // [17237] push constant 12
A=M-1                                                        // [17238] push constant 12
M=D                                                          // [17239] push constant 12
@56                                                          // [17240] push constant 56
D=A                                                          // [17241] push constant 56
@SP                                                          // [17242] push constant 56
M=M+1                                                        // [17243] push constant 56
A=M-1                                                        // [17244] push constant 56
M=D                                                          // [17245] push constant 56
@SP                                                          // [17246] push constant 0
M=M+1                                                        // [17247] push constant 0
A=M-1                                                        // [17248] push constant 0
M=0                                                          // [17249] push constant 0
@SP                                                          // [17250] push constant 0
M=M+1                                                        // [17251] push constant 0
A=M-1                                                        // [17252] push constant 0
M=0                                                          // [17253] push constant 0
@12                                                          // [17254] call Output.create 12
D=A                                                          // [17255] call Output.create 12
@R13                                                         // [17256] call Output.create 12
M=D                                                          // [17257] call Output.create 12
@Output.create                                               // [17258] call Output.create 12
D=A                                                          // [17259] call Output.create 12
@R14                                                         // [17260] call Output.create 12
M=D                                                          // [17261] call Output.create 12
@return-187                                                  // [17262] call Output.create 12
D=A                                                          // [17263] call Output.create 12
@CALL                                                        // [17264] call Output.create 12
0;JEQ                                                        // [17265] call Output.create 12
(return-187)                                                 // [     ] call Output.create 12
@SP                                                          // [17266] pop temp 0
AM=M-1                                                       // [17267] pop temp 0
D=M                                                          // [17268] pop temp 0
@5                                                           // [17269] pop temp 0
M=D                                                          // [17270] pop temp 0
@124                                                         // [17271] push constant 124
D=A                                                          // [17272] push constant 124
@SP                                                          // [17273] push constant 124
M=M+1                                                        // [17274] push constant 124
A=M-1                                                        // [17275] push constant 124
M=D                                                          // [17276] push constant 124
@12                                                          // [17277] push constant 12
D=A                                                          // [17278] push constant 12
@SP                                                          // [17279] push constant 12
M=M+1                                                        // [17280] push constant 12
A=M-1                                                        // [17281] push constant 12
M=D                                                          // [17282] push constant 12
@12                                                          // [17283] push constant 12
D=A                                                          // [17284] push constant 12
@SP                                                          // [17285] push constant 12
M=M+1                                                        // [17286] push constant 12
A=M-1                                                        // [17287] push constant 12
M=D                                                          // [17288] push constant 12
@12                                                          // [17289] push constant 12
D=A                                                          // [17290] push constant 12
@SP                                                          // [17291] push constant 12
M=M+1                                                        // [17292] push constant 12
A=M-1                                                        // [17293] push constant 12
M=D                                                          // [17294] push constant 12
@12                                                          // [17295] push constant 12
D=A                                                          // [17296] push constant 12
@SP                                                          // [17297] push constant 12
M=M+1                                                        // [17298] push constant 12
A=M-1                                                        // [17299] push constant 12
M=D                                                          // [17300] push constant 12
@12                                                          // [17301] push constant 12
D=A                                                          // [17302] push constant 12
@SP                                                          // [17303] push constant 12
M=M+1                                                        // [17304] push constant 12
A=M-1                                                        // [17305] push constant 12
M=D                                                          // [17306] push constant 12
@12                                                          // [17307] push constant 12
D=A                                                          // [17308] push constant 12
@SP                                                          // [17309] push constant 12
M=M+1                                                        // [17310] push constant 12
A=M-1                                                        // [17311] push constant 12
M=D                                                          // [17312] push constant 12
@12                                                          // [17313] push constant 12
D=A                                                          // [17314] push constant 12
@SP                                                          // [17315] push constant 12
M=M+1                                                        // [17316] push constant 12
A=M-1                                                        // [17317] push constant 12
M=D                                                          // [17318] push constant 12
@12                                                          // [17319] push constant 12
D=A                                                          // [17320] push constant 12
@SP                                                          // [17321] push constant 12
M=M+1                                                        // [17322] push constant 12
A=M-1                                                        // [17323] push constant 12
M=D                                                          // [17324] push constant 12
@12                                                          // [17325] push constant 12
D=A                                                          // [17326] push constant 12
@SP                                                          // [17327] push constant 12
M=M+1                                                        // [17328] push constant 12
A=M-1                                                        // [17329] push constant 12
M=D                                                          // [17330] push constant 12
@SP                                                          // [17331] push constant 0
M=M+1                                                        // [17332] push constant 0
A=M-1                                                        // [17333] push constant 0
M=0                                                          // [17334] push constant 0
@SP                                                          // [17335] push constant 0
M=M+1                                                        // [17336] push constant 0
A=M-1                                                        // [17337] push constant 0
M=0                                                          // [17338] push constant 0
@12                                                          // [17339] call Output.create 12
D=A                                                          // [17340] call Output.create 12
@R13                                                         // [17341] call Output.create 12
M=D                                                          // [17342] call Output.create 12
@Output.create                                               // [17343] call Output.create 12
D=A                                                          // [17344] call Output.create 12
@R14                                                         // [17345] call Output.create 12
M=D                                                          // [17346] call Output.create 12
@return-188                                                  // [17347] call Output.create 12
D=A                                                          // [17348] call Output.create 12
@CALL                                                        // [17349] call Output.create 12
0;JEQ                                                        // [17350] call Output.create 12
(return-188)                                                 // [     ] call Output.create 12
@SP                                                          // [17351] pop temp 0
AM=M-1                                                       // [17352] pop temp 0
D=M                                                          // [17353] pop temp 0
@5                                                           // [17354] pop temp 0
M=D                                                          // [17355] pop temp 0
@125                                                         // [17356] push constant 125
D=A                                                          // [17357] push constant 125
@SP                                                          // [17358] push constant 125
M=M+1                                                        // [17359] push constant 125
A=M-1                                                        // [17360] push constant 125
M=D                                                          // [17361] push constant 125
@7                                                           // [17362] push constant 7
D=A                                                          // [17363] push constant 7
@SP                                                          // [17364] push constant 7
M=M+1                                                        // [17365] push constant 7
A=M-1                                                        // [17366] push constant 7
M=D                                                          // [17367] push constant 7
@12                                                          // [17368] push constant 12
D=A                                                          // [17369] push constant 12
@SP                                                          // [17370] push constant 12
M=M+1                                                        // [17371] push constant 12
A=M-1                                                        // [17372] push constant 12
M=D                                                          // [17373] push constant 12
@12                                                          // [17374] push constant 12
D=A                                                          // [17375] push constant 12
@SP                                                          // [17376] push constant 12
M=M+1                                                        // [17377] push constant 12
A=M-1                                                        // [17378] push constant 12
M=D                                                          // [17379] push constant 12
@12                                                          // [17380] push constant 12
D=A                                                          // [17381] push constant 12
@SP                                                          // [17382] push constant 12
M=M+1                                                        // [17383] push constant 12
A=M-1                                                        // [17384] push constant 12
M=D                                                          // [17385] push constant 12
@56                                                          // [17386] push constant 56
D=A                                                          // [17387] push constant 56
@SP                                                          // [17388] push constant 56
M=M+1                                                        // [17389] push constant 56
A=M-1                                                        // [17390] push constant 56
M=D                                                          // [17391] push constant 56
@12                                                          // [17392] push constant 12
D=A                                                          // [17393] push constant 12
@SP                                                          // [17394] push constant 12
M=M+1                                                        // [17395] push constant 12
A=M-1                                                        // [17396] push constant 12
M=D                                                          // [17397] push constant 12
@12                                                          // [17398] push constant 12
D=A                                                          // [17399] push constant 12
@SP                                                          // [17400] push constant 12
M=M+1                                                        // [17401] push constant 12
A=M-1                                                        // [17402] push constant 12
M=D                                                          // [17403] push constant 12
@12                                                          // [17404] push constant 12
D=A                                                          // [17405] push constant 12
@SP                                                          // [17406] push constant 12
M=M+1                                                        // [17407] push constant 12
A=M-1                                                        // [17408] push constant 12
M=D                                                          // [17409] push constant 12
@7                                                           // [17410] push constant 7
D=A                                                          // [17411] push constant 7
@SP                                                          // [17412] push constant 7
M=M+1                                                        // [17413] push constant 7
A=M-1                                                        // [17414] push constant 7
M=D                                                          // [17415] push constant 7
@SP                                                          // [17416] push constant 0
M=M+1                                                        // [17417] push constant 0
A=M-1                                                        // [17418] push constant 0
M=0                                                          // [17419] push constant 0
@SP                                                          // [17420] push constant 0
M=M+1                                                        // [17421] push constant 0
A=M-1                                                        // [17422] push constant 0
M=0                                                          // [17423] push constant 0
@12                                                          // [17424] call Output.create 12
D=A                                                          // [17425] call Output.create 12
@R13                                                         // [17426] call Output.create 12
M=D                                                          // [17427] call Output.create 12
@Output.create                                               // [17428] call Output.create 12
D=A                                                          // [17429] call Output.create 12
@R14                                                         // [17430] call Output.create 12
M=D                                                          // [17431] call Output.create 12
@return-189                                                  // [17432] call Output.create 12
D=A                                                          // [17433] call Output.create 12
@CALL                                                        // [17434] call Output.create 12
0;JEQ                                                        // [17435] call Output.create 12
(return-189)                                                 // [     ] call Output.create 12
@SP                                                          // [17436] pop temp 0
AM=M-1                                                       // [17437] pop temp 0
D=M                                                          // [17438] pop temp 0
@5                                                           // [17439] pop temp 0
M=D                                                          // [17440] pop temp 0
@126                                                         // [17441] push constant 126
D=A                                                          // [17442] push constant 126
@SP                                                          // [17443] push constant 126
M=M+1                                                        // [17444] push constant 126
A=M-1                                                        // [17445] push constant 126
M=D                                                          // [17446] push constant 126
@38                                                          // [17447] push constant 38
D=A                                                          // [17448] push constant 38
@SP                                                          // [17449] push constant 38
M=M+1                                                        // [17450] push constant 38
A=M-1                                                        // [17451] push constant 38
M=D                                                          // [17452] push constant 38
@45                                                          // [17453] push constant 45
D=A                                                          // [17454] push constant 45
@SP                                                          // [17455] push constant 45
M=M+1                                                        // [17456] push constant 45
A=M-1                                                        // [17457] push constant 45
M=D                                                          // [17458] push constant 45
@25                                                          // [17459] push constant 25
D=A                                                          // [17460] push constant 25
@SP                                                          // [17461] push constant 25
M=M+1                                                        // [17462] push constant 25
A=M-1                                                        // [17463] push constant 25
M=D                                                          // [17464] push constant 25
@SP                                                          // [17465] push constant 0
M=M+1                                                        // [17466] push constant 0
A=M-1                                                        // [17467] push constant 0
M=0                                                          // [17468] push constant 0
@SP                                                          // [17469] push constant 0
M=M+1                                                        // [17470] push constant 0
A=M-1                                                        // [17471] push constant 0
M=0                                                          // [17472] push constant 0
@SP                                                          // [17473] push constant 0
M=M+1                                                        // [17474] push constant 0
A=M-1                                                        // [17475] push constant 0
M=0                                                          // [17476] push constant 0
@SP                                                          // [17477] push constant 0
M=M+1                                                        // [17478] push constant 0
A=M-1                                                        // [17479] push constant 0
M=0                                                          // [17480] push constant 0
@SP                                                          // [17481] push constant 0
M=M+1                                                        // [17482] push constant 0
A=M-1                                                        // [17483] push constant 0
M=0                                                          // [17484] push constant 0
@SP                                                          // [17485] push constant 0
M=M+1                                                        // [17486] push constant 0
A=M-1                                                        // [17487] push constant 0
M=0                                                          // [17488] push constant 0
@SP                                                          // [17489] push constant 0
M=M+1                                                        // [17490] push constant 0
A=M-1                                                        // [17491] push constant 0
M=0                                                          // [17492] push constant 0
@SP                                                          // [17493] push constant 0
M=M+1                                                        // [17494] push constant 0
A=M-1                                                        // [17495] push constant 0
M=0                                                          // [17496] push constant 0
@12                                                          // [17497] call Output.create 12
D=A                                                          // [17498] call Output.create 12
@R13                                                         // [17499] call Output.create 12
M=D                                                          // [17500] call Output.create 12
@Output.create                                               // [17501] call Output.create 12
D=A                                                          // [17502] call Output.create 12
@R14                                                         // [17503] call Output.create 12
M=D                                                          // [17504] call Output.create 12
@return-190                                                  // [17505] call Output.create 12
D=A                                                          // [17506] call Output.create 12
@CALL                                                        // [17507] call Output.create 12
0;JEQ                                                        // [17508] call Output.create 12
(return-190)                                                 // [     ] call Output.create 12
@SP                                                          // [17509] pop temp 0
AM=M-1                                                       // [17510] pop temp 0
D=M                                                          // [17511] pop temp 0
@5                                                           // [17512] pop temp 0
M=D                                                          // [17513] pop temp 0
@SP                                                          // [17514] push constant 0
M=M+1                                                        // [17515] push constant 0
A=M-1                                                        // [17516] push constant 0
M=0                                                          // [17517] push constant 0
@RETURN                                                      // [17518] return
0;JEQ                                                        // [17519] return
(Output.create)                                              // [     ] function Output.create 1
@SP                                                          // [17520] function Output.create 1
A=M                                                          // [17521] function Output.create 1
M=0                                                          // [17522] function Output.create 1
@SP                                                          // [17523] function Output.create 1
M=M+1                                                        // [17524] function Output.create 1
@11                                                          // [17525] push constant 11
D=A                                                          // [17526] push constant 11
@SP                                                          // [17527] push constant 11
M=M+1                                                        // [17528] push constant 11
A=M-1                                                        // [17529] push constant 11
M=D                                                          // [17530] push constant 11
@1                                                           // [17531] call Array.new 1
D=A                                                          // [17532] call Array.new 1
@R13                                                         // [17533] call Array.new 1
M=D                                                          // [17534] call Array.new 1
@Array.new                                                   // [17535] call Array.new 1
D=A                                                          // [17536] call Array.new 1
@R14                                                         // [17537] call Array.new 1
M=D                                                          // [17538] call Array.new 1
@return-191                                                  // [17539] call Array.new 1
D=A                                                          // [17540] call Array.new 1
@CALL                                                        // [17541] call Array.new 1
0;JEQ                                                        // [17542] call Array.new 1
(return-191)                                                 // [     ] call Array.new 1
@SP                                                          // [17543] pop local 0
AM=M-1                                                       // [17544] pop local 0
D=M                                                          // [17545] pop local 0
@R13                                                         // [17546] pop local 0
M=D                                                          // [17547] pop local 0
@LCL                                                         // [17548] pop local 0
D=M                                                          // [17549] pop local 0
@0                                                           // [17550] pop local 0
D=D+A                                                        // [17551] pop local 0
@R14                                                         // [17552] pop local 0
M=D                                                          // [17553] pop local 0
@R13                                                         // [17554] pop local 0
D=M                                                          // [17555] pop local 0
@R14                                                         // [17556] pop local 0
A=M                                                          // [17557] pop local 0
M=D                                                          // [17558] pop local 0
@ARG                                                         // [17559] push argument 0
D=M                                                          // [17560] push argument 0
@0                                                           // [17561] push argument 0
A=D+A                                                        // [17562] push argument 0
D=M                                                          // [17563] push argument 0
@SP                                                          // [17564] push argument 0
M=M+1                                                        // [17565] push argument 0
A=M-1                                                        // [17566] push argument 0
M=D                                                          // [17567] push argument 0
@Output.0                                                    // [17568] push static 0
D=M                                                          // [17569] push static 0
@SP                                                          // [17570] push static 0
M=M+1                                                        // [17571] push static 0
A=M-1                                                        // [17572] push static 0
M=D                                                          // [17573] push static 0
@SP                                                          // [17574] add
AM=M-1                                                       // [17575] add
D=M                                                          // [17576] add
A=A-1                                                        // [17577] add
M=D+M                                                        // [17578] add
@LCL                                                         // [17579] push local 0
D=M                                                          // [17580] push local 0
@0                                                           // [17581] push local 0
A=D+A                                                        // [17582] push local 0
D=M                                                          // [17583] push local 0
@SP                                                          // [17584] push local 0
M=M+1                                                        // [17585] push local 0
A=M-1                                                        // [17586] push local 0
M=D                                                          // [17587] push local 0
@SP                                                          // [17588] pop temp 0
AM=M-1                                                       // [17589] pop temp 0
D=M                                                          // [17590] pop temp 0
@5                                                           // [17591] pop temp 0
M=D                                                          // [17592] pop temp 0
@SP                                                          // [17593] pop pointer 1
AM=M-1                                                       // [17594] pop pointer 1
D=M                                                          // [17595] pop pointer 1
@4                                                           // [17596] pop pointer 1
M=D                                                          // [17597] pop pointer 1
@5                                                           // [17598] push temp 0
D=M                                                          // [17599] push temp 0
@SP                                                          // [17600] push temp 0
M=M+1                                                        // [17601] push temp 0
A=M-1                                                        // [17602] push temp 0
M=D                                                          // [17603] push temp 0
@SP                                                          // [17604] pop that 0
AM=M-1                                                       // [17605] pop that 0
D=M                                                          // [17606] pop that 0
@R13                                                         // [17607] pop that 0
M=D                                                          // [17608] pop that 0
@THAT                                                        // [17609] pop that 0
D=M                                                          // [17610] pop that 0
@0                                                           // [17611] pop that 0
D=D+A                                                        // [17612] pop that 0
@R14                                                         // [17613] pop that 0
M=D                                                          // [17614] pop that 0
@R13                                                         // [17615] pop that 0
D=M                                                          // [17616] pop that 0
@R14                                                         // [17617] pop that 0
A=M                                                          // [17618] pop that 0
M=D                                                          // [17619] pop that 0
@SP                                                          // [17620] push constant 0
M=M+1                                                        // [17621] push constant 0
A=M-1                                                        // [17622] push constant 0
M=0                                                          // [17623] push constant 0
@LCL                                                         // [17624] push local 0
D=M                                                          // [17625] push local 0
@0                                                           // [17626] push local 0
A=D+A                                                        // [17627] push local 0
D=M                                                          // [17628] push local 0
@SP                                                          // [17629] push local 0
M=M+1                                                        // [17630] push local 0
A=M-1                                                        // [17631] push local 0
M=D                                                          // [17632] push local 0
@SP                                                          // [17633] add
AM=M-1                                                       // [17634] add
D=M                                                          // [17635] add
A=A-1                                                        // [17636] add
M=D+M                                                        // [17637] add
@ARG                                                         // [17638] push argument 1
D=M                                                          // [17639] push argument 1
@1                                                           // [17640] push argument 1
A=D+A                                                        // [17641] push argument 1
D=M                                                          // [17642] push argument 1
@SP                                                          // [17643] push argument 1
M=M+1                                                        // [17644] push argument 1
A=M-1                                                        // [17645] push argument 1
M=D                                                          // [17646] push argument 1
@SP                                                          // [17647] pop temp 0
AM=M-1                                                       // [17648] pop temp 0
D=M                                                          // [17649] pop temp 0
@5                                                           // [17650] pop temp 0
M=D                                                          // [17651] pop temp 0
@SP                                                          // [17652] pop pointer 1
AM=M-1                                                       // [17653] pop pointer 1
D=M                                                          // [17654] pop pointer 1
@4                                                           // [17655] pop pointer 1
M=D                                                          // [17656] pop pointer 1
@5                                                           // [17657] push temp 0
D=M                                                          // [17658] push temp 0
@SP                                                          // [17659] push temp 0
M=M+1                                                        // [17660] push temp 0
A=M-1                                                        // [17661] push temp 0
M=D                                                          // [17662] push temp 0
@SP                                                          // [17663] pop that 0
AM=M-1                                                       // [17664] pop that 0
D=M                                                          // [17665] pop that 0
@R13                                                         // [17666] pop that 0
M=D                                                          // [17667] pop that 0
@THAT                                                        // [17668] pop that 0
D=M                                                          // [17669] pop that 0
@0                                                           // [17670] pop that 0
D=D+A                                                        // [17671] pop that 0
@R14                                                         // [17672] pop that 0
M=D                                                          // [17673] pop that 0
@R13                                                         // [17674] pop that 0
D=M                                                          // [17675] pop that 0
@R14                                                         // [17676] pop that 0
A=M                                                          // [17677] pop that 0
M=D                                                          // [17678] pop that 0
@SP                                                          // [17679] push constant 1
M=M+1                                                        // [17680] push constant 1
A=M-1                                                        // [17681] push constant 1
M=1                                                          // [17682] push constant 1
@LCL                                                         // [17683] push local 0
D=M                                                          // [17684] push local 0
@0                                                           // [17685] push local 0
A=D+A                                                        // [17686] push local 0
D=M                                                          // [17687] push local 0
@SP                                                          // [17688] push local 0
M=M+1                                                        // [17689] push local 0
A=M-1                                                        // [17690] push local 0
M=D                                                          // [17691] push local 0
@SP                                                          // [17692] add
AM=M-1                                                       // [17693] add
D=M                                                          // [17694] add
A=A-1                                                        // [17695] add
M=D+M                                                        // [17696] add
@ARG                                                         // [17697] push argument 2
D=M                                                          // [17698] push argument 2
@2                                                           // [17699] push argument 2
A=D+A                                                        // [17700] push argument 2
D=M                                                          // [17701] push argument 2
@SP                                                          // [17702] push argument 2
M=M+1                                                        // [17703] push argument 2
A=M-1                                                        // [17704] push argument 2
M=D                                                          // [17705] push argument 2
@SP                                                          // [17706] pop temp 0
AM=M-1                                                       // [17707] pop temp 0
D=M                                                          // [17708] pop temp 0
@5                                                           // [17709] pop temp 0
M=D                                                          // [17710] pop temp 0
@SP                                                          // [17711] pop pointer 1
AM=M-1                                                       // [17712] pop pointer 1
D=M                                                          // [17713] pop pointer 1
@4                                                           // [17714] pop pointer 1
M=D                                                          // [17715] pop pointer 1
@5                                                           // [17716] push temp 0
D=M                                                          // [17717] push temp 0
@SP                                                          // [17718] push temp 0
M=M+1                                                        // [17719] push temp 0
A=M-1                                                        // [17720] push temp 0
M=D                                                          // [17721] push temp 0
@SP                                                          // [17722] pop that 0
AM=M-1                                                       // [17723] pop that 0
D=M                                                          // [17724] pop that 0
@R13                                                         // [17725] pop that 0
M=D                                                          // [17726] pop that 0
@THAT                                                        // [17727] pop that 0
D=M                                                          // [17728] pop that 0
@0                                                           // [17729] pop that 0
D=D+A                                                        // [17730] pop that 0
@R14                                                         // [17731] pop that 0
M=D                                                          // [17732] pop that 0
@R13                                                         // [17733] pop that 0
D=M                                                          // [17734] pop that 0
@R14                                                         // [17735] pop that 0
A=M                                                          // [17736] pop that 0
M=D                                                          // [17737] pop that 0
@SP                                                          // [17738] push constant 2
M=M+1                                                        // [17739] push constant 2
A=M-1                                                        // [17740] push constant 2
M=1                                                          // [17741] push constant 2
M=M+1                                                        // [17742] push constant 2
@LCL                                                         // [17743] push local 0
D=M                                                          // [17744] push local 0
@0                                                           // [17745] push local 0
A=D+A                                                        // [17746] push local 0
D=M                                                          // [17747] push local 0
@SP                                                          // [17748] push local 0
M=M+1                                                        // [17749] push local 0
A=M-1                                                        // [17750] push local 0
M=D                                                          // [17751] push local 0
@SP                                                          // [17752] add
AM=M-1                                                       // [17753] add
D=M                                                          // [17754] add
A=A-1                                                        // [17755] add
M=D+M                                                        // [17756] add
@ARG                                                         // [17757] push argument 3
D=M                                                          // [17758] push argument 3
@3                                                           // [17759] push argument 3
A=D+A                                                        // [17760] push argument 3
D=M                                                          // [17761] push argument 3
@SP                                                          // [17762] push argument 3
M=M+1                                                        // [17763] push argument 3
A=M-1                                                        // [17764] push argument 3
M=D                                                          // [17765] push argument 3
@SP                                                          // [17766] pop temp 0
AM=M-1                                                       // [17767] pop temp 0
D=M                                                          // [17768] pop temp 0
@5                                                           // [17769] pop temp 0
M=D                                                          // [17770] pop temp 0
@SP                                                          // [17771] pop pointer 1
AM=M-1                                                       // [17772] pop pointer 1
D=M                                                          // [17773] pop pointer 1
@4                                                           // [17774] pop pointer 1
M=D                                                          // [17775] pop pointer 1
@5                                                           // [17776] push temp 0
D=M                                                          // [17777] push temp 0
@SP                                                          // [17778] push temp 0
M=M+1                                                        // [17779] push temp 0
A=M-1                                                        // [17780] push temp 0
M=D                                                          // [17781] push temp 0
@SP                                                          // [17782] pop that 0
AM=M-1                                                       // [17783] pop that 0
D=M                                                          // [17784] pop that 0
@R13                                                         // [17785] pop that 0
M=D                                                          // [17786] pop that 0
@THAT                                                        // [17787] pop that 0
D=M                                                          // [17788] pop that 0
@0                                                           // [17789] pop that 0
D=D+A                                                        // [17790] pop that 0
@R14                                                         // [17791] pop that 0
M=D                                                          // [17792] pop that 0
@R13                                                         // [17793] pop that 0
D=M                                                          // [17794] pop that 0
@R14                                                         // [17795] pop that 0
A=M                                                          // [17796] pop that 0
M=D                                                          // [17797] pop that 0
@3                                                           // [17798] push constant 3
D=A                                                          // [17799] push constant 3
@SP                                                          // [17800] push constant 3
M=M+1                                                        // [17801] push constant 3
A=M-1                                                        // [17802] push constant 3
M=D                                                          // [17803] push constant 3
@LCL                                                         // [17804] push local 0
D=M                                                          // [17805] push local 0
@0                                                           // [17806] push local 0
A=D+A                                                        // [17807] push local 0
D=M                                                          // [17808] push local 0
@SP                                                          // [17809] push local 0
M=M+1                                                        // [17810] push local 0
A=M-1                                                        // [17811] push local 0
M=D                                                          // [17812] push local 0
@SP                                                          // [17813] add
AM=M-1                                                       // [17814] add
D=M                                                          // [17815] add
A=A-1                                                        // [17816] add
M=D+M                                                        // [17817] add
@ARG                                                         // [17818] push argument 4
D=M                                                          // [17819] push argument 4
@4                                                           // [17820] push argument 4
A=D+A                                                        // [17821] push argument 4
D=M                                                          // [17822] push argument 4
@SP                                                          // [17823] push argument 4
M=M+1                                                        // [17824] push argument 4
A=M-1                                                        // [17825] push argument 4
M=D                                                          // [17826] push argument 4
@SP                                                          // [17827] pop temp 0
AM=M-1                                                       // [17828] pop temp 0
D=M                                                          // [17829] pop temp 0
@5                                                           // [17830] pop temp 0
M=D                                                          // [17831] pop temp 0
@SP                                                          // [17832] pop pointer 1
AM=M-1                                                       // [17833] pop pointer 1
D=M                                                          // [17834] pop pointer 1
@4                                                           // [17835] pop pointer 1
M=D                                                          // [17836] pop pointer 1
@5                                                           // [17837] push temp 0
D=M                                                          // [17838] push temp 0
@SP                                                          // [17839] push temp 0
M=M+1                                                        // [17840] push temp 0
A=M-1                                                        // [17841] push temp 0
M=D                                                          // [17842] push temp 0
@SP                                                          // [17843] pop that 0
AM=M-1                                                       // [17844] pop that 0
D=M                                                          // [17845] pop that 0
@R13                                                         // [17846] pop that 0
M=D                                                          // [17847] pop that 0
@THAT                                                        // [17848] pop that 0
D=M                                                          // [17849] pop that 0
@0                                                           // [17850] pop that 0
D=D+A                                                        // [17851] pop that 0
@R14                                                         // [17852] pop that 0
M=D                                                          // [17853] pop that 0
@R13                                                         // [17854] pop that 0
D=M                                                          // [17855] pop that 0
@R14                                                         // [17856] pop that 0
A=M                                                          // [17857] pop that 0
M=D                                                          // [17858] pop that 0
@4                                                           // [17859] push constant 4
D=A                                                          // [17860] push constant 4
@SP                                                          // [17861] push constant 4
M=M+1                                                        // [17862] push constant 4
A=M-1                                                        // [17863] push constant 4
M=D                                                          // [17864] push constant 4
@LCL                                                         // [17865] push local 0
D=M                                                          // [17866] push local 0
@0                                                           // [17867] push local 0
A=D+A                                                        // [17868] push local 0
D=M                                                          // [17869] push local 0
@SP                                                          // [17870] push local 0
M=M+1                                                        // [17871] push local 0
A=M-1                                                        // [17872] push local 0
M=D                                                          // [17873] push local 0
@SP                                                          // [17874] add
AM=M-1                                                       // [17875] add
D=M                                                          // [17876] add
A=A-1                                                        // [17877] add
M=D+M                                                        // [17878] add
@ARG                                                         // [17879] push argument 5
D=M                                                          // [17880] push argument 5
@5                                                           // [17881] push argument 5
A=D+A                                                        // [17882] push argument 5
D=M                                                          // [17883] push argument 5
@SP                                                          // [17884] push argument 5
M=M+1                                                        // [17885] push argument 5
A=M-1                                                        // [17886] push argument 5
M=D                                                          // [17887] push argument 5
@SP                                                          // [17888] pop temp 0
AM=M-1                                                       // [17889] pop temp 0
D=M                                                          // [17890] pop temp 0
@5                                                           // [17891] pop temp 0
M=D                                                          // [17892] pop temp 0
@SP                                                          // [17893] pop pointer 1
AM=M-1                                                       // [17894] pop pointer 1
D=M                                                          // [17895] pop pointer 1
@4                                                           // [17896] pop pointer 1
M=D                                                          // [17897] pop pointer 1
@5                                                           // [17898] push temp 0
D=M                                                          // [17899] push temp 0
@SP                                                          // [17900] push temp 0
M=M+1                                                        // [17901] push temp 0
A=M-1                                                        // [17902] push temp 0
M=D                                                          // [17903] push temp 0
@SP                                                          // [17904] pop that 0
AM=M-1                                                       // [17905] pop that 0
D=M                                                          // [17906] pop that 0
@R13                                                         // [17907] pop that 0
M=D                                                          // [17908] pop that 0
@THAT                                                        // [17909] pop that 0
D=M                                                          // [17910] pop that 0
@0                                                           // [17911] pop that 0
D=D+A                                                        // [17912] pop that 0
@R14                                                         // [17913] pop that 0
M=D                                                          // [17914] pop that 0
@R13                                                         // [17915] pop that 0
D=M                                                          // [17916] pop that 0
@R14                                                         // [17917] pop that 0
A=M                                                          // [17918] pop that 0
M=D                                                          // [17919] pop that 0
@5                                                           // [17920] push constant 5
D=A                                                          // [17921] push constant 5
@SP                                                          // [17922] push constant 5
M=M+1                                                        // [17923] push constant 5
A=M-1                                                        // [17924] push constant 5
M=D                                                          // [17925] push constant 5
@LCL                                                         // [17926] push local 0
D=M                                                          // [17927] push local 0
@0                                                           // [17928] push local 0
A=D+A                                                        // [17929] push local 0
D=M                                                          // [17930] push local 0
@SP                                                          // [17931] push local 0
M=M+1                                                        // [17932] push local 0
A=M-1                                                        // [17933] push local 0
M=D                                                          // [17934] push local 0
@SP                                                          // [17935] add
AM=M-1                                                       // [17936] add
D=M                                                          // [17937] add
A=A-1                                                        // [17938] add
M=D+M                                                        // [17939] add
@ARG                                                         // [17940] push argument 6
D=M                                                          // [17941] push argument 6
@6                                                           // [17942] push argument 6
A=D+A                                                        // [17943] push argument 6
D=M                                                          // [17944] push argument 6
@SP                                                          // [17945] push argument 6
M=M+1                                                        // [17946] push argument 6
A=M-1                                                        // [17947] push argument 6
M=D                                                          // [17948] push argument 6
@SP                                                          // [17949] pop temp 0
AM=M-1                                                       // [17950] pop temp 0
D=M                                                          // [17951] pop temp 0
@5                                                           // [17952] pop temp 0
M=D                                                          // [17953] pop temp 0
@SP                                                          // [17954] pop pointer 1
AM=M-1                                                       // [17955] pop pointer 1
D=M                                                          // [17956] pop pointer 1
@4                                                           // [17957] pop pointer 1
M=D                                                          // [17958] pop pointer 1
@5                                                           // [17959] push temp 0
D=M                                                          // [17960] push temp 0
@SP                                                          // [17961] push temp 0
M=M+1                                                        // [17962] push temp 0
A=M-1                                                        // [17963] push temp 0
M=D                                                          // [17964] push temp 0
@SP                                                          // [17965] pop that 0
AM=M-1                                                       // [17966] pop that 0
D=M                                                          // [17967] pop that 0
@R13                                                         // [17968] pop that 0
M=D                                                          // [17969] pop that 0
@THAT                                                        // [17970] pop that 0
D=M                                                          // [17971] pop that 0
@0                                                           // [17972] pop that 0
D=D+A                                                        // [17973] pop that 0
@R14                                                         // [17974] pop that 0
M=D                                                          // [17975] pop that 0
@R13                                                         // [17976] pop that 0
D=M                                                          // [17977] pop that 0
@R14                                                         // [17978] pop that 0
A=M                                                          // [17979] pop that 0
M=D                                                          // [17980] pop that 0
@6                                                           // [17981] push constant 6
D=A                                                          // [17982] push constant 6
@SP                                                          // [17983] push constant 6
M=M+1                                                        // [17984] push constant 6
A=M-1                                                        // [17985] push constant 6
M=D                                                          // [17986] push constant 6
@LCL                                                         // [17987] push local 0
D=M                                                          // [17988] push local 0
@0                                                           // [17989] push local 0
A=D+A                                                        // [17990] push local 0
D=M                                                          // [17991] push local 0
@SP                                                          // [17992] push local 0
M=M+1                                                        // [17993] push local 0
A=M-1                                                        // [17994] push local 0
M=D                                                          // [17995] push local 0
@SP                                                          // [17996] add
AM=M-1                                                       // [17997] add
D=M                                                          // [17998] add
A=A-1                                                        // [17999] add
M=D+M                                                        // [18000] add
@ARG                                                         // [18001] push argument 7
D=M                                                          // [18002] push argument 7
@7                                                           // [18003] push argument 7
A=D+A                                                        // [18004] push argument 7
D=M                                                          // [18005] push argument 7
@SP                                                          // [18006] push argument 7
M=M+1                                                        // [18007] push argument 7
A=M-1                                                        // [18008] push argument 7
M=D                                                          // [18009] push argument 7
@SP                                                          // [18010] pop temp 0
AM=M-1                                                       // [18011] pop temp 0
D=M                                                          // [18012] pop temp 0
@5                                                           // [18013] pop temp 0
M=D                                                          // [18014] pop temp 0
@SP                                                          // [18015] pop pointer 1
AM=M-1                                                       // [18016] pop pointer 1
D=M                                                          // [18017] pop pointer 1
@4                                                           // [18018] pop pointer 1
M=D                                                          // [18019] pop pointer 1
@5                                                           // [18020] push temp 0
D=M                                                          // [18021] push temp 0
@SP                                                          // [18022] push temp 0
M=M+1                                                        // [18023] push temp 0
A=M-1                                                        // [18024] push temp 0
M=D                                                          // [18025] push temp 0
@SP                                                          // [18026] pop that 0
AM=M-1                                                       // [18027] pop that 0
D=M                                                          // [18028] pop that 0
@R13                                                         // [18029] pop that 0
M=D                                                          // [18030] pop that 0
@THAT                                                        // [18031] pop that 0
D=M                                                          // [18032] pop that 0
@0                                                           // [18033] pop that 0
D=D+A                                                        // [18034] pop that 0
@R14                                                         // [18035] pop that 0
M=D                                                          // [18036] pop that 0
@R13                                                         // [18037] pop that 0
D=M                                                          // [18038] pop that 0
@R14                                                         // [18039] pop that 0
A=M                                                          // [18040] pop that 0
M=D                                                          // [18041] pop that 0
@7                                                           // [18042] push constant 7
D=A                                                          // [18043] push constant 7
@SP                                                          // [18044] push constant 7
M=M+1                                                        // [18045] push constant 7
A=M-1                                                        // [18046] push constant 7
M=D                                                          // [18047] push constant 7
@LCL                                                         // [18048] push local 0
D=M                                                          // [18049] push local 0
@0                                                           // [18050] push local 0
A=D+A                                                        // [18051] push local 0
D=M                                                          // [18052] push local 0
@SP                                                          // [18053] push local 0
M=M+1                                                        // [18054] push local 0
A=M-1                                                        // [18055] push local 0
M=D                                                          // [18056] push local 0
@SP                                                          // [18057] add
AM=M-1                                                       // [18058] add
D=M                                                          // [18059] add
A=A-1                                                        // [18060] add
M=D+M                                                        // [18061] add
@ARG                                                         // [18062] push argument 8
D=M                                                          // [18063] push argument 8
@8                                                           // [18064] push argument 8
A=D+A                                                        // [18065] push argument 8
D=M                                                          // [18066] push argument 8
@SP                                                          // [18067] push argument 8
M=M+1                                                        // [18068] push argument 8
A=M-1                                                        // [18069] push argument 8
M=D                                                          // [18070] push argument 8
@SP                                                          // [18071] pop temp 0
AM=M-1                                                       // [18072] pop temp 0
D=M                                                          // [18073] pop temp 0
@5                                                           // [18074] pop temp 0
M=D                                                          // [18075] pop temp 0
@SP                                                          // [18076] pop pointer 1
AM=M-1                                                       // [18077] pop pointer 1
D=M                                                          // [18078] pop pointer 1
@4                                                           // [18079] pop pointer 1
M=D                                                          // [18080] pop pointer 1
@5                                                           // [18081] push temp 0
D=M                                                          // [18082] push temp 0
@SP                                                          // [18083] push temp 0
M=M+1                                                        // [18084] push temp 0
A=M-1                                                        // [18085] push temp 0
M=D                                                          // [18086] push temp 0
@SP                                                          // [18087] pop that 0
AM=M-1                                                       // [18088] pop that 0
D=M                                                          // [18089] pop that 0
@R13                                                         // [18090] pop that 0
M=D                                                          // [18091] pop that 0
@THAT                                                        // [18092] pop that 0
D=M                                                          // [18093] pop that 0
@0                                                           // [18094] pop that 0
D=D+A                                                        // [18095] pop that 0
@R14                                                         // [18096] pop that 0
M=D                                                          // [18097] pop that 0
@R13                                                         // [18098] pop that 0
D=M                                                          // [18099] pop that 0
@R14                                                         // [18100] pop that 0
A=M                                                          // [18101] pop that 0
M=D                                                          // [18102] pop that 0
@8                                                           // [18103] push constant 8
D=A                                                          // [18104] push constant 8
@SP                                                          // [18105] push constant 8
M=M+1                                                        // [18106] push constant 8
A=M-1                                                        // [18107] push constant 8
M=D                                                          // [18108] push constant 8
@LCL                                                         // [18109] push local 0
D=M                                                          // [18110] push local 0
@0                                                           // [18111] push local 0
A=D+A                                                        // [18112] push local 0
D=M                                                          // [18113] push local 0
@SP                                                          // [18114] push local 0
M=M+1                                                        // [18115] push local 0
A=M-1                                                        // [18116] push local 0
M=D                                                          // [18117] push local 0
@SP                                                          // [18118] add
AM=M-1                                                       // [18119] add
D=M                                                          // [18120] add
A=A-1                                                        // [18121] add
M=D+M                                                        // [18122] add
@ARG                                                         // [18123] push argument 9
D=M                                                          // [18124] push argument 9
@9                                                           // [18125] push argument 9
A=D+A                                                        // [18126] push argument 9
D=M                                                          // [18127] push argument 9
@SP                                                          // [18128] push argument 9
M=M+1                                                        // [18129] push argument 9
A=M-1                                                        // [18130] push argument 9
M=D                                                          // [18131] push argument 9
@SP                                                          // [18132] pop temp 0
AM=M-1                                                       // [18133] pop temp 0
D=M                                                          // [18134] pop temp 0
@5                                                           // [18135] pop temp 0
M=D                                                          // [18136] pop temp 0
@SP                                                          // [18137] pop pointer 1
AM=M-1                                                       // [18138] pop pointer 1
D=M                                                          // [18139] pop pointer 1
@4                                                           // [18140] pop pointer 1
M=D                                                          // [18141] pop pointer 1
@5                                                           // [18142] push temp 0
D=M                                                          // [18143] push temp 0
@SP                                                          // [18144] push temp 0
M=M+1                                                        // [18145] push temp 0
A=M-1                                                        // [18146] push temp 0
M=D                                                          // [18147] push temp 0
@SP                                                          // [18148] pop that 0
AM=M-1                                                       // [18149] pop that 0
D=M                                                          // [18150] pop that 0
@R13                                                         // [18151] pop that 0
M=D                                                          // [18152] pop that 0
@THAT                                                        // [18153] pop that 0
D=M                                                          // [18154] pop that 0
@0                                                           // [18155] pop that 0
D=D+A                                                        // [18156] pop that 0
@R14                                                         // [18157] pop that 0
M=D                                                          // [18158] pop that 0
@R13                                                         // [18159] pop that 0
D=M                                                          // [18160] pop that 0
@R14                                                         // [18161] pop that 0
A=M                                                          // [18162] pop that 0
M=D                                                          // [18163] pop that 0
@9                                                           // [18164] push constant 9
D=A                                                          // [18165] push constant 9
@SP                                                          // [18166] push constant 9
M=M+1                                                        // [18167] push constant 9
A=M-1                                                        // [18168] push constant 9
M=D                                                          // [18169] push constant 9
@LCL                                                         // [18170] push local 0
D=M                                                          // [18171] push local 0
@0                                                           // [18172] push local 0
A=D+A                                                        // [18173] push local 0
D=M                                                          // [18174] push local 0
@SP                                                          // [18175] push local 0
M=M+1                                                        // [18176] push local 0
A=M-1                                                        // [18177] push local 0
M=D                                                          // [18178] push local 0
@SP                                                          // [18179] add
AM=M-1                                                       // [18180] add
D=M                                                          // [18181] add
A=A-1                                                        // [18182] add
M=D+M                                                        // [18183] add
@ARG                                                         // [18184] push argument 10
D=M                                                          // [18185] push argument 10
@10                                                          // [18186] push argument 10
A=D+A                                                        // [18187] push argument 10
D=M                                                          // [18188] push argument 10
@SP                                                          // [18189] push argument 10
M=M+1                                                        // [18190] push argument 10
A=M-1                                                        // [18191] push argument 10
M=D                                                          // [18192] push argument 10
@SP                                                          // [18193] pop temp 0
AM=M-1                                                       // [18194] pop temp 0
D=M                                                          // [18195] pop temp 0
@5                                                           // [18196] pop temp 0
M=D                                                          // [18197] pop temp 0
@SP                                                          // [18198] pop pointer 1
AM=M-1                                                       // [18199] pop pointer 1
D=M                                                          // [18200] pop pointer 1
@4                                                           // [18201] pop pointer 1
M=D                                                          // [18202] pop pointer 1
@5                                                           // [18203] push temp 0
D=M                                                          // [18204] push temp 0
@SP                                                          // [18205] push temp 0
M=M+1                                                        // [18206] push temp 0
A=M-1                                                        // [18207] push temp 0
M=D                                                          // [18208] push temp 0
@SP                                                          // [18209] pop that 0
AM=M-1                                                       // [18210] pop that 0
D=M                                                          // [18211] pop that 0
@R13                                                         // [18212] pop that 0
M=D                                                          // [18213] pop that 0
@THAT                                                        // [18214] pop that 0
D=M                                                          // [18215] pop that 0
@0                                                           // [18216] pop that 0
D=D+A                                                        // [18217] pop that 0
@R14                                                         // [18218] pop that 0
M=D                                                          // [18219] pop that 0
@R13                                                         // [18220] pop that 0
D=M                                                          // [18221] pop that 0
@R14                                                         // [18222] pop that 0
A=M                                                          // [18223] pop that 0
M=D                                                          // [18224] pop that 0
@10                                                          // [18225] push constant 10
D=A                                                          // [18226] push constant 10
@SP                                                          // [18227] push constant 10
M=M+1                                                        // [18228] push constant 10
A=M-1                                                        // [18229] push constant 10
M=D                                                          // [18230] push constant 10
@LCL                                                         // [18231] push local 0
D=M                                                          // [18232] push local 0
@0                                                           // [18233] push local 0
A=D+A                                                        // [18234] push local 0
D=M                                                          // [18235] push local 0
@SP                                                          // [18236] push local 0
M=M+1                                                        // [18237] push local 0
A=M-1                                                        // [18238] push local 0
M=D                                                          // [18239] push local 0
@SP                                                          // [18240] add
AM=M-1                                                       // [18241] add
D=M                                                          // [18242] add
A=A-1                                                        // [18243] add
M=D+M                                                        // [18244] add
@ARG                                                         // [18245] push argument 11
D=M                                                          // [18246] push argument 11
@11                                                          // [18247] push argument 11
A=D+A                                                        // [18248] push argument 11
D=M                                                          // [18249] push argument 11
@SP                                                          // [18250] push argument 11
M=M+1                                                        // [18251] push argument 11
A=M-1                                                        // [18252] push argument 11
M=D                                                          // [18253] push argument 11
@SP                                                          // [18254] pop temp 0
AM=M-1                                                       // [18255] pop temp 0
D=M                                                          // [18256] pop temp 0
@5                                                           // [18257] pop temp 0
M=D                                                          // [18258] pop temp 0
@SP                                                          // [18259] pop pointer 1
AM=M-1                                                       // [18260] pop pointer 1
D=M                                                          // [18261] pop pointer 1
@4                                                           // [18262] pop pointer 1
M=D                                                          // [18263] pop pointer 1
@5                                                           // [18264] push temp 0
D=M                                                          // [18265] push temp 0
@SP                                                          // [18266] push temp 0
M=M+1                                                        // [18267] push temp 0
A=M-1                                                        // [18268] push temp 0
M=D                                                          // [18269] push temp 0
@SP                                                          // [18270] pop that 0
AM=M-1                                                       // [18271] pop that 0
D=M                                                          // [18272] pop that 0
@R13                                                         // [18273] pop that 0
M=D                                                          // [18274] pop that 0
@THAT                                                        // [18275] pop that 0
D=M                                                          // [18276] pop that 0
@0                                                           // [18277] pop that 0
D=D+A                                                        // [18278] pop that 0
@R14                                                         // [18279] pop that 0
M=D                                                          // [18280] pop that 0
@R13                                                         // [18281] pop that 0
D=M                                                          // [18282] pop that 0
@R14                                                         // [18283] pop that 0
A=M                                                          // [18284] pop that 0
M=D                                                          // [18285] pop that 0
@SP                                                          // [18286] push constant 0
M=M+1                                                        // [18287] push constant 0
A=M-1                                                        // [18288] push constant 0
M=0                                                          // [18289] push constant 0
@RETURN                                                      // [18290] return
0;JEQ                                                        // [18291] return
(Output.getMap)                                              // [     ] function Output.getMap 0
@ARG                                                         // [18292] push argument 0
D=M                                                          // [18293] push argument 0
@0                                                           // [18294] push argument 0
A=D+A                                                        // [18295] push argument 0
D=M                                                          // [18296] push argument 0
@SP                                                          // [18297] push argument 0
M=M+1                                                        // [18298] push argument 0
A=M-1                                                        // [18299] push argument 0
M=D                                                          // [18300] push argument 0
@32                                                          // [18301] push constant 32
D=A                                                          // [18302] push constant 32
@SP                                                          // [18303] push constant 32
M=M+1                                                        // [18304] push constant 32
A=M-1                                                        // [18305] push constant 32
M=D                                                          // [18306] push constant 32
@CONTINUE_LT_20                                              // [18307] lt
D=A                                                          // [18308] lt
@R13                                                         // [18309] lt
M=D                                                          // [18310] lt
@SP                                                          // [18311] lt
AM=M-1                                                       // [18312] lt
D=M                                                          // [18313] lt
A=A-1                                                        // [18314] lt
D=D-M                                                        // [18315] lt
@INTERNAL_LT                                                 // [18316] lt
0;JEQ                                                        // [18317] lt
(CONTINUE_LT_20)                                             // [     ] lt
@ARG                                                         // [18318] push argument 0
D=M                                                          // [18319] push argument 0
@0                                                           // [18320] push argument 0
A=D+A                                                        // [18321] push argument 0
D=M                                                          // [18322] push argument 0
@SP                                                          // [18323] push argument 0
M=M+1                                                        // [18324] push argument 0
A=M-1                                                        // [18325] push argument 0
M=D                                                          // [18326] push argument 0
@126                                                         // [18327] push constant 126
D=A                                                          // [18328] push constant 126
@SP                                                          // [18329] push constant 126
M=M+1                                                        // [18330] push constant 126
A=M-1                                                        // [18331] push constant 126
M=D                                                          // [18332] push constant 126
@CONTINUE_GT_11                                              // [18333] gt
D=A                                                          // [18334] gt
@R13                                                         // [18335] gt
M=D                                                          // [18336] gt
@SP                                                          // [18337] gt
AM=M-1                                                       // [18338] gt
D=M                                                          // [18339] gt
A=A-1                                                        // [18340] gt
D=D-M                                                        // [18341] gt
@INTERNAL_GT                                                 // [18342] gt
0;JEQ                                                        // [18343] gt
(CONTINUE_GT_11)                                             // [     ] gt
@SP                                                          // [18344] or
AM=M-1                                                       // [18345] or
D=M                                                          // [18346] or
A=A-1                                                        // [18347] or
M=D|M                                                        // [18348] or
@SP                                                          // [18349] if-goto IF_TRUE0
AM=M-1                                                       // [18350] if-goto IF_TRUE0
D=M                                                          // [18351] if-goto IF_TRUE0
@Output.getMap$IF_TRUE0                                      // [18352] if-goto IF_TRUE0
D;JNE                                                        // [18353] if-goto IF_TRUE0
@Output.getMap$IF_FALSE0                                     // [18354] goto IF_FALSE0
0;JEQ                                                        // [18355] goto IF_FALSE0
(Output.getMap$IF_TRUE0)                                     // [     ] label IF_TRUE0
@SP                                                          // [18356] push constant 0
M=M+1                                                        // [18357] push constant 0
A=M-1                                                        // [18358] push constant 0
M=0                                                          // [18359] push constant 0
@SP                                                          // [18360] pop argument 0
AM=M-1                                                       // [18361] pop argument 0
D=M                                                          // [18362] pop argument 0
@R13                                                         // [18363] pop argument 0
M=D                                                          // [18364] pop argument 0
@ARG                                                         // [18365] pop argument 0
D=M                                                          // [18366] pop argument 0
@0                                                           // [18367] pop argument 0
D=D+A                                                        // [18368] pop argument 0
@R14                                                         // [18369] pop argument 0
M=D                                                          // [18370] pop argument 0
@R13                                                         // [18371] pop argument 0
D=M                                                          // [18372] pop argument 0
@R14                                                         // [18373] pop argument 0
A=M                                                          // [18374] pop argument 0
M=D                                                          // [18375] pop argument 0
(Output.getMap$IF_FALSE0)                                    // [     ] label IF_FALSE0
@ARG                                                         // [18376] push argument 0
D=M                                                          // [18377] push argument 0
@0                                                           // [18378] push argument 0
A=D+A                                                        // [18379] push argument 0
D=M                                                          // [18380] push argument 0
@SP                                                          // [18381] push argument 0
M=M+1                                                        // [18382] push argument 0
A=M-1                                                        // [18383] push argument 0
M=D                                                          // [18384] push argument 0
@Output.0                                                    // [18385] push static 0
D=M                                                          // [18386] push static 0
@SP                                                          // [18387] push static 0
M=M+1                                                        // [18388] push static 0
A=M-1                                                        // [18389] push static 0
M=D                                                          // [18390] push static 0
@SP                                                          // [18391] add
AM=M-1                                                       // [18392] add
D=M                                                          // [18393] add
A=A-1                                                        // [18394] add
M=D+M                                                        // [18395] add
@SP                                                          // [18396] pop pointer 1
AM=M-1                                                       // [18397] pop pointer 1
D=M                                                          // [18398] pop pointer 1
@4                                                           // [18399] pop pointer 1
M=D                                                          // [18400] pop pointer 1
@THAT                                                        // [18401] push that 0
D=M                                                          // [18402] push that 0
@0                                                           // [18403] push that 0
A=D+A                                                        // [18404] push that 0
D=M                                                          // [18405] push that 0
@SP                                                          // [18406] push that 0
M=M+1                                                        // [18407] push that 0
A=M-1                                                        // [18408] push that 0
M=D                                                          // [18409] push that 0
@RETURN                                                      // [18410] return
0;JEQ                                                        // [18411] return
(Output.moveCursor)                                          // [     ] function Output.moveCursor 0
@ARG                                                         // [18412] push argument 1
D=M                                                          // [18413] push argument 1
@1                                                           // [18414] push argument 1
A=D+A                                                        // [18415] push argument 1
D=M                                                          // [18416] push argument 1
@SP                                                          // [18417] push argument 1
M=M+1                                                        // [18418] push argument 1
A=M-1                                                        // [18419] push argument 1
M=D                                                          // [18420] push argument 1
@63                                                          // [18421] push constant 63
D=A                                                          // [18422] push constant 63
@SP                                                          // [18423] push constant 63
M=M+1                                                        // [18424] push constant 63
A=M-1                                                        // [18425] push constant 63
M=D                                                          // [18426] push constant 63
@CONTINUE_GT_12                                              // [18427] gt
D=A                                                          // [18428] gt
@R13                                                         // [18429] gt
M=D                                                          // [18430] gt
@SP                                                          // [18431] gt
AM=M-1                                                       // [18432] gt
D=M                                                          // [18433] gt
A=A-1                                                        // [18434] gt
D=D-M                                                        // [18435] gt
@INTERNAL_GT                                                 // [18436] gt
0;JEQ                                                        // [18437] gt
(CONTINUE_GT_12)                                             // [     ] gt
@ARG                                                         // [18438] push argument 1
D=M                                                          // [18439] push argument 1
@1                                                           // [18440] push argument 1
A=D+A                                                        // [18441] push argument 1
D=M                                                          // [18442] push argument 1
@SP                                                          // [18443] push argument 1
M=M+1                                                        // [18444] push argument 1
A=M-1                                                        // [18445] push argument 1
M=D                                                          // [18446] push argument 1
@SP                                                          // [18447] push constant 0
M=M+1                                                        // [18448] push constant 0
A=M-1                                                        // [18449] push constant 0
M=0                                                          // [18450] push constant 0
@CONTINUE_LT_21                                              // [18451] lt
D=A                                                          // [18452] lt
@R13                                                         // [18453] lt
M=D                                                          // [18454] lt
@SP                                                          // [18455] lt
AM=M-1                                                       // [18456] lt
D=M                                                          // [18457] lt
A=A-1                                                        // [18458] lt
D=D-M                                                        // [18459] lt
@INTERNAL_LT                                                 // [18460] lt
0;JEQ                                                        // [18461] lt
(CONTINUE_LT_21)                                             // [     ] lt
@SP                                                          // [18462] or
AM=M-1                                                       // [18463] or
D=M                                                          // [18464] or
A=A-1                                                        // [18465] or
M=D|M                                                        // [18466] or
@ARG                                                         // [18467] push argument 0
D=M                                                          // [18468] push argument 0
@0                                                           // [18469] push argument 0
A=D+A                                                        // [18470] push argument 0
D=M                                                          // [18471] push argument 0
@SP                                                          // [18472] push argument 0
M=M+1                                                        // [18473] push argument 0
A=M-1                                                        // [18474] push argument 0
M=D                                                          // [18475] push argument 0
@SP                                                          // [18476] push constant 0
M=M+1                                                        // [18477] push constant 0
A=M-1                                                        // [18478] push constant 0
M=0                                                          // [18479] push constant 0
@CONTINUE_LT_22                                              // [18480] lt
D=A                                                          // [18481] lt
@R13                                                         // [18482] lt
M=D                                                          // [18483] lt
@SP                                                          // [18484] lt
AM=M-1                                                       // [18485] lt
D=M                                                          // [18486] lt
A=A-1                                                        // [18487] lt
D=D-M                                                        // [18488] lt
@INTERNAL_LT                                                 // [18489] lt
0;JEQ                                                        // [18490] lt
(CONTINUE_LT_22)                                             // [     ] lt
@ARG                                                         // [18491] push argument 0
D=M                                                          // [18492] push argument 0
@0                                                           // [18493] push argument 0
A=D+A                                                        // [18494] push argument 0
D=M                                                          // [18495] push argument 0
@SP                                                          // [18496] push argument 0
M=M+1                                                        // [18497] push argument 0
A=M-1                                                        // [18498] push argument 0
M=D                                                          // [18499] push argument 0
@22                                                          // [18500] push constant 22
D=A                                                          // [18501] push constant 22
@SP                                                          // [18502] push constant 22
M=M+1                                                        // [18503] push constant 22
A=M-1                                                        // [18504] push constant 22
M=D                                                          // [18505] push constant 22
@CONTINUE_GT_13                                              // [18506] gt
D=A                                                          // [18507] gt
@R13                                                         // [18508] gt
M=D                                                          // [18509] gt
@SP                                                          // [18510] gt
AM=M-1                                                       // [18511] gt
D=M                                                          // [18512] gt
A=A-1                                                        // [18513] gt
D=D-M                                                        // [18514] gt
@INTERNAL_GT                                                 // [18515] gt
0;JEQ                                                        // [18516] gt
(CONTINUE_GT_13)                                             // [     ] gt
@SP                                                          // [18517] or
AM=M-1                                                       // [18518] or
D=M                                                          // [18519] or
A=A-1                                                        // [18520] or
M=D|M                                                        // [18521] or
@SP                                                          // [18522] or
AM=M-1                                                       // [18523] or
D=M                                                          // [18524] or
A=A-1                                                        // [18525] or
M=D|M                                                        // [18526] or
@SP                                                          // [18527] if-goto IF_TRUE0
AM=M-1                                                       // [18528] if-goto IF_TRUE0
D=M                                                          // [18529] if-goto IF_TRUE0
@Output.moveCursor$IF_TRUE0                                  // [18530] if-goto IF_TRUE0
D;JNE                                                        // [18531] if-goto IF_TRUE0
@Output.moveCursor$IF_FALSE0                                 // [18532] goto IF_FALSE0
0;JEQ                                                        // [18533] goto IF_FALSE0
(Output.moveCursor$IF_TRUE0)                                 // [     ] label IF_TRUE0
@SP                                                          // [18534] push constant 1
M=M+1                                                        // [18535] push constant 1
A=M-1                                                        // [18536] push constant 1
M=1                                                          // [18537] push constant 1
@1                                                           // [18538] call Sys.error 1
D=A                                                          // [18539] call Sys.error 1
@R13                                                         // [18540] call Sys.error 1
M=D                                                          // [18541] call Sys.error 1
@Sys.error                                                   // [18542] call Sys.error 1
D=A                                                          // [18543] call Sys.error 1
@R14                                                         // [18544] call Sys.error 1
M=D                                                          // [18545] call Sys.error 1
@return-192                                                  // [18546] call Sys.error 1
D=A                                                          // [18547] call Sys.error 1
@CALL                                                        // [18548] call Sys.error 1
0;JEQ                                                        // [18549] call Sys.error 1
(return-192)                                                 // [     ] call Sys.error 1
@SP                                                          // [18550] pop temp 0
AM=M-1                                                       // [18551] pop temp 0
D=M                                                          // [18552] pop temp 0
@5                                                           // [18553] pop temp 0
M=D                                                          // [18554] pop temp 0
(Output.moveCursor$IF_FALSE0)                                // [     ] label IF_FALSE0
@ARG                                                         // [18555] push argument 1
D=M                                                          // [18556] push argument 1
@1                                                           // [18557] push argument 1
A=D+A                                                        // [18558] push argument 1
D=M                                                          // [18559] push argument 1
@SP                                                          // [18560] push argument 1
M=M+1                                                        // [18561] push argument 1
A=M-1                                                        // [18562] push argument 1
M=D                                                          // [18563] push argument 1
@SP                                                          // [18564] pop static 1
AM=M-1                                                       // [18565] pop static 1
D=M                                                          // [18566] pop static 1
@Output.1                                                    // [18567] pop static 1
M=D                                                          // [18568] pop static 1
@ARG                                                         // [18569] push argument 0
D=M                                                          // [18570] push argument 0
@0                                                           // [18571] push argument 0
A=D+A                                                        // [18572] push argument 0
D=M                                                          // [18573] push argument 0
@SP                                                          // [18574] push argument 0
M=M+1                                                        // [18575] push argument 0
A=M-1                                                        // [18576] push argument 0
M=D                                                          // [18577] push argument 0
@SP                                                          // [18578] pop static 2
AM=M-1                                                       // [18579] pop static 2
D=M                                                          // [18580] pop static 2
@Output.2                                                    // [18581] pop static 2
M=D                                                          // [18582] pop static 2
@32                                                          // [18583] push constant 32
D=A                                                          // [18584] push constant 32
@SP                                                          // [18585] push constant 32
M=M+1                                                        // [18586] push constant 32
A=M-1                                                        // [18587] push constant 32
M=D                                                          // [18588] push constant 32
@SP                                                          // [18589] push constant 0
M=M+1                                                        // [18590] push constant 0
A=M-1                                                        // [18591] push constant 0
M=0                                                          // [18592] push constant 0
@2                                                           // [18593] call Output.printCharInternal 2
D=A                                                          // [18594] call Output.printCharInternal 2
@R13                                                         // [18595] call Output.printCharInternal 2
M=D                                                          // [18596] call Output.printCharInternal 2
@Output.printCharInternal                                    // [18597] call Output.printCharInternal 2
D=A                                                          // [18598] call Output.printCharInternal 2
@R14                                                         // [18599] call Output.printCharInternal 2
M=D                                                          // [18600] call Output.printCharInternal 2
@return-193                                                  // [18601] call Output.printCharInternal 2
D=A                                                          // [18602] call Output.printCharInternal 2
@CALL                                                        // [18603] call Output.printCharInternal 2
0;JEQ                                                        // [18604] call Output.printCharInternal 2
(return-193)                                                 // [     ] call Output.printCharInternal 2
@SP                                                          // [18605] pop temp 0
AM=M-1                                                       // [18606] pop temp 0
D=M                                                          // [18607] pop temp 0
@5                                                           // [18608] pop temp 0
M=D                                                          // [18609] pop temp 0
@SP                                                          // [18610] push constant 0
M=M+1                                                        // [18611] push constant 0
A=M-1                                                        // [18612] push constant 0
M=0                                                          // [18613] push constant 0
@RETURN                                                      // [18614] return
0;JEQ                                                        // [18615] return
(Output.printChar)                                           // [     ] function Output.printChar 0
@ARG                                                         // [18616] push argument 0
D=M                                                          // [18617] push argument 0
@0                                                           // [18618] push argument 0
A=D+A                                                        // [18619] push argument 0
D=M                                                          // [18620] push argument 0
@SP                                                          // [18621] push argument 0
M=M+1                                                        // [18622] push argument 0
A=M-1                                                        // [18623] push argument 0
M=D                                                          // [18624] push argument 0
@SP                                                          // [18625] push constant 0
M=M+1                                                        // [18626] push constant 0
A=M-1                                                        // [18627] push constant 0
M=0                                                          // [18628] push constant 0
@SP                                                          // [18629] not
A=M-1                                                        // [18630] not
D=M                                                          // [18631] not
M=!D                                                         // [18632] not
@2                                                           // [18633] call Output.printCharInternal 2
D=A                                                          // [18634] call Output.printCharInternal 2
@R13                                                         // [18635] call Output.printCharInternal 2
M=D                                                          // [18636] call Output.printCharInternal 2
@Output.printCharInternal                                    // [18637] call Output.printCharInternal 2
D=A                                                          // [18638] call Output.printCharInternal 2
@R14                                                         // [18639] call Output.printCharInternal 2
M=D                                                          // [18640] call Output.printCharInternal 2
@return-194                                                  // [18641] call Output.printCharInternal 2
D=A                                                          // [18642] call Output.printCharInternal 2
@CALL                                                        // [18643] call Output.printCharInternal 2
0;JEQ                                                        // [18644] call Output.printCharInternal 2
(return-194)                                                 // [     ] call Output.printCharInternal 2
@SP                                                          // [18645] pop temp 0
AM=M-1                                                       // [18646] pop temp 0
D=M                                                          // [18647] pop temp 0
@5                                                           // [18648] pop temp 0
M=D                                                          // [18649] pop temp 0
@SP                                                          // [18650] push constant 0
M=M+1                                                        // [18651] push constant 0
A=M-1                                                        // [18652] push constant 0
M=0                                                          // [18653] push constant 0
@RETURN                                                      // [18654] return
0;JEQ                                                        // [18655] return
(Output.printCharInternal)                                   // [     ] function Output.printCharInternal 7
@SP                                                          // [18656] function Output.printCharInternal 7
A=M                                                          // [18657] function Output.printCharInternal 7
M=0                                                          // [18658] function Output.printCharInternal 7
@SP                                                          // [18659] function Output.printCharInternal 7
M=M+1                                                        // [18660] function Output.printCharInternal 7
@SP                                                          // [18661] function Output.printCharInternal 7
A=M                                                          // [18662] function Output.printCharInternal 7
M=0                                                          // [18663] function Output.printCharInternal 7
@SP                                                          // [18664] function Output.printCharInternal 7
M=M+1                                                        // [18665] function Output.printCharInternal 7
@SP                                                          // [18666] function Output.printCharInternal 7
A=M                                                          // [18667] function Output.printCharInternal 7
M=0                                                          // [18668] function Output.printCharInternal 7
@SP                                                          // [18669] function Output.printCharInternal 7
M=M+1                                                        // [18670] function Output.printCharInternal 7
@SP                                                          // [18671] function Output.printCharInternal 7
A=M                                                          // [18672] function Output.printCharInternal 7
M=0                                                          // [18673] function Output.printCharInternal 7
@SP                                                          // [18674] function Output.printCharInternal 7
M=M+1                                                        // [18675] function Output.printCharInternal 7
@SP                                                          // [18676] function Output.printCharInternal 7
A=M                                                          // [18677] function Output.printCharInternal 7
M=0                                                          // [18678] function Output.printCharInternal 7
@SP                                                          // [18679] function Output.printCharInternal 7
M=M+1                                                        // [18680] function Output.printCharInternal 7
@SP                                                          // [18681] function Output.printCharInternal 7
A=M                                                          // [18682] function Output.printCharInternal 7
M=0                                                          // [18683] function Output.printCharInternal 7
@SP                                                          // [18684] function Output.printCharInternal 7
M=M+1                                                        // [18685] function Output.printCharInternal 7
@SP                                                          // [18686] function Output.printCharInternal 7
A=M                                                          // [18687] function Output.printCharInternal 7
M=0                                                          // [18688] function Output.printCharInternal 7
@SP                                                          // [18689] function Output.printCharInternal 7
M=M+1                                                        // [18690] function Output.printCharInternal 7
@ARG                                                         // [18691] push argument 0
D=M                                                          // [18692] push argument 0
@0                                                           // [18693] push argument 0
A=D+A                                                        // [18694] push argument 0
D=M                                                          // [18695] push argument 0
@SP                                                          // [18696] push argument 0
M=M+1                                                        // [18697] push argument 0
A=M-1                                                        // [18698] push argument 0
M=D                                                          // [18699] push argument 0
@1                                                           // [18700] call Output.getMap 1
D=A                                                          // [18701] call Output.getMap 1
@R13                                                         // [18702] call Output.getMap 1
M=D                                                          // [18703] call Output.getMap 1
@Output.getMap                                               // [18704] call Output.getMap 1
D=A                                                          // [18705] call Output.getMap 1
@R14                                                         // [18706] call Output.getMap 1
M=D                                                          // [18707] call Output.getMap 1
@return-195                                                  // [18708] call Output.getMap 1
D=A                                                          // [18709] call Output.getMap 1
@CALL                                                        // [18710] call Output.getMap 1
0;JEQ                                                        // [18711] call Output.getMap 1
(return-195)                                                 // [     ] call Output.getMap 1
@SP                                                          // [18712] pop local 2
AM=M-1                                                       // [18713] pop local 2
D=M                                                          // [18714] pop local 2
@R13                                                         // [18715] pop local 2
M=D                                                          // [18716] pop local 2
@LCL                                                         // [18717] pop local 2
D=M                                                          // [18718] pop local 2
@2                                                           // [18719] pop local 2
D=D+A                                                        // [18720] pop local 2
@R14                                                         // [18721] pop local 2
M=D                                                          // [18722] pop local 2
@R13                                                         // [18723] pop local 2
D=M                                                          // [18724] pop local 2
@R14                                                         // [18725] pop local 2
A=M                                                          // [18726] pop local 2
M=D                                                          // [18727] pop local 2
@Output.1                                                    // [18728] push static 1
D=M                                                          // [18729] push static 1
@SP                                                          // [18730] push static 1
M=M+1                                                        // [18731] push static 1
A=M-1                                                        // [18732] push static 1
M=D                                                          // [18733] push static 1
@SP                                                          // [18734] push constant 1
M=M+1                                                        // [18735] push constant 1
A=M-1                                                        // [18736] push constant 1
M=1                                                          // [18737] push constant 1
@SP                                                          // [18738] and
AM=M-1                                                       // [18739] and
D=M                                                          // [18740] and
A=A-1                                                        // [18741] and
M=D&M                                                        // [18742] and
@SP                                                          // [18743] push constant 1
M=M+1                                                        // [18744] push constant 1
A=M-1                                                        // [18745] push constant 1
M=1                                                          // [18746] push constant 1
@CONTINUE_EQ_14                                              // [18747] eq
D=A                                                          // [18748] eq
@R13                                                         // [18749] eq
M=D                                                          // [18750] eq
@SP                                                          // [18751] eq
AM=M-1                                                       // [18752] eq
D=M                                                          // [18753] eq
A=A-1                                                        // [18754] eq
D=D-M                                                        // [18755] eq
@INTERNAL_EQ                                                 // [18756] eq
0;JEQ                                                        // [18757] eq
(CONTINUE_EQ_14)                                             // [     ] eq
@SP                                                          // [18758] pop local 6
AM=M-1                                                       // [18759] pop local 6
D=M                                                          // [18760] pop local 6
@R13                                                         // [18761] pop local 6
M=D                                                          // [18762] pop local 6
@LCL                                                         // [18763] pop local 6
D=M                                                          // [18764] pop local 6
@6                                                           // [18765] pop local 6
D=D+A                                                        // [18766] pop local 6
@R14                                                         // [18767] pop local 6
M=D                                                          // [18768] pop local 6
@R13                                                         // [18769] pop local 6
D=M                                                          // [18770] pop local 6
@R14                                                         // [18771] pop local 6
A=M                                                          // [18772] pop local 6
M=D                                                          // [18773] pop local 6
@LCL                                                         // [18774] push local 6
D=M                                                          // [18775] push local 6
@6                                                           // [18776] push local 6
A=D+A                                                        // [18777] push local 6
D=M                                                          // [18778] push local 6
@SP                                                          // [18779] push local 6
M=M+1                                                        // [18780] push local 6
A=M-1                                                        // [18781] push local 6
M=D                                                          // [18782] push local 6
@SP                                                          // [18783] if-goto IF_TRUE0
AM=M-1                                                       // [18784] if-goto IF_TRUE0
D=M                                                          // [18785] if-goto IF_TRUE0
@Output.printCharInternal$IF_TRUE0                           // [18786] if-goto IF_TRUE0
D;JNE                                                        // [18787] if-goto IF_TRUE0
@Output.printCharInternal$IF_FALSE0                          // [18788] goto IF_FALSE0
0;JEQ                                                        // [18789] goto IF_FALSE0
(Output.printCharInternal$IF_TRUE0)                          // [     ] label IF_TRUE0
@255                                                         // [18790] push constant 255
D=A                                                          // [18791] push constant 255
@SP                                                          // [18792] push constant 255
M=M+1                                                        // [18793] push constant 255
A=M-1                                                        // [18794] push constant 255
M=D                                                          // [18795] push constant 255
@SP                                                          // [18796] pop local 5
AM=M-1                                                       // [18797] pop local 5
D=M                                                          // [18798] pop local 5
@R13                                                         // [18799] pop local 5
M=D                                                          // [18800] pop local 5
@LCL                                                         // [18801] pop local 5
D=M                                                          // [18802] pop local 5
@5                                                           // [18803] pop local 5
D=D+A                                                        // [18804] pop local 5
@R14                                                         // [18805] pop local 5
M=D                                                          // [18806] pop local 5
@R13                                                         // [18807] pop local 5
D=M                                                          // [18808] pop local 5
@R14                                                         // [18809] pop local 5
A=M                                                          // [18810] pop local 5
M=D                                                          // [18811] pop local 5
@Output.printCharInternal$IF_END0                            // [18812] goto IF_END0
0;JEQ                                                        // [18813] goto IF_END0
(Output.printCharInternal$IF_FALSE0)                         // [     ] label IF_FALSE0
@256                                                         // [18814] push constant 256
D=A                                                          // [18815] push constant 256
@SP                                                          // [18816] push constant 256
M=M+1                                                        // [18817] push constant 256
A=M-1                                                        // [18818] push constant 256
M=D                                                          // [18819] push constant 256
@SP                                                          // [18820] neg
A=M-1                                                        // [18821] neg
D=M                                                          // [18822] neg
M=-D                                                         // [18823] neg
@SP                                                          // [18824] pop local 5
AM=M-1                                                       // [18825] pop local 5
D=M                                                          // [18826] pop local 5
@R13                                                         // [18827] pop local 5
M=D                                                          // [18828] pop local 5
@LCL                                                         // [18829] pop local 5
D=M                                                          // [18830] pop local 5
@5                                                           // [18831] pop local 5
D=D+A                                                        // [18832] pop local 5
@R14                                                         // [18833] pop local 5
M=D                                                          // [18834] pop local 5
@R13                                                         // [18835] pop local 5
D=M                                                          // [18836] pop local 5
@R14                                                         // [18837] pop local 5
A=M                                                          // [18838] pop local 5
M=D                                                          // [18839] pop local 5
(Output.printCharInternal$IF_END0)                           // [     ] label IF_END0
@Output.2                                                    // [18840] push static 2
D=M                                                          // [18841] push static 2
@SP                                                          // [18842] push static 2
M=M+1                                                        // [18843] push static 2
A=M-1                                                        // [18844] push static 2
M=D                                                          // [18845] push static 2
@32                                                          // [18846] push constant 32
D=A                                                          // [18847] push constant 32
@SP                                                          // [18848] push constant 32
M=M+1                                                        // [18849] push constant 32
A=M-1                                                        // [18850] push constant 32
M=D                                                          // [18851] push constant 32
@2                                                           // [18852] call Math.multiply 2
D=A                                                          // [18853] call Math.multiply 2
@R13                                                         // [18854] call Math.multiply 2
M=D                                                          // [18855] call Math.multiply 2
@Math.multiply                                               // [18856] call Math.multiply 2
D=A                                                          // [18857] call Math.multiply 2
@R14                                                         // [18858] call Math.multiply 2
M=D                                                          // [18859] call Math.multiply 2
@return-196                                                  // [18860] call Math.multiply 2
D=A                                                          // [18861] call Math.multiply 2
@CALL                                                        // [18862] call Math.multiply 2
0;JEQ                                                        // [18863] call Math.multiply 2
(return-196)                                                 // [     ] call Math.multiply 2
@11                                                          // [18864] push constant 11
D=A                                                          // [18865] push constant 11
@SP                                                          // [18866] push constant 11
M=M+1                                                        // [18867] push constant 11
A=M-1                                                        // [18868] push constant 11
M=D                                                          // [18869] push constant 11
@2                                                           // [18870] call Math.multiply 2
D=A                                                          // [18871] call Math.multiply 2
@R13                                                         // [18872] call Math.multiply 2
M=D                                                          // [18873] call Math.multiply 2
@Math.multiply                                               // [18874] call Math.multiply 2
D=A                                                          // [18875] call Math.multiply 2
@R14                                                         // [18876] call Math.multiply 2
M=D                                                          // [18877] call Math.multiply 2
@return-197                                                  // [18878] call Math.multiply 2
D=A                                                          // [18879] call Math.multiply 2
@CALL                                                        // [18880] call Math.multiply 2
0;JEQ                                                        // [18881] call Math.multiply 2
(return-197)                                                 // [     ] call Math.multiply 2
@Output.1                                                    // [18882] push static 1
D=M                                                          // [18883] push static 1
@SP                                                          // [18884] push static 1
M=M+1                                                        // [18885] push static 1
A=M-1                                                        // [18886] push static 1
M=D                                                          // [18887] push static 1
@SP                                                          // [18888] push constant 2
M=M+1                                                        // [18889] push constant 2
A=M-1                                                        // [18890] push constant 2
M=1                                                          // [18891] push constant 2
M=M+1                                                        // [18892] push constant 2
@2                                                           // [18893] call Math.divide 2
D=A                                                          // [18894] call Math.divide 2
@R13                                                         // [18895] call Math.divide 2
M=D                                                          // [18896] call Math.divide 2
@Math.divide                                                 // [18897] call Math.divide 2
D=A                                                          // [18898] call Math.divide 2
@R14                                                         // [18899] call Math.divide 2
M=D                                                          // [18900] call Math.divide 2
@return-198                                                  // [18901] call Math.divide 2
D=A                                                          // [18902] call Math.divide 2
@CALL                                                        // [18903] call Math.divide 2
0;JEQ                                                        // [18904] call Math.divide 2
(return-198)                                                 // [     ] call Math.divide 2
@SP                                                          // [18905] add
AM=M-1                                                       // [18906] add
D=M                                                          // [18907] add
A=A-1                                                        // [18908] add
M=D+M                                                        // [18909] add
@SP                                                          // [18910] pop local 0
AM=M-1                                                       // [18911] pop local 0
D=M                                                          // [18912] pop local 0
@R13                                                         // [18913] pop local 0
M=D                                                          // [18914] pop local 0
@LCL                                                         // [18915] pop local 0
D=M                                                          // [18916] pop local 0
@0                                                           // [18917] pop local 0
D=D+A                                                        // [18918] pop local 0
@R14                                                         // [18919] pop local 0
M=D                                                          // [18920] pop local 0
@R13                                                         // [18921] pop local 0
D=M                                                          // [18922] pop local 0
@R14                                                         // [18923] pop local 0
A=M                                                          // [18924] pop local 0
M=D                                                          // [18925] pop local 0
@SP                                                          // [18926] push constant 0
M=M+1                                                        // [18927] push constant 0
A=M-1                                                        // [18928] push constant 0
M=0                                                          // [18929] push constant 0
@SP                                                          // [18930] pop local 4
AM=M-1                                                       // [18931] pop local 4
D=M                                                          // [18932] pop local 4
@R13                                                         // [18933] pop local 4
M=D                                                          // [18934] pop local 4
@LCL                                                         // [18935] pop local 4
D=M                                                          // [18936] pop local 4
@4                                                           // [18937] pop local 4
D=D+A                                                        // [18938] pop local 4
@R14                                                         // [18939] pop local 4
M=D                                                          // [18940] pop local 4
@R13                                                         // [18941] pop local 4
D=M                                                          // [18942] pop local 4
@R14                                                         // [18943] pop local 4
A=M                                                          // [18944] pop local 4
M=D                                                          // [18945] pop local 4
(Output.printCharInternal$WHILE_EXP0)                        // [     ] label WHILE_EXP0
@LCL                                                         // [18946] push local 4
D=M                                                          // [18947] push local 4
@4                                                           // [18948] push local 4
A=D+A                                                        // [18949] push local 4
D=M                                                          // [18950] push local 4
@SP                                                          // [18951] push local 4
M=M+1                                                        // [18952] push local 4
A=M-1                                                        // [18953] push local 4
M=D                                                          // [18954] push local 4
@11                                                          // [18955] push constant 11
D=A                                                          // [18956] push constant 11
@SP                                                          // [18957] push constant 11
M=M+1                                                        // [18958] push constant 11
A=M-1                                                        // [18959] push constant 11
M=D                                                          // [18960] push constant 11
@CONTINUE_LT_23                                              // [18961] lt
D=A                                                          // [18962] lt
@R13                                                         // [18963] lt
M=D                                                          // [18964] lt
@SP                                                          // [18965] lt
AM=M-1                                                       // [18966] lt
D=M                                                          // [18967] lt
A=A-1                                                        // [18968] lt
D=D-M                                                        // [18969] lt
@INTERNAL_LT                                                 // [18970] lt
0;JEQ                                                        // [18971] lt
(CONTINUE_LT_23)                                             // [     ] lt
@SP                                                          // [18972] not
A=M-1                                                        // [18973] not
D=M                                                          // [18974] not
M=!D                                                         // [18975] not
@SP                                                          // [18976] if-goto WHILE_END0
AM=M-1                                                       // [18977] if-goto WHILE_END0
D=M                                                          // [18978] if-goto WHILE_END0
@Output.printCharInternal$WHILE_END0                         // [18979] if-goto WHILE_END0
D;JNE                                                        // [18980] if-goto WHILE_END0
@LCL                                                         // [18981] push local 0
D=M                                                          // [18982] push local 0
@0                                                           // [18983] push local 0
A=D+A                                                        // [18984] push local 0
D=M                                                          // [18985] push local 0
@SP                                                          // [18986] push local 0
M=M+1                                                        // [18987] push local 0
A=M-1                                                        // [18988] push local 0
M=D                                                          // [18989] push local 0
@Output.3                                                    // [18990] push static 3
D=M                                                          // [18991] push static 3
@SP                                                          // [18992] push static 3
M=M+1                                                        // [18993] push static 3
A=M-1                                                        // [18994] push static 3
M=D                                                          // [18995] push static 3
@SP                                                          // [18996] add
AM=M-1                                                       // [18997] add
D=M                                                          // [18998] add
A=A-1                                                        // [18999] add
M=D+M                                                        // [19000] add
@SP                                                          // [19001] pop pointer 1
AM=M-1                                                       // [19002] pop pointer 1
D=M                                                          // [19003] pop pointer 1
@4                                                           // [19004] pop pointer 1
M=D                                                          // [19005] pop pointer 1
@THAT                                                        // [19006] push that 0
D=M                                                          // [19007] push that 0
@0                                                           // [19008] push that 0
A=D+A                                                        // [19009] push that 0
D=M                                                          // [19010] push that 0
@SP                                                          // [19011] push that 0
M=M+1                                                        // [19012] push that 0
A=M-1                                                        // [19013] push that 0
M=D                                                          // [19014] push that 0
@SP                                                          // [19015] pop local 1
AM=M-1                                                       // [19016] pop local 1
D=M                                                          // [19017] pop local 1
@R13                                                         // [19018] pop local 1
M=D                                                          // [19019] pop local 1
@LCL                                                         // [19020] pop local 1
D=M                                                          // [19021] pop local 1
@1                                                           // [19022] pop local 1
D=D+A                                                        // [19023] pop local 1
@R14                                                         // [19024] pop local 1
M=D                                                          // [19025] pop local 1
@R13                                                         // [19026] pop local 1
D=M                                                          // [19027] pop local 1
@R14                                                         // [19028] pop local 1
A=M                                                          // [19029] pop local 1
M=D                                                          // [19030] pop local 1
@LCL                                                         // [19031] push local 4
D=M                                                          // [19032] push local 4
@4                                                           // [19033] push local 4
A=D+A                                                        // [19034] push local 4
D=M                                                          // [19035] push local 4
@SP                                                          // [19036] push local 4
M=M+1                                                        // [19037] push local 4
A=M-1                                                        // [19038] push local 4
M=D                                                          // [19039] push local 4
@LCL                                                         // [19040] push local 2
D=M                                                          // [19041] push local 2
@2                                                           // [19042] push local 2
A=D+A                                                        // [19043] push local 2
D=M                                                          // [19044] push local 2
@SP                                                          // [19045] push local 2
M=M+1                                                        // [19046] push local 2
A=M-1                                                        // [19047] push local 2
M=D                                                          // [19048] push local 2
@SP                                                          // [19049] add
AM=M-1                                                       // [19050] add
D=M                                                          // [19051] add
A=A-1                                                        // [19052] add
M=D+M                                                        // [19053] add
@SP                                                          // [19054] pop pointer 1
AM=M-1                                                       // [19055] pop pointer 1
D=M                                                          // [19056] pop pointer 1
@4                                                           // [19057] pop pointer 1
M=D                                                          // [19058] pop pointer 1
@THAT                                                        // [19059] push that 0
D=M                                                          // [19060] push that 0
@0                                                           // [19061] push that 0
A=D+A                                                        // [19062] push that 0
D=M                                                          // [19063] push that 0
@SP                                                          // [19064] push that 0
M=M+1                                                        // [19065] push that 0
A=M-1                                                        // [19066] push that 0
M=D                                                          // [19067] push that 0
@SP                                                          // [19068] pop local 3
AM=M-1                                                       // [19069] pop local 3
D=M                                                          // [19070] pop local 3
@R13                                                         // [19071] pop local 3
M=D                                                          // [19072] pop local 3
@LCL                                                         // [19073] pop local 3
D=M                                                          // [19074] pop local 3
@3                                                           // [19075] pop local 3
D=D+A                                                        // [19076] pop local 3
@R14                                                         // [19077] pop local 3
M=D                                                          // [19078] pop local 3
@R13                                                         // [19079] pop local 3
D=M                                                          // [19080] pop local 3
@R14                                                         // [19081] pop local 3
A=M                                                          // [19082] pop local 3
M=D                                                          // [19083] pop local 3
@LCL                                                         // [19084] push local 6
D=M                                                          // [19085] push local 6
@6                                                           // [19086] push local 6
A=D+A                                                        // [19087] push local 6
D=M                                                          // [19088] push local 6
@SP                                                          // [19089] push local 6
M=M+1                                                        // [19090] push local 6
A=M-1                                                        // [19091] push local 6
M=D                                                          // [19092] push local 6
@SP                                                          // [19093] if-goto IF_TRUE1
AM=M-1                                                       // [19094] if-goto IF_TRUE1
D=M                                                          // [19095] if-goto IF_TRUE1
@Output.printCharInternal$IF_TRUE1                           // [19096] if-goto IF_TRUE1
D;JNE                                                        // [19097] if-goto IF_TRUE1
@Output.printCharInternal$IF_FALSE1                          // [19098] goto IF_FALSE1
0;JEQ                                                        // [19099] goto IF_FALSE1
(Output.printCharInternal$IF_TRUE1)                          // [     ] label IF_TRUE1
@LCL                                                         // [19100] push local 3
D=M                                                          // [19101] push local 3
@3                                                           // [19102] push local 3
A=D+A                                                        // [19103] push local 3
D=M                                                          // [19104] push local 3
@SP                                                          // [19105] push local 3
M=M+1                                                        // [19106] push local 3
A=M-1                                                        // [19107] push local 3
M=D                                                          // [19108] push local 3
@256                                                         // [19109] push constant 256
D=A                                                          // [19110] push constant 256
@SP                                                          // [19111] push constant 256
M=M+1                                                        // [19112] push constant 256
A=M-1                                                        // [19113] push constant 256
M=D                                                          // [19114] push constant 256
@2                                                           // [19115] call Math.multiply 2
D=A                                                          // [19116] call Math.multiply 2
@R13                                                         // [19117] call Math.multiply 2
M=D                                                          // [19118] call Math.multiply 2
@Math.multiply                                               // [19119] call Math.multiply 2
D=A                                                          // [19120] call Math.multiply 2
@R14                                                         // [19121] call Math.multiply 2
M=D                                                          // [19122] call Math.multiply 2
@return-199                                                  // [19123] call Math.multiply 2
D=A                                                          // [19124] call Math.multiply 2
@CALL                                                        // [19125] call Math.multiply 2
0;JEQ                                                        // [19126] call Math.multiply 2
(return-199)                                                 // [     ] call Math.multiply 2
@SP                                                          // [19127] pop local 3
AM=M-1                                                       // [19128] pop local 3
D=M                                                          // [19129] pop local 3
@R13                                                         // [19130] pop local 3
M=D                                                          // [19131] pop local 3
@LCL                                                         // [19132] pop local 3
D=M                                                          // [19133] pop local 3
@3                                                           // [19134] pop local 3
D=D+A                                                        // [19135] pop local 3
@R14                                                         // [19136] pop local 3
M=D                                                          // [19137] pop local 3
@R13                                                         // [19138] pop local 3
D=M                                                          // [19139] pop local 3
@R14                                                         // [19140] pop local 3
A=M                                                          // [19141] pop local 3
M=D                                                          // [19142] pop local 3
(Output.printCharInternal$IF_FALSE1)                         // [     ] label IF_FALSE1
@LCL                                                         // [19143] push local 1
D=M                                                          // [19144] push local 1
@1                                                           // [19145] push local 1
A=D+A                                                        // [19146] push local 1
D=M                                                          // [19147] push local 1
@SP                                                          // [19148] push local 1
M=M+1                                                        // [19149] push local 1
A=M-1                                                        // [19150] push local 1
M=D                                                          // [19151] push local 1
@LCL                                                         // [19152] push local 5
D=M                                                          // [19153] push local 5
@5                                                           // [19154] push local 5
A=D+A                                                        // [19155] push local 5
D=M                                                          // [19156] push local 5
@SP                                                          // [19157] push local 5
M=M+1                                                        // [19158] push local 5
A=M-1                                                        // [19159] push local 5
M=D                                                          // [19160] push local 5
@SP                                                          // [19161] and
AM=M-1                                                       // [19162] and
D=M                                                          // [19163] and
A=A-1                                                        // [19164] and
M=D&M                                                        // [19165] and
@LCL                                                         // [19166] push local 3
D=M                                                          // [19167] push local 3
@3                                                           // [19168] push local 3
A=D+A                                                        // [19169] push local 3
D=M                                                          // [19170] push local 3
@SP                                                          // [19171] push local 3
M=M+1                                                        // [19172] push local 3
A=M-1                                                        // [19173] push local 3
M=D                                                          // [19174] push local 3
@SP                                                          // [19175] or
AM=M-1                                                       // [19176] or
D=M                                                          // [19177] or
A=A-1                                                        // [19178] or
M=D|M                                                        // [19179] or
@SP                                                          // [19180] pop local 1
AM=M-1                                                       // [19181] pop local 1
D=M                                                          // [19182] pop local 1
@R13                                                         // [19183] pop local 1
M=D                                                          // [19184] pop local 1
@LCL                                                         // [19185] pop local 1
D=M                                                          // [19186] pop local 1
@1                                                           // [19187] pop local 1
D=D+A                                                        // [19188] pop local 1
@R14                                                         // [19189] pop local 1
M=D                                                          // [19190] pop local 1
@R13                                                         // [19191] pop local 1
D=M                                                          // [19192] pop local 1
@R14                                                         // [19193] pop local 1
A=M                                                          // [19194] pop local 1
M=D                                                          // [19195] pop local 1
@LCL                                                         // [19196] push local 0
D=M                                                          // [19197] push local 0
@0                                                           // [19198] push local 0
A=D+A                                                        // [19199] push local 0
D=M                                                          // [19200] push local 0
@SP                                                          // [19201] push local 0
M=M+1                                                        // [19202] push local 0
A=M-1                                                        // [19203] push local 0
M=D                                                          // [19204] push local 0
@Output.3                                                    // [19205] push static 3
D=M                                                          // [19206] push static 3
@SP                                                          // [19207] push static 3
M=M+1                                                        // [19208] push static 3
A=M-1                                                        // [19209] push static 3
M=D                                                          // [19210] push static 3
@SP                                                          // [19211] add
AM=M-1                                                       // [19212] add
D=M                                                          // [19213] add
A=A-1                                                        // [19214] add
M=D+M                                                        // [19215] add
@LCL                                                         // [19216] push local 1
D=M                                                          // [19217] push local 1
@1                                                           // [19218] push local 1
A=D+A                                                        // [19219] push local 1
D=M                                                          // [19220] push local 1
@SP                                                          // [19221] push local 1
M=M+1                                                        // [19222] push local 1
A=M-1                                                        // [19223] push local 1
M=D                                                          // [19224] push local 1
@SP                                                          // [19225] pop temp 0
AM=M-1                                                       // [19226] pop temp 0
D=M                                                          // [19227] pop temp 0
@5                                                           // [19228] pop temp 0
M=D                                                          // [19229] pop temp 0
@SP                                                          // [19230] pop pointer 1
AM=M-1                                                       // [19231] pop pointer 1
D=M                                                          // [19232] pop pointer 1
@4                                                           // [19233] pop pointer 1
M=D                                                          // [19234] pop pointer 1
@5                                                           // [19235] push temp 0
D=M                                                          // [19236] push temp 0
@SP                                                          // [19237] push temp 0
M=M+1                                                        // [19238] push temp 0
A=M-1                                                        // [19239] push temp 0
M=D                                                          // [19240] push temp 0
@SP                                                          // [19241] pop that 0
AM=M-1                                                       // [19242] pop that 0
D=M                                                          // [19243] pop that 0
@R13                                                         // [19244] pop that 0
M=D                                                          // [19245] pop that 0
@THAT                                                        // [19246] pop that 0
D=M                                                          // [19247] pop that 0
@0                                                           // [19248] pop that 0
D=D+A                                                        // [19249] pop that 0
@R14                                                         // [19250] pop that 0
M=D                                                          // [19251] pop that 0
@R13                                                         // [19252] pop that 0
D=M                                                          // [19253] pop that 0
@R14                                                         // [19254] pop that 0
A=M                                                          // [19255] pop that 0
M=D                                                          // [19256] pop that 0
@LCL                                                         // [19257] push local 0
D=M                                                          // [19258] push local 0
@0                                                           // [19259] push local 0
A=D+A                                                        // [19260] push local 0
D=M                                                          // [19261] push local 0
@SP                                                          // [19262] push local 0
M=M+1                                                        // [19263] push local 0
A=M-1                                                        // [19264] push local 0
M=D                                                          // [19265] push local 0
@32                                                          // [19266] push constant 32
D=A                                                          // [19267] push constant 32
@SP                                                          // [19268] push constant 32
M=M+1                                                        // [19269] push constant 32
A=M-1                                                        // [19270] push constant 32
M=D                                                          // [19271] push constant 32
@SP                                                          // [19272] add
AM=M-1                                                       // [19273] add
D=M                                                          // [19274] add
A=A-1                                                        // [19275] add
M=D+M                                                        // [19276] add
@SP                                                          // [19277] pop local 0
AM=M-1                                                       // [19278] pop local 0
D=M                                                          // [19279] pop local 0
@R13                                                         // [19280] pop local 0
M=D                                                          // [19281] pop local 0
@LCL                                                         // [19282] pop local 0
D=M                                                          // [19283] pop local 0
@0                                                           // [19284] pop local 0
D=D+A                                                        // [19285] pop local 0
@R14                                                         // [19286] pop local 0
M=D                                                          // [19287] pop local 0
@R13                                                         // [19288] pop local 0
D=M                                                          // [19289] pop local 0
@R14                                                         // [19290] pop local 0
A=M                                                          // [19291] pop local 0
M=D                                                          // [19292] pop local 0
@LCL                                                         // [19293] push local 4
D=M                                                          // [19294] push local 4
@4                                                           // [19295] push local 4
A=D+A                                                        // [19296] push local 4
D=M                                                          // [19297] push local 4
@SP                                                          // [19298] push local 4
M=M+1                                                        // [19299] push local 4
A=M-1                                                        // [19300] push local 4
M=D                                                          // [19301] push local 4
@SP                                                          // [19302] push constant 1
M=M+1                                                        // [19303] push constant 1
A=M-1                                                        // [19304] push constant 1
M=1                                                          // [19305] push constant 1
@SP                                                          // [19306] add
AM=M-1                                                       // [19307] add
D=M                                                          // [19308] add
A=A-1                                                        // [19309] add
M=D+M                                                        // [19310] add
@SP                                                          // [19311] pop local 4
AM=M-1                                                       // [19312] pop local 4
D=M                                                          // [19313] pop local 4
@R13                                                         // [19314] pop local 4
M=D                                                          // [19315] pop local 4
@LCL                                                         // [19316] pop local 4
D=M                                                          // [19317] pop local 4
@4                                                           // [19318] pop local 4
D=D+A                                                        // [19319] pop local 4
@R14                                                         // [19320] pop local 4
M=D                                                          // [19321] pop local 4
@R13                                                         // [19322] pop local 4
D=M                                                          // [19323] pop local 4
@R14                                                         // [19324] pop local 4
A=M                                                          // [19325] pop local 4
M=D                                                          // [19326] pop local 4
@Output.printCharInternal$WHILE_EXP0                         // [19327] goto WHILE_EXP0
0;JEQ                                                        // [19328] goto WHILE_EXP0
(Output.printCharInternal$WHILE_END0)                        // [     ] label WHILE_END0
@ARG                                                         // [19329] push argument 1
D=M                                                          // [19330] push argument 1
@1                                                           // [19331] push argument 1
A=D+A                                                        // [19332] push argument 1
D=M                                                          // [19333] push argument 1
@SP                                                          // [19334] push argument 1
M=M+1                                                        // [19335] push argument 1
A=M-1                                                        // [19336] push argument 1
M=D                                                          // [19337] push argument 1
@SP                                                          // [19338] if-goto IF_TRUE2
AM=M-1                                                       // [19339] if-goto IF_TRUE2
D=M                                                          // [19340] if-goto IF_TRUE2
@Output.printCharInternal$IF_TRUE2                           // [19341] if-goto IF_TRUE2
D;JNE                                                        // [19342] if-goto IF_TRUE2
@Output.printCharInternal$IF_FALSE2                          // [19343] goto IF_FALSE2
0;JEQ                                                        // [19344] goto IF_FALSE2
(Output.printCharInternal$IF_TRUE2)                          // [     ] label IF_TRUE2
@Output.1                                                    // [19345] push static 1
D=M                                                          // [19346] push static 1
@SP                                                          // [19347] push static 1
M=M+1                                                        // [19348] push static 1
A=M-1                                                        // [19349] push static 1
M=D                                                          // [19350] push static 1
@63                                                          // [19351] push constant 63
D=A                                                          // [19352] push constant 63
@SP                                                          // [19353] push constant 63
M=M+1                                                        // [19354] push constant 63
A=M-1                                                        // [19355] push constant 63
M=D                                                          // [19356] push constant 63
@CONTINUE_LT_24                                              // [19357] lt
D=A                                                          // [19358] lt
@R13                                                         // [19359] lt
M=D                                                          // [19360] lt
@SP                                                          // [19361] lt
AM=M-1                                                       // [19362] lt
D=M                                                          // [19363] lt
A=A-1                                                        // [19364] lt
D=D-M                                                        // [19365] lt
@INTERNAL_LT                                                 // [19366] lt
0;JEQ                                                        // [19367] lt
(CONTINUE_LT_24)                                             // [     ] lt
@SP                                                          // [19368] if-goto IF_TRUE3
AM=M-1                                                       // [19369] if-goto IF_TRUE3
D=M                                                          // [19370] if-goto IF_TRUE3
@Output.printCharInternal$IF_TRUE3                           // [19371] if-goto IF_TRUE3
D;JNE                                                        // [19372] if-goto IF_TRUE3
@Output.printCharInternal$IF_FALSE3                          // [19373] goto IF_FALSE3
0;JEQ                                                        // [19374] goto IF_FALSE3
(Output.printCharInternal$IF_TRUE3)                          // [     ] label IF_TRUE3
@Output.1                                                    // [19375] push static 1
D=M                                                          // [19376] push static 1
@SP                                                          // [19377] push static 1
M=M+1                                                        // [19378] push static 1
A=M-1                                                        // [19379] push static 1
M=D                                                          // [19380] push static 1
@SP                                                          // [19381] push constant 1
M=M+1                                                        // [19382] push constant 1
A=M-1                                                        // [19383] push constant 1
M=1                                                          // [19384] push constant 1
@SP                                                          // [19385] add
AM=M-1                                                       // [19386] add
D=M                                                          // [19387] add
A=A-1                                                        // [19388] add
M=D+M                                                        // [19389] add
@SP                                                          // [19390] pop static 1
AM=M-1                                                       // [19391] pop static 1
D=M                                                          // [19392] pop static 1
@Output.1                                                    // [19393] pop static 1
M=D                                                          // [19394] pop static 1
@Output.printCharInternal$IF_END3                            // [19395] goto IF_END3
0;JEQ                                                        // [19396] goto IF_END3
(Output.printCharInternal$IF_FALSE3)                         // [     ] label IF_FALSE3
@SP                                                          // [19397] push constant 0
M=M+1                                                        // [19398] push constant 0
A=M-1                                                        // [19399] push constant 0
M=0                                                          // [19400] push constant 0
@SP                                                          // [19401] pop static 1
AM=M-1                                                       // [19402] pop static 1
D=M                                                          // [19403] pop static 1
@Output.1                                                    // [19404] pop static 1
M=D                                                          // [19405] pop static 1
@Output.2                                                    // [19406] push static 2
D=M                                                          // [19407] push static 2
@SP                                                          // [19408] push static 2
M=M+1                                                        // [19409] push static 2
A=M-1                                                        // [19410] push static 2
M=D                                                          // [19411] push static 2
@22                                                          // [19412] push constant 22
D=A                                                          // [19413] push constant 22
@SP                                                          // [19414] push constant 22
M=M+1                                                        // [19415] push constant 22
A=M-1                                                        // [19416] push constant 22
M=D                                                          // [19417] push constant 22
@CONTINUE_LT_25                                              // [19418] lt
D=A                                                          // [19419] lt
@R13                                                         // [19420] lt
M=D                                                          // [19421] lt
@SP                                                          // [19422] lt
AM=M-1                                                       // [19423] lt
D=M                                                          // [19424] lt
A=A-1                                                        // [19425] lt
D=D-M                                                        // [19426] lt
@INTERNAL_LT                                                 // [19427] lt
0;JEQ                                                        // [19428] lt
(CONTINUE_LT_25)                                             // [     ] lt
@SP                                                          // [19429] if-goto IF_TRUE4
AM=M-1                                                       // [19430] if-goto IF_TRUE4
D=M                                                          // [19431] if-goto IF_TRUE4
@Output.printCharInternal$IF_TRUE4                           // [19432] if-goto IF_TRUE4
D;JNE                                                        // [19433] if-goto IF_TRUE4
@Output.printCharInternal$IF_FALSE4                          // [19434] goto IF_FALSE4
0;JEQ                                                        // [19435] goto IF_FALSE4
(Output.printCharInternal$IF_TRUE4)                          // [     ] label IF_TRUE4
@Output.2                                                    // [19436] push static 2
D=M                                                          // [19437] push static 2
@SP                                                          // [19438] push static 2
M=M+1                                                        // [19439] push static 2
A=M-1                                                        // [19440] push static 2
M=D                                                          // [19441] push static 2
@SP                                                          // [19442] push constant 1
M=M+1                                                        // [19443] push constant 1
A=M-1                                                        // [19444] push constant 1
M=1                                                          // [19445] push constant 1
@SP                                                          // [19446] add
AM=M-1                                                       // [19447] add
D=M                                                          // [19448] add
A=A-1                                                        // [19449] add
M=D+M                                                        // [19450] add
@SP                                                          // [19451] pop static 2
AM=M-1                                                       // [19452] pop static 2
D=M                                                          // [19453] pop static 2
@Output.2                                                    // [19454] pop static 2
M=D                                                          // [19455] pop static 2
@Output.printCharInternal$IF_END4                            // [19456] goto IF_END4
0;JEQ                                                        // [19457] goto IF_END4
(Output.printCharInternal$IF_FALSE4)                         // [     ] label IF_FALSE4
@SP                                                          // [19458] push constant 0
M=M+1                                                        // [19459] push constant 0
A=M-1                                                        // [19460] push constant 0
M=0                                                          // [19461] push constant 0
@SP                                                          // [19462] pop static 2
AM=M-1                                                       // [19463] pop static 2
D=M                                                          // [19464] pop static 2
@Output.2                                                    // [19465] pop static 2
M=D                                                          // [19466] pop static 2
(Output.printCharInternal$IF_END4)                           // [     ] label IF_END4
(Output.printCharInternal$IF_END3)                           // [     ] label IF_END3
(Output.printCharInternal$IF_FALSE2)                         // [     ] label IF_FALSE2
@SP                                                          // [19467] push constant 0
M=M+1                                                        // [19468] push constant 0
A=M-1                                                        // [19469] push constant 0
M=0                                                          // [19470] push constant 0
@RETURN                                                      // [19471] return
0;JEQ                                                        // [19472] return
(Output.printString)                                         // [     ] function Output.printString 2
@SP                                                          // [19473] function Output.printString 2
A=M                                                          // [19474] function Output.printString 2
M=0                                                          // [19475] function Output.printString 2
@SP                                                          // [19476] function Output.printString 2
M=M+1                                                        // [19477] function Output.printString 2
@SP                                                          // [19478] function Output.printString 2
A=M                                                          // [19479] function Output.printString 2
M=0                                                          // [19480] function Output.printString 2
@SP                                                          // [19481] function Output.printString 2
M=M+1                                                        // [19482] function Output.printString 2
@SP                                                          // [19483] push constant 0
M=M+1                                                        // [19484] push constant 0
A=M-1                                                        // [19485] push constant 0
M=0                                                          // [19486] push constant 0
@SP                                                          // [19487] pop local 0
AM=M-1                                                       // [19488] pop local 0
D=M                                                          // [19489] pop local 0
@R13                                                         // [19490] pop local 0
M=D                                                          // [19491] pop local 0
@LCL                                                         // [19492] pop local 0
D=M                                                          // [19493] pop local 0
@0                                                           // [19494] pop local 0
D=D+A                                                        // [19495] pop local 0
@R14                                                         // [19496] pop local 0
M=D                                                          // [19497] pop local 0
@R13                                                         // [19498] pop local 0
D=M                                                          // [19499] pop local 0
@R14                                                         // [19500] pop local 0
A=M                                                          // [19501] pop local 0
M=D                                                          // [19502] pop local 0
@ARG                                                         // [19503] push argument 0
D=M                                                          // [19504] push argument 0
@0                                                           // [19505] push argument 0
A=D+A                                                        // [19506] push argument 0
D=M                                                          // [19507] push argument 0
@SP                                                          // [19508] push argument 0
M=M+1                                                        // [19509] push argument 0
A=M-1                                                        // [19510] push argument 0
M=D                                                          // [19511] push argument 0
@1                                                           // [19512] call String.length 1
D=A                                                          // [19513] call String.length 1
@R13                                                         // [19514] call String.length 1
M=D                                                          // [19515] call String.length 1
@String.length                                               // [19516] call String.length 1
D=A                                                          // [19517] call String.length 1
@R14                                                         // [19518] call String.length 1
M=D                                                          // [19519] call String.length 1
@return-200                                                  // [19520] call String.length 1
D=A                                                          // [19521] call String.length 1
@CALL                                                        // [19522] call String.length 1
0;JEQ                                                        // [19523] call String.length 1
(return-200)                                                 // [     ] call String.length 1
@SP                                                          // [19524] pop local 1
AM=M-1                                                       // [19525] pop local 1
D=M                                                          // [19526] pop local 1
@R13                                                         // [19527] pop local 1
M=D                                                          // [19528] pop local 1
@LCL                                                         // [19529] pop local 1
D=M                                                          // [19530] pop local 1
@1                                                           // [19531] pop local 1
D=D+A                                                        // [19532] pop local 1
@R14                                                         // [19533] pop local 1
M=D                                                          // [19534] pop local 1
@R13                                                         // [19535] pop local 1
D=M                                                          // [19536] pop local 1
@R14                                                         // [19537] pop local 1
A=M                                                          // [19538] pop local 1
M=D                                                          // [19539] pop local 1
(Output.printString$WHILE_EXP0)                              // [     ] label WHILE_EXP0
@LCL                                                         // [19540] push local 0
D=M                                                          // [19541] push local 0
@0                                                           // [19542] push local 0
A=D+A                                                        // [19543] push local 0
D=M                                                          // [19544] push local 0
@SP                                                          // [19545] push local 0
M=M+1                                                        // [19546] push local 0
A=M-1                                                        // [19547] push local 0
M=D                                                          // [19548] push local 0
@LCL                                                         // [19549] push local 1
D=M                                                          // [19550] push local 1
@1                                                           // [19551] push local 1
A=D+A                                                        // [19552] push local 1
D=M                                                          // [19553] push local 1
@SP                                                          // [19554] push local 1
M=M+1                                                        // [19555] push local 1
A=M-1                                                        // [19556] push local 1
M=D                                                          // [19557] push local 1
@CONTINUE_LT_26                                              // [19558] lt
D=A                                                          // [19559] lt
@R13                                                         // [19560] lt
M=D                                                          // [19561] lt
@SP                                                          // [19562] lt
AM=M-1                                                       // [19563] lt
D=M                                                          // [19564] lt
A=A-1                                                        // [19565] lt
D=D-M                                                        // [19566] lt
@INTERNAL_LT                                                 // [19567] lt
0;JEQ                                                        // [19568] lt
(CONTINUE_LT_26)                                             // [     ] lt
@SP                                                          // [19569] not
A=M-1                                                        // [19570] not
D=M                                                          // [19571] not
M=!D                                                         // [19572] not
@SP                                                          // [19573] if-goto WHILE_END0
AM=M-1                                                       // [19574] if-goto WHILE_END0
D=M                                                          // [19575] if-goto WHILE_END0
@Output.printString$WHILE_END0                               // [19576] if-goto WHILE_END0
D;JNE                                                        // [19577] if-goto WHILE_END0
@ARG                                                         // [19578] push argument 0
D=M                                                          // [19579] push argument 0
@0                                                           // [19580] push argument 0
A=D+A                                                        // [19581] push argument 0
D=M                                                          // [19582] push argument 0
@SP                                                          // [19583] push argument 0
M=M+1                                                        // [19584] push argument 0
A=M-1                                                        // [19585] push argument 0
M=D                                                          // [19586] push argument 0
@LCL                                                         // [19587] push local 0
D=M                                                          // [19588] push local 0
@0                                                           // [19589] push local 0
A=D+A                                                        // [19590] push local 0
D=M                                                          // [19591] push local 0
@SP                                                          // [19592] push local 0
M=M+1                                                        // [19593] push local 0
A=M-1                                                        // [19594] push local 0
M=D                                                          // [19595] push local 0
@2                                                           // [19596] call String.charAt 2
D=A                                                          // [19597] call String.charAt 2
@R13                                                         // [19598] call String.charAt 2
M=D                                                          // [19599] call String.charAt 2
@String.charAt                                               // [19600] call String.charAt 2
D=A                                                          // [19601] call String.charAt 2
@R14                                                         // [19602] call String.charAt 2
M=D                                                          // [19603] call String.charAt 2
@return-201                                                  // [19604] call String.charAt 2
D=A                                                          // [19605] call String.charAt 2
@CALL                                                        // [19606] call String.charAt 2
0;JEQ                                                        // [19607] call String.charAt 2
(return-201)                                                 // [     ] call String.charAt 2
@1                                                           // [19608] call Output.printChar 1
D=A                                                          // [19609] call Output.printChar 1
@R13                                                         // [19610] call Output.printChar 1
M=D                                                          // [19611] call Output.printChar 1
@Output.printChar                                            // [19612] call Output.printChar 1
D=A                                                          // [19613] call Output.printChar 1
@R14                                                         // [19614] call Output.printChar 1
M=D                                                          // [19615] call Output.printChar 1
@return-202                                                  // [19616] call Output.printChar 1
D=A                                                          // [19617] call Output.printChar 1
@CALL                                                        // [19618] call Output.printChar 1
0;JEQ                                                        // [19619] call Output.printChar 1
(return-202)                                                 // [     ] call Output.printChar 1
@SP                                                          // [19620] pop temp 0
AM=M-1                                                       // [19621] pop temp 0
D=M                                                          // [19622] pop temp 0
@5                                                           // [19623] pop temp 0
M=D                                                          // [19624] pop temp 0
@LCL                                                         // [19625] push local 0
D=M                                                          // [19626] push local 0
@0                                                           // [19627] push local 0
A=D+A                                                        // [19628] push local 0
D=M                                                          // [19629] push local 0
@SP                                                          // [19630] push local 0
M=M+1                                                        // [19631] push local 0
A=M-1                                                        // [19632] push local 0
M=D                                                          // [19633] push local 0
@SP                                                          // [19634] push constant 1
M=M+1                                                        // [19635] push constant 1
A=M-1                                                        // [19636] push constant 1
M=1                                                          // [19637] push constant 1
@SP                                                          // [19638] add
AM=M-1                                                       // [19639] add
D=M                                                          // [19640] add
A=A-1                                                        // [19641] add
M=D+M                                                        // [19642] add
@SP                                                          // [19643] pop local 0
AM=M-1                                                       // [19644] pop local 0
D=M                                                          // [19645] pop local 0
@R13                                                         // [19646] pop local 0
M=D                                                          // [19647] pop local 0
@LCL                                                         // [19648] pop local 0
D=M                                                          // [19649] pop local 0
@0                                                           // [19650] pop local 0
D=D+A                                                        // [19651] pop local 0
@R14                                                         // [19652] pop local 0
M=D                                                          // [19653] pop local 0
@R13                                                         // [19654] pop local 0
D=M                                                          // [19655] pop local 0
@R14                                                         // [19656] pop local 0
A=M                                                          // [19657] pop local 0
M=D                                                          // [19658] pop local 0
@Output.printString$WHILE_EXP0                               // [19659] goto WHILE_EXP0
0;JEQ                                                        // [19660] goto WHILE_EXP0
(Output.printString$WHILE_END0)                              // [     ] label WHILE_END0
@SP                                                          // [19661] push constant 0
M=M+1                                                        // [19662] push constant 0
A=M-1                                                        // [19663] push constant 0
M=0                                                          // [19664] push constant 0
@RETURN                                                      // [19665] return
0;JEQ                                                        // [19666] return
(Output.printInt)                                            // [     ] function Output.printInt 0
@Output.4                                                    // [19667] push static 4
D=M                                                          // [19668] push static 4
@SP                                                          // [19669] push static 4
M=M+1                                                        // [19670] push static 4
A=M-1                                                        // [19671] push static 4
M=D                                                          // [19672] push static 4
@ARG                                                         // [19673] push argument 0
D=M                                                          // [19674] push argument 0
@0                                                           // [19675] push argument 0
A=D+A                                                        // [19676] push argument 0
D=M                                                          // [19677] push argument 0
@SP                                                          // [19678] push argument 0
M=M+1                                                        // [19679] push argument 0
A=M-1                                                        // [19680] push argument 0
M=D                                                          // [19681] push argument 0
@2                                                           // [19682] call String.setInt 2
D=A                                                          // [19683] call String.setInt 2
@R13                                                         // [19684] call String.setInt 2
M=D                                                          // [19685] call String.setInt 2
@String.setInt                                               // [19686] call String.setInt 2
D=A                                                          // [19687] call String.setInt 2
@R14                                                         // [19688] call String.setInt 2
M=D                                                          // [19689] call String.setInt 2
@return-203                                                  // [19690] call String.setInt 2
D=A                                                          // [19691] call String.setInt 2
@CALL                                                        // [19692] call String.setInt 2
0;JEQ                                                        // [19693] call String.setInt 2
(return-203)                                                 // [     ] call String.setInt 2
@SP                                                          // [19694] pop temp 0
AM=M-1                                                       // [19695] pop temp 0
D=M                                                          // [19696] pop temp 0
@5                                                           // [19697] pop temp 0
M=D                                                          // [19698] pop temp 0
@Output.4                                                    // [19699] push static 4
D=M                                                          // [19700] push static 4
@SP                                                          // [19701] push static 4
M=M+1                                                        // [19702] push static 4
A=M-1                                                        // [19703] push static 4
M=D                                                          // [19704] push static 4
@1                                                           // [19705] call Output.printString 1
D=A                                                          // [19706] call Output.printString 1
@R13                                                         // [19707] call Output.printString 1
M=D                                                          // [19708] call Output.printString 1
@Output.printString                                          // [19709] call Output.printString 1
D=A                                                          // [19710] call Output.printString 1
@R14                                                         // [19711] call Output.printString 1
M=D                                                          // [19712] call Output.printString 1
@return-204                                                  // [19713] call Output.printString 1
D=A                                                          // [19714] call Output.printString 1
@CALL                                                        // [19715] call Output.printString 1
0;JEQ                                                        // [19716] call Output.printString 1
(return-204)                                                 // [     ] call Output.printString 1
@SP                                                          // [19717] pop temp 0
AM=M-1                                                       // [19718] pop temp 0
D=M                                                          // [19719] pop temp 0
@5                                                           // [19720] pop temp 0
M=D                                                          // [19721] pop temp 0
@SP                                                          // [19722] push constant 0
M=M+1                                                        // [19723] push constant 0
A=M-1                                                        // [19724] push constant 0
M=0                                                          // [19725] push constant 0
@RETURN                                                      // [19726] return
0;JEQ                                                        // [19727] return
(Output.println)                                             // [     ] function Output.println 0
@SP                                                          // [19728] push constant 0
M=M+1                                                        // [19729] push constant 0
A=M-1                                                        // [19730] push constant 0
M=0                                                          // [19731] push constant 0
@SP                                                          // [19732] pop static 1
AM=M-1                                                       // [19733] pop static 1
D=M                                                          // [19734] pop static 1
@Output.1                                                    // [19735] pop static 1
M=D                                                          // [19736] pop static 1
@Output.2                                                    // [19737] push static 2
D=M                                                          // [19738] push static 2
@SP                                                          // [19739] push static 2
M=M+1                                                        // [19740] push static 2
A=M-1                                                        // [19741] push static 2
M=D                                                          // [19742] push static 2
@22                                                          // [19743] push constant 22
D=A                                                          // [19744] push constant 22
@SP                                                          // [19745] push constant 22
M=M+1                                                        // [19746] push constant 22
A=M-1                                                        // [19747] push constant 22
M=D                                                          // [19748] push constant 22
@CONTINUE_LT_27                                              // [19749] lt
D=A                                                          // [19750] lt
@R13                                                         // [19751] lt
M=D                                                          // [19752] lt
@SP                                                          // [19753] lt
AM=M-1                                                       // [19754] lt
D=M                                                          // [19755] lt
A=A-1                                                        // [19756] lt
D=D-M                                                        // [19757] lt
@INTERNAL_LT                                                 // [19758] lt
0;JEQ                                                        // [19759] lt
(CONTINUE_LT_27)                                             // [     ] lt
@SP                                                          // [19760] if-goto IF_TRUE0
AM=M-1                                                       // [19761] if-goto IF_TRUE0
D=M                                                          // [19762] if-goto IF_TRUE0
@Output.println$IF_TRUE0                                     // [19763] if-goto IF_TRUE0
D;JNE                                                        // [19764] if-goto IF_TRUE0
@Output.println$IF_FALSE0                                    // [19765] goto IF_FALSE0
0;JEQ                                                        // [19766] goto IF_FALSE0
(Output.println$IF_TRUE0)                                    // [     ] label IF_TRUE0
@Output.2                                                    // [19767] push static 2
D=M                                                          // [19768] push static 2
@SP                                                          // [19769] push static 2
M=M+1                                                        // [19770] push static 2
A=M-1                                                        // [19771] push static 2
M=D                                                          // [19772] push static 2
@SP                                                          // [19773] push constant 1
M=M+1                                                        // [19774] push constant 1
A=M-1                                                        // [19775] push constant 1
M=1                                                          // [19776] push constant 1
@SP                                                          // [19777] add
AM=M-1                                                       // [19778] add
D=M                                                          // [19779] add
A=A-1                                                        // [19780] add
M=D+M                                                        // [19781] add
@SP                                                          // [19782] pop static 2
AM=M-1                                                       // [19783] pop static 2
D=M                                                          // [19784] pop static 2
@Output.2                                                    // [19785] pop static 2
M=D                                                          // [19786] pop static 2
@Output.println$IF_END0                                      // [19787] goto IF_END0
0;JEQ                                                        // [19788] goto IF_END0
(Output.println$IF_FALSE0)                                   // [     ] label IF_FALSE0
@SP                                                          // [19789] push constant 0
M=M+1                                                        // [19790] push constant 0
A=M-1                                                        // [19791] push constant 0
M=0                                                          // [19792] push constant 0
@SP                                                          // [19793] pop static 2
AM=M-1                                                       // [19794] pop static 2
D=M                                                          // [19795] pop static 2
@Output.2                                                    // [19796] pop static 2
M=D                                                          // [19797] pop static 2
(Output.println$IF_END0)                                     // [     ] label IF_END0
@SP                                                          // [19798] push constant 0
M=M+1                                                        // [19799] push constant 0
A=M-1                                                        // [19800] push constant 0
M=0                                                          // [19801] push constant 0
@RETURN                                                      // [19802] return
0;JEQ                                                        // [19803] return
(Output.backSpace)                                           // [     ] function Output.backSpace 2
@SP                                                          // [19804] function Output.backSpace 2
A=M                                                          // [19805] function Output.backSpace 2
M=0                                                          // [19806] function Output.backSpace 2
@SP                                                          // [19807] function Output.backSpace 2
M=M+1                                                        // [19808] function Output.backSpace 2
@SP                                                          // [19809] function Output.backSpace 2
A=M                                                          // [19810] function Output.backSpace 2
M=0                                                          // [19811] function Output.backSpace 2
@SP                                                          // [19812] function Output.backSpace 2
M=M+1                                                        // [19813] function Output.backSpace 2
@Output.1                                                    // [19814] push static 1
D=M                                                          // [19815] push static 1
@SP                                                          // [19816] push static 1
M=M+1                                                        // [19817] push static 1
A=M-1                                                        // [19818] push static 1
M=D                                                          // [19819] push static 1
@SP                                                          // [19820] push constant 0
M=M+1                                                        // [19821] push constant 0
A=M-1                                                        // [19822] push constant 0
M=0                                                          // [19823] push constant 0
@CONTINUE_GT_14                                              // [19824] gt
D=A                                                          // [19825] gt
@R13                                                         // [19826] gt
M=D                                                          // [19827] gt
@SP                                                          // [19828] gt
AM=M-1                                                       // [19829] gt
D=M                                                          // [19830] gt
A=A-1                                                        // [19831] gt
D=D-M                                                        // [19832] gt
@INTERNAL_GT                                                 // [19833] gt
0;JEQ                                                        // [19834] gt
(CONTINUE_GT_14)                                             // [     ] gt
@SP                                                          // [19835] if-goto IF_TRUE0
AM=M-1                                                       // [19836] if-goto IF_TRUE0
D=M                                                          // [19837] if-goto IF_TRUE0
@Output.backSpace$IF_TRUE0                                   // [19838] if-goto IF_TRUE0
D;JNE                                                        // [19839] if-goto IF_TRUE0
@Output.backSpace$IF_FALSE0                                  // [19840] goto IF_FALSE0
0;JEQ                                                        // [19841] goto IF_FALSE0
(Output.backSpace$IF_TRUE0)                                  // [     ] label IF_TRUE0
@Output.1                                                    // [19842] push static 1
D=M                                                          // [19843] push static 1
@SP                                                          // [19844] push static 1
M=M+1                                                        // [19845] push static 1
A=M-1                                                        // [19846] push static 1
M=D                                                          // [19847] push static 1
@SP                                                          // [19848] push constant 1
M=M+1                                                        // [19849] push constant 1
A=M-1                                                        // [19850] push constant 1
M=1                                                          // [19851] push constant 1
@SP                                                          // [19852] sub
AM=M-1                                                       // [19853] sub
D=M                                                          // [19854] sub
A=A-1                                                        // [19855] sub
M=M-D                                                        // [19856] sub
@SP                                                          // [19857] pop local 0
AM=M-1                                                       // [19858] pop local 0
D=M                                                          // [19859] pop local 0
@R13                                                         // [19860] pop local 0
M=D                                                          // [19861] pop local 0
@LCL                                                         // [19862] pop local 0
D=M                                                          // [19863] pop local 0
@0                                                           // [19864] pop local 0
D=D+A                                                        // [19865] pop local 0
@R14                                                         // [19866] pop local 0
M=D                                                          // [19867] pop local 0
@R13                                                         // [19868] pop local 0
D=M                                                          // [19869] pop local 0
@R14                                                         // [19870] pop local 0
A=M                                                          // [19871] pop local 0
M=D                                                          // [19872] pop local 0
@Output.2                                                    // [19873] push static 2
D=M                                                          // [19874] push static 2
@SP                                                          // [19875] push static 2
M=M+1                                                        // [19876] push static 2
A=M-1                                                        // [19877] push static 2
M=D                                                          // [19878] push static 2
@SP                                                          // [19879] pop local 1
AM=M-1                                                       // [19880] pop local 1
D=M                                                          // [19881] pop local 1
@R13                                                         // [19882] pop local 1
M=D                                                          // [19883] pop local 1
@LCL                                                         // [19884] pop local 1
D=M                                                          // [19885] pop local 1
@1                                                           // [19886] pop local 1
D=D+A                                                        // [19887] pop local 1
@R14                                                         // [19888] pop local 1
M=D                                                          // [19889] pop local 1
@R13                                                         // [19890] pop local 1
D=M                                                          // [19891] pop local 1
@R14                                                         // [19892] pop local 1
A=M                                                          // [19893] pop local 1
M=D                                                          // [19894] pop local 1
@Output.backSpace$IF_END0                                    // [19895] goto IF_END0
0;JEQ                                                        // [19896] goto IF_END0
(Output.backSpace$IF_FALSE0)                                 // [     ] label IF_FALSE0
@63                                                          // [19897] push constant 63
D=A                                                          // [19898] push constant 63
@SP                                                          // [19899] push constant 63
M=M+1                                                        // [19900] push constant 63
A=M-1                                                        // [19901] push constant 63
M=D                                                          // [19902] push constant 63
@SP                                                          // [19903] pop local 0
AM=M-1                                                       // [19904] pop local 0
D=M                                                          // [19905] pop local 0
@R13                                                         // [19906] pop local 0
M=D                                                          // [19907] pop local 0
@LCL                                                         // [19908] pop local 0
D=M                                                          // [19909] pop local 0
@0                                                           // [19910] pop local 0
D=D+A                                                        // [19911] pop local 0
@R14                                                         // [19912] pop local 0
M=D                                                          // [19913] pop local 0
@R13                                                         // [19914] pop local 0
D=M                                                          // [19915] pop local 0
@R14                                                         // [19916] pop local 0
A=M                                                          // [19917] pop local 0
M=D                                                          // [19918] pop local 0
@Output.2                                                    // [19919] push static 2
D=M                                                          // [19920] push static 2
@SP                                                          // [19921] push static 2
M=M+1                                                        // [19922] push static 2
A=M-1                                                        // [19923] push static 2
M=D                                                          // [19924] push static 2
@SP                                                          // [19925] push constant 0
M=M+1                                                        // [19926] push constant 0
A=M-1                                                        // [19927] push constant 0
M=0                                                          // [19928] push constant 0
@CONTINUE_GT_15                                              // [19929] gt
D=A                                                          // [19930] gt
@R13                                                         // [19931] gt
M=D                                                          // [19932] gt
@SP                                                          // [19933] gt
AM=M-1                                                       // [19934] gt
D=M                                                          // [19935] gt
A=A-1                                                        // [19936] gt
D=D-M                                                        // [19937] gt
@INTERNAL_GT                                                 // [19938] gt
0;JEQ                                                        // [19939] gt
(CONTINUE_GT_15)                                             // [     ] gt
@SP                                                          // [19940] if-goto IF_TRUE1
AM=M-1                                                       // [19941] if-goto IF_TRUE1
D=M                                                          // [19942] if-goto IF_TRUE1
@Output.backSpace$IF_TRUE1                                   // [19943] if-goto IF_TRUE1
D;JNE                                                        // [19944] if-goto IF_TRUE1
@Output.backSpace$IF_FALSE1                                  // [19945] goto IF_FALSE1
0;JEQ                                                        // [19946] goto IF_FALSE1
(Output.backSpace$IF_TRUE1)                                  // [     ] label IF_TRUE1
@Output.2                                                    // [19947] push static 2
D=M                                                          // [19948] push static 2
@SP                                                          // [19949] push static 2
M=M+1                                                        // [19950] push static 2
A=M-1                                                        // [19951] push static 2
M=D                                                          // [19952] push static 2
@SP                                                          // [19953] push constant 1
M=M+1                                                        // [19954] push constant 1
A=M-1                                                        // [19955] push constant 1
M=1                                                          // [19956] push constant 1
@SP                                                          // [19957] sub
AM=M-1                                                       // [19958] sub
D=M                                                          // [19959] sub
A=A-1                                                        // [19960] sub
M=M-D                                                        // [19961] sub
@SP                                                          // [19962] pop local 1
AM=M-1                                                       // [19963] pop local 1
D=M                                                          // [19964] pop local 1
@R13                                                         // [19965] pop local 1
M=D                                                          // [19966] pop local 1
@LCL                                                         // [19967] pop local 1
D=M                                                          // [19968] pop local 1
@1                                                           // [19969] pop local 1
D=D+A                                                        // [19970] pop local 1
@R14                                                         // [19971] pop local 1
M=D                                                          // [19972] pop local 1
@R13                                                         // [19973] pop local 1
D=M                                                          // [19974] pop local 1
@R14                                                         // [19975] pop local 1
A=M                                                          // [19976] pop local 1
M=D                                                          // [19977] pop local 1
@Output.backSpace$IF_END1                                    // [19978] goto IF_END1
0;JEQ                                                        // [19979] goto IF_END1
(Output.backSpace$IF_FALSE1)                                 // [     ] label IF_FALSE1
@22                                                          // [19980] push constant 22
D=A                                                          // [19981] push constant 22
@SP                                                          // [19982] push constant 22
M=M+1                                                        // [19983] push constant 22
A=M-1                                                        // [19984] push constant 22
M=D                                                          // [19985] push constant 22
@SP                                                          // [19986] pop local 1
AM=M-1                                                       // [19987] pop local 1
D=M                                                          // [19988] pop local 1
@R13                                                         // [19989] pop local 1
M=D                                                          // [19990] pop local 1
@LCL                                                         // [19991] pop local 1
D=M                                                          // [19992] pop local 1
@1                                                           // [19993] pop local 1
D=D+A                                                        // [19994] pop local 1
@R14                                                         // [19995] pop local 1
M=D                                                          // [19996] pop local 1
@R13                                                         // [19997] pop local 1
D=M                                                          // [19998] pop local 1
@R14                                                         // [19999] pop local 1
A=M                                                          // [20000] pop local 1
M=D                                                          // [20001] pop local 1
(Output.backSpace$IF_END1)                                   // [     ] label IF_END1
(Output.backSpace$IF_END0)                                   // [     ] label IF_END0
@LCL                                                         // [20002] push local 0
D=M                                                          // [20003] push local 0
@0                                                           // [20004] push local 0
A=D+A                                                        // [20005] push local 0
D=M                                                          // [20006] push local 0
@SP                                                          // [20007] push local 0
M=M+1                                                        // [20008] push local 0
A=M-1                                                        // [20009] push local 0
M=D                                                          // [20010] push local 0
@LCL                                                         // [20011] push local 1
D=M                                                          // [20012] push local 1
@1                                                           // [20013] push local 1
A=D+A                                                        // [20014] push local 1
D=M                                                          // [20015] push local 1
@SP                                                          // [20016] push local 1
M=M+1                                                        // [20017] push local 1
A=M-1                                                        // [20018] push local 1
M=D                                                          // [20019] push local 1
@2                                                           // [20020] call Output.moveCursor 2
D=A                                                          // [20021] call Output.moveCursor 2
@R13                                                         // [20022] call Output.moveCursor 2
M=D                                                          // [20023] call Output.moveCursor 2
@Output.moveCursor                                           // [20024] call Output.moveCursor 2
D=A                                                          // [20025] call Output.moveCursor 2
@R14                                                         // [20026] call Output.moveCursor 2
M=D                                                          // [20027] call Output.moveCursor 2
@return-205                                                  // [20028] call Output.moveCursor 2
D=A                                                          // [20029] call Output.moveCursor 2
@CALL                                                        // [20030] call Output.moveCursor 2
0;JEQ                                                        // [20031] call Output.moveCursor 2
(return-205)                                                 // [     ] call Output.moveCursor 2
@SP                                                          // [20032] pop temp 0
AM=M-1                                                       // [20033] pop temp 0
D=M                                                          // [20034] pop temp 0
@5                                                           // [20035] pop temp 0
M=D                                                          // [20036] pop temp 0
@SP                                                          // [20037] push constant 0
M=M+1                                                        // [20038] push constant 0
A=M-1                                                        // [20039] push constant 0
M=0                                                          // [20040] push constant 0
@RETURN                                                      // [20041] return
0;JEQ                                                        // [20042] return
(PongGame.new)                                               // [     ] function PongGame.new 0
@7                                                           // [20043] push constant 7
D=A                                                          // [20044] push constant 7
@SP                                                          // [20045] push constant 7
M=M+1                                                        // [20046] push constant 7
A=M-1                                                        // [20047] push constant 7
M=D                                                          // [20048] push constant 7
@1                                                           // [20049] call Memory.alloc 1
D=A                                                          // [20050] call Memory.alloc 1
@R13                                                         // [20051] call Memory.alloc 1
M=D                                                          // [20052] call Memory.alloc 1
@Memory.alloc                                                // [20053] call Memory.alloc 1
D=A                                                          // [20054] call Memory.alloc 1
@R14                                                         // [20055] call Memory.alloc 1
M=D                                                          // [20056] call Memory.alloc 1
@return-206                                                  // [20057] call Memory.alloc 1
D=A                                                          // [20058] call Memory.alloc 1
@CALL                                                        // [20059] call Memory.alloc 1
0;JEQ                                                        // [20060] call Memory.alloc 1
(return-206)                                                 // [     ] call Memory.alloc 1
@SP                                                          // [20061] pop pointer 0
AM=M-1                                                       // [20062] pop pointer 0
D=M                                                          // [20063] pop pointer 0
@3                                                           // [20064] pop pointer 0
M=D                                                          // [20065] pop pointer 0
@0                                                           // [20066] call Screen.clearScreen 0
D=A                                                          // [20067] call Screen.clearScreen 0
@R13                                                         // [20068] call Screen.clearScreen 0
M=D                                                          // [20069] call Screen.clearScreen 0
@Screen.clearScreen                                          // [20070] call Screen.clearScreen 0
D=A                                                          // [20071] call Screen.clearScreen 0
@R14                                                         // [20072] call Screen.clearScreen 0
M=D                                                          // [20073] call Screen.clearScreen 0
@return-207                                                  // [20074] call Screen.clearScreen 0
D=A                                                          // [20075] call Screen.clearScreen 0
@CALL                                                        // [20076] call Screen.clearScreen 0
0;JEQ                                                        // [20077] call Screen.clearScreen 0
(return-207)                                                 // [     ] call Screen.clearScreen 0
@SP                                                          // [20078] pop temp 0
AM=M-1                                                       // [20079] pop temp 0
D=M                                                          // [20080] pop temp 0
@5                                                           // [20081] pop temp 0
M=D                                                          // [20082] pop temp 0
@50                                                          // [20083] push constant 50
D=A                                                          // [20084] push constant 50
@SP                                                          // [20085] push constant 50
M=M+1                                                        // [20086] push constant 50
A=M-1                                                        // [20087] push constant 50
M=D                                                          // [20088] push constant 50
@SP                                                          // [20089] pop this 6
AM=M-1                                                       // [20090] pop this 6
D=M                                                          // [20091] pop this 6
@R13                                                         // [20092] pop this 6
M=D                                                          // [20093] pop this 6
@THIS                                                        // [20094] pop this 6
D=M                                                          // [20095] pop this 6
@6                                                           // [20096] pop this 6
D=D+A                                                        // [20097] pop this 6
@R14                                                         // [20098] pop this 6
M=D                                                          // [20099] pop this 6
@R13                                                         // [20100] pop this 6
D=M                                                          // [20101] pop this 6
@R14                                                         // [20102] pop this 6
A=M                                                          // [20103] pop this 6
M=D                                                          // [20104] pop this 6
@230                                                         // [20105] push constant 230
D=A                                                          // [20106] push constant 230
@SP                                                          // [20107] push constant 230
M=M+1                                                        // [20108] push constant 230
A=M-1                                                        // [20109] push constant 230
M=D                                                          // [20110] push constant 230
@229                                                         // [20111] push constant 229
D=A                                                          // [20112] push constant 229
@SP                                                          // [20113] push constant 229
M=M+1                                                        // [20114] push constant 229
A=M-1                                                        // [20115] push constant 229
M=D                                                          // [20116] push constant 229
@THIS                                                        // [20117] push this 6
D=M                                                          // [20118] push this 6
@6                                                           // [20119] push this 6
A=D+A                                                        // [20120] push this 6
D=M                                                          // [20121] push this 6
@SP                                                          // [20122] push this 6
M=M+1                                                        // [20123] push this 6
A=M-1                                                        // [20124] push this 6
M=D                                                          // [20125] push this 6
@7                                                           // [20126] push constant 7
D=A                                                          // [20127] push constant 7
@SP                                                          // [20128] push constant 7
M=M+1                                                        // [20129] push constant 7
A=M-1                                                        // [20130] push constant 7
M=D                                                          // [20131] push constant 7
@4                                                           // [20132] call Bat.new 4
D=A                                                          // [20133] call Bat.new 4
@R13                                                         // [20134] call Bat.new 4
M=D                                                          // [20135] call Bat.new 4
@Bat.new                                                     // [20136] call Bat.new 4
D=A                                                          // [20137] call Bat.new 4
@R14                                                         // [20138] call Bat.new 4
M=D                                                          // [20139] call Bat.new 4
@return-208                                                  // [20140] call Bat.new 4
D=A                                                          // [20141] call Bat.new 4
@CALL                                                        // [20142] call Bat.new 4
0;JEQ                                                        // [20143] call Bat.new 4
(return-208)                                                 // [     ] call Bat.new 4
@SP                                                          // [20144] pop this 0
AM=M-1                                                       // [20145] pop this 0
D=M                                                          // [20146] pop this 0
@R13                                                         // [20147] pop this 0
M=D                                                          // [20148] pop this 0
@THIS                                                        // [20149] pop this 0
D=M                                                          // [20150] pop this 0
@0                                                           // [20151] pop this 0
D=D+A                                                        // [20152] pop this 0
@R14                                                         // [20153] pop this 0
M=D                                                          // [20154] pop this 0
@R13                                                         // [20155] pop this 0
D=M                                                          // [20156] pop this 0
@R14                                                         // [20157] pop this 0
A=M                                                          // [20158] pop this 0
M=D                                                          // [20159] pop this 0
@253                                                         // [20160] push constant 253
D=A                                                          // [20161] push constant 253
@SP                                                          // [20162] push constant 253
M=M+1                                                        // [20163] push constant 253
A=M-1                                                        // [20164] push constant 253
M=D                                                          // [20165] push constant 253
@222                                                         // [20166] push constant 222
D=A                                                          // [20167] push constant 222
@SP                                                          // [20168] push constant 222
M=M+1                                                        // [20169] push constant 222
A=M-1                                                        // [20170] push constant 222
M=D                                                          // [20171] push constant 222
@SP                                                          // [20172] push constant 0
M=M+1                                                        // [20173] push constant 0
A=M-1                                                        // [20174] push constant 0
M=0                                                          // [20175] push constant 0
@511                                                         // [20176] push constant 511
D=A                                                          // [20177] push constant 511
@SP                                                          // [20178] push constant 511
M=M+1                                                        // [20179] push constant 511
A=M-1                                                        // [20180] push constant 511
M=D                                                          // [20181] push constant 511
@SP                                                          // [20182] push constant 0
M=M+1                                                        // [20183] push constant 0
A=M-1                                                        // [20184] push constant 0
M=0                                                          // [20185] push constant 0
@229                                                         // [20186] push constant 229
D=A                                                          // [20187] push constant 229
@SP                                                          // [20188] push constant 229
M=M+1                                                        // [20189] push constant 229
A=M-1                                                        // [20190] push constant 229
M=D                                                          // [20191] push constant 229
@6                                                           // [20192] call Ball.new 6
D=A                                                          // [20193] call Ball.new 6
@R13                                                         // [20194] call Ball.new 6
M=D                                                          // [20195] call Ball.new 6
@Ball.new                                                    // [20196] call Ball.new 6
D=A                                                          // [20197] call Ball.new 6
@R14                                                         // [20198] call Ball.new 6
M=D                                                          // [20199] call Ball.new 6
@return-209                                                  // [20200] call Ball.new 6
D=A                                                          // [20201] call Ball.new 6
@CALL                                                        // [20202] call Ball.new 6
0;JEQ                                                        // [20203] call Ball.new 6
(return-209)                                                 // [     ] call Ball.new 6
@SP                                                          // [20204] pop this 1
AM=M-1                                                       // [20205] pop this 1
D=M                                                          // [20206] pop this 1
@R13                                                         // [20207] pop this 1
M=D                                                          // [20208] pop this 1
@THIS                                                        // [20209] pop this 1
D=M                                                          // [20210] pop this 1
@1                                                           // [20211] pop this 1
D=D+A                                                        // [20212] pop this 1
@R14                                                         // [20213] pop this 1
M=D                                                          // [20214] pop this 1
@R13                                                         // [20215] pop this 1
D=M                                                          // [20216] pop this 1
@R14                                                         // [20217] pop this 1
A=M                                                          // [20218] pop this 1
M=D                                                          // [20219] pop this 1
@THIS                                                        // [20220] push this 1
D=M                                                          // [20221] push this 1
@1                                                           // [20222] push this 1
A=D+A                                                        // [20223] push this 1
D=M                                                          // [20224] push this 1
@SP                                                          // [20225] push this 1
M=M+1                                                        // [20226] push this 1
A=M-1                                                        // [20227] push this 1
M=D                                                          // [20228] push this 1
@400                                                         // [20229] push constant 400
D=A                                                          // [20230] push constant 400
@SP                                                          // [20231] push constant 400
M=M+1                                                        // [20232] push constant 400
A=M-1                                                        // [20233] push constant 400
M=D                                                          // [20234] push constant 400
@SP                                                          // [20235] push constant 0
M=M+1                                                        // [20236] push constant 0
A=M-1                                                        // [20237] push constant 0
M=0                                                          // [20238] push constant 0
@3                                                           // [20239] call Ball.setDestination 3
D=A                                                          // [20240] call Ball.setDestination 3
@R13                                                         // [20241] call Ball.setDestination 3
M=D                                                          // [20242] call Ball.setDestination 3
@Ball.setDestination                                         // [20243] call Ball.setDestination 3
D=A                                                          // [20244] call Ball.setDestination 3
@R14                                                         // [20245] call Ball.setDestination 3
M=D                                                          // [20246] call Ball.setDestination 3
@return-210                                                  // [20247] call Ball.setDestination 3
D=A                                                          // [20248] call Ball.setDestination 3
@CALL                                                        // [20249] call Ball.setDestination 3
0;JEQ                                                        // [20250] call Ball.setDestination 3
(return-210)                                                 // [     ] call Ball.setDestination 3
@SP                                                          // [20251] pop temp 0
AM=M-1                                                       // [20252] pop temp 0
D=M                                                          // [20253] pop temp 0
@5                                                           // [20254] pop temp 0
M=D                                                          // [20255] pop temp 0
@SP                                                          // [20256] push constant 0
M=M+1                                                        // [20257] push constant 0
A=M-1                                                        // [20258] push constant 0
M=0                                                          // [20259] push constant 0
@238                                                         // [20260] push constant 238
D=A                                                          // [20261] push constant 238
@SP                                                          // [20262] push constant 238
M=M+1                                                        // [20263] push constant 238
A=M-1                                                        // [20264] push constant 238
M=D                                                          // [20265] push constant 238
@511                                                         // [20266] push constant 511
D=A                                                          // [20267] push constant 511
@SP                                                          // [20268] push constant 511
M=M+1                                                        // [20269] push constant 511
A=M-1                                                        // [20270] push constant 511
M=D                                                          // [20271] push constant 511
@240                                                         // [20272] push constant 240
D=A                                                          // [20273] push constant 240
@SP                                                          // [20274] push constant 240
M=M+1                                                        // [20275] push constant 240
A=M-1                                                        // [20276] push constant 240
M=D                                                          // [20277] push constant 240
@4                                                           // [20278] call Screen.drawRectangle 4
D=A                                                          // [20279] call Screen.drawRectangle 4
@R13                                                         // [20280] call Screen.drawRectangle 4
M=D                                                          // [20281] call Screen.drawRectangle 4
@Screen.drawRectangle                                        // [20282] call Screen.drawRectangle 4
D=A                                                          // [20283] call Screen.drawRectangle 4
@R14                                                         // [20284] call Screen.drawRectangle 4
M=D                                                          // [20285] call Screen.drawRectangle 4
@return-211                                                  // [20286] call Screen.drawRectangle 4
D=A                                                          // [20287] call Screen.drawRectangle 4
@CALL                                                        // [20288] call Screen.drawRectangle 4
0;JEQ                                                        // [20289] call Screen.drawRectangle 4
(return-211)                                                 // [     ] call Screen.drawRectangle 4
@SP                                                          // [20290] pop temp 0
AM=M-1                                                       // [20291] pop temp 0
D=M                                                          // [20292] pop temp 0
@5                                                           // [20293] pop temp 0
M=D                                                          // [20294] pop temp 0
@22                                                          // [20295] push constant 22
D=A                                                          // [20296] push constant 22
@SP                                                          // [20297] push constant 22
M=M+1                                                        // [20298] push constant 22
A=M-1                                                        // [20299] push constant 22
M=D                                                          // [20300] push constant 22
@SP                                                          // [20301] push constant 0
M=M+1                                                        // [20302] push constant 0
A=M-1                                                        // [20303] push constant 0
M=0                                                          // [20304] push constant 0
@2                                                           // [20305] call Output.moveCursor 2
D=A                                                          // [20306] call Output.moveCursor 2
@R13                                                         // [20307] call Output.moveCursor 2
M=D                                                          // [20308] call Output.moveCursor 2
@Output.moveCursor                                           // [20309] call Output.moveCursor 2
D=A                                                          // [20310] call Output.moveCursor 2
@R14                                                         // [20311] call Output.moveCursor 2
M=D                                                          // [20312] call Output.moveCursor 2
@return-212                                                  // [20313] call Output.moveCursor 2
D=A                                                          // [20314] call Output.moveCursor 2
@CALL                                                        // [20315] call Output.moveCursor 2
0;JEQ                                                        // [20316] call Output.moveCursor 2
(return-212)                                                 // [     ] call Output.moveCursor 2
@SP                                                          // [20317] pop temp 0
AM=M-1                                                       // [20318] pop temp 0
D=M                                                          // [20319] pop temp 0
@5                                                           // [20320] pop temp 0
M=D                                                          // [20321] pop temp 0
@8                                                           // [20322] push constant 8
D=A                                                          // [20323] push constant 8
@SP                                                          // [20324] push constant 8
M=M+1                                                        // [20325] push constant 8
A=M-1                                                        // [20326] push constant 8
M=D                                                          // [20327] push constant 8
@1                                                           // [20328] call String.new 1
D=A                                                          // [20329] call String.new 1
@R13                                                         // [20330] call String.new 1
M=D                                                          // [20331] call String.new 1
@String.new                                                  // [20332] call String.new 1
D=A                                                          // [20333] call String.new 1
@R14                                                         // [20334] call String.new 1
M=D                                                          // [20335] call String.new 1
@return-213                                                  // [20336] call String.new 1
D=A                                                          // [20337] call String.new 1
@CALL                                                        // [20338] call String.new 1
0;JEQ                                                        // [20339] call String.new 1
(return-213)                                                 // [     ] call String.new 1
@83                                                          // [20340] push constant 83
D=A                                                          // [20341] push constant 83
@SP                                                          // [20342] push constant 83
M=M+1                                                        // [20343] push constant 83
A=M-1                                                        // [20344] push constant 83
M=D                                                          // [20345] push constant 83
@2                                                           // [20346] call String.appendChar 2
D=A                                                          // [20347] call String.appendChar 2
@R13                                                         // [20348] call String.appendChar 2
M=D                                                          // [20349] call String.appendChar 2
@String.appendChar                                           // [20350] call String.appendChar 2
D=A                                                          // [20351] call String.appendChar 2
@R14                                                         // [20352] call String.appendChar 2
M=D                                                          // [20353] call String.appendChar 2
@return-214                                                  // [20354] call String.appendChar 2
D=A                                                          // [20355] call String.appendChar 2
@CALL                                                        // [20356] call String.appendChar 2
0;JEQ                                                        // [20357] call String.appendChar 2
(return-214)                                                 // [     ] call String.appendChar 2
@99                                                          // [20358] push constant 99
D=A                                                          // [20359] push constant 99
@SP                                                          // [20360] push constant 99
M=M+1                                                        // [20361] push constant 99
A=M-1                                                        // [20362] push constant 99
M=D                                                          // [20363] push constant 99
@2                                                           // [20364] call String.appendChar 2
D=A                                                          // [20365] call String.appendChar 2
@R13                                                         // [20366] call String.appendChar 2
M=D                                                          // [20367] call String.appendChar 2
@String.appendChar                                           // [20368] call String.appendChar 2
D=A                                                          // [20369] call String.appendChar 2
@R14                                                         // [20370] call String.appendChar 2
M=D                                                          // [20371] call String.appendChar 2
@return-215                                                  // [20372] call String.appendChar 2
D=A                                                          // [20373] call String.appendChar 2
@CALL                                                        // [20374] call String.appendChar 2
0;JEQ                                                        // [20375] call String.appendChar 2
(return-215)                                                 // [     ] call String.appendChar 2
@111                                                         // [20376] push constant 111
D=A                                                          // [20377] push constant 111
@SP                                                          // [20378] push constant 111
M=M+1                                                        // [20379] push constant 111
A=M-1                                                        // [20380] push constant 111
M=D                                                          // [20381] push constant 111
@2                                                           // [20382] call String.appendChar 2
D=A                                                          // [20383] call String.appendChar 2
@R13                                                         // [20384] call String.appendChar 2
M=D                                                          // [20385] call String.appendChar 2
@String.appendChar                                           // [20386] call String.appendChar 2
D=A                                                          // [20387] call String.appendChar 2
@R14                                                         // [20388] call String.appendChar 2
M=D                                                          // [20389] call String.appendChar 2
@return-216                                                  // [20390] call String.appendChar 2
D=A                                                          // [20391] call String.appendChar 2
@CALL                                                        // [20392] call String.appendChar 2
0;JEQ                                                        // [20393] call String.appendChar 2
(return-216)                                                 // [     ] call String.appendChar 2
@114                                                         // [20394] push constant 114
D=A                                                          // [20395] push constant 114
@SP                                                          // [20396] push constant 114
M=M+1                                                        // [20397] push constant 114
A=M-1                                                        // [20398] push constant 114
M=D                                                          // [20399] push constant 114
@2                                                           // [20400] call String.appendChar 2
D=A                                                          // [20401] call String.appendChar 2
@R13                                                         // [20402] call String.appendChar 2
M=D                                                          // [20403] call String.appendChar 2
@String.appendChar                                           // [20404] call String.appendChar 2
D=A                                                          // [20405] call String.appendChar 2
@R14                                                         // [20406] call String.appendChar 2
M=D                                                          // [20407] call String.appendChar 2
@return-217                                                  // [20408] call String.appendChar 2
D=A                                                          // [20409] call String.appendChar 2
@CALL                                                        // [20410] call String.appendChar 2
0;JEQ                                                        // [20411] call String.appendChar 2
(return-217)                                                 // [     ] call String.appendChar 2
@101                                                         // [20412] push constant 101
D=A                                                          // [20413] push constant 101
@SP                                                          // [20414] push constant 101
M=M+1                                                        // [20415] push constant 101
A=M-1                                                        // [20416] push constant 101
M=D                                                          // [20417] push constant 101
@2                                                           // [20418] call String.appendChar 2
D=A                                                          // [20419] call String.appendChar 2
@R13                                                         // [20420] call String.appendChar 2
M=D                                                          // [20421] call String.appendChar 2
@String.appendChar                                           // [20422] call String.appendChar 2
D=A                                                          // [20423] call String.appendChar 2
@R14                                                         // [20424] call String.appendChar 2
M=D                                                          // [20425] call String.appendChar 2
@return-218                                                  // [20426] call String.appendChar 2
D=A                                                          // [20427] call String.appendChar 2
@CALL                                                        // [20428] call String.appendChar 2
0;JEQ                                                        // [20429] call String.appendChar 2
(return-218)                                                 // [     ] call String.appendChar 2
@58                                                          // [20430] push constant 58
D=A                                                          // [20431] push constant 58
@SP                                                          // [20432] push constant 58
M=M+1                                                        // [20433] push constant 58
A=M-1                                                        // [20434] push constant 58
M=D                                                          // [20435] push constant 58
@2                                                           // [20436] call String.appendChar 2
D=A                                                          // [20437] call String.appendChar 2
@R13                                                         // [20438] call String.appendChar 2
M=D                                                          // [20439] call String.appendChar 2
@String.appendChar                                           // [20440] call String.appendChar 2
D=A                                                          // [20441] call String.appendChar 2
@R14                                                         // [20442] call String.appendChar 2
M=D                                                          // [20443] call String.appendChar 2
@return-219                                                  // [20444] call String.appendChar 2
D=A                                                          // [20445] call String.appendChar 2
@CALL                                                        // [20446] call String.appendChar 2
0;JEQ                                                        // [20447] call String.appendChar 2
(return-219)                                                 // [     ] call String.appendChar 2
@32                                                          // [20448] push constant 32
D=A                                                          // [20449] push constant 32
@SP                                                          // [20450] push constant 32
M=M+1                                                        // [20451] push constant 32
A=M-1                                                        // [20452] push constant 32
M=D                                                          // [20453] push constant 32
@2                                                           // [20454] call String.appendChar 2
D=A                                                          // [20455] call String.appendChar 2
@R13                                                         // [20456] call String.appendChar 2
M=D                                                          // [20457] call String.appendChar 2
@String.appendChar                                           // [20458] call String.appendChar 2
D=A                                                          // [20459] call String.appendChar 2
@R14                                                         // [20460] call String.appendChar 2
M=D                                                          // [20461] call String.appendChar 2
@return-220                                                  // [20462] call String.appendChar 2
D=A                                                          // [20463] call String.appendChar 2
@CALL                                                        // [20464] call String.appendChar 2
0;JEQ                                                        // [20465] call String.appendChar 2
(return-220)                                                 // [     ] call String.appendChar 2
@48                                                          // [20466] push constant 48
D=A                                                          // [20467] push constant 48
@SP                                                          // [20468] push constant 48
M=M+1                                                        // [20469] push constant 48
A=M-1                                                        // [20470] push constant 48
M=D                                                          // [20471] push constant 48
@2                                                           // [20472] call String.appendChar 2
D=A                                                          // [20473] call String.appendChar 2
@R13                                                         // [20474] call String.appendChar 2
M=D                                                          // [20475] call String.appendChar 2
@String.appendChar                                           // [20476] call String.appendChar 2
D=A                                                          // [20477] call String.appendChar 2
@R14                                                         // [20478] call String.appendChar 2
M=D                                                          // [20479] call String.appendChar 2
@return-221                                                  // [20480] call String.appendChar 2
D=A                                                          // [20481] call String.appendChar 2
@CALL                                                        // [20482] call String.appendChar 2
0;JEQ                                                        // [20483] call String.appendChar 2
(return-221)                                                 // [     ] call String.appendChar 2
@1                                                           // [20484] call Output.printString 1
D=A                                                          // [20485] call Output.printString 1
@R13                                                         // [20486] call Output.printString 1
M=D                                                          // [20487] call Output.printString 1
@Output.printString                                          // [20488] call Output.printString 1
D=A                                                          // [20489] call Output.printString 1
@R14                                                         // [20490] call Output.printString 1
M=D                                                          // [20491] call Output.printString 1
@return-222                                                  // [20492] call Output.printString 1
D=A                                                          // [20493] call Output.printString 1
@CALL                                                        // [20494] call Output.printString 1
0;JEQ                                                        // [20495] call Output.printString 1
(return-222)                                                 // [     ] call Output.printString 1
@SP                                                          // [20496] pop temp 0
AM=M-1                                                       // [20497] pop temp 0
D=M                                                          // [20498] pop temp 0
@5                                                           // [20499] pop temp 0
M=D                                                          // [20500] pop temp 0
@SP                                                          // [20501] push constant 0
M=M+1                                                        // [20502] push constant 0
A=M-1                                                        // [20503] push constant 0
M=0                                                          // [20504] push constant 0
@SP                                                          // [20505] pop this 3
AM=M-1                                                       // [20506] pop this 3
D=M                                                          // [20507] pop this 3
@R13                                                         // [20508] pop this 3
M=D                                                          // [20509] pop this 3
@THIS                                                        // [20510] pop this 3
D=M                                                          // [20511] pop this 3
@3                                                           // [20512] pop this 3
D=D+A                                                        // [20513] pop this 3
@R14                                                         // [20514] pop this 3
M=D                                                          // [20515] pop this 3
@R13                                                         // [20516] pop this 3
D=M                                                          // [20517] pop this 3
@R14                                                         // [20518] pop this 3
A=M                                                          // [20519] pop this 3
M=D                                                          // [20520] pop this 3
@SP                                                          // [20521] push constant 0
M=M+1                                                        // [20522] push constant 0
A=M-1                                                        // [20523] push constant 0
M=0                                                          // [20524] push constant 0
@SP                                                          // [20525] pop this 4
AM=M-1                                                       // [20526] pop this 4
D=M                                                          // [20527] pop this 4
@R13                                                         // [20528] pop this 4
M=D                                                          // [20529] pop this 4
@THIS                                                        // [20530] pop this 4
D=M                                                          // [20531] pop this 4
@4                                                           // [20532] pop this 4
D=D+A                                                        // [20533] pop this 4
@R14                                                         // [20534] pop this 4
M=D                                                          // [20535] pop this 4
@R13                                                         // [20536] pop this 4
D=M                                                          // [20537] pop this 4
@R14                                                         // [20538] pop this 4
A=M                                                          // [20539] pop this 4
M=D                                                          // [20540] pop this 4
@SP                                                          // [20541] push constant 0
M=M+1                                                        // [20542] push constant 0
A=M-1                                                        // [20543] push constant 0
M=0                                                          // [20544] push constant 0
@SP                                                          // [20545] pop this 2
AM=M-1                                                       // [20546] pop this 2
D=M                                                          // [20547] pop this 2
@R13                                                         // [20548] pop this 2
M=D                                                          // [20549] pop this 2
@THIS                                                        // [20550] pop this 2
D=M                                                          // [20551] pop this 2
@2                                                           // [20552] pop this 2
D=D+A                                                        // [20553] pop this 2
@R14                                                         // [20554] pop this 2
M=D                                                          // [20555] pop this 2
@R13                                                         // [20556] pop this 2
D=M                                                          // [20557] pop this 2
@R14                                                         // [20558] pop this 2
A=M                                                          // [20559] pop this 2
M=D                                                          // [20560] pop this 2
@SP                                                          // [20561] push constant 0
M=M+1                                                        // [20562] push constant 0
A=M-1                                                        // [20563] push constant 0
M=0                                                          // [20564] push constant 0
@SP                                                          // [20565] pop this 5
AM=M-1                                                       // [20566] pop this 5
D=M                                                          // [20567] pop this 5
@R13                                                         // [20568] pop this 5
M=D                                                          // [20569] pop this 5
@THIS                                                        // [20570] pop this 5
D=M                                                          // [20571] pop this 5
@5                                                           // [20572] pop this 5
D=D+A                                                        // [20573] pop this 5
@R14                                                         // [20574] pop this 5
M=D                                                          // [20575] pop this 5
@R13                                                         // [20576] pop this 5
D=M                                                          // [20577] pop this 5
@R14                                                         // [20578] pop this 5
A=M                                                          // [20579] pop this 5
M=D                                                          // [20580] pop this 5
@3                                                           // [20581] push pointer 0
D=M                                                          // [20582] push pointer 0
@SP                                                          // [20583] push pointer 0
M=M+1                                                        // [20584] push pointer 0
A=M-1                                                        // [20585] push pointer 0
M=D                                                          // [20586] push pointer 0
@RETURN                                                      // [20587] return
0;JEQ                                                        // [20588] return
(PongGame.dispose)                                           // [     ] function PongGame.dispose 0
@ARG                                                         // [20589] push argument 0
D=M                                                          // [20590] push argument 0
@0                                                           // [20591] push argument 0
A=D+A                                                        // [20592] push argument 0
D=M                                                          // [20593] push argument 0
@SP                                                          // [20594] push argument 0
M=M+1                                                        // [20595] push argument 0
A=M-1                                                        // [20596] push argument 0
M=D                                                          // [20597] push argument 0
@SP                                                          // [20598] pop pointer 0
AM=M-1                                                       // [20599] pop pointer 0
D=M                                                          // [20600] pop pointer 0
@3                                                           // [20601] pop pointer 0
M=D                                                          // [20602] pop pointer 0
@THIS                                                        // [20603] push this 0
D=M                                                          // [20604] push this 0
@0                                                           // [20605] push this 0
A=D+A                                                        // [20606] push this 0
D=M                                                          // [20607] push this 0
@SP                                                          // [20608] push this 0
M=M+1                                                        // [20609] push this 0
A=M-1                                                        // [20610] push this 0
M=D                                                          // [20611] push this 0
@1                                                           // [20612] call Bat.dispose 1
D=A                                                          // [20613] call Bat.dispose 1
@R13                                                         // [20614] call Bat.dispose 1
M=D                                                          // [20615] call Bat.dispose 1
@Bat.dispose                                                 // [20616] call Bat.dispose 1
D=A                                                          // [20617] call Bat.dispose 1
@R14                                                         // [20618] call Bat.dispose 1
M=D                                                          // [20619] call Bat.dispose 1
@return-223                                                  // [20620] call Bat.dispose 1
D=A                                                          // [20621] call Bat.dispose 1
@CALL                                                        // [20622] call Bat.dispose 1
0;JEQ                                                        // [20623] call Bat.dispose 1
(return-223)                                                 // [     ] call Bat.dispose 1
@SP                                                          // [20624] pop temp 0
AM=M-1                                                       // [20625] pop temp 0
D=M                                                          // [20626] pop temp 0
@5                                                           // [20627] pop temp 0
M=D                                                          // [20628] pop temp 0
@THIS                                                        // [20629] push this 1
D=M                                                          // [20630] push this 1
@1                                                           // [20631] push this 1
A=D+A                                                        // [20632] push this 1
D=M                                                          // [20633] push this 1
@SP                                                          // [20634] push this 1
M=M+1                                                        // [20635] push this 1
A=M-1                                                        // [20636] push this 1
M=D                                                          // [20637] push this 1
@1                                                           // [20638] call Ball.dispose 1
D=A                                                          // [20639] call Ball.dispose 1
@R13                                                         // [20640] call Ball.dispose 1
M=D                                                          // [20641] call Ball.dispose 1
@Ball.dispose                                                // [20642] call Ball.dispose 1
D=A                                                          // [20643] call Ball.dispose 1
@R14                                                         // [20644] call Ball.dispose 1
M=D                                                          // [20645] call Ball.dispose 1
@return-224                                                  // [20646] call Ball.dispose 1
D=A                                                          // [20647] call Ball.dispose 1
@CALL                                                        // [20648] call Ball.dispose 1
0;JEQ                                                        // [20649] call Ball.dispose 1
(return-224)                                                 // [     ] call Ball.dispose 1
@SP                                                          // [20650] pop temp 0
AM=M-1                                                       // [20651] pop temp 0
D=M                                                          // [20652] pop temp 0
@5                                                           // [20653] pop temp 0
M=D                                                          // [20654] pop temp 0
@3                                                           // [20655] push pointer 0
D=M                                                          // [20656] push pointer 0
@SP                                                          // [20657] push pointer 0
M=M+1                                                        // [20658] push pointer 0
A=M-1                                                        // [20659] push pointer 0
M=D                                                          // [20660] push pointer 0
@1                                                           // [20661] call Memory.deAlloc 1
D=A                                                          // [20662] call Memory.deAlloc 1
@R13                                                         // [20663] call Memory.deAlloc 1
M=D                                                          // [20664] call Memory.deAlloc 1
@Memory.deAlloc                                              // [20665] call Memory.deAlloc 1
D=A                                                          // [20666] call Memory.deAlloc 1
@R14                                                         // [20667] call Memory.deAlloc 1
M=D                                                          // [20668] call Memory.deAlloc 1
@return-225                                                  // [20669] call Memory.deAlloc 1
D=A                                                          // [20670] call Memory.deAlloc 1
@CALL                                                        // [20671] call Memory.deAlloc 1
0;JEQ                                                        // [20672] call Memory.deAlloc 1
(return-225)                                                 // [     ] call Memory.deAlloc 1
@SP                                                          // [20673] pop temp 0
AM=M-1                                                       // [20674] pop temp 0
D=M                                                          // [20675] pop temp 0
@5                                                           // [20676] pop temp 0
M=D                                                          // [20677] pop temp 0
@SP                                                          // [20678] push constant 0
M=M+1                                                        // [20679] push constant 0
A=M-1                                                        // [20680] push constant 0
M=0                                                          // [20681] push constant 0
@RETURN                                                      // [20682] return
0;JEQ                                                        // [20683] return
(PongGame.newInstance)                                       // [     ] function PongGame.newInstance 0
@0                                                           // [20684] call PongGame.new 0
D=A                                                          // [20685] call PongGame.new 0
@R13                                                         // [20686] call PongGame.new 0
M=D                                                          // [20687] call PongGame.new 0
@PongGame.new                                                // [20688] call PongGame.new 0
D=A                                                          // [20689] call PongGame.new 0
@R14                                                         // [20690] call PongGame.new 0
M=D                                                          // [20691] call PongGame.new 0
@return-226                                                  // [20692] call PongGame.new 0
D=A                                                          // [20693] call PongGame.new 0
@CALL                                                        // [20694] call PongGame.new 0
0;JEQ                                                        // [20695] call PongGame.new 0
(return-226)                                                 // [     ] call PongGame.new 0
@SP                                                          // [20696] pop static 0
AM=M-1                                                       // [20697] pop static 0
D=M                                                          // [20698] pop static 0
@PongGame.0                                                  // [20699] pop static 0
M=D                                                          // [20700] pop static 0
@SP                                                          // [20701] push constant 0
M=M+1                                                        // [20702] push constant 0
A=M-1                                                        // [20703] push constant 0
M=0                                                          // [20704] push constant 0
@RETURN                                                      // [20705] return
0;JEQ                                                        // [20706] return
(PongGame.getInstance)                                       // [     ] function PongGame.getInstance 0
@PongGame.0                                                  // [20707] push static 0
D=M                                                          // [20708] push static 0
@SP                                                          // [20709] push static 0
M=M+1                                                        // [20710] push static 0
A=M-1                                                        // [20711] push static 0
M=D                                                          // [20712] push static 0
@RETURN                                                      // [20713] return
0;JEQ                                                        // [20714] return
(PongGame.run)                                               // [     ] function PongGame.run 1
@SP                                                          // [20715] function PongGame.run 1
A=M                                                          // [20716] function PongGame.run 1
M=0                                                          // [20717] function PongGame.run 1
@SP                                                          // [20718] function PongGame.run 1
M=M+1                                                        // [20719] function PongGame.run 1
@ARG                                                         // [20720] push argument 0
D=M                                                          // [20721] push argument 0
@0                                                           // [20722] push argument 0
A=D+A                                                        // [20723] push argument 0
D=M                                                          // [20724] push argument 0
@SP                                                          // [20725] push argument 0
M=M+1                                                        // [20726] push argument 0
A=M-1                                                        // [20727] push argument 0
M=D                                                          // [20728] push argument 0
@SP                                                          // [20729] pop pointer 0
AM=M-1                                                       // [20730] pop pointer 0
D=M                                                          // [20731] pop pointer 0
@3                                                           // [20732] pop pointer 0
M=D                                                          // [20733] pop pointer 0
(PongGame.run$WHILE_EXP0)                                    // [     ] label WHILE_EXP0
@THIS                                                        // [20734] push this 3
D=M                                                          // [20735] push this 3
@3                                                           // [20736] push this 3
A=D+A                                                        // [20737] push this 3
D=M                                                          // [20738] push this 3
@SP                                                          // [20739] push this 3
M=M+1                                                        // [20740] push this 3
A=M-1                                                        // [20741] push this 3
M=D                                                          // [20742] push this 3
@SP                                                          // [20743] not
A=M-1                                                        // [20744] not
D=M                                                          // [20745] not
M=!D                                                         // [20746] not
@SP                                                          // [20747] not
A=M-1                                                        // [20748] not
D=M                                                          // [20749] not
M=!D                                                         // [20750] not
@SP                                                          // [20751] if-goto WHILE_END0
AM=M-1                                                       // [20752] if-goto WHILE_END0
D=M                                                          // [20753] if-goto WHILE_END0
@PongGame.run$WHILE_END0                                     // [20754] if-goto WHILE_END0
D;JNE                                                        // [20755] if-goto WHILE_END0
(PongGame.run$WHILE_EXP1)                                    // [     ] label WHILE_EXP1
@LCL                                                         // [20756] push local 0
D=M                                                          // [20757] push local 0
@0                                                           // [20758] push local 0
A=D+A                                                        // [20759] push local 0
D=M                                                          // [20760] push local 0
@SP                                                          // [20761] push local 0
M=M+1                                                        // [20762] push local 0
A=M-1                                                        // [20763] push local 0
M=D                                                          // [20764] push local 0
@SP                                                          // [20765] push constant 0
M=M+1                                                        // [20766] push constant 0
A=M-1                                                        // [20767] push constant 0
M=0                                                          // [20768] push constant 0
@CONTINUE_EQ_15                                              // [20769] eq
D=A                                                          // [20770] eq
@R13                                                         // [20771] eq
M=D                                                          // [20772] eq
@SP                                                          // [20773] eq
AM=M-1                                                       // [20774] eq
D=M                                                          // [20775] eq
A=A-1                                                        // [20776] eq
D=D-M                                                        // [20777] eq
@INTERNAL_EQ                                                 // [20778] eq
0;JEQ                                                        // [20779] eq
(CONTINUE_EQ_15)                                             // [     ] eq
@THIS                                                        // [20780] push this 3
D=M                                                          // [20781] push this 3
@3                                                           // [20782] push this 3
A=D+A                                                        // [20783] push this 3
D=M                                                          // [20784] push this 3
@SP                                                          // [20785] push this 3
M=M+1                                                        // [20786] push this 3
A=M-1                                                        // [20787] push this 3
M=D                                                          // [20788] push this 3
@SP                                                          // [20789] not
A=M-1                                                        // [20790] not
D=M                                                          // [20791] not
M=!D                                                         // [20792] not
@SP                                                          // [20793] and
AM=M-1                                                       // [20794] and
D=M                                                          // [20795] and
A=A-1                                                        // [20796] and
M=D&M                                                        // [20797] and
@SP                                                          // [20798] not
A=M-1                                                        // [20799] not
D=M                                                          // [20800] not
M=!D                                                         // [20801] not
@SP                                                          // [20802] if-goto WHILE_END1
AM=M-1                                                       // [20803] if-goto WHILE_END1
D=M                                                          // [20804] if-goto WHILE_END1
@PongGame.run$WHILE_END1                                     // [20805] if-goto WHILE_END1
D;JNE                                                        // [20806] if-goto WHILE_END1
@0                                                           // [20807] call Keyboard.keyPressed 0
D=A                                                          // [20808] call Keyboard.keyPressed 0
@R13                                                         // [20809] call Keyboard.keyPressed 0
M=D                                                          // [20810] call Keyboard.keyPressed 0
@Keyboard.keyPressed                                         // [20811] call Keyboard.keyPressed 0
D=A                                                          // [20812] call Keyboard.keyPressed 0
@R14                                                         // [20813] call Keyboard.keyPressed 0
M=D                                                          // [20814] call Keyboard.keyPressed 0
@return-227                                                  // [20815] call Keyboard.keyPressed 0
D=A                                                          // [20816] call Keyboard.keyPressed 0
@CALL                                                        // [20817] call Keyboard.keyPressed 0
0;JEQ                                                        // [20818] call Keyboard.keyPressed 0
(return-227)                                                 // [     ] call Keyboard.keyPressed 0
@SP                                                          // [20819] pop local 0
AM=M-1                                                       // [20820] pop local 0
D=M                                                          // [20821] pop local 0
@R13                                                         // [20822] pop local 0
M=D                                                          // [20823] pop local 0
@LCL                                                         // [20824] pop local 0
D=M                                                          // [20825] pop local 0
@0                                                           // [20826] pop local 0
D=D+A                                                        // [20827] pop local 0
@R14                                                         // [20828] pop local 0
M=D                                                          // [20829] pop local 0
@R13                                                         // [20830] pop local 0
D=M                                                          // [20831] pop local 0
@R14                                                         // [20832] pop local 0
A=M                                                          // [20833] pop local 0
M=D                                                          // [20834] pop local 0
@THIS                                                        // [20835] push this 0
D=M                                                          // [20836] push this 0
@0                                                           // [20837] push this 0
A=D+A                                                        // [20838] push this 0
D=M                                                          // [20839] push this 0
@SP                                                          // [20840] push this 0
M=M+1                                                        // [20841] push this 0
A=M-1                                                        // [20842] push this 0
M=D                                                          // [20843] push this 0
@1                                                           // [20844] call Bat.move 1
D=A                                                          // [20845] call Bat.move 1
@R13                                                         // [20846] call Bat.move 1
M=D                                                          // [20847] call Bat.move 1
@Bat.move                                                    // [20848] call Bat.move 1
D=A                                                          // [20849] call Bat.move 1
@R14                                                         // [20850] call Bat.move 1
M=D                                                          // [20851] call Bat.move 1
@return-228                                                  // [20852] call Bat.move 1
D=A                                                          // [20853] call Bat.move 1
@CALL                                                        // [20854] call Bat.move 1
0;JEQ                                                        // [20855] call Bat.move 1
(return-228)                                                 // [     ] call Bat.move 1
@SP                                                          // [20856] pop temp 0
AM=M-1                                                       // [20857] pop temp 0
D=M                                                          // [20858] pop temp 0
@5                                                           // [20859] pop temp 0
M=D                                                          // [20860] pop temp 0
@3                                                           // [20861] push pointer 0
D=M                                                          // [20862] push pointer 0
@SP                                                          // [20863] push pointer 0
M=M+1                                                        // [20864] push pointer 0
A=M-1                                                        // [20865] push pointer 0
M=D                                                          // [20866] push pointer 0
@1                                                           // [20867] call PongGame.moveBall 1
D=A                                                          // [20868] call PongGame.moveBall 1
@R13                                                         // [20869] call PongGame.moveBall 1
M=D                                                          // [20870] call PongGame.moveBall 1
@PongGame.moveBall                                           // [20871] call PongGame.moveBall 1
D=A                                                          // [20872] call PongGame.moveBall 1
@R14                                                         // [20873] call PongGame.moveBall 1
M=D                                                          // [20874] call PongGame.moveBall 1
@return-229                                                  // [20875] call PongGame.moveBall 1
D=A                                                          // [20876] call PongGame.moveBall 1
@CALL                                                        // [20877] call PongGame.moveBall 1
0;JEQ                                                        // [20878] call PongGame.moveBall 1
(return-229)                                                 // [     ] call PongGame.moveBall 1
@SP                                                          // [20879] pop temp 0
AM=M-1                                                       // [20880] pop temp 0
D=M                                                          // [20881] pop temp 0
@5                                                           // [20882] pop temp 0
M=D                                                          // [20883] pop temp 0
@PongGame.run$WHILE_EXP1                                     // [20884] goto WHILE_EXP1
0;JEQ                                                        // [20885] goto WHILE_EXP1
(PongGame.run$WHILE_END1)                                    // [     ] label WHILE_END1
@LCL                                                         // [20886] push local 0
D=M                                                          // [20887] push local 0
@0                                                           // [20888] push local 0
A=D+A                                                        // [20889] push local 0
D=M                                                          // [20890] push local 0
@SP                                                          // [20891] push local 0
M=M+1                                                        // [20892] push local 0
A=M-1                                                        // [20893] push local 0
M=D                                                          // [20894] push local 0
@130                                                         // [20895] push constant 130
D=A                                                          // [20896] push constant 130
@SP                                                          // [20897] push constant 130
M=M+1                                                        // [20898] push constant 130
A=M-1                                                        // [20899] push constant 130
M=D                                                          // [20900] push constant 130
@CONTINUE_EQ_16                                              // [20901] eq
D=A                                                          // [20902] eq
@R13                                                         // [20903] eq
M=D                                                          // [20904] eq
@SP                                                          // [20905] eq
AM=M-1                                                       // [20906] eq
D=M                                                          // [20907] eq
A=A-1                                                        // [20908] eq
D=D-M                                                        // [20909] eq
@INTERNAL_EQ                                                 // [20910] eq
0;JEQ                                                        // [20911] eq
(CONTINUE_EQ_16)                                             // [     ] eq
@SP                                                          // [20912] if-goto IF_TRUE0
AM=M-1                                                       // [20913] if-goto IF_TRUE0
D=M                                                          // [20914] if-goto IF_TRUE0
@PongGame.run$IF_TRUE0                                       // [20915] if-goto IF_TRUE0
D;JNE                                                        // [20916] if-goto IF_TRUE0
@PongGame.run$IF_FALSE0                                      // [20917] goto IF_FALSE0
0;JEQ                                                        // [20918] goto IF_FALSE0
(PongGame.run$IF_TRUE0)                                      // [     ] label IF_TRUE0
@THIS                                                        // [20919] push this 0
D=M                                                          // [20920] push this 0
@0                                                           // [20921] push this 0
A=D+A                                                        // [20922] push this 0
D=M                                                          // [20923] push this 0
@SP                                                          // [20924] push this 0
M=M+1                                                        // [20925] push this 0
A=M-1                                                        // [20926] push this 0
M=D                                                          // [20927] push this 0
@SP                                                          // [20928] push constant 1
M=M+1                                                        // [20929] push constant 1
A=M-1                                                        // [20930] push constant 1
M=1                                                          // [20931] push constant 1
@2                                                           // [20932] call Bat.setDirection 2
D=A                                                          // [20933] call Bat.setDirection 2
@R13                                                         // [20934] call Bat.setDirection 2
M=D                                                          // [20935] call Bat.setDirection 2
@Bat.setDirection                                            // [20936] call Bat.setDirection 2
D=A                                                          // [20937] call Bat.setDirection 2
@R14                                                         // [20938] call Bat.setDirection 2
M=D                                                          // [20939] call Bat.setDirection 2
@return-230                                                  // [20940] call Bat.setDirection 2
D=A                                                          // [20941] call Bat.setDirection 2
@CALL                                                        // [20942] call Bat.setDirection 2
0;JEQ                                                        // [20943] call Bat.setDirection 2
(return-230)                                                 // [     ] call Bat.setDirection 2
@SP                                                          // [20944] pop temp 0
AM=M-1                                                       // [20945] pop temp 0
D=M                                                          // [20946] pop temp 0
@5                                                           // [20947] pop temp 0
M=D                                                          // [20948] pop temp 0
@PongGame.run$IF_END0                                        // [20949] goto IF_END0
0;JEQ                                                        // [20950] goto IF_END0
(PongGame.run$IF_FALSE0)                                     // [     ] label IF_FALSE0
@LCL                                                         // [20951] push local 0
D=M                                                          // [20952] push local 0
@0                                                           // [20953] push local 0
A=D+A                                                        // [20954] push local 0
D=M                                                          // [20955] push local 0
@SP                                                          // [20956] push local 0
M=M+1                                                        // [20957] push local 0
A=M-1                                                        // [20958] push local 0
M=D                                                          // [20959] push local 0
@132                                                         // [20960] push constant 132
D=A                                                          // [20961] push constant 132
@SP                                                          // [20962] push constant 132
M=M+1                                                        // [20963] push constant 132
A=M-1                                                        // [20964] push constant 132
M=D                                                          // [20965] push constant 132
@CONTINUE_EQ_17                                              // [20966] eq
D=A                                                          // [20967] eq
@R13                                                         // [20968] eq
M=D                                                          // [20969] eq
@SP                                                          // [20970] eq
AM=M-1                                                       // [20971] eq
D=M                                                          // [20972] eq
A=A-1                                                        // [20973] eq
D=D-M                                                        // [20974] eq
@INTERNAL_EQ                                                 // [20975] eq
0;JEQ                                                        // [20976] eq
(CONTINUE_EQ_17)                                             // [     ] eq
@SP                                                          // [20977] if-goto IF_TRUE1
AM=M-1                                                       // [20978] if-goto IF_TRUE1
D=M                                                          // [20979] if-goto IF_TRUE1
@PongGame.run$IF_TRUE1                                       // [20980] if-goto IF_TRUE1
D;JNE                                                        // [20981] if-goto IF_TRUE1
@PongGame.run$IF_FALSE1                                      // [20982] goto IF_FALSE1
0;JEQ                                                        // [20983] goto IF_FALSE1
(PongGame.run$IF_TRUE1)                                      // [     ] label IF_TRUE1
@THIS                                                        // [20984] push this 0
D=M                                                          // [20985] push this 0
@0                                                           // [20986] push this 0
A=D+A                                                        // [20987] push this 0
D=M                                                          // [20988] push this 0
@SP                                                          // [20989] push this 0
M=M+1                                                        // [20990] push this 0
A=M-1                                                        // [20991] push this 0
M=D                                                          // [20992] push this 0
@SP                                                          // [20993] push constant 2
M=M+1                                                        // [20994] push constant 2
A=M-1                                                        // [20995] push constant 2
M=1                                                          // [20996] push constant 2
M=M+1                                                        // [20997] push constant 2
@2                                                           // [20998] call Bat.setDirection 2
D=A                                                          // [20999] call Bat.setDirection 2
@R13                                                         // [21000] call Bat.setDirection 2
M=D                                                          // [21001] call Bat.setDirection 2
@Bat.setDirection                                            // [21002] call Bat.setDirection 2
D=A                                                          // [21003] call Bat.setDirection 2
@R14                                                         // [21004] call Bat.setDirection 2
M=D                                                          // [21005] call Bat.setDirection 2
@return-231                                                  // [21006] call Bat.setDirection 2
D=A                                                          // [21007] call Bat.setDirection 2
@CALL                                                        // [21008] call Bat.setDirection 2
0;JEQ                                                        // [21009] call Bat.setDirection 2
(return-231)                                                 // [     ] call Bat.setDirection 2
@SP                                                          // [21010] pop temp 0
AM=M-1                                                       // [21011] pop temp 0
D=M                                                          // [21012] pop temp 0
@5                                                           // [21013] pop temp 0
M=D                                                          // [21014] pop temp 0
@PongGame.run$IF_END1                                        // [21015] goto IF_END1
0;JEQ                                                        // [21016] goto IF_END1
(PongGame.run$IF_FALSE1)                                     // [     ] label IF_FALSE1
@LCL                                                         // [21017] push local 0
D=M                                                          // [21018] push local 0
@0                                                           // [21019] push local 0
A=D+A                                                        // [21020] push local 0
D=M                                                          // [21021] push local 0
@SP                                                          // [21022] push local 0
M=M+1                                                        // [21023] push local 0
A=M-1                                                        // [21024] push local 0
M=D                                                          // [21025] push local 0
@140                                                         // [21026] push constant 140
D=A                                                          // [21027] push constant 140
@SP                                                          // [21028] push constant 140
M=M+1                                                        // [21029] push constant 140
A=M-1                                                        // [21030] push constant 140
M=D                                                          // [21031] push constant 140
@CONTINUE_EQ_18                                              // [21032] eq
D=A                                                          // [21033] eq
@R13                                                         // [21034] eq
M=D                                                          // [21035] eq
@SP                                                          // [21036] eq
AM=M-1                                                       // [21037] eq
D=M                                                          // [21038] eq
A=A-1                                                        // [21039] eq
D=D-M                                                        // [21040] eq
@INTERNAL_EQ                                                 // [21041] eq
0;JEQ                                                        // [21042] eq
(CONTINUE_EQ_18)                                             // [     ] eq
@SP                                                          // [21043] if-goto IF_TRUE2
AM=M-1                                                       // [21044] if-goto IF_TRUE2
D=M                                                          // [21045] if-goto IF_TRUE2
@PongGame.run$IF_TRUE2                                       // [21046] if-goto IF_TRUE2
D;JNE                                                        // [21047] if-goto IF_TRUE2
@PongGame.run$IF_FALSE2                                      // [21048] goto IF_FALSE2
0;JEQ                                                        // [21049] goto IF_FALSE2
(PongGame.run$IF_TRUE2)                                      // [     ] label IF_TRUE2
@SP                                                          // [21050] push constant 0
M=M+1                                                        // [21051] push constant 0
A=M-1                                                        // [21052] push constant 0
M=0                                                          // [21053] push constant 0
@SP                                                          // [21054] not
A=M-1                                                        // [21055] not
D=M                                                          // [21056] not
M=!D                                                         // [21057] not
@SP                                                          // [21058] pop this 3
AM=M-1                                                       // [21059] pop this 3
D=M                                                          // [21060] pop this 3
@R13                                                         // [21061] pop this 3
M=D                                                          // [21062] pop this 3
@THIS                                                        // [21063] pop this 3
D=M                                                          // [21064] pop this 3
@3                                                           // [21065] pop this 3
D=D+A                                                        // [21066] pop this 3
@R14                                                         // [21067] pop this 3
M=D                                                          // [21068] pop this 3
@R13                                                         // [21069] pop this 3
D=M                                                          // [21070] pop this 3
@R14                                                         // [21071] pop this 3
A=M                                                          // [21072] pop this 3
M=D                                                          // [21073] pop this 3
(PongGame.run$IF_FALSE2)                                     // [     ] label IF_FALSE2
(PongGame.run$IF_END1)                                       // [     ] label IF_END1
(PongGame.run$IF_END0)                                       // [     ] label IF_END0
(PongGame.run$WHILE_EXP2)                                    // [     ] label WHILE_EXP2
@LCL                                                         // [21074] push local 0
D=M                                                          // [21075] push local 0
@0                                                           // [21076] push local 0
A=D+A                                                        // [21077] push local 0
D=M                                                          // [21078] push local 0
@SP                                                          // [21079] push local 0
M=M+1                                                        // [21080] push local 0
A=M-1                                                        // [21081] push local 0
M=D                                                          // [21082] push local 0
@SP                                                          // [21083] push constant 0
M=M+1                                                        // [21084] push constant 0
A=M-1                                                        // [21085] push constant 0
M=0                                                          // [21086] push constant 0
@CONTINUE_EQ_19                                              // [21087] eq
D=A                                                          // [21088] eq
@R13                                                         // [21089] eq
M=D                                                          // [21090] eq
@SP                                                          // [21091] eq
AM=M-1                                                       // [21092] eq
D=M                                                          // [21093] eq
A=A-1                                                        // [21094] eq
D=D-M                                                        // [21095] eq
@INTERNAL_EQ                                                 // [21096] eq
0;JEQ                                                        // [21097] eq
(CONTINUE_EQ_19)                                             // [     ] eq
@SP                                                          // [21098] not
A=M-1                                                        // [21099] not
D=M                                                          // [21100] not
M=!D                                                         // [21101] not
@THIS                                                        // [21102] push this 3
D=M                                                          // [21103] push this 3
@3                                                           // [21104] push this 3
A=D+A                                                        // [21105] push this 3
D=M                                                          // [21106] push this 3
@SP                                                          // [21107] push this 3
M=M+1                                                        // [21108] push this 3
A=M-1                                                        // [21109] push this 3
M=D                                                          // [21110] push this 3
@SP                                                          // [21111] not
A=M-1                                                        // [21112] not
D=M                                                          // [21113] not
M=!D                                                         // [21114] not
@SP                                                          // [21115] and
AM=M-1                                                       // [21116] and
D=M                                                          // [21117] and
A=A-1                                                        // [21118] and
M=D&M                                                        // [21119] and
@SP                                                          // [21120] not
A=M-1                                                        // [21121] not
D=M                                                          // [21122] not
M=!D                                                         // [21123] not
@SP                                                          // [21124] if-goto WHILE_END2
AM=M-1                                                       // [21125] if-goto WHILE_END2
D=M                                                          // [21126] if-goto WHILE_END2
@PongGame.run$WHILE_END2                                     // [21127] if-goto WHILE_END2
D;JNE                                                        // [21128] if-goto WHILE_END2
@0                                                           // [21129] call Keyboard.keyPressed 0
D=A                                                          // [21130] call Keyboard.keyPressed 0
@R13                                                         // [21131] call Keyboard.keyPressed 0
M=D                                                          // [21132] call Keyboard.keyPressed 0
@Keyboard.keyPressed                                         // [21133] call Keyboard.keyPressed 0
D=A                                                          // [21134] call Keyboard.keyPressed 0
@R14                                                         // [21135] call Keyboard.keyPressed 0
M=D                                                          // [21136] call Keyboard.keyPressed 0
@return-232                                                  // [21137] call Keyboard.keyPressed 0
D=A                                                          // [21138] call Keyboard.keyPressed 0
@CALL                                                        // [21139] call Keyboard.keyPressed 0
0;JEQ                                                        // [21140] call Keyboard.keyPressed 0
(return-232)                                                 // [     ] call Keyboard.keyPressed 0
@SP                                                          // [21141] pop local 0
AM=M-1                                                       // [21142] pop local 0
D=M                                                          // [21143] pop local 0
@R13                                                         // [21144] pop local 0
M=D                                                          // [21145] pop local 0
@LCL                                                         // [21146] pop local 0
D=M                                                          // [21147] pop local 0
@0                                                           // [21148] pop local 0
D=D+A                                                        // [21149] pop local 0
@R14                                                         // [21150] pop local 0
M=D                                                          // [21151] pop local 0
@R13                                                         // [21152] pop local 0
D=M                                                          // [21153] pop local 0
@R14                                                         // [21154] pop local 0
A=M                                                          // [21155] pop local 0
M=D                                                          // [21156] pop local 0
@THIS                                                        // [21157] push this 0
D=M                                                          // [21158] push this 0
@0                                                           // [21159] push this 0
A=D+A                                                        // [21160] push this 0
D=M                                                          // [21161] push this 0
@SP                                                          // [21162] push this 0
M=M+1                                                        // [21163] push this 0
A=M-1                                                        // [21164] push this 0
M=D                                                          // [21165] push this 0
@1                                                           // [21166] call Bat.move 1
D=A                                                          // [21167] call Bat.move 1
@R13                                                         // [21168] call Bat.move 1
M=D                                                          // [21169] call Bat.move 1
@Bat.move                                                    // [21170] call Bat.move 1
D=A                                                          // [21171] call Bat.move 1
@R14                                                         // [21172] call Bat.move 1
M=D                                                          // [21173] call Bat.move 1
@return-233                                                  // [21174] call Bat.move 1
D=A                                                          // [21175] call Bat.move 1
@CALL                                                        // [21176] call Bat.move 1
0;JEQ                                                        // [21177] call Bat.move 1
(return-233)                                                 // [     ] call Bat.move 1
@SP                                                          // [21178] pop temp 0
AM=M-1                                                       // [21179] pop temp 0
D=M                                                          // [21180] pop temp 0
@5                                                           // [21181] pop temp 0
M=D                                                          // [21182] pop temp 0
@3                                                           // [21183] push pointer 0
D=M                                                          // [21184] push pointer 0
@SP                                                          // [21185] push pointer 0
M=M+1                                                        // [21186] push pointer 0
A=M-1                                                        // [21187] push pointer 0
M=D                                                          // [21188] push pointer 0
@1                                                           // [21189] call PongGame.moveBall 1
D=A                                                          // [21190] call PongGame.moveBall 1
@R13                                                         // [21191] call PongGame.moveBall 1
M=D                                                          // [21192] call PongGame.moveBall 1
@PongGame.moveBall                                           // [21193] call PongGame.moveBall 1
D=A                                                          // [21194] call PongGame.moveBall 1
@R14                                                         // [21195] call PongGame.moveBall 1
M=D                                                          // [21196] call PongGame.moveBall 1
@return-234                                                  // [21197] call PongGame.moveBall 1
D=A                                                          // [21198] call PongGame.moveBall 1
@CALL                                                        // [21199] call PongGame.moveBall 1
0;JEQ                                                        // [21200] call PongGame.moveBall 1
(return-234)                                                 // [     ] call PongGame.moveBall 1
@SP                                                          // [21201] pop temp 0
AM=M-1                                                       // [21202] pop temp 0
D=M                                                          // [21203] pop temp 0
@5                                                           // [21204] pop temp 0
M=D                                                          // [21205] pop temp 0
@PongGame.run$WHILE_EXP2                                     // [21206] goto WHILE_EXP2
0;JEQ                                                        // [21207] goto WHILE_EXP2
(PongGame.run$WHILE_END2)                                    // [     ] label WHILE_END2
@PongGame.run$WHILE_EXP0                                     // [21208] goto WHILE_EXP0
0;JEQ                                                        // [21209] goto WHILE_EXP0
(PongGame.run$WHILE_END0)                                    // [     ] label WHILE_END0
@THIS                                                        // [21210] push this 3
D=M                                                          // [21211] push this 3
@3                                                           // [21212] push this 3
A=D+A                                                        // [21213] push this 3
D=M                                                          // [21214] push this 3
@SP                                                          // [21215] push this 3
M=M+1                                                        // [21216] push this 3
A=M-1                                                        // [21217] push this 3
M=D                                                          // [21218] push this 3
@SP                                                          // [21219] if-goto IF_TRUE3
AM=M-1                                                       // [21220] if-goto IF_TRUE3
D=M                                                          // [21221] if-goto IF_TRUE3
@PongGame.run$IF_TRUE3                                       // [21222] if-goto IF_TRUE3
D;JNE                                                        // [21223] if-goto IF_TRUE3
@PongGame.run$IF_FALSE3                                      // [21224] goto IF_FALSE3
0;JEQ                                                        // [21225] goto IF_FALSE3
(PongGame.run$IF_TRUE3)                                      // [     ] label IF_TRUE3
@10                                                          // [21226] push constant 10
D=A                                                          // [21227] push constant 10
@SP                                                          // [21228] push constant 10
M=M+1                                                        // [21229] push constant 10
A=M-1                                                        // [21230] push constant 10
M=D                                                          // [21231] push constant 10
@27                                                          // [21232] push constant 27
D=A                                                          // [21233] push constant 27
@SP                                                          // [21234] push constant 27
M=M+1                                                        // [21235] push constant 27
A=M-1                                                        // [21236] push constant 27
M=D                                                          // [21237] push constant 27
@2                                                           // [21238] call Output.moveCursor 2
D=A                                                          // [21239] call Output.moveCursor 2
@R13                                                         // [21240] call Output.moveCursor 2
M=D                                                          // [21241] call Output.moveCursor 2
@Output.moveCursor                                           // [21242] call Output.moveCursor 2
D=A                                                          // [21243] call Output.moveCursor 2
@R14                                                         // [21244] call Output.moveCursor 2
M=D                                                          // [21245] call Output.moveCursor 2
@return-235                                                  // [21246] call Output.moveCursor 2
D=A                                                          // [21247] call Output.moveCursor 2
@CALL                                                        // [21248] call Output.moveCursor 2
0;JEQ                                                        // [21249] call Output.moveCursor 2
(return-235)                                                 // [     ] call Output.moveCursor 2
@SP                                                          // [21250] pop temp 0
AM=M-1                                                       // [21251] pop temp 0
D=M                                                          // [21252] pop temp 0
@5                                                           // [21253] pop temp 0
M=D                                                          // [21254] pop temp 0
@9                                                           // [21255] push constant 9
D=A                                                          // [21256] push constant 9
@SP                                                          // [21257] push constant 9
M=M+1                                                        // [21258] push constant 9
A=M-1                                                        // [21259] push constant 9
M=D                                                          // [21260] push constant 9
@1                                                           // [21261] call String.new 1
D=A                                                          // [21262] call String.new 1
@R13                                                         // [21263] call String.new 1
M=D                                                          // [21264] call String.new 1
@String.new                                                  // [21265] call String.new 1
D=A                                                          // [21266] call String.new 1
@R14                                                         // [21267] call String.new 1
M=D                                                          // [21268] call String.new 1
@return-236                                                  // [21269] call String.new 1
D=A                                                          // [21270] call String.new 1
@CALL                                                        // [21271] call String.new 1
0;JEQ                                                        // [21272] call String.new 1
(return-236)                                                 // [     ] call String.new 1
@71                                                          // [21273] push constant 71
D=A                                                          // [21274] push constant 71
@SP                                                          // [21275] push constant 71
M=M+1                                                        // [21276] push constant 71
A=M-1                                                        // [21277] push constant 71
M=D                                                          // [21278] push constant 71
@2                                                           // [21279] call String.appendChar 2
D=A                                                          // [21280] call String.appendChar 2
@R13                                                         // [21281] call String.appendChar 2
M=D                                                          // [21282] call String.appendChar 2
@String.appendChar                                           // [21283] call String.appendChar 2
D=A                                                          // [21284] call String.appendChar 2
@R14                                                         // [21285] call String.appendChar 2
M=D                                                          // [21286] call String.appendChar 2
@return-237                                                  // [21287] call String.appendChar 2
D=A                                                          // [21288] call String.appendChar 2
@CALL                                                        // [21289] call String.appendChar 2
0;JEQ                                                        // [21290] call String.appendChar 2
(return-237)                                                 // [     ] call String.appendChar 2
@97                                                          // [21291] push constant 97
D=A                                                          // [21292] push constant 97
@SP                                                          // [21293] push constant 97
M=M+1                                                        // [21294] push constant 97
A=M-1                                                        // [21295] push constant 97
M=D                                                          // [21296] push constant 97
@2                                                           // [21297] call String.appendChar 2
D=A                                                          // [21298] call String.appendChar 2
@R13                                                         // [21299] call String.appendChar 2
M=D                                                          // [21300] call String.appendChar 2
@String.appendChar                                           // [21301] call String.appendChar 2
D=A                                                          // [21302] call String.appendChar 2
@R14                                                         // [21303] call String.appendChar 2
M=D                                                          // [21304] call String.appendChar 2
@return-238                                                  // [21305] call String.appendChar 2
D=A                                                          // [21306] call String.appendChar 2
@CALL                                                        // [21307] call String.appendChar 2
0;JEQ                                                        // [21308] call String.appendChar 2
(return-238)                                                 // [     ] call String.appendChar 2
@109                                                         // [21309] push constant 109
D=A                                                          // [21310] push constant 109
@SP                                                          // [21311] push constant 109
M=M+1                                                        // [21312] push constant 109
A=M-1                                                        // [21313] push constant 109
M=D                                                          // [21314] push constant 109
@2                                                           // [21315] call String.appendChar 2
D=A                                                          // [21316] call String.appendChar 2
@R13                                                         // [21317] call String.appendChar 2
M=D                                                          // [21318] call String.appendChar 2
@String.appendChar                                           // [21319] call String.appendChar 2
D=A                                                          // [21320] call String.appendChar 2
@R14                                                         // [21321] call String.appendChar 2
M=D                                                          // [21322] call String.appendChar 2
@return-239                                                  // [21323] call String.appendChar 2
D=A                                                          // [21324] call String.appendChar 2
@CALL                                                        // [21325] call String.appendChar 2
0;JEQ                                                        // [21326] call String.appendChar 2
(return-239)                                                 // [     ] call String.appendChar 2
@101                                                         // [21327] push constant 101
D=A                                                          // [21328] push constant 101
@SP                                                          // [21329] push constant 101
M=M+1                                                        // [21330] push constant 101
A=M-1                                                        // [21331] push constant 101
M=D                                                          // [21332] push constant 101
@2                                                           // [21333] call String.appendChar 2
D=A                                                          // [21334] call String.appendChar 2
@R13                                                         // [21335] call String.appendChar 2
M=D                                                          // [21336] call String.appendChar 2
@String.appendChar                                           // [21337] call String.appendChar 2
D=A                                                          // [21338] call String.appendChar 2
@R14                                                         // [21339] call String.appendChar 2
M=D                                                          // [21340] call String.appendChar 2
@return-240                                                  // [21341] call String.appendChar 2
D=A                                                          // [21342] call String.appendChar 2
@CALL                                                        // [21343] call String.appendChar 2
0;JEQ                                                        // [21344] call String.appendChar 2
(return-240)                                                 // [     ] call String.appendChar 2
@32                                                          // [21345] push constant 32
D=A                                                          // [21346] push constant 32
@SP                                                          // [21347] push constant 32
M=M+1                                                        // [21348] push constant 32
A=M-1                                                        // [21349] push constant 32
M=D                                                          // [21350] push constant 32
@2                                                           // [21351] call String.appendChar 2
D=A                                                          // [21352] call String.appendChar 2
@R13                                                         // [21353] call String.appendChar 2
M=D                                                          // [21354] call String.appendChar 2
@String.appendChar                                           // [21355] call String.appendChar 2
D=A                                                          // [21356] call String.appendChar 2
@R14                                                         // [21357] call String.appendChar 2
M=D                                                          // [21358] call String.appendChar 2
@return-241                                                  // [21359] call String.appendChar 2
D=A                                                          // [21360] call String.appendChar 2
@CALL                                                        // [21361] call String.appendChar 2
0;JEQ                                                        // [21362] call String.appendChar 2
(return-241)                                                 // [     ] call String.appendChar 2
@79                                                          // [21363] push constant 79
D=A                                                          // [21364] push constant 79
@SP                                                          // [21365] push constant 79
M=M+1                                                        // [21366] push constant 79
A=M-1                                                        // [21367] push constant 79
M=D                                                          // [21368] push constant 79
@2                                                           // [21369] call String.appendChar 2
D=A                                                          // [21370] call String.appendChar 2
@R13                                                         // [21371] call String.appendChar 2
M=D                                                          // [21372] call String.appendChar 2
@String.appendChar                                           // [21373] call String.appendChar 2
D=A                                                          // [21374] call String.appendChar 2
@R14                                                         // [21375] call String.appendChar 2
M=D                                                          // [21376] call String.appendChar 2
@return-242                                                  // [21377] call String.appendChar 2
D=A                                                          // [21378] call String.appendChar 2
@CALL                                                        // [21379] call String.appendChar 2
0;JEQ                                                        // [21380] call String.appendChar 2
(return-242)                                                 // [     ] call String.appendChar 2
@118                                                         // [21381] push constant 118
D=A                                                          // [21382] push constant 118
@SP                                                          // [21383] push constant 118
M=M+1                                                        // [21384] push constant 118
A=M-1                                                        // [21385] push constant 118
M=D                                                          // [21386] push constant 118
@2                                                           // [21387] call String.appendChar 2
D=A                                                          // [21388] call String.appendChar 2
@R13                                                         // [21389] call String.appendChar 2
M=D                                                          // [21390] call String.appendChar 2
@String.appendChar                                           // [21391] call String.appendChar 2
D=A                                                          // [21392] call String.appendChar 2
@R14                                                         // [21393] call String.appendChar 2
M=D                                                          // [21394] call String.appendChar 2
@return-243                                                  // [21395] call String.appendChar 2
D=A                                                          // [21396] call String.appendChar 2
@CALL                                                        // [21397] call String.appendChar 2
0;JEQ                                                        // [21398] call String.appendChar 2
(return-243)                                                 // [     ] call String.appendChar 2
@101                                                         // [21399] push constant 101
D=A                                                          // [21400] push constant 101
@SP                                                          // [21401] push constant 101
M=M+1                                                        // [21402] push constant 101
A=M-1                                                        // [21403] push constant 101
M=D                                                          // [21404] push constant 101
@2                                                           // [21405] call String.appendChar 2
D=A                                                          // [21406] call String.appendChar 2
@R13                                                         // [21407] call String.appendChar 2
M=D                                                          // [21408] call String.appendChar 2
@String.appendChar                                           // [21409] call String.appendChar 2
D=A                                                          // [21410] call String.appendChar 2
@R14                                                         // [21411] call String.appendChar 2
M=D                                                          // [21412] call String.appendChar 2
@return-244                                                  // [21413] call String.appendChar 2
D=A                                                          // [21414] call String.appendChar 2
@CALL                                                        // [21415] call String.appendChar 2
0;JEQ                                                        // [21416] call String.appendChar 2
(return-244)                                                 // [     ] call String.appendChar 2
@114                                                         // [21417] push constant 114
D=A                                                          // [21418] push constant 114
@SP                                                          // [21419] push constant 114
M=M+1                                                        // [21420] push constant 114
A=M-1                                                        // [21421] push constant 114
M=D                                                          // [21422] push constant 114
@2                                                           // [21423] call String.appendChar 2
D=A                                                          // [21424] call String.appendChar 2
@R13                                                         // [21425] call String.appendChar 2
M=D                                                          // [21426] call String.appendChar 2
@String.appendChar                                           // [21427] call String.appendChar 2
D=A                                                          // [21428] call String.appendChar 2
@R14                                                         // [21429] call String.appendChar 2
M=D                                                          // [21430] call String.appendChar 2
@return-245                                                  // [21431] call String.appendChar 2
D=A                                                          // [21432] call String.appendChar 2
@CALL                                                        // [21433] call String.appendChar 2
0;JEQ                                                        // [21434] call String.appendChar 2
(return-245)                                                 // [     ] call String.appendChar 2
@1                                                           // [21435] call Output.printString 1
D=A                                                          // [21436] call Output.printString 1
@R13                                                         // [21437] call Output.printString 1
M=D                                                          // [21438] call Output.printString 1
@Output.printString                                          // [21439] call Output.printString 1
D=A                                                          // [21440] call Output.printString 1
@R14                                                         // [21441] call Output.printString 1
M=D                                                          // [21442] call Output.printString 1
@return-246                                                  // [21443] call Output.printString 1
D=A                                                          // [21444] call Output.printString 1
@CALL                                                        // [21445] call Output.printString 1
0;JEQ                                                        // [21446] call Output.printString 1
(return-246)                                                 // [     ] call Output.printString 1
@SP                                                          // [21447] pop temp 0
AM=M-1                                                       // [21448] pop temp 0
D=M                                                          // [21449] pop temp 0
@5                                                           // [21450] pop temp 0
M=D                                                          // [21451] pop temp 0
(PongGame.run$IF_FALSE3)                                     // [     ] label IF_FALSE3
@SP                                                          // [21452] push constant 0
M=M+1                                                        // [21453] push constant 0
A=M-1                                                        // [21454] push constant 0
M=0                                                          // [21455] push constant 0
@RETURN                                                      // [21456] return
0;JEQ                                                        // [21457] return
(PongGame.moveBall)                                          // [     ] function PongGame.moveBall 5
@SP                                                          // [21458] function PongGame.moveBall 5
A=M                                                          // [21459] function PongGame.moveBall 5
M=0                                                          // [21460] function PongGame.moveBall 5
@SP                                                          // [21461] function PongGame.moveBall 5
M=M+1                                                        // [21462] function PongGame.moveBall 5
@SP                                                          // [21463] function PongGame.moveBall 5
A=M                                                          // [21464] function PongGame.moveBall 5
M=0                                                          // [21465] function PongGame.moveBall 5
@SP                                                          // [21466] function PongGame.moveBall 5
M=M+1                                                        // [21467] function PongGame.moveBall 5
@SP                                                          // [21468] function PongGame.moveBall 5
A=M                                                          // [21469] function PongGame.moveBall 5
M=0                                                          // [21470] function PongGame.moveBall 5
@SP                                                          // [21471] function PongGame.moveBall 5
M=M+1                                                        // [21472] function PongGame.moveBall 5
@SP                                                          // [21473] function PongGame.moveBall 5
A=M                                                          // [21474] function PongGame.moveBall 5
M=0                                                          // [21475] function PongGame.moveBall 5
@SP                                                          // [21476] function PongGame.moveBall 5
M=M+1                                                        // [21477] function PongGame.moveBall 5
@SP                                                          // [21478] function PongGame.moveBall 5
A=M                                                          // [21479] function PongGame.moveBall 5
M=0                                                          // [21480] function PongGame.moveBall 5
@SP                                                          // [21481] function PongGame.moveBall 5
M=M+1                                                        // [21482] function PongGame.moveBall 5
@ARG                                                         // [21483] push argument 0
D=M                                                          // [21484] push argument 0
@0                                                           // [21485] push argument 0
A=D+A                                                        // [21486] push argument 0
D=M                                                          // [21487] push argument 0
@SP                                                          // [21488] push argument 0
M=M+1                                                        // [21489] push argument 0
A=M-1                                                        // [21490] push argument 0
M=D                                                          // [21491] push argument 0
@SP                                                          // [21492] pop pointer 0
AM=M-1                                                       // [21493] pop pointer 0
D=M                                                          // [21494] pop pointer 0
@3                                                           // [21495] pop pointer 0
M=D                                                          // [21496] pop pointer 0
@THIS                                                        // [21497] push this 1
D=M                                                          // [21498] push this 1
@1                                                           // [21499] push this 1
A=D+A                                                        // [21500] push this 1
D=M                                                          // [21501] push this 1
@SP                                                          // [21502] push this 1
M=M+1                                                        // [21503] push this 1
A=M-1                                                        // [21504] push this 1
M=D                                                          // [21505] push this 1
@1                                                           // [21506] call Ball.move 1
D=A                                                          // [21507] call Ball.move 1
@R13                                                         // [21508] call Ball.move 1
M=D                                                          // [21509] call Ball.move 1
@Ball.move                                                   // [21510] call Ball.move 1
D=A                                                          // [21511] call Ball.move 1
@R14                                                         // [21512] call Ball.move 1
M=D                                                          // [21513] call Ball.move 1
@return-247                                                  // [21514] call Ball.move 1
D=A                                                          // [21515] call Ball.move 1
@CALL                                                        // [21516] call Ball.move 1
0;JEQ                                                        // [21517] call Ball.move 1
(return-247)                                                 // [     ] call Ball.move 1
@SP                                                          // [21518] pop this 2
AM=M-1                                                       // [21519] pop this 2
D=M                                                          // [21520] pop this 2
@R13                                                         // [21521] pop this 2
M=D                                                          // [21522] pop this 2
@THIS                                                        // [21523] pop this 2
D=M                                                          // [21524] pop this 2
@2                                                           // [21525] pop this 2
D=D+A                                                        // [21526] pop this 2
@R14                                                         // [21527] pop this 2
M=D                                                          // [21528] pop this 2
@R13                                                         // [21529] pop this 2
D=M                                                          // [21530] pop this 2
@R14                                                         // [21531] pop this 2
A=M                                                          // [21532] pop this 2
M=D                                                          // [21533] pop this 2
@THIS                                                        // [21534] push this 2
D=M                                                          // [21535] push this 2
@2                                                           // [21536] push this 2
A=D+A                                                        // [21537] push this 2
D=M                                                          // [21538] push this 2
@SP                                                          // [21539] push this 2
M=M+1                                                        // [21540] push this 2
A=M-1                                                        // [21541] push this 2
M=D                                                          // [21542] push this 2
@SP                                                          // [21543] push constant 0
M=M+1                                                        // [21544] push constant 0
A=M-1                                                        // [21545] push constant 0
M=0                                                          // [21546] push constant 0
@CONTINUE_GT_16                                              // [21547] gt
D=A                                                          // [21548] gt
@R13                                                         // [21549] gt
M=D                                                          // [21550] gt
@SP                                                          // [21551] gt
AM=M-1                                                       // [21552] gt
D=M                                                          // [21553] gt
A=A-1                                                        // [21554] gt
D=D-M                                                        // [21555] gt
@INTERNAL_GT                                                 // [21556] gt
0;JEQ                                                        // [21557] gt
(CONTINUE_GT_16)                                             // [     ] gt
@THIS                                                        // [21558] push this 2
D=M                                                          // [21559] push this 2
@2                                                           // [21560] push this 2
A=D+A                                                        // [21561] push this 2
D=M                                                          // [21562] push this 2
@SP                                                          // [21563] push this 2
M=M+1                                                        // [21564] push this 2
A=M-1                                                        // [21565] push this 2
M=D                                                          // [21566] push this 2
@THIS                                                        // [21567] push this 5
D=M                                                          // [21568] push this 5
@5                                                           // [21569] push this 5
A=D+A                                                        // [21570] push this 5
D=M                                                          // [21571] push this 5
@SP                                                          // [21572] push this 5
M=M+1                                                        // [21573] push this 5
A=M-1                                                        // [21574] push this 5
M=D                                                          // [21575] push this 5
@CONTINUE_EQ_20                                              // [21576] eq
D=A                                                          // [21577] eq
@R13                                                         // [21578] eq
M=D                                                          // [21579] eq
@SP                                                          // [21580] eq
AM=M-1                                                       // [21581] eq
D=M                                                          // [21582] eq
A=A-1                                                        // [21583] eq
D=D-M                                                        // [21584] eq
@INTERNAL_EQ                                                 // [21585] eq
0;JEQ                                                        // [21586] eq
(CONTINUE_EQ_20)                                             // [     ] eq
@SP                                                          // [21587] not
A=M-1                                                        // [21588] not
D=M                                                          // [21589] not
M=!D                                                         // [21590] not
@SP                                                          // [21591] and
AM=M-1                                                       // [21592] and
D=M                                                          // [21593] and
A=A-1                                                        // [21594] and
M=D&M                                                        // [21595] and
@SP                                                          // [21596] if-goto IF_TRUE0
AM=M-1                                                       // [21597] if-goto IF_TRUE0
D=M                                                          // [21598] if-goto IF_TRUE0
@PongGame.moveBall$IF_TRUE0                                  // [21599] if-goto IF_TRUE0
D;JNE                                                        // [21600] if-goto IF_TRUE0
@PongGame.moveBall$IF_FALSE0                                 // [21601] goto IF_FALSE0
0;JEQ                                                        // [21602] goto IF_FALSE0
(PongGame.moveBall$IF_TRUE0)                                 // [     ] label IF_TRUE0
@THIS                                                        // [21603] push this 2
D=M                                                          // [21604] push this 2
@2                                                           // [21605] push this 2
A=D+A                                                        // [21606] push this 2
D=M                                                          // [21607] push this 2
@SP                                                          // [21608] push this 2
M=M+1                                                        // [21609] push this 2
A=M-1                                                        // [21610] push this 2
M=D                                                          // [21611] push this 2
@SP                                                          // [21612] pop this 5
AM=M-1                                                       // [21613] pop this 5
D=M                                                          // [21614] pop this 5
@R13                                                         // [21615] pop this 5
M=D                                                          // [21616] pop this 5
@THIS                                                        // [21617] pop this 5
D=M                                                          // [21618] pop this 5
@5                                                           // [21619] pop this 5
D=D+A                                                        // [21620] pop this 5
@R14                                                         // [21621] pop this 5
M=D                                                          // [21622] pop this 5
@R13                                                         // [21623] pop this 5
D=M                                                          // [21624] pop this 5
@R14                                                         // [21625] pop this 5
A=M                                                          // [21626] pop this 5
M=D                                                          // [21627] pop this 5
@SP                                                          // [21628] push constant 0
M=M+1                                                        // [21629] push constant 0
A=M-1                                                        // [21630] push constant 0
M=0                                                          // [21631] push constant 0
@SP                                                          // [21632] pop local 0
AM=M-1                                                       // [21633] pop local 0
D=M                                                          // [21634] pop local 0
@R13                                                         // [21635] pop local 0
M=D                                                          // [21636] pop local 0
@LCL                                                         // [21637] pop local 0
D=M                                                          // [21638] pop local 0
@0                                                           // [21639] pop local 0
D=D+A                                                        // [21640] pop local 0
@R14                                                         // [21641] pop local 0
M=D                                                          // [21642] pop local 0
@R13                                                         // [21643] pop local 0
D=M                                                          // [21644] pop local 0
@R14                                                         // [21645] pop local 0
A=M                                                          // [21646] pop local 0
M=D                                                          // [21647] pop local 0
@THIS                                                        // [21648] push this 0
D=M                                                          // [21649] push this 0
@0                                                           // [21650] push this 0
A=D+A                                                        // [21651] push this 0
D=M                                                          // [21652] push this 0
@SP                                                          // [21653] push this 0
M=M+1                                                        // [21654] push this 0
A=M-1                                                        // [21655] push this 0
M=D                                                          // [21656] push this 0
@1                                                           // [21657] call Bat.getLeft 1
D=A                                                          // [21658] call Bat.getLeft 1
@R13                                                         // [21659] call Bat.getLeft 1
M=D                                                          // [21660] call Bat.getLeft 1
@Bat.getLeft                                                 // [21661] call Bat.getLeft 1
D=A                                                          // [21662] call Bat.getLeft 1
@R14                                                         // [21663] call Bat.getLeft 1
M=D                                                          // [21664] call Bat.getLeft 1
@return-248                                                  // [21665] call Bat.getLeft 1
D=A                                                          // [21666] call Bat.getLeft 1
@CALL                                                        // [21667] call Bat.getLeft 1
0;JEQ                                                        // [21668] call Bat.getLeft 1
(return-248)                                                 // [     ] call Bat.getLeft 1
@SP                                                          // [21669] pop local 1
AM=M-1                                                       // [21670] pop local 1
D=M                                                          // [21671] pop local 1
@R13                                                         // [21672] pop local 1
M=D                                                          // [21673] pop local 1
@LCL                                                         // [21674] pop local 1
D=M                                                          // [21675] pop local 1
@1                                                           // [21676] pop local 1
D=D+A                                                        // [21677] pop local 1
@R14                                                         // [21678] pop local 1
M=D                                                          // [21679] pop local 1
@R13                                                         // [21680] pop local 1
D=M                                                          // [21681] pop local 1
@R14                                                         // [21682] pop local 1
A=M                                                          // [21683] pop local 1
M=D                                                          // [21684] pop local 1
@THIS                                                        // [21685] push this 0
D=M                                                          // [21686] push this 0
@0                                                           // [21687] push this 0
A=D+A                                                        // [21688] push this 0
D=M                                                          // [21689] push this 0
@SP                                                          // [21690] push this 0
M=M+1                                                        // [21691] push this 0
A=M-1                                                        // [21692] push this 0
M=D                                                          // [21693] push this 0
@1                                                           // [21694] call Bat.getRight 1
D=A                                                          // [21695] call Bat.getRight 1
@R13                                                         // [21696] call Bat.getRight 1
M=D                                                          // [21697] call Bat.getRight 1
@Bat.getRight                                                // [21698] call Bat.getRight 1
D=A                                                          // [21699] call Bat.getRight 1
@R14                                                         // [21700] call Bat.getRight 1
M=D                                                          // [21701] call Bat.getRight 1
@return-249                                                  // [21702] call Bat.getRight 1
D=A                                                          // [21703] call Bat.getRight 1
@CALL                                                        // [21704] call Bat.getRight 1
0;JEQ                                                        // [21705] call Bat.getRight 1
(return-249)                                                 // [     ] call Bat.getRight 1
@SP                                                          // [21706] pop local 2
AM=M-1                                                       // [21707] pop local 2
D=M                                                          // [21708] pop local 2
@R13                                                         // [21709] pop local 2
M=D                                                          // [21710] pop local 2
@LCL                                                         // [21711] pop local 2
D=M                                                          // [21712] pop local 2
@2                                                           // [21713] pop local 2
D=D+A                                                        // [21714] pop local 2
@R14                                                         // [21715] pop local 2
M=D                                                          // [21716] pop local 2
@R13                                                         // [21717] pop local 2
D=M                                                          // [21718] pop local 2
@R14                                                         // [21719] pop local 2
A=M                                                          // [21720] pop local 2
M=D                                                          // [21721] pop local 2
@THIS                                                        // [21722] push this 1
D=M                                                          // [21723] push this 1
@1                                                           // [21724] push this 1
A=D+A                                                        // [21725] push this 1
D=M                                                          // [21726] push this 1
@SP                                                          // [21727] push this 1
M=M+1                                                        // [21728] push this 1
A=M-1                                                        // [21729] push this 1
M=D                                                          // [21730] push this 1
@1                                                           // [21731] call Ball.getLeft 1
D=A                                                          // [21732] call Ball.getLeft 1
@R13                                                         // [21733] call Ball.getLeft 1
M=D                                                          // [21734] call Ball.getLeft 1
@Ball.getLeft                                                // [21735] call Ball.getLeft 1
D=A                                                          // [21736] call Ball.getLeft 1
@R14                                                         // [21737] call Ball.getLeft 1
M=D                                                          // [21738] call Ball.getLeft 1
@return-250                                                  // [21739] call Ball.getLeft 1
D=A                                                          // [21740] call Ball.getLeft 1
@CALL                                                        // [21741] call Ball.getLeft 1
0;JEQ                                                        // [21742] call Ball.getLeft 1
(return-250)                                                 // [     ] call Ball.getLeft 1
@SP                                                          // [21743] pop local 3
AM=M-1                                                       // [21744] pop local 3
D=M                                                          // [21745] pop local 3
@R13                                                         // [21746] pop local 3
M=D                                                          // [21747] pop local 3
@LCL                                                         // [21748] pop local 3
D=M                                                          // [21749] pop local 3
@3                                                           // [21750] pop local 3
D=D+A                                                        // [21751] pop local 3
@R14                                                         // [21752] pop local 3
M=D                                                          // [21753] pop local 3
@R13                                                         // [21754] pop local 3
D=M                                                          // [21755] pop local 3
@R14                                                         // [21756] pop local 3
A=M                                                          // [21757] pop local 3
M=D                                                          // [21758] pop local 3
@THIS                                                        // [21759] push this 1
D=M                                                          // [21760] push this 1
@1                                                           // [21761] push this 1
A=D+A                                                        // [21762] push this 1
D=M                                                          // [21763] push this 1
@SP                                                          // [21764] push this 1
M=M+1                                                        // [21765] push this 1
A=M-1                                                        // [21766] push this 1
M=D                                                          // [21767] push this 1
@1                                                           // [21768] call Ball.getRight 1
D=A                                                          // [21769] call Ball.getRight 1
@R13                                                         // [21770] call Ball.getRight 1
M=D                                                          // [21771] call Ball.getRight 1
@Ball.getRight                                               // [21772] call Ball.getRight 1
D=A                                                          // [21773] call Ball.getRight 1
@R14                                                         // [21774] call Ball.getRight 1
M=D                                                          // [21775] call Ball.getRight 1
@return-251                                                  // [21776] call Ball.getRight 1
D=A                                                          // [21777] call Ball.getRight 1
@CALL                                                        // [21778] call Ball.getRight 1
0;JEQ                                                        // [21779] call Ball.getRight 1
(return-251)                                                 // [     ] call Ball.getRight 1
@SP                                                          // [21780] pop local 4
AM=M-1                                                       // [21781] pop local 4
D=M                                                          // [21782] pop local 4
@R13                                                         // [21783] pop local 4
M=D                                                          // [21784] pop local 4
@LCL                                                         // [21785] pop local 4
D=M                                                          // [21786] pop local 4
@4                                                           // [21787] pop local 4
D=D+A                                                        // [21788] pop local 4
@R14                                                         // [21789] pop local 4
M=D                                                          // [21790] pop local 4
@R13                                                         // [21791] pop local 4
D=M                                                          // [21792] pop local 4
@R14                                                         // [21793] pop local 4
A=M                                                          // [21794] pop local 4
M=D                                                          // [21795] pop local 4
@THIS                                                        // [21796] push this 2
D=M                                                          // [21797] push this 2
@2                                                           // [21798] push this 2
A=D+A                                                        // [21799] push this 2
D=M                                                          // [21800] push this 2
@SP                                                          // [21801] push this 2
M=M+1                                                        // [21802] push this 2
A=M-1                                                        // [21803] push this 2
M=D                                                          // [21804] push this 2
@4                                                           // [21805] push constant 4
D=A                                                          // [21806] push constant 4
@SP                                                          // [21807] push constant 4
M=M+1                                                        // [21808] push constant 4
A=M-1                                                        // [21809] push constant 4
M=D                                                          // [21810] push constant 4
@CONTINUE_EQ_21                                              // [21811] eq
D=A                                                          // [21812] eq
@R13                                                         // [21813] eq
M=D                                                          // [21814] eq
@SP                                                          // [21815] eq
AM=M-1                                                       // [21816] eq
D=M                                                          // [21817] eq
A=A-1                                                        // [21818] eq
D=D-M                                                        // [21819] eq
@INTERNAL_EQ                                                 // [21820] eq
0;JEQ                                                        // [21821] eq
(CONTINUE_EQ_21)                                             // [     ] eq
@SP                                                          // [21822] if-goto IF_TRUE1
AM=M-1                                                       // [21823] if-goto IF_TRUE1
D=M                                                          // [21824] if-goto IF_TRUE1
@PongGame.moveBall$IF_TRUE1                                  // [21825] if-goto IF_TRUE1
D;JNE                                                        // [21826] if-goto IF_TRUE1
@PongGame.moveBall$IF_FALSE1                                 // [21827] goto IF_FALSE1
0;JEQ                                                        // [21828] goto IF_FALSE1
(PongGame.moveBall$IF_TRUE1)                                 // [     ] label IF_TRUE1
@LCL                                                         // [21829] push local 1
D=M                                                          // [21830] push local 1
@1                                                           // [21831] push local 1
A=D+A                                                        // [21832] push local 1
D=M                                                          // [21833] push local 1
@SP                                                          // [21834] push local 1
M=M+1                                                        // [21835] push local 1
A=M-1                                                        // [21836] push local 1
M=D                                                          // [21837] push local 1
@LCL                                                         // [21838] push local 4
D=M                                                          // [21839] push local 4
@4                                                           // [21840] push local 4
A=D+A                                                        // [21841] push local 4
D=M                                                          // [21842] push local 4
@SP                                                          // [21843] push local 4
M=M+1                                                        // [21844] push local 4
A=M-1                                                        // [21845] push local 4
M=D                                                          // [21846] push local 4
@CONTINUE_GT_17                                              // [21847] gt
D=A                                                          // [21848] gt
@R13                                                         // [21849] gt
M=D                                                          // [21850] gt
@SP                                                          // [21851] gt
AM=M-1                                                       // [21852] gt
D=M                                                          // [21853] gt
A=A-1                                                        // [21854] gt
D=D-M                                                        // [21855] gt
@INTERNAL_GT                                                 // [21856] gt
0;JEQ                                                        // [21857] gt
(CONTINUE_GT_17)                                             // [     ] gt
@LCL                                                         // [21858] push local 2
D=M                                                          // [21859] push local 2
@2                                                           // [21860] push local 2
A=D+A                                                        // [21861] push local 2
D=M                                                          // [21862] push local 2
@SP                                                          // [21863] push local 2
M=M+1                                                        // [21864] push local 2
A=M-1                                                        // [21865] push local 2
M=D                                                          // [21866] push local 2
@LCL                                                         // [21867] push local 3
D=M                                                          // [21868] push local 3
@3                                                           // [21869] push local 3
A=D+A                                                        // [21870] push local 3
D=M                                                          // [21871] push local 3
@SP                                                          // [21872] push local 3
M=M+1                                                        // [21873] push local 3
A=M-1                                                        // [21874] push local 3
M=D                                                          // [21875] push local 3
@CONTINUE_LT_28                                              // [21876] lt
D=A                                                          // [21877] lt
@R13                                                         // [21878] lt
M=D                                                          // [21879] lt
@SP                                                          // [21880] lt
AM=M-1                                                       // [21881] lt
D=M                                                          // [21882] lt
A=A-1                                                        // [21883] lt
D=D-M                                                        // [21884] lt
@INTERNAL_LT                                                 // [21885] lt
0;JEQ                                                        // [21886] lt
(CONTINUE_LT_28)                                             // [     ] lt
@SP                                                          // [21887] or
AM=M-1                                                       // [21888] or
D=M                                                          // [21889] or
A=A-1                                                        // [21890] or
M=D|M                                                        // [21891] or
@SP                                                          // [21892] pop this 3
AM=M-1                                                       // [21893] pop this 3
D=M                                                          // [21894] pop this 3
@R13                                                         // [21895] pop this 3
M=D                                                          // [21896] pop this 3
@THIS                                                        // [21897] pop this 3
D=M                                                          // [21898] pop this 3
@3                                                           // [21899] pop this 3
D=D+A                                                        // [21900] pop this 3
@R14                                                         // [21901] pop this 3
M=D                                                          // [21902] pop this 3
@R13                                                         // [21903] pop this 3
D=M                                                          // [21904] pop this 3
@R14                                                         // [21905] pop this 3
A=M                                                          // [21906] pop this 3
M=D                                                          // [21907] pop this 3
@THIS                                                        // [21908] push this 3
D=M                                                          // [21909] push this 3
@3                                                           // [21910] push this 3
A=D+A                                                        // [21911] push this 3
D=M                                                          // [21912] push this 3
@SP                                                          // [21913] push this 3
M=M+1                                                        // [21914] push this 3
A=M-1                                                        // [21915] push this 3
M=D                                                          // [21916] push this 3
@SP                                                          // [21917] not
A=M-1                                                        // [21918] not
D=M                                                          // [21919] not
M=!D                                                         // [21920] not
@SP                                                          // [21921] if-goto IF_TRUE2
AM=M-1                                                       // [21922] if-goto IF_TRUE2
D=M                                                          // [21923] if-goto IF_TRUE2
@PongGame.moveBall$IF_TRUE2                                  // [21924] if-goto IF_TRUE2
D;JNE                                                        // [21925] if-goto IF_TRUE2
@PongGame.moveBall$IF_FALSE2                                 // [21926] goto IF_FALSE2
0;JEQ                                                        // [21927] goto IF_FALSE2
(PongGame.moveBall$IF_TRUE2)                                 // [     ] label IF_TRUE2
@LCL                                                         // [21928] push local 4
D=M                                                          // [21929] push local 4
@4                                                           // [21930] push local 4
A=D+A                                                        // [21931] push local 4
D=M                                                          // [21932] push local 4
@SP                                                          // [21933] push local 4
M=M+1                                                        // [21934] push local 4
A=M-1                                                        // [21935] push local 4
M=D                                                          // [21936] push local 4
@LCL                                                         // [21937] push local 1
D=M                                                          // [21938] push local 1
@1                                                           // [21939] push local 1
A=D+A                                                        // [21940] push local 1
D=M                                                          // [21941] push local 1
@SP                                                          // [21942] push local 1
M=M+1                                                        // [21943] push local 1
A=M-1                                                        // [21944] push local 1
M=D                                                          // [21945] push local 1
@10                                                          // [21946] push constant 10
D=A                                                          // [21947] push constant 10
@SP                                                          // [21948] push constant 10
M=M+1                                                        // [21949] push constant 10
A=M-1                                                        // [21950] push constant 10
M=D                                                          // [21951] push constant 10
@SP                                                          // [21952] add
AM=M-1                                                       // [21953] add
D=M                                                          // [21954] add
A=A-1                                                        // [21955] add
M=D+M                                                        // [21956] add
@CONTINUE_LT_29                                              // [21957] lt
D=A                                                          // [21958] lt
@R13                                                         // [21959] lt
M=D                                                          // [21960] lt
@SP                                                          // [21961] lt
AM=M-1                                                       // [21962] lt
D=M                                                          // [21963] lt
A=A-1                                                        // [21964] lt
D=D-M                                                        // [21965] lt
@INTERNAL_LT                                                 // [21966] lt
0;JEQ                                                        // [21967] lt
(CONTINUE_LT_29)                                             // [     ] lt
@SP                                                          // [21968] if-goto IF_TRUE3
AM=M-1                                                       // [21969] if-goto IF_TRUE3
D=M                                                          // [21970] if-goto IF_TRUE3
@PongGame.moveBall$IF_TRUE3                                  // [21971] if-goto IF_TRUE3
D;JNE                                                        // [21972] if-goto IF_TRUE3
@PongGame.moveBall$IF_FALSE3                                 // [21973] goto IF_FALSE3
0;JEQ                                                        // [21974] goto IF_FALSE3
(PongGame.moveBall$IF_TRUE3)                                 // [     ] label IF_TRUE3
@SP                                                          // [21975] push constant 1
M=M+1                                                        // [21976] push constant 1
A=M-1                                                        // [21977] push constant 1
M=1                                                          // [21978] push constant 1
@SP                                                          // [21979] neg
A=M-1                                                        // [21980] neg
D=M                                                          // [21981] neg
M=-D                                                         // [21982] neg
@SP                                                          // [21983] pop local 0
AM=M-1                                                       // [21984] pop local 0
D=M                                                          // [21985] pop local 0
@R13                                                         // [21986] pop local 0
M=D                                                          // [21987] pop local 0
@LCL                                                         // [21988] pop local 0
D=M                                                          // [21989] pop local 0
@0                                                           // [21990] pop local 0
D=D+A                                                        // [21991] pop local 0
@R14                                                         // [21992] pop local 0
M=D                                                          // [21993] pop local 0
@R13                                                         // [21994] pop local 0
D=M                                                          // [21995] pop local 0
@R14                                                         // [21996] pop local 0
A=M                                                          // [21997] pop local 0
M=D                                                          // [21998] pop local 0
@PongGame.moveBall$IF_END3                                   // [21999] goto IF_END3
0;JEQ                                                        // [22000] goto IF_END3
(PongGame.moveBall$IF_FALSE3)                                // [     ] label IF_FALSE3
@LCL                                                         // [22001] push local 3
D=M                                                          // [22002] push local 3
@3                                                           // [22003] push local 3
A=D+A                                                        // [22004] push local 3
D=M                                                          // [22005] push local 3
@SP                                                          // [22006] push local 3
M=M+1                                                        // [22007] push local 3
A=M-1                                                        // [22008] push local 3
M=D                                                          // [22009] push local 3
@LCL                                                         // [22010] push local 2
D=M                                                          // [22011] push local 2
@2                                                           // [22012] push local 2
A=D+A                                                        // [22013] push local 2
D=M                                                          // [22014] push local 2
@SP                                                          // [22015] push local 2
M=M+1                                                        // [22016] push local 2
A=M-1                                                        // [22017] push local 2
M=D                                                          // [22018] push local 2
@10                                                          // [22019] push constant 10
D=A                                                          // [22020] push constant 10
@SP                                                          // [22021] push constant 10
M=M+1                                                        // [22022] push constant 10
A=M-1                                                        // [22023] push constant 10
M=D                                                          // [22024] push constant 10
@SP                                                          // [22025] sub
AM=M-1                                                       // [22026] sub
D=M                                                          // [22027] sub
A=A-1                                                        // [22028] sub
M=M-D                                                        // [22029] sub
@CONTINUE_GT_18                                              // [22030] gt
D=A                                                          // [22031] gt
@R13                                                         // [22032] gt
M=D                                                          // [22033] gt
@SP                                                          // [22034] gt
AM=M-1                                                       // [22035] gt
D=M                                                          // [22036] gt
A=A-1                                                        // [22037] gt
D=D-M                                                        // [22038] gt
@INTERNAL_GT                                                 // [22039] gt
0;JEQ                                                        // [22040] gt
(CONTINUE_GT_18)                                             // [     ] gt
@SP                                                          // [22041] if-goto IF_TRUE4
AM=M-1                                                       // [22042] if-goto IF_TRUE4
D=M                                                          // [22043] if-goto IF_TRUE4
@PongGame.moveBall$IF_TRUE4                                  // [22044] if-goto IF_TRUE4
D;JNE                                                        // [22045] if-goto IF_TRUE4
@PongGame.moveBall$IF_FALSE4                                 // [22046] goto IF_FALSE4
0;JEQ                                                        // [22047] goto IF_FALSE4
(PongGame.moveBall$IF_TRUE4)                                 // [     ] label IF_TRUE4
@SP                                                          // [22048] push constant 1
M=M+1                                                        // [22049] push constant 1
A=M-1                                                        // [22050] push constant 1
M=1                                                          // [22051] push constant 1
@SP                                                          // [22052] pop local 0
AM=M-1                                                       // [22053] pop local 0
D=M                                                          // [22054] pop local 0
@R13                                                         // [22055] pop local 0
M=D                                                          // [22056] pop local 0
@LCL                                                         // [22057] pop local 0
D=M                                                          // [22058] pop local 0
@0                                                           // [22059] pop local 0
D=D+A                                                        // [22060] pop local 0
@R14                                                         // [22061] pop local 0
M=D                                                          // [22062] pop local 0
@R13                                                         // [22063] pop local 0
D=M                                                          // [22064] pop local 0
@R14                                                         // [22065] pop local 0
A=M                                                          // [22066] pop local 0
M=D                                                          // [22067] pop local 0
(PongGame.moveBall$IF_FALSE4)                                // [     ] label IF_FALSE4
(PongGame.moveBall$IF_END3)                                  // [     ] label IF_END3
@THIS                                                        // [22068] push this 6
D=M                                                          // [22069] push this 6
@6                                                           // [22070] push this 6
A=D+A                                                        // [22071] push this 6
D=M                                                          // [22072] push this 6
@SP                                                          // [22073] push this 6
M=M+1                                                        // [22074] push this 6
A=M-1                                                        // [22075] push this 6
M=D                                                          // [22076] push this 6
@SP                                                          // [22077] push constant 2
M=M+1                                                        // [22078] push constant 2
A=M-1                                                        // [22079] push constant 2
M=1                                                          // [22080] push constant 2
M=M+1                                                        // [22081] push constant 2
@SP                                                          // [22082] sub
AM=M-1                                                       // [22083] sub
D=M                                                          // [22084] sub
A=A-1                                                        // [22085] sub
M=M-D                                                        // [22086] sub
@SP                                                          // [22087] pop this 6
AM=M-1                                                       // [22088] pop this 6
D=M                                                          // [22089] pop this 6
@R13                                                         // [22090] pop this 6
M=D                                                          // [22091] pop this 6
@THIS                                                        // [22092] pop this 6
D=M                                                          // [22093] pop this 6
@6                                                           // [22094] pop this 6
D=D+A                                                        // [22095] pop this 6
@R14                                                         // [22096] pop this 6
M=D                                                          // [22097] pop this 6
@R13                                                         // [22098] pop this 6
D=M                                                          // [22099] pop this 6
@R14                                                         // [22100] pop this 6
A=M                                                          // [22101] pop this 6
M=D                                                          // [22102] pop this 6
@THIS                                                        // [22103] push this 0
D=M                                                          // [22104] push this 0
@0                                                           // [22105] push this 0
A=D+A                                                        // [22106] push this 0
D=M                                                          // [22107] push this 0
@SP                                                          // [22108] push this 0
M=M+1                                                        // [22109] push this 0
A=M-1                                                        // [22110] push this 0
M=D                                                          // [22111] push this 0
@THIS                                                        // [22112] push this 6
D=M                                                          // [22113] push this 6
@6                                                           // [22114] push this 6
A=D+A                                                        // [22115] push this 6
D=M                                                          // [22116] push this 6
@SP                                                          // [22117] push this 6
M=M+1                                                        // [22118] push this 6
A=M-1                                                        // [22119] push this 6
M=D                                                          // [22120] push this 6
@2                                                           // [22121] call Bat.setWidth 2
D=A                                                          // [22122] call Bat.setWidth 2
@R13                                                         // [22123] call Bat.setWidth 2
M=D                                                          // [22124] call Bat.setWidth 2
@Bat.setWidth                                                // [22125] call Bat.setWidth 2
D=A                                                          // [22126] call Bat.setWidth 2
@R14                                                         // [22127] call Bat.setWidth 2
M=D                                                          // [22128] call Bat.setWidth 2
@return-252                                                  // [22129] call Bat.setWidth 2
D=A                                                          // [22130] call Bat.setWidth 2
@CALL                                                        // [22131] call Bat.setWidth 2
0;JEQ                                                        // [22132] call Bat.setWidth 2
(return-252)                                                 // [     ] call Bat.setWidth 2
@SP                                                          // [22133] pop temp 0
AM=M-1                                                       // [22134] pop temp 0
D=M                                                          // [22135] pop temp 0
@5                                                           // [22136] pop temp 0
M=D                                                          // [22137] pop temp 0
@THIS                                                        // [22138] push this 4
D=M                                                          // [22139] push this 4
@4                                                           // [22140] push this 4
A=D+A                                                        // [22141] push this 4
D=M                                                          // [22142] push this 4
@SP                                                          // [22143] push this 4
M=M+1                                                        // [22144] push this 4
A=M-1                                                        // [22145] push this 4
M=D                                                          // [22146] push this 4
@SP                                                          // [22147] push constant 1
M=M+1                                                        // [22148] push constant 1
A=M-1                                                        // [22149] push constant 1
M=1                                                          // [22150] push constant 1
@SP                                                          // [22151] add
AM=M-1                                                       // [22152] add
D=M                                                          // [22153] add
A=A-1                                                        // [22154] add
M=D+M                                                        // [22155] add
@SP                                                          // [22156] pop this 4
AM=M-1                                                       // [22157] pop this 4
D=M                                                          // [22158] pop this 4
@R13                                                         // [22159] pop this 4
M=D                                                          // [22160] pop this 4
@THIS                                                        // [22161] pop this 4
D=M                                                          // [22162] pop this 4
@4                                                           // [22163] pop this 4
D=D+A                                                        // [22164] pop this 4
@R14                                                         // [22165] pop this 4
M=D                                                          // [22166] pop this 4
@R13                                                         // [22167] pop this 4
D=M                                                          // [22168] pop this 4
@R14                                                         // [22169] pop this 4
A=M                                                          // [22170] pop this 4
M=D                                                          // [22171] pop this 4
@22                                                          // [22172] push constant 22
D=A                                                          // [22173] push constant 22
@SP                                                          // [22174] push constant 22
M=M+1                                                        // [22175] push constant 22
A=M-1                                                        // [22176] push constant 22
M=D                                                          // [22177] push constant 22
@7                                                           // [22178] push constant 7
D=A                                                          // [22179] push constant 7
@SP                                                          // [22180] push constant 7
M=M+1                                                        // [22181] push constant 7
A=M-1                                                        // [22182] push constant 7
M=D                                                          // [22183] push constant 7
@2                                                           // [22184] call Output.moveCursor 2
D=A                                                          // [22185] call Output.moveCursor 2
@R13                                                         // [22186] call Output.moveCursor 2
M=D                                                          // [22187] call Output.moveCursor 2
@Output.moveCursor                                           // [22188] call Output.moveCursor 2
D=A                                                          // [22189] call Output.moveCursor 2
@R14                                                         // [22190] call Output.moveCursor 2
M=D                                                          // [22191] call Output.moveCursor 2
@return-253                                                  // [22192] call Output.moveCursor 2
D=A                                                          // [22193] call Output.moveCursor 2
@CALL                                                        // [22194] call Output.moveCursor 2
0;JEQ                                                        // [22195] call Output.moveCursor 2
(return-253)                                                 // [     ] call Output.moveCursor 2
@SP                                                          // [22196] pop temp 0
AM=M-1                                                       // [22197] pop temp 0
D=M                                                          // [22198] pop temp 0
@5                                                           // [22199] pop temp 0
M=D                                                          // [22200] pop temp 0
@THIS                                                        // [22201] push this 4
D=M                                                          // [22202] push this 4
@4                                                           // [22203] push this 4
A=D+A                                                        // [22204] push this 4
D=M                                                          // [22205] push this 4
@SP                                                          // [22206] push this 4
M=M+1                                                        // [22207] push this 4
A=M-1                                                        // [22208] push this 4
M=D                                                          // [22209] push this 4
@1                                                           // [22210] call Output.printInt 1
D=A                                                          // [22211] call Output.printInt 1
@R13                                                         // [22212] call Output.printInt 1
M=D                                                          // [22213] call Output.printInt 1
@Output.printInt                                             // [22214] call Output.printInt 1
D=A                                                          // [22215] call Output.printInt 1
@R14                                                         // [22216] call Output.printInt 1
M=D                                                          // [22217] call Output.printInt 1
@return-254                                                  // [22218] call Output.printInt 1
D=A                                                          // [22219] call Output.printInt 1
@CALL                                                        // [22220] call Output.printInt 1
0;JEQ                                                        // [22221] call Output.printInt 1
(return-254)                                                 // [     ] call Output.printInt 1
@SP                                                          // [22222] pop temp 0
AM=M-1                                                       // [22223] pop temp 0
D=M                                                          // [22224] pop temp 0
@5                                                           // [22225] pop temp 0
M=D                                                          // [22226] pop temp 0
(PongGame.moveBall$IF_FALSE2)                                // [     ] label IF_FALSE2
(PongGame.moveBall$IF_FALSE1)                                // [     ] label IF_FALSE1
@THIS                                                        // [22227] push this 1
D=M                                                          // [22228] push this 1
@1                                                           // [22229] push this 1
A=D+A                                                        // [22230] push this 1
D=M                                                          // [22231] push this 1
@SP                                                          // [22232] push this 1
M=M+1                                                        // [22233] push this 1
A=M-1                                                        // [22234] push this 1
M=D                                                          // [22235] push this 1
@LCL                                                         // [22236] push local 0
D=M                                                          // [22237] push local 0
@0                                                           // [22238] push local 0
A=D+A                                                        // [22239] push local 0
D=M                                                          // [22240] push local 0
@SP                                                          // [22241] push local 0
M=M+1                                                        // [22242] push local 0
A=M-1                                                        // [22243] push local 0
M=D                                                          // [22244] push local 0
@2                                                           // [22245] call Ball.bounce 2
D=A                                                          // [22246] call Ball.bounce 2
@R13                                                         // [22247] call Ball.bounce 2
M=D                                                          // [22248] call Ball.bounce 2
@Ball.bounce                                                 // [22249] call Ball.bounce 2
D=A                                                          // [22250] call Ball.bounce 2
@R14                                                         // [22251] call Ball.bounce 2
M=D                                                          // [22252] call Ball.bounce 2
@return-255                                                  // [22253] call Ball.bounce 2
D=A                                                          // [22254] call Ball.bounce 2
@CALL                                                        // [22255] call Ball.bounce 2
0;JEQ                                                        // [22256] call Ball.bounce 2
(return-255)                                                 // [     ] call Ball.bounce 2
@SP                                                          // [22257] pop temp 0
AM=M-1                                                       // [22258] pop temp 0
D=M                                                          // [22259] pop temp 0
@5                                                           // [22260] pop temp 0
M=D                                                          // [22261] pop temp 0
(PongGame.moveBall$IF_FALSE0)                                // [     ] label IF_FALSE0
@SP                                                          // [22262] push constant 0
M=M+1                                                        // [22263] push constant 0
A=M-1                                                        // [22264] push constant 0
M=0                                                          // [22265] push constant 0
@RETURN                                                      // [22266] return
0;JEQ                                                        // [22267] return
(Screen.init)                                                // [     ] function Screen.init 0
@SP                                                          // [22268] push constant 0
M=M+1                                                        // [22269] push constant 0
A=M-1                                                        // [22270] push constant 0
M=0                                                          // [22271] push constant 0
@SP                                                          // [22272] not
A=M-1                                                        // [22273] not
D=M                                                          // [22274] not
M=!D                                                         // [22275] not
@SP                                                          // [22276] pop static 0
AM=M-1                                                       // [22277] pop static 0
D=M                                                          // [22278] pop static 0
@Screen.0                                                    // [22279] pop static 0
M=D                                                          // [22280] pop static 0
@16384                                                       // [22281] push constant 16384
D=A                                                          // [22282] push constant 16384
@SP                                                          // [22283] push constant 16384
M=M+1                                                        // [22284] push constant 16384
A=M-1                                                        // [22285] push constant 16384
M=D                                                          // [22286] push constant 16384
@SP                                                          // [22287] pop static 1
AM=M-1                                                       // [22288] pop static 1
D=M                                                          // [22289] pop static 1
@Screen.1                                                    // [22290] pop static 1
M=D                                                          // [22291] pop static 1
@16                                                          // [22292] push constant 16
D=A                                                          // [22293] push constant 16
@SP                                                          // [22294] push constant 16
M=M+1                                                        // [22295] push constant 16
A=M-1                                                        // [22296] push constant 16
M=D                                                          // [22297] push constant 16
@1                                                           // [22298] call Array.new 1
D=A                                                          // [22299] call Array.new 1
@R13                                                         // [22300] call Array.new 1
M=D                                                          // [22301] call Array.new 1
@Array.new                                                   // [22302] call Array.new 1
D=A                                                          // [22303] call Array.new 1
@R14                                                         // [22304] call Array.new 1
M=D                                                          // [22305] call Array.new 1
@return-256                                                  // [22306] call Array.new 1
D=A                                                          // [22307] call Array.new 1
@CALL                                                        // [22308] call Array.new 1
0;JEQ                                                        // [22309] call Array.new 1
(return-256)                                                 // [     ] call Array.new 1
@SP                                                          // [22310] pop static 2
AM=M-1                                                       // [22311] pop static 2
D=M                                                          // [22312] pop static 2
@Screen.2                                                    // [22313] pop static 2
M=D                                                          // [22314] pop static 2
@SP                                                          // [22315] push constant 0
M=M+1                                                        // [22316] push constant 0
A=M-1                                                        // [22317] push constant 0
M=0                                                          // [22318] push constant 0
@Screen.2                                                    // [22319] push static 2
D=M                                                          // [22320] push static 2
@SP                                                          // [22321] push static 2
M=M+1                                                        // [22322] push static 2
A=M-1                                                        // [22323] push static 2
M=D                                                          // [22324] push static 2
@SP                                                          // [22325] add
AM=M-1                                                       // [22326] add
D=M                                                          // [22327] add
A=A-1                                                        // [22328] add
M=D+M                                                        // [22329] add
@SP                                                          // [22330] push constant 1
M=M+1                                                        // [22331] push constant 1
A=M-1                                                        // [22332] push constant 1
M=1                                                          // [22333] push constant 1
@SP                                                          // [22334] pop temp 0
AM=M-1                                                       // [22335] pop temp 0
D=M                                                          // [22336] pop temp 0
@5                                                           // [22337] pop temp 0
M=D                                                          // [22338] pop temp 0
@SP                                                          // [22339] pop pointer 1
AM=M-1                                                       // [22340] pop pointer 1
D=M                                                          // [22341] pop pointer 1
@4                                                           // [22342] pop pointer 1
M=D                                                          // [22343] pop pointer 1
@5                                                           // [22344] push temp 0
D=M                                                          // [22345] push temp 0
@SP                                                          // [22346] push temp 0
M=M+1                                                        // [22347] push temp 0
A=M-1                                                        // [22348] push temp 0
M=D                                                          // [22349] push temp 0
@SP                                                          // [22350] pop that 0
AM=M-1                                                       // [22351] pop that 0
D=M                                                          // [22352] pop that 0
@R13                                                         // [22353] pop that 0
M=D                                                          // [22354] pop that 0
@THAT                                                        // [22355] pop that 0
D=M                                                          // [22356] pop that 0
@0                                                           // [22357] pop that 0
D=D+A                                                        // [22358] pop that 0
@R14                                                         // [22359] pop that 0
M=D                                                          // [22360] pop that 0
@R13                                                         // [22361] pop that 0
D=M                                                          // [22362] pop that 0
@R14                                                         // [22363] pop that 0
A=M                                                          // [22364] pop that 0
M=D                                                          // [22365] pop that 0
@SP                                                          // [22366] push constant 1
M=M+1                                                        // [22367] push constant 1
A=M-1                                                        // [22368] push constant 1
M=1                                                          // [22369] push constant 1
@Screen.2                                                    // [22370] push static 2
D=M                                                          // [22371] push static 2
@SP                                                          // [22372] push static 2
M=M+1                                                        // [22373] push static 2
A=M-1                                                        // [22374] push static 2
M=D                                                          // [22375] push static 2
@SP                                                          // [22376] add
AM=M-1                                                       // [22377] add
D=M                                                          // [22378] add
A=A-1                                                        // [22379] add
M=D+M                                                        // [22380] add
@SP                                                          // [22381] push constant 2
M=M+1                                                        // [22382] push constant 2
A=M-1                                                        // [22383] push constant 2
M=1                                                          // [22384] push constant 2
M=M+1                                                        // [22385] push constant 2
@SP                                                          // [22386] pop temp 0
AM=M-1                                                       // [22387] pop temp 0
D=M                                                          // [22388] pop temp 0
@5                                                           // [22389] pop temp 0
M=D                                                          // [22390] pop temp 0
@SP                                                          // [22391] pop pointer 1
AM=M-1                                                       // [22392] pop pointer 1
D=M                                                          // [22393] pop pointer 1
@4                                                           // [22394] pop pointer 1
M=D                                                          // [22395] pop pointer 1
@5                                                           // [22396] push temp 0
D=M                                                          // [22397] push temp 0
@SP                                                          // [22398] push temp 0
M=M+1                                                        // [22399] push temp 0
A=M-1                                                        // [22400] push temp 0
M=D                                                          // [22401] push temp 0
@SP                                                          // [22402] pop that 0
AM=M-1                                                       // [22403] pop that 0
D=M                                                          // [22404] pop that 0
@R13                                                         // [22405] pop that 0
M=D                                                          // [22406] pop that 0
@THAT                                                        // [22407] pop that 0
D=M                                                          // [22408] pop that 0
@0                                                           // [22409] pop that 0
D=D+A                                                        // [22410] pop that 0
@R14                                                         // [22411] pop that 0
M=D                                                          // [22412] pop that 0
@R13                                                         // [22413] pop that 0
D=M                                                          // [22414] pop that 0
@R14                                                         // [22415] pop that 0
A=M                                                          // [22416] pop that 0
M=D                                                          // [22417] pop that 0
@SP                                                          // [22418] push constant 2
M=M+1                                                        // [22419] push constant 2
A=M-1                                                        // [22420] push constant 2
M=1                                                          // [22421] push constant 2
M=M+1                                                        // [22422] push constant 2
@Screen.2                                                    // [22423] push static 2
D=M                                                          // [22424] push static 2
@SP                                                          // [22425] push static 2
M=M+1                                                        // [22426] push static 2
A=M-1                                                        // [22427] push static 2
M=D                                                          // [22428] push static 2
@SP                                                          // [22429] add
AM=M-1                                                       // [22430] add
D=M                                                          // [22431] add
A=A-1                                                        // [22432] add
M=D+M                                                        // [22433] add
@4                                                           // [22434] push constant 4
D=A                                                          // [22435] push constant 4
@SP                                                          // [22436] push constant 4
M=M+1                                                        // [22437] push constant 4
A=M-1                                                        // [22438] push constant 4
M=D                                                          // [22439] push constant 4
@SP                                                          // [22440] pop temp 0
AM=M-1                                                       // [22441] pop temp 0
D=M                                                          // [22442] pop temp 0
@5                                                           // [22443] pop temp 0
M=D                                                          // [22444] pop temp 0
@SP                                                          // [22445] pop pointer 1
AM=M-1                                                       // [22446] pop pointer 1
D=M                                                          // [22447] pop pointer 1
@4                                                           // [22448] pop pointer 1
M=D                                                          // [22449] pop pointer 1
@5                                                           // [22450] push temp 0
D=M                                                          // [22451] push temp 0
@SP                                                          // [22452] push temp 0
M=M+1                                                        // [22453] push temp 0
A=M-1                                                        // [22454] push temp 0
M=D                                                          // [22455] push temp 0
@SP                                                          // [22456] pop that 0
AM=M-1                                                       // [22457] pop that 0
D=M                                                          // [22458] pop that 0
@R13                                                         // [22459] pop that 0
M=D                                                          // [22460] pop that 0
@THAT                                                        // [22461] pop that 0
D=M                                                          // [22462] pop that 0
@0                                                           // [22463] pop that 0
D=D+A                                                        // [22464] pop that 0
@R14                                                         // [22465] pop that 0
M=D                                                          // [22466] pop that 0
@R13                                                         // [22467] pop that 0
D=M                                                          // [22468] pop that 0
@R14                                                         // [22469] pop that 0
A=M                                                          // [22470] pop that 0
M=D                                                          // [22471] pop that 0
@3                                                           // [22472] push constant 3
D=A                                                          // [22473] push constant 3
@SP                                                          // [22474] push constant 3
M=M+1                                                        // [22475] push constant 3
A=M-1                                                        // [22476] push constant 3
M=D                                                          // [22477] push constant 3
@Screen.2                                                    // [22478] push static 2
D=M                                                          // [22479] push static 2
@SP                                                          // [22480] push static 2
M=M+1                                                        // [22481] push static 2
A=M-1                                                        // [22482] push static 2
M=D                                                          // [22483] push static 2
@SP                                                          // [22484] add
AM=M-1                                                       // [22485] add
D=M                                                          // [22486] add
A=A-1                                                        // [22487] add
M=D+M                                                        // [22488] add
@8                                                           // [22489] push constant 8
D=A                                                          // [22490] push constant 8
@SP                                                          // [22491] push constant 8
M=M+1                                                        // [22492] push constant 8
A=M-1                                                        // [22493] push constant 8
M=D                                                          // [22494] push constant 8
@SP                                                          // [22495] pop temp 0
AM=M-1                                                       // [22496] pop temp 0
D=M                                                          // [22497] pop temp 0
@5                                                           // [22498] pop temp 0
M=D                                                          // [22499] pop temp 0
@SP                                                          // [22500] pop pointer 1
AM=M-1                                                       // [22501] pop pointer 1
D=M                                                          // [22502] pop pointer 1
@4                                                           // [22503] pop pointer 1
M=D                                                          // [22504] pop pointer 1
@5                                                           // [22505] push temp 0
D=M                                                          // [22506] push temp 0
@SP                                                          // [22507] push temp 0
M=M+1                                                        // [22508] push temp 0
A=M-1                                                        // [22509] push temp 0
M=D                                                          // [22510] push temp 0
@SP                                                          // [22511] pop that 0
AM=M-1                                                       // [22512] pop that 0
D=M                                                          // [22513] pop that 0
@R13                                                         // [22514] pop that 0
M=D                                                          // [22515] pop that 0
@THAT                                                        // [22516] pop that 0
D=M                                                          // [22517] pop that 0
@0                                                           // [22518] pop that 0
D=D+A                                                        // [22519] pop that 0
@R14                                                         // [22520] pop that 0
M=D                                                          // [22521] pop that 0
@R13                                                         // [22522] pop that 0
D=M                                                          // [22523] pop that 0
@R14                                                         // [22524] pop that 0
A=M                                                          // [22525] pop that 0
M=D                                                          // [22526] pop that 0
@4                                                           // [22527] push constant 4
D=A                                                          // [22528] push constant 4
@SP                                                          // [22529] push constant 4
M=M+1                                                        // [22530] push constant 4
A=M-1                                                        // [22531] push constant 4
M=D                                                          // [22532] push constant 4
@Screen.2                                                    // [22533] push static 2
D=M                                                          // [22534] push static 2
@SP                                                          // [22535] push static 2
M=M+1                                                        // [22536] push static 2
A=M-1                                                        // [22537] push static 2
M=D                                                          // [22538] push static 2
@SP                                                          // [22539] add
AM=M-1                                                       // [22540] add
D=M                                                          // [22541] add
A=A-1                                                        // [22542] add
M=D+M                                                        // [22543] add
@16                                                          // [22544] push constant 16
D=A                                                          // [22545] push constant 16
@SP                                                          // [22546] push constant 16
M=M+1                                                        // [22547] push constant 16
A=M-1                                                        // [22548] push constant 16
M=D                                                          // [22549] push constant 16
@SP                                                          // [22550] pop temp 0
AM=M-1                                                       // [22551] pop temp 0
D=M                                                          // [22552] pop temp 0
@5                                                           // [22553] pop temp 0
M=D                                                          // [22554] pop temp 0
@SP                                                          // [22555] pop pointer 1
AM=M-1                                                       // [22556] pop pointer 1
D=M                                                          // [22557] pop pointer 1
@4                                                           // [22558] pop pointer 1
M=D                                                          // [22559] pop pointer 1
@5                                                           // [22560] push temp 0
D=M                                                          // [22561] push temp 0
@SP                                                          // [22562] push temp 0
M=M+1                                                        // [22563] push temp 0
A=M-1                                                        // [22564] push temp 0
M=D                                                          // [22565] push temp 0
@SP                                                          // [22566] pop that 0
AM=M-1                                                       // [22567] pop that 0
D=M                                                          // [22568] pop that 0
@R13                                                         // [22569] pop that 0
M=D                                                          // [22570] pop that 0
@THAT                                                        // [22571] pop that 0
D=M                                                          // [22572] pop that 0
@0                                                           // [22573] pop that 0
D=D+A                                                        // [22574] pop that 0
@R14                                                         // [22575] pop that 0
M=D                                                          // [22576] pop that 0
@R13                                                         // [22577] pop that 0
D=M                                                          // [22578] pop that 0
@R14                                                         // [22579] pop that 0
A=M                                                          // [22580] pop that 0
M=D                                                          // [22581] pop that 0
@5                                                           // [22582] push constant 5
D=A                                                          // [22583] push constant 5
@SP                                                          // [22584] push constant 5
M=M+1                                                        // [22585] push constant 5
A=M-1                                                        // [22586] push constant 5
M=D                                                          // [22587] push constant 5
@Screen.2                                                    // [22588] push static 2
D=M                                                          // [22589] push static 2
@SP                                                          // [22590] push static 2
M=M+1                                                        // [22591] push static 2
A=M-1                                                        // [22592] push static 2
M=D                                                          // [22593] push static 2
@SP                                                          // [22594] add
AM=M-1                                                       // [22595] add
D=M                                                          // [22596] add
A=A-1                                                        // [22597] add
M=D+M                                                        // [22598] add
@32                                                          // [22599] push constant 32
D=A                                                          // [22600] push constant 32
@SP                                                          // [22601] push constant 32
M=M+1                                                        // [22602] push constant 32
A=M-1                                                        // [22603] push constant 32
M=D                                                          // [22604] push constant 32
@SP                                                          // [22605] pop temp 0
AM=M-1                                                       // [22606] pop temp 0
D=M                                                          // [22607] pop temp 0
@5                                                           // [22608] pop temp 0
M=D                                                          // [22609] pop temp 0
@SP                                                          // [22610] pop pointer 1
AM=M-1                                                       // [22611] pop pointer 1
D=M                                                          // [22612] pop pointer 1
@4                                                           // [22613] pop pointer 1
M=D                                                          // [22614] pop pointer 1
@5                                                           // [22615] push temp 0
D=M                                                          // [22616] push temp 0
@SP                                                          // [22617] push temp 0
M=M+1                                                        // [22618] push temp 0
A=M-1                                                        // [22619] push temp 0
M=D                                                          // [22620] push temp 0
@SP                                                          // [22621] pop that 0
AM=M-1                                                       // [22622] pop that 0
D=M                                                          // [22623] pop that 0
@R13                                                         // [22624] pop that 0
M=D                                                          // [22625] pop that 0
@THAT                                                        // [22626] pop that 0
D=M                                                          // [22627] pop that 0
@0                                                           // [22628] pop that 0
D=D+A                                                        // [22629] pop that 0
@R14                                                         // [22630] pop that 0
M=D                                                          // [22631] pop that 0
@R13                                                         // [22632] pop that 0
D=M                                                          // [22633] pop that 0
@R14                                                         // [22634] pop that 0
A=M                                                          // [22635] pop that 0
M=D                                                          // [22636] pop that 0
@6                                                           // [22637] push constant 6
D=A                                                          // [22638] push constant 6
@SP                                                          // [22639] push constant 6
M=M+1                                                        // [22640] push constant 6
A=M-1                                                        // [22641] push constant 6
M=D                                                          // [22642] push constant 6
@Screen.2                                                    // [22643] push static 2
D=M                                                          // [22644] push static 2
@SP                                                          // [22645] push static 2
M=M+1                                                        // [22646] push static 2
A=M-1                                                        // [22647] push static 2
M=D                                                          // [22648] push static 2
@SP                                                          // [22649] add
AM=M-1                                                       // [22650] add
D=M                                                          // [22651] add
A=A-1                                                        // [22652] add
M=D+M                                                        // [22653] add
@64                                                          // [22654] push constant 64
D=A                                                          // [22655] push constant 64
@SP                                                          // [22656] push constant 64
M=M+1                                                        // [22657] push constant 64
A=M-1                                                        // [22658] push constant 64
M=D                                                          // [22659] push constant 64
@SP                                                          // [22660] pop temp 0
AM=M-1                                                       // [22661] pop temp 0
D=M                                                          // [22662] pop temp 0
@5                                                           // [22663] pop temp 0
M=D                                                          // [22664] pop temp 0
@SP                                                          // [22665] pop pointer 1
AM=M-1                                                       // [22666] pop pointer 1
D=M                                                          // [22667] pop pointer 1
@4                                                           // [22668] pop pointer 1
M=D                                                          // [22669] pop pointer 1
@5                                                           // [22670] push temp 0
D=M                                                          // [22671] push temp 0
@SP                                                          // [22672] push temp 0
M=M+1                                                        // [22673] push temp 0
A=M-1                                                        // [22674] push temp 0
M=D                                                          // [22675] push temp 0
@SP                                                          // [22676] pop that 0
AM=M-1                                                       // [22677] pop that 0
D=M                                                          // [22678] pop that 0
@R13                                                         // [22679] pop that 0
M=D                                                          // [22680] pop that 0
@THAT                                                        // [22681] pop that 0
D=M                                                          // [22682] pop that 0
@0                                                           // [22683] pop that 0
D=D+A                                                        // [22684] pop that 0
@R14                                                         // [22685] pop that 0
M=D                                                          // [22686] pop that 0
@R13                                                         // [22687] pop that 0
D=M                                                          // [22688] pop that 0
@R14                                                         // [22689] pop that 0
A=M                                                          // [22690] pop that 0
M=D                                                          // [22691] pop that 0
@7                                                           // [22692] push constant 7
D=A                                                          // [22693] push constant 7
@SP                                                          // [22694] push constant 7
M=M+1                                                        // [22695] push constant 7
A=M-1                                                        // [22696] push constant 7
M=D                                                          // [22697] push constant 7
@Screen.2                                                    // [22698] push static 2
D=M                                                          // [22699] push static 2
@SP                                                          // [22700] push static 2
M=M+1                                                        // [22701] push static 2
A=M-1                                                        // [22702] push static 2
M=D                                                          // [22703] push static 2
@SP                                                          // [22704] add
AM=M-1                                                       // [22705] add
D=M                                                          // [22706] add
A=A-1                                                        // [22707] add
M=D+M                                                        // [22708] add
@128                                                         // [22709] push constant 128
D=A                                                          // [22710] push constant 128
@SP                                                          // [22711] push constant 128
M=M+1                                                        // [22712] push constant 128
A=M-1                                                        // [22713] push constant 128
M=D                                                          // [22714] push constant 128
@SP                                                          // [22715] pop temp 0
AM=M-1                                                       // [22716] pop temp 0
D=M                                                          // [22717] pop temp 0
@5                                                           // [22718] pop temp 0
M=D                                                          // [22719] pop temp 0
@SP                                                          // [22720] pop pointer 1
AM=M-1                                                       // [22721] pop pointer 1
D=M                                                          // [22722] pop pointer 1
@4                                                           // [22723] pop pointer 1
M=D                                                          // [22724] pop pointer 1
@5                                                           // [22725] push temp 0
D=M                                                          // [22726] push temp 0
@SP                                                          // [22727] push temp 0
M=M+1                                                        // [22728] push temp 0
A=M-1                                                        // [22729] push temp 0
M=D                                                          // [22730] push temp 0
@SP                                                          // [22731] pop that 0
AM=M-1                                                       // [22732] pop that 0
D=M                                                          // [22733] pop that 0
@R13                                                         // [22734] pop that 0
M=D                                                          // [22735] pop that 0
@THAT                                                        // [22736] pop that 0
D=M                                                          // [22737] pop that 0
@0                                                           // [22738] pop that 0
D=D+A                                                        // [22739] pop that 0
@R14                                                         // [22740] pop that 0
M=D                                                          // [22741] pop that 0
@R13                                                         // [22742] pop that 0
D=M                                                          // [22743] pop that 0
@R14                                                         // [22744] pop that 0
A=M                                                          // [22745] pop that 0
M=D                                                          // [22746] pop that 0
@8                                                           // [22747] push constant 8
D=A                                                          // [22748] push constant 8
@SP                                                          // [22749] push constant 8
M=M+1                                                        // [22750] push constant 8
A=M-1                                                        // [22751] push constant 8
M=D                                                          // [22752] push constant 8
@Screen.2                                                    // [22753] push static 2
D=M                                                          // [22754] push static 2
@SP                                                          // [22755] push static 2
M=M+1                                                        // [22756] push static 2
A=M-1                                                        // [22757] push static 2
M=D                                                          // [22758] push static 2
@SP                                                          // [22759] add
AM=M-1                                                       // [22760] add
D=M                                                          // [22761] add
A=A-1                                                        // [22762] add
M=D+M                                                        // [22763] add
@256                                                         // [22764] push constant 256
D=A                                                          // [22765] push constant 256
@SP                                                          // [22766] push constant 256
M=M+1                                                        // [22767] push constant 256
A=M-1                                                        // [22768] push constant 256
M=D                                                          // [22769] push constant 256
@SP                                                          // [22770] pop temp 0
AM=M-1                                                       // [22771] pop temp 0
D=M                                                          // [22772] pop temp 0
@5                                                           // [22773] pop temp 0
M=D                                                          // [22774] pop temp 0
@SP                                                          // [22775] pop pointer 1
AM=M-1                                                       // [22776] pop pointer 1
D=M                                                          // [22777] pop pointer 1
@4                                                           // [22778] pop pointer 1
M=D                                                          // [22779] pop pointer 1
@5                                                           // [22780] push temp 0
D=M                                                          // [22781] push temp 0
@SP                                                          // [22782] push temp 0
M=M+1                                                        // [22783] push temp 0
A=M-1                                                        // [22784] push temp 0
M=D                                                          // [22785] push temp 0
@SP                                                          // [22786] pop that 0
AM=M-1                                                       // [22787] pop that 0
D=M                                                          // [22788] pop that 0
@R13                                                         // [22789] pop that 0
M=D                                                          // [22790] pop that 0
@THAT                                                        // [22791] pop that 0
D=M                                                          // [22792] pop that 0
@0                                                           // [22793] pop that 0
D=D+A                                                        // [22794] pop that 0
@R14                                                         // [22795] pop that 0
M=D                                                          // [22796] pop that 0
@R13                                                         // [22797] pop that 0
D=M                                                          // [22798] pop that 0
@R14                                                         // [22799] pop that 0
A=M                                                          // [22800] pop that 0
M=D                                                          // [22801] pop that 0
@9                                                           // [22802] push constant 9
D=A                                                          // [22803] push constant 9
@SP                                                          // [22804] push constant 9
M=M+1                                                        // [22805] push constant 9
A=M-1                                                        // [22806] push constant 9
M=D                                                          // [22807] push constant 9
@Screen.2                                                    // [22808] push static 2
D=M                                                          // [22809] push static 2
@SP                                                          // [22810] push static 2
M=M+1                                                        // [22811] push static 2
A=M-1                                                        // [22812] push static 2
M=D                                                          // [22813] push static 2
@SP                                                          // [22814] add
AM=M-1                                                       // [22815] add
D=M                                                          // [22816] add
A=A-1                                                        // [22817] add
M=D+M                                                        // [22818] add
@512                                                         // [22819] push constant 512
D=A                                                          // [22820] push constant 512
@SP                                                          // [22821] push constant 512
M=M+1                                                        // [22822] push constant 512
A=M-1                                                        // [22823] push constant 512
M=D                                                          // [22824] push constant 512
@SP                                                          // [22825] pop temp 0
AM=M-1                                                       // [22826] pop temp 0
D=M                                                          // [22827] pop temp 0
@5                                                           // [22828] pop temp 0
M=D                                                          // [22829] pop temp 0
@SP                                                          // [22830] pop pointer 1
AM=M-1                                                       // [22831] pop pointer 1
D=M                                                          // [22832] pop pointer 1
@4                                                           // [22833] pop pointer 1
M=D                                                          // [22834] pop pointer 1
@5                                                           // [22835] push temp 0
D=M                                                          // [22836] push temp 0
@SP                                                          // [22837] push temp 0
M=M+1                                                        // [22838] push temp 0
A=M-1                                                        // [22839] push temp 0
M=D                                                          // [22840] push temp 0
@SP                                                          // [22841] pop that 0
AM=M-1                                                       // [22842] pop that 0
D=M                                                          // [22843] pop that 0
@R13                                                         // [22844] pop that 0
M=D                                                          // [22845] pop that 0
@THAT                                                        // [22846] pop that 0
D=M                                                          // [22847] pop that 0
@0                                                           // [22848] pop that 0
D=D+A                                                        // [22849] pop that 0
@R14                                                         // [22850] pop that 0
M=D                                                          // [22851] pop that 0
@R13                                                         // [22852] pop that 0
D=M                                                          // [22853] pop that 0
@R14                                                         // [22854] pop that 0
A=M                                                          // [22855] pop that 0
M=D                                                          // [22856] pop that 0
@10                                                          // [22857] push constant 10
D=A                                                          // [22858] push constant 10
@SP                                                          // [22859] push constant 10
M=M+1                                                        // [22860] push constant 10
A=M-1                                                        // [22861] push constant 10
M=D                                                          // [22862] push constant 10
@Screen.2                                                    // [22863] push static 2
D=M                                                          // [22864] push static 2
@SP                                                          // [22865] push static 2
M=M+1                                                        // [22866] push static 2
A=M-1                                                        // [22867] push static 2
M=D                                                          // [22868] push static 2
@SP                                                          // [22869] add
AM=M-1                                                       // [22870] add
D=M                                                          // [22871] add
A=A-1                                                        // [22872] add
M=D+M                                                        // [22873] add
@1024                                                        // [22874] push constant 1024
D=A                                                          // [22875] push constant 1024
@SP                                                          // [22876] push constant 1024
M=M+1                                                        // [22877] push constant 1024
A=M-1                                                        // [22878] push constant 1024
M=D                                                          // [22879] push constant 1024
@SP                                                          // [22880] pop temp 0
AM=M-1                                                       // [22881] pop temp 0
D=M                                                          // [22882] pop temp 0
@5                                                           // [22883] pop temp 0
M=D                                                          // [22884] pop temp 0
@SP                                                          // [22885] pop pointer 1
AM=M-1                                                       // [22886] pop pointer 1
D=M                                                          // [22887] pop pointer 1
@4                                                           // [22888] pop pointer 1
M=D                                                          // [22889] pop pointer 1
@5                                                           // [22890] push temp 0
D=M                                                          // [22891] push temp 0
@SP                                                          // [22892] push temp 0
M=M+1                                                        // [22893] push temp 0
A=M-1                                                        // [22894] push temp 0
M=D                                                          // [22895] push temp 0
@SP                                                          // [22896] pop that 0
AM=M-1                                                       // [22897] pop that 0
D=M                                                          // [22898] pop that 0
@R13                                                         // [22899] pop that 0
M=D                                                          // [22900] pop that 0
@THAT                                                        // [22901] pop that 0
D=M                                                          // [22902] pop that 0
@0                                                           // [22903] pop that 0
D=D+A                                                        // [22904] pop that 0
@R14                                                         // [22905] pop that 0
M=D                                                          // [22906] pop that 0
@R13                                                         // [22907] pop that 0
D=M                                                          // [22908] pop that 0
@R14                                                         // [22909] pop that 0
A=M                                                          // [22910] pop that 0
M=D                                                          // [22911] pop that 0
@11                                                          // [22912] push constant 11
D=A                                                          // [22913] push constant 11
@SP                                                          // [22914] push constant 11
M=M+1                                                        // [22915] push constant 11
A=M-1                                                        // [22916] push constant 11
M=D                                                          // [22917] push constant 11
@Screen.2                                                    // [22918] push static 2
D=M                                                          // [22919] push static 2
@SP                                                          // [22920] push static 2
M=M+1                                                        // [22921] push static 2
A=M-1                                                        // [22922] push static 2
M=D                                                          // [22923] push static 2
@SP                                                          // [22924] add
AM=M-1                                                       // [22925] add
D=M                                                          // [22926] add
A=A-1                                                        // [22927] add
M=D+M                                                        // [22928] add
@2048                                                        // [22929] push constant 2048
D=A                                                          // [22930] push constant 2048
@SP                                                          // [22931] push constant 2048
M=M+1                                                        // [22932] push constant 2048
A=M-1                                                        // [22933] push constant 2048
M=D                                                          // [22934] push constant 2048
@SP                                                          // [22935] pop temp 0
AM=M-1                                                       // [22936] pop temp 0
D=M                                                          // [22937] pop temp 0
@5                                                           // [22938] pop temp 0
M=D                                                          // [22939] pop temp 0
@SP                                                          // [22940] pop pointer 1
AM=M-1                                                       // [22941] pop pointer 1
D=M                                                          // [22942] pop pointer 1
@4                                                           // [22943] pop pointer 1
M=D                                                          // [22944] pop pointer 1
@5                                                           // [22945] push temp 0
D=M                                                          // [22946] push temp 0
@SP                                                          // [22947] push temp 0
M=M+1                                                        // [22948] push temp 0
A=M-1                                                        // [22949] push temp 0
M=D                                                          // [22950] push temp 0
@SP                                                          // [22951] pop that 0
AM=M-1                                                       // [22952] pop that 0
D=M                                                          // [22953] pop that 0
@R13                                                         // [22954] pop that 0
M=D                                                          // [22955] pop that 0
@THAT                                                        // [22956] pop that 0
D=M                                                          // [22957] pop that 0
@0                                                           // [22958] pop that 0
D=D+A                                                        // [22959] pop that 0
@R14                                                         // [22960] pop that 0
M=D                                                          // [22961] pop that 0
@R13                                                         // [22962] pop that 0
D=M                                                          // [22963] pop that 0
@R14                                                         // [22964] pop that 0
A=M                                                          // [22965] pop that 0
M=D                                                          // [22966] pop that 0
@12                                                          // [22967] push constant 12
D=A                                                          // [22968] push constant 12
@SP                                                          // [22969] push constant 12
M=M+1                                                        // [22970] push constant 12
A=M-1                                                        // [22971] push constant 12
M=D                                                          // [22972] push constant 12
@Screen.2                                                    // [22973] push static 2
D=M                                                          // [22974] push static 2
@SP                                                          // [22975] push static 2
M=M+1                                                        // [22976] push static 2
A=M-1                                                        // [22977] push static 2
M=D                                                          // [22978] push static 2
@SP                                                          // [22979] add
AM=M-1                                                       // [22980] add
D=M                                                          // [22981] add
A=A-1                                                        // [22982] add
M=D+M                                                        // [22983] add
@4096                                                        // [22984] push constant 4096
D=A                                                          // [22985] push constant 4096
@SP                                                          // [22986] push constant 4096
M=M+1                                                        // [22987] push constant 4096
A=M-1                                                        // [22988] push constant 4096
M=D                                                          // [22989] push constant 4096
@SP                                                          // [22990] pop temp 0
AM=M-1                                                       // [22991] pop temp 0
D=M                                                          // [22992] pop temp 0
@5                                                           // [22993] pop temp 0
M=D                                                          // [22994] pop temp 0
@SP                                                          // [22995] pop pointer 1
AM=M-1                                                       // [22996] pop pointer 1
D=M                                                          // [22997] pop pointer 1
@4                                                           // [22998] pop pointer 1
M=D                                                          // [22999] pop pointer 1
@5                                                           // [23000] push temp 0
D=M                                                          // [23001] push temp 0
@SP                                                          // [23002] push temp 0
M=M+1                                                        // [23003] push temp 0
A=M-1                                                        // [23004] push temp 0
M=D                                                          // [23005] push temp 0
@SP                                                          // [23006] pop that 0
AM=M-1                                                       // [23007] pop that 0
D=M                                                          // [23008] pop that 0
@R13                                                         // [23009] pop that 0
M=D                                                          // [23010] pop that 0
@THAT                                                        // [23011] pop that 0
D=M                                                          // [23012] pop that 0
@0                                                           // [23013] pop that 0
D=D+A                                                        // [23014] pop that 0
@R14                                                         // [23015] pop that 0
M=D                                                          // [23016] pop that 0
@R13                                                         // [23017] pop that 0
D=M                                                          // [23018] pop that 0
@R14                                                         // [23019] pop that 0
A=M                                                          // [23020] pop that 0
M=D                                                          // [23021] pop that 0
@13                                                          // [23022] push constant 13
D=A                                                          // [23023] push constant 13
@SP                                                          // [23024] push constant 13
M=M+1                                                        // [23025] push constant 13
A=M-1                                                        // [23026] push constant 13
M=D                                                          // [23027] push constant 13
@Screen.2                                                    // [23028] push static 2
D=M                                                          // [23029] push static 2
@SP                                                          // [23030] push static 2
M=M+1                                                        // [23031] push static 2
A=M-1                                                        // [23032] push static 2
M=D                                                          // [23033] push static 2
@SP                                                          // [23034] add
AM=M-1                                                       // [23035] add
D=M                                                          // [23036] add
A=A-1                                                        // [23037] add
M=D+M                                                        // [23038] add
@8192                                                        // [23039] push constant 8192
D=A                                                          // [23040] push constant 8192
@SP                                                          // [23041] push constant 8192
M=M+1                                                        // [23042] push constant 8192
A=M-1                                                        // [23043] push constant 8192
M=D                                                          // [23044] push constant 8192
@SP                                                          // [23045] pop temp 0
AM=M-1                                                       // [23046] pop temp 0
D=M                                                          // [23047] pop temp 0
@5                                                           // [23048] pop temp 0
M=D                                                          // [23049] pop temp 0
@SP                                                          // [23050] pop pointer 1
AM=M-1                                                       // [23051] pop pointer 1
D=M                                                          // [23052] pop pointer 1
@4                                                           // [23053] pop pointer 1
M=D                                                          // [23054] pop pointer 1
@5                                                           // [23055] push temp 0
D=M                                                          // [23056] push temp 0
@SP                                                          // [23057] push temp 0
M=M+1                                                        // [23058] push temp 0
A=M-1                                                        // [23059] push temp 0
M=D                                                          // [23060] push temp 0
@SP                                                          // [23061] pop that 0
AM=M-1                                                       // [23062] pop that 0
D=M                                                          // [23063] pop that 0
@R13                                                         // [23064] pop that 0
M=D                                                          // [23065] pop that 0
@THAT                                                        // [23066] pop that 0
D=M                                                          // [23067] pop that 0
@0                                                           // [23068] pop that 0
D=D+A                                                        // [23069] pop that 0
@R14                                                         // [23070] pop that 0
M=D                                                          // [23071] pop that 0
@R13                                                         // [23072] pop that 0
D=M                                                          // [23073] pop that 0
@R14                                                         // [23074] pop that 0
A=M                                                          // [23075] pop that 0
M=D                                                          // [23076] pop that 0
@14                                                          // [23077] push constant 14
D=A                                                          // [23078] push constant 14
@SP                                                          // [23079] push constant 14
M=M+1                                                        // [23080] push constant 14
A=M-1                                                        // [23081] push constant 14
M=D                                                          // [23082] push constant 14
@Screen.2                                                    // [23083] push static 2
D=M                                                          // [23084] push static 2
@SP                                                          // [23085] push static 2
M=M+1                                                        // [23086] push static 2
A=M-1                                                        // [23087] push static 2
M=D                                                          // [23088] push static 2
@SP                                                          // [23089] add
AM=M-1                                                       // [23090] add
D=M                                                          // [23091] add
A=A-1                                                        // [23092] add
M=D+M                                                        // [23093] add
@16384                                                       // [23094] push constant 16384
D=A                                                          // [23095] push constant 16384
@SP                                                          // [23096] push constant 16384
M=M+1                                                        // [23097] push constant 16384
A=M-1                                                        // [23098] push constant 16384
M=D                                                          // [23099] push constant 16384
@SP                                                          // [23100] pop temp 0
AM=M-1                                                       // [23101] pop temp 0
D=M                                                          // [23102] pop temp 0
@5                                                           // [23103] pop temp 0
M=D                                                          // [23104] pop temp 0
@SP                                                          // [23105] pop pointer 1
AM=M-1                                                       // [23106] pop pointer 1
D=M                                                          // [23107] pop pointer 1
@4                                                           // [23108] pop pointer 1
M=D                                                          // [23109] pop pointer 1
@5                                                           // [23110] push temp 0
D=M                                                          // [23111] push temp 0
@SP                                                          // [23112] push temp 0
M=M+1                                                        // [23113] push temp 0
A=M-1                                                        // [23114] push temp 0
M=D                                                          // [23115] push temp 0
@SP                                                          // [23116] pop that 0
AM=M-1                                                       // [23117] pop that 0
D=M                                                          // [23118] pop that 0
@R13                                                         // [23119] pop that 0
M=D                                                          // [23120] pop that 0
@THAT                                                        // [23121] pop that 0
D=M                                                          // [23122] pop that 0
@0                                                           // [23123] pop that 0
D=D+A                                                        // [23124] pop that 0
@R14                                                         // [23125] pop that 0
M=D                                                          // [23126] pop that 0
@R13                                                         // [23127] pop that 0
D=M                                                          // [23128] pop that 0
@R14                                                         // [23129] pop that 0
A=M                                                          // [23130] pop that 0
M=D                                                          // [23131] pop that 0
@15                                                          // [23132] push constant 15
D=A                                                          // [23133] push constant 15
@SP                                                          // [23134] push constant 15
M=M+1                                                        // [23135] push constant 15
A=M-1                                                        // [23136] push constant 15
M=D                                                          // [23137] push constant 15
@Screen.2                                                    // [23138] push static 2
D=M                                                          // [23139] push static 2
@SP                                                          // [23140] push static 2
M=M+1                                                        // [23141] push static 2
A=M-1                                                        // [23142] push static 2
M=D                                                          // [23143] push static 2
@SP                                                          // [23144] add
AM=M-1                                                       // [23145] add
D=M                                                          // [23146] add
A=A-1                                                        // [23147] add
M=D+M                                                        // [23148] add
@32767                                                       // [23149] push constant 32767
D=A                                                          // [23150] push constant 32767
@SP                                                          // [23151] push constant 32767
M=M+1                                                        // [23152] push constant 32767
A=M-1                                                        // [23153] push constant 32767
M=D                                                          // [23154] push constant 32767
@SP                                                          // [23155] neg
A=M-1                                                        // [23156] neg
D=M                                                          // [23157] neg
M=-D                                                         // [23158] neg
@SP                                                          // [23159] push constant 1
M=M+1                                                        // [23160] push constant 1
A=M-1                                                        // [23161] push constant 1
M=1                                                          // [23162] push constant 1
@SP                                                          // [23163] sub
AM=M-1                                                       // [23164] sub
D=M                                                          // [23165] sub
A=A-1                                                        // [23166] sub
M=M-D                                                        // [23167] sub
@SP                                                          // [23168] pop temp 0
AM=M-1                                                       // [23169] pop temp 0
D=M                                                          // [23170] pop temp 0
@5                                                           // [23171] pop temp 0
M=D                                                          // [23172] pop temp 0
@SP                                                          // [23173] pop pointer 1
AM=M-1                                                       // [23174] pop pointer 1
D=M                                                          // [23175] pop pointer 1
@4                                                           // [23176] pop pointer 1
M=D                                                          // [23177] pop pointer 1
@5                                                           // [23178] push temp 0
D=M                                                          // [23179] push temp 0
@SP                                                          // [23180] push temp 0
M=M+1                                                        // [23181] push temp 0
A=M-1                                                        // [23182] push temp 0
M=D                                                          // [23183] push temp 0
@SP                                                          // [23184] pop that 0
AM=M-1                                                       // [23185] pop that 0
D=M                                                          // [23186] pop that 0
@R13                                                         // [23187] pop that 0
M=D                                                          // [23188] pop that 0
@THAT                                                        // [23189] pop that 0
D=M                                                          // [23190] pop that 0
@0                                                           // [23191] pop that 0
D=D+A                                                        // [23192] pop that 0
@R14                                                         // [23193] pop that 0
M=D                                                          // [23194] pop that 0
@R13                                                         // [23195] pop that 0
D=M                                                          // [23196] pop that 0
@R14                                                         // [23197] pop that 0
A=M                                                          // [23198] pop that 0
M=D                                                          // [23199] pop that 0
@32                                                          // [23200] push constant 32
D=A                                                          // [23201] push constant 32
@SP                                                          // [23202] push constant 32
M=M+1                                                        // [23203] push constant 32
A=M-1                                                        // [23204] push constant 32
M=D                                                          // [23205] push constant 32
@1                                                           // [23206] call Array.new 1
D=A                                                          // [23207] call Array.new 1
@R13                                                         // [23208] call Array.new 1
M=D                                                          // [23209] call Array.new 1
@Array.new                                                   // [23210] call Array.new 1
D=A                                                          // [23211] call Array.new 1
@R14                                                         // [23212] call Array.new 1
M=D                                                          // [23213] call Array.new 1
@return-257                                                  // [23214] call Array.new 1
D=A                                                          // [23215] call Array.new 1
@CALL                                                        // [23216] call Array.new 1
0;JEQ                                                        // [23217] call Array.new 1
(return-257)                                                 // [     ] call Array.new 1
@SP                                                          // [23218] pop static 3
AM=M-1                                                       // [23219] pop static 3
D=M                                                          // [23220] pop static 3
@Screen.3                                                    // [23221] pop static 3
M=D                                                          // [23222] pop static 3
@SP                                                          // [23223] push constant 0
M=M+1                                                        // [23224] push constant 0
A=M-1                                                        // [23225] push constant 0
M=0                                                          // [23226] push constant 0
@RETURN                                                      // [23227] return
0;JEQ                                                        // [23228] return
(Screen.clearScreen)                                         // [     ] function Screen.clearScreen 3
@SP                                                          // [23229] function Screen.clearScreen 3
A=M                                                          // [23230] function Screen.clearScreen 3
M=0                                                          // [23231] function Screen.clearScreen 3
@SP                                                          // [23232] function Screen.clearScreen 3
M=M+1                                                        // [23233] function Screen.clearScreen 3
@SP                                                          // [23234] function Screen.clearScreen 3
A=M                                                          // [23235] function Screen.clearScreen 3
M=0                                                          // [23236] function Screen.clearScreen 3
@SP                                                          // [23237] function Screen.clearScreen 3
M=M+1                                                        // [23238] function Screen.clearScreen 3
@SP                                                          // [23239] function Screen.clearScreen 3
A=M                                                          // [23240] function Screen.clearScreen 3
M=0                                                          // [23241] function Screen.clearScreen 3
@SP                                                          // [23242] function Screen.clearScreen 3
M=M+1                                                        // [23243] function Screen.clearScreen 3
@SP                                                          // [23244] push constant 0
M=M+1                                                        // [23245] push constant 0
A=M-1                                                        // [23246] push constant 0
M=0                                                          // [23247] push constant 0
@SP                                                          // [23248] pop local 0
AM=M-1                                                       // [23249] pop local 0
D=M                                                          // [23250] pop local 0
@R13                                                         // [23251] pop local 0
M=D                                                          // [23252] pop local 0
@LCL                                                         // [23253] pop local 0
D=M                                                          // [23254] pop local 0
@0                                                           // [23255] pop local 0
D=D+A                                                        // [23256] pop local 0
@R14                                                         // [23257] pop local 0
M=D                                                          // [23258] pop local 0
@R13                                                         // [23259] pop local 0
D=M                                                          // [23260] pop local 0
@R14                                                         // [23261] pop local 0
A=M                                                          // [23262] pop local 0
M=D                                                          // [23263] pop local 0
@SP                                                          // [23264] push constant 0
M=M+1                                                        // [23265] push constant 0
A=M-1                                                        // [23266] push constant 0
M=0                                                          // [23267] push constant 0
@SP                                                          // [23268] pop local 1
AM=M-1                                                       // [23269] pop local 1
D=M                                                          // [23270] pop local 1
@R13                                                         // [23271] pop local 1
M=D                                                          // [23272] pop local 1
@LCL                                                         // [23273] pop local 1
D=M                                                          // [23274] pop local 1
@1                                                           // [23275] pop local 1
D=D+A                                                        // [23276] pop local 1
@R14                                                         // [23277] pop local 1
M=D                                                          // [23278] pop local 1
@R13                                                         // [23279] pop local 1
D=M                                                          // [23280] pop local 1
@R14                                                         // [23281] pop local 1
A=M                                                          // [23282] pop local 1
M=D                                                          // [23283] pop local 1
(Screen.clearScreen$WHILE_EXP0)                              // [     ] label WHILE_EXP0
@LCL                                                         // [23284] push local 0
D=M                                                          // [23285] push local 0
@0                                                           // [23286] push local 0
A=D+A                                                        // [23287] push local 0
D=M                                                          // [23288] push local 0
@SP                                                          // [23289] push local 0
M=M+1                                                        // [23290] push local 0
A=M-1                                                        // [23291] push local 0
M=D                                                          // [23292] push local 0
@256                                                         // [23293] push constant 256
D=A                                                          // [23294] push constant 256
@SP                                                          // [23295] push constant 256
M=M+1                                                        // [23296] push constant 256
A=M-1                                                        // [23297] push constant 256
M=D                                                          // [23298] push constant 256
@CONTINUE_LT_30                                              // [23299] lt
D=A                                                          // [23300] lt
@R13                                                         // [23301] lt
M=D                                                          // [23302] lt
@SP                                                          // [23303] lt
AM=M-1                                                       // [23304] lt
D=M                                                          // [23305] lt
A=A-1                                                        // [23306] lt
D=D-M                                                        // [23307] lt
@INTERNAL_LT                                                 // [23308] lt
0;JEQ                                                        // [23309] lt
(CONTINUE_LT_30)                                             // [     ] lt
@SP                                                          // [23310] not
A=M-1                                                        // [23311] not
D=M                                                          // [23312] not
M=!D                                                         // [23313] not
@SP                                                          // [23314] if-goto WHILE_END0
AM=M-1                                                       // [23315] if-goto WHILE_END0
D=M                                                          // [23316] if-goto WHILE_END0
@Screen.clearScreen$WHILE_END0                               // [23317] if-goto WHILE_END0
D;JNE                                                        // [23318] if-goto WHILE_END0
@SP                                                          // [23319] push constant 0
M=M+1                                                        // [23320] push constant 0
A=M-1                                                        // [23321] push constant 0
M=0                                                          // [23322] push constant 0
@SP                                                          // [23323] pop local 2
AM=M-1                                                       // [23324] pop local 2
D=M                                                          // [23325] pop local 2
@R13                                                         // [23326] pop local 2
M=D                                                          // [23327] pop local 2
@LCL                                                         // [23328] pop local 2
D=M                                                          // [23329] pop local 2
@2                                                           // [23330] pop local 2
D=D+A                                                        // [23331] pop local 2
@R14                                                         // [23332] pop local 2
M=D                                                          // [23333] pop local 2
@R13                                                         // [23334] pop local 2
D=M                                                          // [23335] pop local 2
@R14                                                         // [23336] pop local 2
A=M                                                          // [23337] pop local 2
M=D                                                          // [23338] pop local 2
(Screen.clearScreen$WHILE_EXP1)                              // [     ] label WHILE_EXP1
@LCL                                                         // [23339] push local 2
D=M                                                          // [23340] push local 2
@2                                                           // [23341] push local 2
A=D+A                                                        // [23342] push local 2
D=M                                                          // [23343] push local 2
@SP                                                          // [23344] push local 2
M=M+1                                                        // [23345] push local 2
A=M-1                                                        // [23346] push local 2
M=D                                                          // [23347] push local 2
@32                                                          // [23348] push constant 32
D=A                                                          // [23349] push constant 32
@SP                                                          // [23350] push constant 32
M=M+1                                                        // [23351] push constant 32
A=M-1                                                        // [23352] push constant 32
M=D                                                          // [23353] push constant 32
@CONTINUE_LT_31                                              // [23354] lt
D=A                                                          // [23355] lt
@R13                                                         // [23356] lt
M=D                                                          // [23357] lt
@SP                                                          // [23358] lt
AM=M-1                                                       // [23359] lt
D=M                                                          // [23360] lt
A=A-1                                                        // [23361] lt
D=D-M                                                        // [23362] lt
@INTERNAL_LT                                                 // [23363] lt
0;JEQ                                                        // [23364] lt
(CONTINUE_LT_31)                                             // [     ] lt
@SP                                                          // [23365] not
A=M-1                                                        // [23366] not
D=M                                                          // [23367] not
M=!D                                                         // [23368] not
@SP                                                          // [23369] if-goto WHILE_END1
AM=M-1                                                       // [23370] if-goto WHILE_END1
D=M                                                          // [23371] if-goto WHILE_END1
@Screen.clearScreen$WHILE_END1                               // [23372] if-goto WHILE_END1
D;JNE                                                        // [23373] if-goto WHILE_END1
@LCL                                                         // [23374] push local 1
D=M                                                          // [23375] push local 1
@1                                                           // [23376] push local 1
A=D+A                                                        // [23377] push local 1
D=M                                                          // [23378] push local 1
@SP                                                          // [23379] push local 1
M=M+1                                                        // [23380] push local 1
A=M-1                                                        // [23381] push local 1
M=D                                                          // [23382] push local 1
@LCL                                                         // [23383] push local 2
D=M                                                          // [23384] push local 2
@2                                                           // [23385] push local 2
A=D+A                                                        // [23386] push local 2
D=M                                                          // [23387] push local 2
@SP                                                          // [23388] push local 2
M=M+1                                                        // [23389] push local 2
A=M-1                                                        // [23390] push local 2
M=D                                                          // [23391] push local 2
@SP                                                          // [23392] add
AM=M-1                                                       // [23393] add
D=M                                                          // [23394] add
A=A-1                                                        // [23395] add
M=D+M                                                        // [23396] add
@Screen.1                                                    // [23397] push static 1
D=M                                                          // [23398] push static 1
@SP                                                          // [23399] push static 1
M=M+1                                                        // [23400] push static 1
A=M-1                                                        // [23401] push static 1
M=D                                                          // [23402] push static 1
@SP                                                          // [23403] add
AM=M-1                                                       // [23404] add
D=M                                                          // [23405] add
A=A-1                                                        // [23406] add
M=D+M                                                        // [23407] add
@SP                                                          // [23408] push constant 0
M=M+1                                                        // [23409] push constant 0
A=M-1                                                        // [23410] push constant 0
M=0                                                          // [23411] push constant 0
@SP                                                          // [23412] pop temp 0
AM=M-1                                                       // [23413] pop temp 0
D=M                                                          // [23414] pop temp 0
@5                                                           // [23415] pop temp 0
M=D                                                          // [23416] pop temp 0
@SP                                                          // [23417] pop pointer 1
AM=M-1                                                       // [23418] pop pointer 1
D=M                                                          // [23419] pop pointer 1
@4                                                           // [23420] pop pointer 1
M=D                                                          // [23421] pop pointer 1
@5                                                           // [23422] push temp 0
D=M                                                          // [23423] push temp 0
@SP                                                          // [23424] push temp 0
M=M+1                                                        // [23425] push temp 0
A=M-1                                                        // [23426] push temp 0
M=D                                                          // [23427] push temp 0
@SP                                                          // [23428] pop that 0
AM=M-1                                                       // [23429] pop that 0
D=M                                                          // [23430] pop that 0
@R13                                                         // [23431] pop that 0
M=D                                                          // [23432] pop that 0
@THAT                                                        // [23433] pop that 0
D=M                                                          // [23434] pop that 0
@0                                                           // [23435] pop that 0
D=D+A                                                        // [23436] pop that 0
@R14                                                         // [23437] pop that 0
M=D                                                          // [23438] pop that 0
@R13                                                         // [23439] pop that 0
D=M                                                          // [23440] pop that 0
@R14                                                         // [23441] pop that 0
A=M                                                          // [23442] pop that 0
M=D                                                          // [23443] pop that 0
@LCL                                                         // [23444] push local 2
D=M                                                          // [23445] push local 2
@2                                                           // [23446] push local 2
A=D+A                                                        // [23447] push local 2
D=M                                                          // [23448] push local 2
@SP                                                          // [23449] push local 2
M=M+1                                                        // [23450] push local 2
A=M-1                                                        // [23451] push local 2
M=D                                                          // [23452] push local 2
@SP                                                          // [23453] push constant 1
M=M+1                                                        // [23454] push constant 1
A=M-1                                                        // [23455] push constant 1
M=1                                                          // [23456] push constant 1
@SP                                                          // [23457] add
AM=M-1                                                       // [23458] add
D=M                                                          // [23459] add
A=A-1                                                        // [23460] add
M=D+M                                                        // [23461] add
@SP                                                          // [23462] pop local 2
AM=M-1                                                       // [23463] pop local 2
D=M                                                          // [23464] pop local 2
@R13                                                         // [23465] pop local 2
M=D                                                          // [23466] pop local 2
@LCL                                                         // [23467] pop local 2
D=M                                                          // [23468] pop local 2
@2                                                           // [23469] pop local 2
D=D+A                                                        // [23470] pop local 2
@R14                                                         // [23471] pop local 2
M=D                                                          // [23472] pop local 2
@R13                                                         // [23473] pop local 2
D=M                                                          // [23474] pop local 2
@R14                                                         // [23475] pop local 2
A=M                                                          // [23476] pop local 2
M=D                                                          // [23477] pop local 2
@Screen.clearScreen$WHILE_EXP1                               // [23478] goto WHILE_EXP1
0;JEQ                                                        // [23479] goto WHILE_EXP1
(Screen.clearScreen$WHILE_END1)                              // [     ] label WHILE_END1
@LCL                                                         // [23480] push local 1
D=M                                                          // [23481] push local 1
@1                                                           // [23482] push local 1
A=D+A                                                        // [23483] push local 1
D=M                                                          // [23484] push local 1
@SP                                                          // [23485] push local 1
M=M+1                                                        // [23486] push local 1
A=M-1                                                        // [23487] push local 1
M=D                                                          // [23488] push local 1
@32                                                          // [23489] push constant 32
D=A                                                          // [23490] push constant 32
@SP                                                          // [23491] push constant 32
M=M+1                                                        // [23492] push constant 32
A=M-1                                                        // [23493] push constant 32
M=D                                                          // [23494] push constant 32
@SP                                                          // [23495] add
AM=M-1                                                       // [23496] add
D=M                                                          // [23497] add
A=A-1                                                        // [23498] add
M=D+M                                                        // [23499] add
@SP                                                          // [23500] pop local 1
AM=M-1                                                       // [23501] pop local 1
D=M                                                          // [23502] pop local 1
@R13                                                         // [23503] pop local 1
M=D                                                          // [23504] pop local 1
@LCL                                                         // [23505] pop local 1
D=M                                                          // [23506] pop local 1
@1                                                           // [23507] pop local 1
D=D+A                                                        // [23508] pop local 1
@R14                                                         // [23509] pop local 1
M=D                                                          // [23510] pop local 1
@R13                                                         // [23511] pop local 1
D=M                                                          // [23512] pop local 1
@R14                                                         // [23513] pop local 1
A=M                                                          // [23514] pop local 1
M=D                                                          // [23515] pop local 1
@LCL                                                         // [23516] push local 0
D=M                                                          // [23517] push local 0
@0                                                           // [23518] push local 0
A=D+A                                                        // [23519] push local 0
D=M                                                          // [23520] push local 0
@SP                                                          // [23521] push local 0
M=M+1                                                        // [23522] push local 0
A=M-1                                                        // [23523] push local 0
M=D                                                          // [23524] push local 0
@SP                                                          // [23525] push constant 1
M=M+1                                                        // [23526] push constant 1
A=M-1                                                        // [23527] push constant 1
M=1                                                          // [23528] push constant 1
@SP                                                          // [23529] add
AM=M-1                                                       // [23530] add
D=M                                                          // [23531] add
A=A-1                                                        // [23532] add
M=D+M                                                        // [23533] add
@SP                                                          // [23534] pop local 0
AM=M-1                                                       // [23535] pop local 0
D=M                                                          // [23536] pop local 0
@R13                                                         // [23537] pop local 0
M=D                                                          // [23538] pop local 0
@LCL                                                         // [23539] pop local 0
D=M                                                          // [23540] pop local 0
@0                                                           // [23541] pop local 0
D=D+A                                                        // [23542] pop local 0
@R14                                                         // [23543] pop local 0
M=D                                                          // [23544] pop local 0
@R13                                                         // [23545] pop local 0
D=M                                                          // [23546] pop local 0
@R14                                                         // [23547] pop local 0
A=M                                                          // [23548] pop local 0
M=D                                                          // [23549] pop local 0
@Screen.clearScreen$WHILE_EXP0                               // [23550] goto WHILE_EXP0
0;JEQ                                                        // [23551] goto WHILE_EXP0
(Screen.clearScreen$WHILE_END0)                              // [     ] label WHILE_END0
@SP                                                          // [23552] push constant 0
M=M+1                                                        // [23553] push constant 0
A=M-1                                                        // [23554] push constant 0
M=0                                                          // [23555] push constant 0
@RETURN                                                      // [23556] return
0;JEQ                                                        // [23557] return
(Screen.setColor)                                            // [     ] function Screen.setColor 0
@ARG                                                         // [23558] push argument 0
D=M                                                          // [23559] push argument 0
@0                                                           // [23560] push argument 0
A=D+A                                                        // [23561] push argument 0
D=M                                                          // [23562] push argument 0
@SP                                                          // [23563] push argument 0
M=M+1                                                        // [23564] push argument 0
A=M-1                                                        // [23565] push argument 0
M=D                                                          // [23566] push argument 0
@SP                                                          // [23567] pop static 0
AM=M-1                                                       // [23568] pop static 0
D=M                                                          // [23569] pop static 0
@Screen.0                                                    // [23570] pop static 0
M=D                                                          // [23571] pop static 0
@SP                                                          // [23572] push constant 0
M=M+1                                                        // [23573] push constant 0
A=M-1                                                        // [23574] push constant 0
M=0                                                          // [23575] push constant 0
@RETURN                                                      // [23576] return
0;JEQ                                                        // [23577] return
(Screen.drawPixel)                                           // [     ] function Screen.drawPixel 4
@SP                                                          // [23578] function Screen.drawPixel 4
A=M                                                          // [23579] function Screen.drawPixel 4
M=0                                                          // [23580] function Screen.drawPixel 4
@SP                                                          // [23581] function Screen.drawPixel 4
M=M+1                                                        // [23582] function Screen.drawPixel 4
@SP                                                          // [23583] function Screen.drawPixel 4
A=M                                                          // [23584] function Screen.drawPixel 4
M=0                                                          // [23585] function Screen.drawPixel 4
@SP                                                          // [23586] function Screen.drawPixel 4
M=M+1                                                        // [23587] function Screen.drawPixel 4
@SP                                                          // [23588] function Screen.drawPixel 4
A=M                                                          // [23589] function Screen.drawPixel 4
M=0                                                          // [23590] function Screen.drawPixel 4
@SP                                                          // [23591] function Screen.drawPixel 4
M=M+1                                                        // [23592] function Screen.drawPixel 4
@SP                                                          // [23593] function Screen.drawPixel 4
A=M                                                          // [23594] function Screen.drawPixel 4
M=0                                                          // [23595] function Screen.drawPixel 4
@SP                                                          // [23596] function Screen.drawPixel 4
M=M+1                                                        // [23597] function Screen.drawPixel 4
@ARG                                                         // [23598] push argument 0
D=M                                                          // [23599] push argument 0
@0                                                           // [23600] push argument 0
A=D+A                                                        // [23601] push argument 0
D=M                                                          // [23602] push argument 0
@SP                                                          // [23603] push argument 0
M=M+1                                                        // [23604] push argument 0
A=M-1                                                        // [23605] push argument 0
M=D                                                          // [23606] push argument 0
@16                                                          // [23607] push constant 16
D=A                                                          // [23608] push constant 16
@SP                                                          // [23609] push constant 16
M=M+1                                                        // [23610] push constant 16
A=M-1                                                        // [23611] push constant 16
M=D                                                          // [23612] push constant 16
@2                                                           // [23613] call Math.divide 2
D=A                                                          // [23614] call Math.divide 2
@R13                                                         // [23615] call Math.divide 2
M=D                                                          // [23616] call Math.divide 2
@Math.divide                                                 // [23617] call Math.divide 2
D=A                                                          // [23618] call Math.divide 2
@R14                                                         // [23619] call Math.divide 2
M=D                                                          // [23620] call Math.divide 2
@return-258                                                  // [23621] call Math.divide 2
D=A                                                          // [23622] call Math.divide 2
@CALL                                                        // [23623] call Math.divide 2
0;JEQ                                                        // [23624] call Math.divide 2
(return-258)                                                 // [     ] call Math.divide 2
@SP                                                          // [23625] pop local 0
AM=M-1                                                       // [23626] pop local 0
D=M                                                          // [23627] pop local 0
@R13                                                         // [23628] pop local 0
M=D                                                          // [23629] pop local 0
@LCL                                                         // [23630] pop local 0
D=M                                                          // [23631] pop local 0
@0                                                           // [23632] pop local 0
D=D+A                                                        // [23633] pop local 0
@R14                                                         // [23634] pop local 0
M=D                                                          // [23635] pop local 0
@R13                                                         // [23636] pop local 0
D=M                                                          // [23637] pop local 0
@R14                                                         // [23638] pop local 0
A=M                                                          // [23639] pop local 0
M=D                                                          // [23640] pop local 0
@ARG                                                         // [23641] push argument 0
D=M                                                          // [23642] push argument 0
@0                                                           // [23643] push argument 0
A=D+A                                                        // [23644] push argument 0
D=M                                                          // [23645] push argument 0
@SP                                                          // [23646] push argument 0
M=M+1                                                        // [23647] push argument 0
A=M-1                                                        // [23648] push argument 0
M=D                                                          // [23649] push argument 0
@LCL                                                         // [23650] push local 0
D=M                                                          // [23651] push local 0
@0                                                           // [23652] push local 0
A=D+A                                                        // [23653] push local 0
D=M                                                          // [23654] push local 0
@SP                                                          // [23655] push local 0
M=M+1                                                        // [23656] push local 0
A=M-1                                                        // [23657] push local 0
M=D                                                          // [23658] push local 0
@16                                                          // [23659] push constant 16
D=A                                                          // [23660] push constant 16
@SP                                                          // [23661] push constant 16
M=M+1                                                        // [23662] push constant 16
A=M-1                                                        // [23663] push constant 16
M=D                                                          // [23664] push constant 16
@2                                                           // [23665] call Math.multiply 2
D=A                                                          // [23666] call Math.multiply 2
@R13                                                         // [23667] call Math.multiply 2
M=D                                                          // [23668] call Math.multiply 2
@Math.multiply                                               // [23669] call Math.multiply 2
D=A                                                          // [23670] call Math.multiply 2
@R14                                                         // [23671] call Math.multiply 2
M=D                                                          // [23672] call Math.multiply 2
@return-259                                                  // [23673] call Math.multiply 2
D=A                                                          // [23674] call Math.multiply 2
@CALL                                                        // [23675] call Math.multiply 2
0;JEQ                                                        // [23676] call Math.multiply 2
(return-259)                                                 // [     ] call Math.multiply 2
@SP                                                          // [23677] sub
AM=M-1                                                       // [23678] sub
D=M                                                          // [23679] sub
A=A-1                                                        // [23680] sub
M=M-D                                                        // [23681] sub
@SP                                                          // [23682] pop local 1
AM=M-1                                                       // [23683] pop local 1
D=M                                                          // [23684] pop local 1
@R13                                                         // [23685] pop local 1
M=D                                                          // [23686] pop local 1
@LCL                                                         // [23687] pop local 1
D=M                                                          // [23688] pop local 1
@1                                                           // [23689] pop local 1
D=D+A                                                        // [23690] pop local 1
@R14                                                         // [23691] pop local 1
M=D                                                          // [23692] pop local 1
@R13                                                         // [23693] pop local 1
D=M                                                          // [23694] pop local 1
@R14                                                         // [23695] pop local 1
A=M                                                          // [23696] pop local 1
M=D                                                          // [23697] pop local 1
@LCL                                                         // [23698] push local 0
D=M                                                          // [23699] push local 0
@0                                                           // [23700] push local 0
A=D+A                                                        // [23701] push local 0
D=M                                                          // [23702] push local 0
@SP                                                          // [23703] push local 0
M=M+1                                                        // [23704] push local 0
A=M-1                                                        // [23705] push local 0
M=D                                                          // [23706] push local 0
@ARG                                                         // [23707] push argument 1
D=M                                                          // [23708] push argument 1
@1                                                           // [23709] push argument 1
A=D+A                                                        // [23710] push argument 1
D=M                                                          // [23711] push argument 1
@SP                                                          // [23712] push argument 1
M=M+1                                                        // [23713] push argument 1
A=M-1                                                        // [23714] push argument 1
M=D                                                          // [23715] push argument 1
@32                                                          // [23716] push constant 32
D=A                                                          // [23717] push constant 32
@SP                                                          // [23718] push constant 32
M=M+1                                                        // [23719] push constant 32
A=M-1                                                        // [23720] push constant 32
M=D                                                          // [23721] push constant 32
@2                                                           // [23722] call Math.multiply 2
D=A                                                          // [23723] call Math.multiply 2
@R13                                                         // [23724] call Math.multiply 2
M=D                                                          // [23725] call Math.multiply 2
@Math.multiply                                               // [23726] call Math.multiply 2
D=A                                                          // [23727] call Math.multiply 2
@R14                                                         // [23728] call Math.multiply 2
M=D                                                          // [23729] call Math.multiply 2
@return-260                                                  // [23730] call Math.multiply 2
D=A                                                          // [23731] call Math.multiply 2
@CALL                                                        // [23732] call Math.multiply 2
0;JEQ                                                        // [23733] call Math.multiply 2
(return-260)                                                 // [     ] call Math.multiply 2
@SP                                                          // [23734] add
AM=M-1                                                       // [23735] add
D=M                                                          // [23736] add
A=A-1                                                        // [23737] add
M=D+M                                                        // [23738] add
@SP                                                          // [23739] pop local 3
AM=M-1                                                       // [23740] pop local 3
D=M                                                          // [23741] pop local 3
@R13                                                         // [23742] pop local 3
M=D                                                          // [23743] pop local 3
@LCL                                                         // [23744] pop local 3
D=M                                                          // [23745] pop local 3
@3                                                           // [23746] pop local 3
D=D+A                                                        // [23747] pop local 3
@R14                                                         // [23748] pop local 3
M=D                                                          // [23749] pop local 3
@R13                                                         // [23750] pop local 3
D=M                                                          // [23751] pop local 3
@R14                                                         // [23752] pop local 3
A=M                                                          // [23753] pop local 3
M=D                                                          // [23754] pop local 3
@LCL                                                         // [23755] push local 3
D=M                                                          // [23756] push local 3
@3                                                           // [23757] push local 3
A=D+A                                                        // [23758] push local 3
D=M                                                          // [23759] push local 3
@SP                                                          // [23760] push local 3
M=M+1                                                        // [23761] push local 3
A=M-1                                                        // [23762] push local 3
M=D                                                          // [23763] push local 3
@Screen.1                                                    // [23764] push static 1
D=M                                                          // [23765] push static 1
@SP                                                          // [23766] push static 1
M=M+1                                                        // [23767] push static 1
A=M-1                                                        // [23768] push static 1
M=D                                                          // [23769] push static 1
@SP                                                          // [23770] add
AM=M-1                                                       // [23771] add
D=M                                                          // [23772] add
A=A-1                                                        // [23773] add
M=D+M                                                        // [23774] add
@SP                                                          // [23775] pop pointer 1
AM=M-1                                                       // [23776] pop pointer 1
D=M                                                          // [23777] pop pointer 1
@4                                                           // [23778] pop pointer 1
M=D                                                          // [23779] pop pointer 1
@THAT                                                        // [23780] push that 0
D=M                                                          // [23781] push that 0
@0                                                           // [23782] push that 0
A=D+A                                                        // [23783] push that 0
D=M                                                          // [23784] push that 0
@SP                                                          // [23785] push that 0
M=M+1                                                        // [23786] push that 0
A=M-1                                                        // [23787] push that 0
M=D                                                          // [23788] push that 0
@SP                                                          // [23789] pop local 2
AM=M-1                                                       // [23790] pop local 2
D=M                                                          // [23791] pop local 2
@R13                                                         // [23792] pop local 2
M=D                                                          // [23793] pop local 2
@LCL                                                         // [23794] pop local 2
D=M                                                          // [23795] pop local 2
@2                                                           // [23796] pop local 2
D=D+A                                                        // [23797] pop local 2
@R14                                                         // [23798] pop local 2
M=D                                                          // [23799] pop local 2
@R13                                                         // [23800] pop local 2
D=M                                                          // [23801] pop local 2
@R14                                                         // [23802] pop local 2
A=M                                                          // [23803] pop local 2
M=D                                                          // [23804] pop local 2
@Screen.0                                                    // [23805] push static 0
D=M                                                          // [23806] push static 0
@SP                                                          // [23807] push static 0
M=M+1                                                        // [23808] push static 0
A=M-1                                                        // [23809] push static 0
M=D                                                          // [23810] push static 0
@SP                                                          // [23811] if-goto IF_TRUE0
AM=M-1                                                       // [23812] if-goto IF_TRUE0
D=M                                                          // [23813] if-goto IF_TRUE0
@Screen.drawPixel$IF_TRUE0                                   // [23814] if-goto IF_TRUE0
D;JNE                                                        // [23815] if-goto IF_TRUE0
@Screen.drawPixel$IF_FALSE0                                  // [23816] goto IF_FALSE0
0;JEQ                                                        // [23817] goto IF_FALSE0
(Screen.drawPixel$IF_TRUE0)                                  // [     ] label IF_TRUE0
@LCL                                                         // [23818] push local 3
D=M                                                          // [23819] push local 3
@3                                                           // [23820] push local 3
A=D+A                                                        // [23821] push local 3
D=M                                                          // [23822] push local 3
@SP                                                          // [23823] push local 3
M=M+1                                                        // [23824] push local 3
A=M-1                                                        // [23825] push local 3
M=D                                                          // [23826] push local 3
@Screen.1                                                    // [23827] push static 1
D=M                                                          // [23828] push static 1
@SP                                                          // [23829] push static 1
M=M+1                                                        // [23830] push static 1
A=M-1                                                        // [23831] push static 1
M=D                                                          // [23832] push static 1
@SP                                                          // [23833] add
AM=M-1                                                       // [23834] add
D=M                                                          // [23835] add
A=A-1                                                        // [23836] add
M=D+M                                                        // [23837] add
@LCL                                                         // [23838] push local 2
D=M                                                          // [23839] push local 2
@2                                                           // [23840] push local 2
A=D+A                                                        // [23841] push local 2
D=M                                                          // [23842] push local 2
@SP                                                          // [23843] push local 2
M=M+1                                                        // [23844] push local 2
A=M-1                                                        // [23845] push local 2
M=D                                                          // [23846] push local 2
@LCL                                                         // [23847] push local 1
D=M                                                          // [23848] push local 1
@1                                                           // [23849] push local 1
A=D+A                                                        // [23850] push local 1
D=M                                                          // [23851] push local 1
@SP                                                          // [23852] push local 1
M=M+1                                                        // [23853] push local 1
A=M-1                                                        // [23854] push local 1
M=D                                                          // [23855] push local 1
@Screen.2                                                    // [23856] push static 2
D=M                                                          // [23857] push static 2
@SP                                                          // [23858] push static 2
M=M+1                                                        // [23859] push static 2
A=M-1                                                        // [23860] push static 2
M=D                                                          // [23861] push static 2
@SP                                                          // [23862] add
AM=M-1                                                       // [23863] add
D=M                                                          // [23864] add
A=A-1                                                        // [23865] add
M=D+M                                                        // [23866] add
@SP                                                          // [23867] pop pointer 1
AM=M-1                                                       // [23868] pop pointer 1
D=M                                                          // [23869] pop pointer 1
@4                                                           // [23870] pop pointer 1
M=D                                                          // [23871] pop pointer 1
@THAT                                                        // [23872] push that 0
D=M                                                          // [23873] push that 0
@0                                                           // [23874] push that 0
A=D+A                                                        // [23875] push that 0
D=M                                                          // [23876] push that 0
@SP                                                          // [23877] push that 0
M=M+1                                                        // [23878] push that 0
A=M-1                                                        // [23879] push that 0
M=D                                                          // [23880] push that 0
@SP                                                          // [23881] or
AM=M-1                                                       // [23882] or
D=M                                                          // [23883] or
A=A-1                                                        // [23884] or
M=D|M                                                        // [23885] or
@SP                                                          // [23886] pop temp 0
AM=M-1                                                       // [23887] pop temp 0
D=M                                                          // [23888] pop temp 0
@5                                                           // [23889] pop temp 0
M=D                                                          // [23890] pop temp 0
@SP                                                          // [23891] pop pointer 1
AM=M-1                                                       // [23892] pop pointer 1
D=M                                                          // [23893] pop pointer 1
@4                                                           // [23894] pop pointer 1
M=D                                                          // [23895] pop pointer 1
@5                                                           // [23896] push temp 0
D=M                                                          // [23897] push temp 0
@SP                                                          // [23898] push temp 0
M=M+1                                                        // [23899] push temp 0
A=M-1                                                        // [23900] push temp 0
M=D                                                          // [23901] push temp 0
@SP                                                          // [23902] pop that 0
AM=M-1                                                       // [23903] pop that 0
D=M                                                          // [23904] pop that 0
@R13                                                         // [23905] pop that 0
M=D                                                          // [23906] pop that 0
@THAT                                                        // [23907] pop that 0
D=M                                                          // [23908] pop that 0
@0                                                           // [23909] pop that 0
D=D+A                                                        // [23910] pop that 0
@R14                                                         // [23911] pop that 0
M=D                                                          // [23912] pop that 0
@R13                                                         // [23913] pop that 0
D=M                                                          // [23914] pop that 0
@R14                                                         // [23915] pop that 0
A=M                                                          // [23916] pop that 0
M=D                                                          // [23917] pop that 0
@Screen.drawPixel$IF_END0                                    // [23918] goto IF_END0
0;JEQ                                                        // [23919] goto IF_END0
(Screen.drawPixel$IF_FALSE0)                                 // [     ] label IF_FALSE0
@LCL                                                         // [23920] push local 3
D=M                                                          // [23921] push local 3
@3                                                           // [23922] push local 3
A=D+A                                                        // [23923] push local 3
D=M                                                          // [23924] push local 3
@SP                                                          // [23925] push local 3
M=M+1                                                        // [23926] push local 3
A=M-1                                                        // [23927] push local 3
M=D                                                          // [23928] push local 3
@Screen.1                                                    // [23929] push static 1
D=M                                                          // [23930] push static 1
@SP                                                          // [23931] push static 1
M=M+1                                                        // [23932] push static 1
A=M-1                                                        // [23933] push static 1
M=D                                                          // [23934] push static 1
@SP                                                          // [23935] add
AM=M-1                                                       // [23936] add
D=M                                                          // [23937] add
A=A-1                                                        // [23938] add
M=D+M                                                        // [23939] add
@LCL                                                         // [23940] push local 2
D=M                                                          // [23941] push local 2
@2                                                           // [23942] push local 2
A=D+A                                                        // [23943] push local 2
D=M                                                          // [23944] push local 2
@SP                                                          // [23945] push local 2
M=M+1                                                        // [23946] push local 2
A=M-1                                                        // [23947] push local 2
M=D                                                          // [23948] push local 2
@LCL                                                         // [23949] push local 1
D=M                                                          // [23950] push local 1
@1                                                           // [23951] push local 1
A=D+A                                                        // [23952] push local 1
D=M                                                          // [23953] push local 1
@SP                                                          // [23954] push local 1
M=M+1                                                        // [23955] push local 1
A=M-1                                                        // [23956] push local 1
M=D                                                          // [23957] push local 1
@Screen.2                                                    // [23958] push static 2
D=M                                                          // [23959] push static 2
@SP                                                          // [23960] push static 2
M=M+1                                                        // [23961] push static 2
A=M-1                                                        // [23962] push static 2
M=D                                                          // [23963] push static 2
@SP                                                          // [23964] add
AM=M-1                                                       // [23965] add
D=M                                                          // [23966] add
A=A-1                                                        // [23967] add
M=D+M                                                        // [23968] add
@SP                                                          // [23969] pop pointer 1
AM=M-1                                                       // [23970] pop pointer 1
D=M                                                          // [23971] pop pointer 1
@4                                                           // [23972] pop pointer 1
M=D                                                          // [23973] pop pointer 1
@THAT                                                        // [23974] push that 0
D=M                                                          // [23975] push that 0
@0                                                           // [23976] push that 0
A=D+A                                                        // [23977] push that 0
D=M                                                          // [23978] push that 0
@SP                                                          // [23979] push that 0
M=M+1                                                        // [23980] push that 0
A=M-1                                                        // [23981] push that 0
M=D                                                          // [23982] push that 0
@SP                                                          // [23983] not
A=M-1                                                        // [23984] not
D=M                                                          // [23985] not
M=!D                                                         // [23986] not
@SP                                                          // [23987] and
AM=M-1                                                       // [23988] and
D=M                                                          // [23989] and
A=A-1                                                        // [23990] and
M=D&M                                                        // [23991] and
@SP                                                          // [23992] pop temp 0
AM=M-1                                                       // [23993] pop temp 0
D=M                                                          // [23994] pop temp 0
@5                                                           // [23995] pop temp 0
M=D                                                          // [23996] pop temp 0
@SP                                                          // [23997] pop pointer 1
AM=M-1                                                       // [23998] pop pointer 1
D=M                                                          // [23999] pop pointer 1
@4                                                           // [24000] pop pointer 1
M=D                                                          // [24001] pop pointer 1
@5                                                           // [24002] push temp 0
D=M                                                          // [24003] push temp 0
@SP                                                          // [24004] push temp 0
M=M+1                                                        // [24005] push temp 0
A=M-1                                                        // [24006] push temp 0
M=D                                                          // [24007] push temp 0
@SP                                                          // [24008] pop that 0
AM=M-1                                                       // [24009] pop that 0
D=M                                                          // [24010] pop that 0
@R13                                                         // [24011] pop that 0
M=D                                                          // [24012] pop that 0
@THAT                                                        // [24013] pop that 0
D=M                                                          // [24014] pop that 0
@0                                                           // [24015] pop that 0
D=D+A                                                        // [24016] pop that 0
@R14                                                         // [24017] pop that 0
M=D                                                          // [24018] pop that 0
@R13                                                         // [24019] pop that 0
D=M                                                          // [24020] pop that 0
@R14                                                         // [24021] pop that 0
A=M                                                          // [24022] pop that 0
M=D                                                          // [24023] pop that 0
(Screen.drawPixel$IF_END0)                                   // [     ] label IF_END0
@SP                                                          // [24024] push constant 0
M=M+1                                                        // [24025] push constant 0
A=M-1                                                        // [24026] push constant 0
M=0                                                          // [24027] push constant 0
@RETURN                                                      // [24028] return
0;JEQ                                                        // [24029] return
(Screen.drawLine)                                            // [     ] function Screen.drawLine 15
@SP                                                          // [24030] function Screen.drawLine 15
A=M                                                          // [24031] function Screen.drawLine 15
M=0                                                          // [24032] function Screen.drawLine 15
@SP                                                          // [24033] function Screen.drawLine 15
M=M+1                                                        // [24034] function Screen.drawLine 15
@SP                                                          // [24035] function Screen.drawLine 15
A=M                                                          // [24036] function Screen.drawLine 15
M=0                                                          // [24037] function Screen.drawLine 15
@SP                                                          // [24038] function Screen.drawLine 15
M=M+1                                                        // [24039] function Screen.drawLine 15
@SP                                                          // [24040] function Screen.drawLine 15
A=M                                                          // [24041] function Screen.drawLine 15
M=0                                                          // [24042] function Screen.drawLine 15
@SP                                                          // [24043] function Screen.drawLine 15
M=M+1                                                        // [24044] function Screen.drawLine 15
@SP                                                          // [24045] function Screen.drawLine 15
A=M                                                          // [24046] function Screen.drawLine 15
M=0                                                          // [24047] function Screen.drawLine 15
@SP                                                          // [24048] function Screen.drawLine 15
M=M+1                                                        // [24049] function Screen.drawLine 15
@SP                                                          // [24050] function Screen.drawLine 15
A=M                                                          // [24051] function Screen.drawLine 15
M=0                                                          // [24052] function Screen.drawLine 15
@SP                                                          // [24053] function Screen.drawLine 15
M=M+1                                                        // [24054] function Screen.drawLine 15
@SP                                                          // [24055] function Screen.drawLine 15
A=M                                                          // [24056] function Screen.drawLine 15
M=0                                                          // [24057] function Screen.drawLine 15
@SP                                                          // [24058] function Screen.drawLine 15
M=M+1                                                        // [24059] function Screen.drawLine 15
@SP                                                          // [24060] function Screen.drawLine 15
A=M                                                          // [24061] function Screen.drawLine 15
M=0                                                          // [24062] function Screen.drawLine 15
@SP                                                          // [24063] function Screen.drawLine 15
M=M+1                                                        // [24064] function Screen.drawLine 15
@SP                                                          // [24065] function Screen.drawLine 15
A=M                                                          // [24066] function Screen.drawLine 15
M=0                                                          // [24067] function Screen.drawLine 15
@SP                                                          // [24068] function Screen.drawLine 15
M=M+1                                                        // [24069] function Screen.drawLine 15
@SP                                                          // [24070] function Screen.drawLine 15
A=M                                                          // [24071] function Screen.drawLine 15
M=0                                                          // [24072] function Screen.drawLine 15
@SP                                                          // [24073] function Screen.drawLine 15
M=M+1                                                        // [24074] function Screen.drawLine 15
@SP                                                          // [24075] function Screen.drawLine 15
A=M                                                          // [24076] function Screen.drawLine 15
M=0                                                          // [24077] function Screen.drawLine 15
@SP                                                          // [24078] function Screen.drawLine 15
M=M+1                                                        // [24079] function Screen.drawLine 15
@SP                                                          // [24080] function Screen.drawLine 15
A=M                                                          // [24081] function Screen.drawLine 15
M=0                                                          // [24082] function Screen.drawLine 15
@SP                                                          // [24083] function Screen.drawLine 15
M=M+1                                                        // [24084] function Screen.drawLine 15
@SP                                                          // [24085] function Screen.drawLine 15
A=M                                                          // [24086] function Screen.drawLine 15
M=0                                                          // [24087] function Screen.drawLine 15
@SP                                                          // [24088] function Screen.drawLine 15
M=M+1                                                        // [24089] function Screen.drawLine 15
@SP                                                          // [24090] function Screen.drawLine 15
A=M                                                          // [24091] function Screen.drawLine 15
M=0                                                          // [24092] function Screen.drawLine 15
@SP                                                          // [24093] function Screen.drawLine 15
M=M+1                                                        // [24094] function Screen.drawLine 15
@SP                                                          // [24095] function Screen.drawLine 15
A=M                                                          // [24096] function Screen.drawLine 15
M=0                                                          // [24097] function Screen.drawLine 15
@SP                                                          // [24098] function Screen.drawLine 15
M=M+1                                                        // [24099] function Screen.drawLine 15
@SP                                                          // [24100] function Screen.drawLine 15
A=M                                                          // [24101] function Screen.drawLine 15
M=0                                                          // [24102] function Screen.drawLine 15
@SP                                                          // [24103] function Screen.drawLine 15
M=M+1                                                        // [24104] function Screen.drawLine 15
@ARG                                                         // [24105] push argument 2
D=M                                                          // [24106] push argument 2
@2                                                           // [24107] push argument 2
A=D+A                                                        // [24108] push argument 2
D=M                                                          // [24109] push argument 2
@SP                                                          // [24110] push argument 2
M=M+1                                                        // [24111] push argument 2
A=M-1                                                        // [24112] push argument 2
M=D                                                          // [24113] push argument 2
@ARG                                                         // [24114] push argument 0
D=M                                                          // [24115] push argument 0
@0                                                           // [24116] push argument 0
A=D+A                                                        // [24117] push argument 0
D=M                                                          // [24118] push argument 0
@SP                                                          // [24119] push argument 0
M=M+1                                                        // [24120] push argument 0
A=M-1                                                        // [24121] push argument 0
M=D                                                          // [24122] push argument 0
@SP                                                          // [24123] sub
AM=M-1                                                       // [24124] sub
D=M                                                          // [24125] sub
A=A-1                                                        // [24126] sub
M=M-D                                                        // [24127] sub
@SP                                                          // [24128] pop local 0
AM=M-1                                                       // [24129] pop local 0
D=M                                                          // [24130] pop local 0
@R13                                                         // [24131] pop local 0
M=D                                                          // [24132] pop local 0
@LCL                                                         // [24133] pop local 0
D=M                                                          // [24134] pop local 0
@0                                                           // [24135] pop local 0
D=D+A                                                        // [24136] pop local 0
@R14                                                         // [24137] pop local 0
M=D                                                          // [24138] pop local 0
@R13                                                         // [24139] pop local 0
D=M                                                          // [24140] pop local 0
@R14                                                         // [24141] pop local 0
A=M                                                          // [24142] pop local 0
M=D                                                          // [24143] pop local 0
@ARG                                                         // [24144] push argument 3
D=M                                                          // [24145] push argument 3
@3                                                           // [24146] push argument 3
A=D+A                                                        // [24147] push argument 3
D=M                                                          // [24148] push argument 3
@SP                                                          // [24149] push argument 3
M=M+1                                                        // [24150] push argument 3
A=M-1                                                        // [24151] push argument 3
M=D                                                          // [24152] push argument 3
@ARG                                                         // [24153] push argument 1
D=M                                                          // [24154] push argument 1
@1                                                           // [24155] push argument 1
A=D+A                                                        // [24156] push argument 1
D=M                                                          // [24157] push argument 1
@SP                                                          // [24158] push argument 1
M=M+1                                                        // [24159] push argument 1
A=M-1                                                        // [24160] push argument 1
M=D                                                          // [24161] push argument 1
@SP                                                          // [24162] sub
AM=M-1                                                       // [24163] sub
D=M                                                          // [24164] sub
A=A-1                                                        // [24165] sub
M=M-D                                                        // [24166] sub
@SP                                                          // [24167] pop local 1
AM=M-1                                                       // [24168] pop local 1
D=M                                                          // [24169] pop local 1
@R13                                                         // [24170] pop local 1
M=D                                                          // [24171] pop local 1
@LCL                                                         // [24172] pop local 1
D=M                                                          // [24173] pop local 1
@1                                                           // [24174] pop local 1
D=D+A                                                        // [24175] pop local 1
@R14                                                         // [24176] pop local 1
M=D                                                          // [24177] pop local 1
@R13                                                         // [24178] pop local 1
D=M                                                          // [24179] pop local 1
@R14                                                         // [24180] pop local 1
A=M                                                          // [24181] pop local 1
M=D                                                          // [24182] pop local 1
@LCL                                                         // [24183] push local 0
D=M                                                          // [24184] push local 0
@0                                                           // [24185] push local 0
A=D+A                                                        // [24186] push local 0
D=M                                                          // [24187] push local 0
@SP                                                          // [24188] push local 0
M=M+1                                                        // [24189] push local 0
A=M-1                                                        // [24190] push local 0
M=D                                                          // [24191] push local 0
@SP                                                          // [24192] push constant 0
M=M+1                                                        // [24193] push constant 0
A=M-1                                                        // [24194] push constant 0
M=0                                                          // [24195] push constant 0
@CONTINUE_LT_32                                              // [24196] lt
D=A                                                          // [24197] lt
@R13                                                         // [24198] lt
M=D                                                          // [24199] lt
@SP                                                          // [24200] lt
AM=M-1                                                       // [24201] lt
D=M                                                          // [24202] lt
A=A-1                                                        // [24203] lt
D=D-M                                                        // [24204] lt
@INTERNAL_LT                                                 // [24205] lt
0;JEQ                                                        // [24206] lt
(CONTINUE_LT_32)                                             // [     ] lt
@SP                                                          // [24207] if-goto IF_TRUE0
AM=M-1                                                       // [24208] if-goto IF_TRUE0
D=M                                                          // [24209] if-goto IF_TRUE0
@Screen.drawLine$IF_TRUE0                                    // [24210] if-goto IF_TRUE0
D;JNE                                                        // [24211] if-goto IF_TRUE0
@Screen.drawLine$IF_FALSE0                                   // [24212] goto IF_FALSE0
0;JEQ                                                        // [24213] goto IF_FALSE0
(Screen.drawLine$IF_TRUE0)                                   // [     ] label IF_TRUE0
@SP                                                          // [24214] push constant 1
M=M+1                                                        // [24215] push constant 1
A=M-1                                                        // [24216] push constant 1
M=1                                                          // [24217] push constant 1
@SP                                                          // [24218] neg
A=M-1                                                        // [24219] neg
D=M                                                          // [24220] neg
M=-D                                                         // [24221] neg
@SP                                                          // [24222] pop local 8
AM=M-1                                                       // [24223] pop local 8
D=M                                                          // [24224] pop local 8
@R13                                                         // [24225] pop local 8
M=D                                                          // [24226] pop local 8
@LCL                                                         // [24227] pop local 8
D=M                                                          // [24228] pop local 8
@8                                                           // [24229] pop local 8
D=D+A                                                        // [24230] pop local 8
@R14                                                         // [24231] pop local 8
M=D                                                          // [24232] pop local 8
@R13                                                         // [24233] pop local 8
D=M                                                          // [24234] pop local 8
@R14                                                         // [24235] pop local 8
A=M                                                          // [24236] pop local 8
M=D                                                          // [24237] pop local 8
@Screen.drawLine$IF_END0                                     // [24238] goto IF_END0
0;JEQ                                                        // [24239] goto IF_END0
(Screen.drawLine$IF_FALSE0)                                  // [     ] label IF_FALSE0
@SP                                                          // [24240] push constant 1
M=M+1                                                        // [24241] push constant 1
A=M-1                                                        // [24242] push constant 1
M=1                                                          // [24243] push constant 1
@SP                                                          // [24244] pop local 8
AM=M-1                                                       // [24245] pop local 8
D=M                                                          // [24246] pop local 8
@R13                                                         // [24247] pop local 8
M=D                                                          // [24248] pop local 8
@LCL                                                         // [24249] pop local 8
D=M                                                          // [24250] pop local 8
@8                                                           // [24251] pop local 8
D=D+A                                                        // [24252] pop local 8
@R14                                                         // [24253] pop local 8
M=D                                                          // [24254] pop local 8
@R13                                                         // [24255] pop local 8
D=M                                                          // [24256] pop local 8
@R14                                                         // [24257] pop local 8
A=M                                                          // [24258] pop local 8
M=D                                                          // [24259] pop local 8
(Screen.drawLine$IF_END0)                                    // [     ] label IF_END0
@LCL                                                         // [24260] push local 1
D=M                                                          // [24261] push local 1
@1                                                           // [24262] push local 1
A=D+A                                                        // [24263] push local 1
D=M                                                          // [24264] push local 1
@SP                                                          // [24265] push local 1
M=M+1                                                        // [24266] push local 1
A=M-1                                                        // [24267] push local 1
M=D                                                          // [24268] push local 1
@SP                                                          // [24269] push constant 0
M=M+1                                                        // [24270] push constant 0
A=M-1                                                        // [24271] push constant 0
M=0                                                          // [24272] push constant 0
@CONTINUE_LT_33                                              // [24273] lt
D=A                                                          // [24274] lt
@R13                                                         // [24275] lt
M=D                                                          // [24276] lt
@SP                                                          // [24277] lt
AM=M-1                                                       // [24278] lt
D=M                                                          // [24279] lt
A=A-1                                                        // [24280] lt
D=D-M                                                        // [24281] lt
@INTERNAL_LT                                                 // [24282] lt
0;JEQ                                                        // [24283] lt
(CONTINUE_LT_33)                                             // [     ] lt
@SP                                                          // [24284] if-goto IF_TRUE1
AM=M-1                                                       // [24285] if-goto IF_TRUE1
D=M                                                          // [24286] if-goto IF_TRUE1
@Screen.drawLine$IF_TRUE1                                    // [24287] if-goto IF_TRUE1
D;JNE                                                        // [24288] if-goto IF_TRUE1
@Screen.drawLine$IF_FALSE1                                   // [24289] goto IF_FALSE1
0;JEQ                                                        // [24290] goto IF_FALSE1
(Screen.drawLine$IF_TRUE1)                                   // [     ] label IF_TRUE1
@SP                                                          // [24291] push constant 1
M=M+1                                                        // [24292] push constant 1
A=M-1                                                        // [24293] push constant 1
M=1                                                          // [24294] push constant 1
@SP                                                          // [24295] neg
A=M-1                                                        // [24296] neg
D=M                                                          // [24297] neg
M=-D                                                         // [24298] neg
@SP                                                          // [24299] pop local 9
AM=M-1                                                       // [24300] pop local 9
D=M                                                          // [24301] pop local 9
@R13                                                         // [24302] pop local 9
M=D                                                          // [24303] pop local 9
@LCL                                                         // [24304] pop local 9
D=M                                                          // [24305] pop local 9
@9                                                           // [24306] pop local 9
D=D+A                                                        // [24307] pop local 9
@R14                                                         // [24308] pop local 9
M=D                                                          // [24309] pop local 9
@R13                                                         // [24310] pop local 9
D=M                                                          // [24311] pop local 9
@R14                                                         // [24312] pop local 9
A=M                                                          // [24313] pop local 9
M=D                                                          // [24314] pop local 9
@Screen.drawLine$IF_END1                                     // [24315] goto IF_END1
0;JEQ                                                        // [24316] goto IF_END1
(Screen.drawLine$IF_FALSE1)                                  // [     ] label IF_FALSE1
@SP                                                          // [24317] push constant 1
M=M+1                                                        // [24318] push constant 1
A=M-1                                                        // [24319] push constant 1
M=1                                                          // [24320] push constant 1
@SP                                                          // [24321] pop local 9
AM=M-1                                                       // [24322] pop local 9
D=M                                                          // [24323] pop local 9
@R13                                                         // [24324] pop local 9
M=D                                                          // [24325] pop local 9
@LCL                                                         // [24326] pop local 9
D=M                                                          // [24327] pop local 9
@9                                                           // [24328] pop local 9
D=D+A                                                        // [24329] pop local 9
@R14                                                         // [24330] pop local 9
M=D                                                          // [24331] pop local 9
@R13                                                         // [24332] pop local 9
D=M                                                          // [24333] pop local 9
@R14                                                         // [24334] pop local 9
A=M                                                          // [24335] pop local 9
M=D                                                          // [24336] pop local 9
(Screen.drawLine$IF_END1)                                    // [     ] label IF_END1
@LCL                                                         // [24337] push local 0
D=M                                                          // [24338] push local 0
@0                                                           // [24339] push local 0
A=D+A                                                        // [24340] push local 0
D=M                                                          // [24341] push local 0
@SP                                                          // [24342] push local 0
M=M+1                                                        // [24343] push local 0
A=M-1                                                        // [24344] push local 0
M=D                                                          // [24345] push local 0
@1                                                           // [24346] call Math.abs 1
D=A                                                          // [24347] call Math.abs 1
@R13                                                         // [24348] call Math.abs 1
M=D                                                          // [24349] call Math.abs 1
@Math.abs                                                    // [24350] call Math.abs 1
D=A                                                          // [24351] call Math.abs 1
@R14                                                         // [24352] call Math.abs 1
M=D                                                          // [24353] call Math.abs 1
@return-261                                                  // [24354] call Math.abs 1
D=A                                                          // [24355] call Math.abs 1
@CALL                                                        // [24356] call Math.abs 1
0;JEQ                                                        // [24357] call Math.abs 1
(return-261)                                                 // [     ] call Math.abs 1
@SP                                                          // [24358] pop local 2
AM=M-1                                                       // [24359] pop local 2
D=M                                                          // [24360] pop local 2
@R13                                                         // [24361] pop local 2
M=D                                                          // [24362] pop local 2
@LCL                                                         // [24363] pop local 2
D=M                                                          // [24364] pop local 2
@2                                                           // [24365] pop local 2
D=D+A                                                        // [24366] pop local 2
@R14                                                         // [24367] pop local 2
M=D                                                          // [24368] pop local 2
@R13                                                         // [24369] pop local 2
D=M                                                          // [24370] pop local 2
@R14                                                         // [24371] pop local 2
A=M                                                          // [24372] pop local 2
M=D                                                          // [24373] pop local 2
@LCL                                                         // [24374] push local 1
D=M                                                          // [24375] push local 1
@1                                                           // [24376] push local 1
A=D+A                                                        // [24377] push local 1
D=M                                                          // [24378] push local 1
@SP                                                          // [24379] push local 1
M=M+1                                                        // [24380] push local 1
A=M-1                                                        // [24381] push local 1
M=D                                                          // [24382] push local 1
@1                                                           // [24383] call Math.abs 1
D=A                                                          // [24384] call Math.abs 1
@R13                                                         // [24385] call Math.abs 1
M=D                                                          // [24386] call Math.abs 1
@Math.abs                                                    // [24387] call Math.abs 1
D=A                                                          // [24388] call Math.abs 1
@R14                                                         // [24389] call Math.abs 1
M=D                                                          // [24390] call Math.abs 1
@return-262                                                  // [24391] call Math.abs 1
D=A                                                          // [24392] call Math.abs 1
@CALL                                                        // [24393] call Math.abs 1
0;JEQ                                                        // [24394] call Math.abs 1
(return-262)                                                 // [     ] call Math.abs 1
@SP                                                          // [24395] pop local 3
AM=M-1                                                       // [24396] pop local 3
D=M                                                          // [24397] pop local 3
@R13                                                         // [24398] pop local 3
M=D                                                          // [24399] pop local 3
@LCL                                                         // [24400] pop local 3
D=M                                                          // [24401] pop local 3
@3                                                           // [24402] pop local 3
D=D+A                                                        // [24403] pop local 3
@R14                                                         // [24404] pop local 3
M=D                                                          // [24405] pop local 3
@R13                                                         // [24406] pop local 3
D=M                                                          // [24407] pop local 3
@R14                                                         // [24408] pop local 3
A=M                                                          // [24409] pop local 3
M=D                                                          // [24410] pop local 3
@SP                                                          // [24411] push constant 0
M=M+1                                                        // [24412] push constant 0
A=M-1                                                        // [24413] push constant 0
M=0                                                          // [24414] push constant 0
@SP                                                          // [24415] pop local 4
AM=M-1                                                       // [24416] pop local 4
D=M                                                          // [24417] pop local 4
@R13                                                         // [24418] pop local 4
M=D                                                          // [24419] pop local 4
@LCL                                                         // [24420] pop local 4
D=M                                                          // [24421] pop local 4
@4                                                           // [24422] pop local 4
D=D+A                                                        // [24423] pop local 4
@R14                                                         // [24424] pop local 4
M=D                                                          // [24425] pop local 4
@R13                                                         // [24426] pop local 4
D=M                                                          // [24427] pop local 4
@R14                                                         // [24428] pop local 4
A=M                                                          // [24429] pop local 4
M=D                                                          // [24430] pop local 4
@SP                                                          // [24431] push constant 0
M=M+1                                                        // [24432] push constant 0
A=M-1                                                        // [24433] push constant 0
M=0                                                          // [24434] push constant 0
@SP                                                          // [24435] pop local 5
AM=M-1                                                       // [24436] pop local 5
D=M                                                          // [24437] pop local 5
@R13                                                         // [24438] pop local 5
M=D                                                          // [24439] pop local 5
@LCL                                                         // [24440] pop local 5
D=M                                                          // [24441] pop local 5
@5                                                           // [24442] pop local 5
D=D+A                                                        // [24443] pop local 5
@R14                                                         // [24444] pop local 5
M=D                                                          // [24445] pop local 5
@R13                                                         // [24446] pop local 5
D=M                                                          // [24447] pop local 5
@R14                                                         // [24448] pop local 5
A=M                                                          // [24449] pop local 5
M=D                                                          // [24450] pop local 5
@SP                                                          // [24451] push constant 0
M=M+1                                                        // [24452] push constant 0
A=M-1                                                        // [24453] push constant 0
M=0                                                          // [24454] push constant 0
@SP                                                          // [24455] pop local 6
AM=M-1                                                       // [24456] pop local 6
D=M                                                          // [24457] pop local 6
@R13                                                         // [24458] pop local 6
M=D                                                          // [24459] pop local 6
@LCL                                                         // [24460] pop local 6
D=M                                                          // [24461] pop local 6
@6                                                           // [24462] pop local 6
D=D+A                                                        // [24463] pop local 6
@R14                                                         // [24464] pop local 6
M=D                                                          // [24465] pop local 6
@R13                                                         // [24466] pop local 6
D=M                                                          // [24467] pop local 6
@R14                                                         // [24468] pop local 6
A=M                                                          // [24469] pop local 6
M=D                                                          // [24470] pop local 6
@SP                                                          // [24471] push constant 0
M=M+1                                                        // [24472] push constant 0
A=M-1                                                        // [24473] push constant 0
M=0                                                          // [24474] push constant 0
@SP                                                          // [24475] pop local 7
AM=M-1                                                       // [24476] pop local 7
D=M                                                          // [24477] pop local 7
@R13                                                         // [24478] pop local 7
M=D                                                          // [24479] pop local 7
@LCL                                                         // [24480] pop local 7
D=M                                                          // [24481] pop local 7
@7                                                           // [24482] pop local 7
D=D+A                                                        // [24483] pop local 7
@R14                                                         // [24484] pop local 7
M=D                                                          // [24485] pop local 7
@R13                                                         // [24486] pop local 7
D=M                                                          // [24487] pop local 7
@R14                                                         // [24488] pop local 7
A=M                                                          // [24489] pop local 7
M=D                                                          // [24490] pop local 7
@LCL                                                         // [24491] push local 2
D=M                                                          // [24492] push local 2
@2                                                           // [24493] push local 2
A=D+A                                                        // [24494] push local 2
D=M                                                          // [24495] push local 2
@SP                                                          // [24496] push local 2
M=M+1                                                        // [24497] push local 2
A=M-1                                                        // [24498] push local 2
M=D                                                          // [24499] push local 2
@SP                                                          // [24500] push constant 0
M=M+1                                                        // [24501] push constant 0
A=M-1                                                        // [24502] push constant 0
M=0                                                          // [24503] push constant 0
@CONTINUE_GT_19                                              // [24504] gt
D=A                                                          // [24505] gt
@R13                                                         // [24506] gt
M=D                                                          // [24507] gt
@SP                                                          // [24508] gt
AM=M-1                                                       // [24509] gt
D=M                                                          // [24510] gt
A=A-1                                                        // [24511] gt
D=D-M                                                        // [24512] gt
@INTERNAL_GT                                                 // [24513] gt
0;JEQ                                                        // [24514] gt
(CONTINUE_GT_19)                                             // [     ] gt
@LCL                                                         // [24515] push local 3
D=M                                                          // [24516] push local 3
@3                                                           // [24517] push local 3
A=D+A                                                        // [24518] push local 3
D=M                                                          // [24519] push local 3
@SP                                                          // [24520] push local 3
M=M+1                                                        // [24521] push local 3
A=M-1                                                        // [24522] push local 3
M=D                                                          // [24523] push local 3
@SP                                                          // [24524] push constant 0
M=M+1                                                        // [24525] push constant 0
A=M-1                                                        // [24526] push constant 0
M=0                                                          // [24527] push constant 0
@CONTINUE_EQ_22                                              // [24528] eq
D=A                                                          // [24529] eq
@R13                                                         // [24530] eq
M=D                                                          // [24531] eq
@SP                                                          // [24532] eq
AM=M-1                                                       // [24533] eq
D=M                                                          // [24534] eq
A=A-1                                                        // [24535] eq
D=D-M                                                        // [24536] eq
@INTERNAL_EQ                                                 // [24537] eq
0;JEQ                                                        // [24538] eq
(CONTINUE_EQ_22)                                             // [     ] eq
@SP                                                          // [24539] and
AM=M-1                                                       // [24540] and
D=M                                                          // [24541] and
A=A-1                                                        // [24542] and
M=D&M                                                        // [24543] and
@SP                                                          // [24544] pop local 11
AM=M-1                                                       // [24545] pop local 11
D=M                                                          // [24546] pop local 11
@R13                                                         // [24547] pop local 11
M=D                                                          // [24548] pop local 11
@LCL                                                         // [24549] pop local 11
D=M                                                          // [24550] pop local 11
@11                                                          // [24551] pop local 11
D=D+A                                                        // [24552] pop local 11
@R14                                                         // [24553] pop local 11
M=D                                                          // [24554] pop local 11
@R13                                                         // [24555] pop local 11
D=M                                                          // [24556] pop local 11
@R14                                                         // [24557] pop local 11
A=M                                                          // [24558] pop local 11
M=D                                                          // [24559] pop local 11
@LCL                                                         // [24560] push local 2
D=M                                                          // [24561] push local 2
@2                                                           // [24562] push local 2
A=D+A                                                        // [24563] push local 2
D=M                                                          // [24564] push local 2
@SP                                                          // [24565] push local 2
M=M+1                                                        // [24566] push local 2
A=M-1                                                        // [24567] push local 2
M=D                                                          // [24568] push local 2
@SP                                                          // [24569] push constant 0
M=M+1                                                        // [24570] push constant 0
A=M-1                                                        // [24571] push constant 0
M=0                                                          // [24572] push constant 0
@CONTINUE_EQ_23                                              // [24573] eq
D=A                                                          // [24574] eq
@R13                                                         // [24575] eq
M=D                                                          // [24576] eq
@SP                                                          // [24577] eq
AM=M-1                                                       // [24578] eq
D=M                                                          // [24579] eq
A=A-1                                                        // [24580] eq
D=D-M                                                        // [24581] eq
@INTERNAL_EQ                                                 // [24582] eq
0;JEQ                                                        // [24583] eq
(CONTINUE_EQ_23)                                             // [     ] eq
@LCL                                                         // [24584] push local 3
D=M                                                          // [24585] push local 3
@3                                                           // [24586] push local 3
A=D+A                                                        // [24587] push local 3
D=M                                                          // [24588] push local 3
@SP                                                          // [24589] push local 3
M=M+1                                                        // [24590] push local 3
A=M-1                                                        // [24591] push local 3
M=D                                                          // [24592] push local 3
@SP                                                          // [24593] push constant 0
M=M+1                                                        // [24594] push constant 0
A=M-1                                                        // [24595] push constant 0
M=0                                                          // [24596] push constant 0
@CONTINUE_GT_20                                              // [24597] gt
D=A                                                          // [24598] gt
@R13                                                         // [24599] gt
M=D                                                          // [24600] gt
@SP                                                          // [24601] gt
AM=M-1                                                       // [24602] gt
D=M                                                          // [24603] gt
A=A-1                                                        // [24604] gt
D=D-M                                                        // [24605] gt
@INTERNAL_GT                                                 // [24606] gt
0;JEQ                                                        // [24607] gt
(CONTINUE_GT_20)                                             // [     ] gt
@SP                                                          // [24608] and
AM=M-1                                                       // [24609] and
D=M                                                          // [24610] and
A=A-1                                                        // [24611] and
M=D&M                                                        // [24612] and
@SP                                                          // [24613] pop local 12
AM=M-1                                                       // [24614] pop local 12
D=M                                                          // [24615] pop local 12
@R13                                                         // [24616] pop local 12
M=D                                                          // [24617] pop local 12
@LCL                                                         // [24618] pop local 12
D=M                                                          // [24619] pop local 12
@12                                                          // [24620] pop local 12
D=D+A                                                        // [24621] pop local 12
@R14                                                         // [24622] pop local 12
M=D                                                          // [24623] pop local 12
@R13                                                         // [24624] pop local 12
D=M                                                          // [24625] pop local 12
@R14                                                         // [24626] pop local 12
A=M                                                          // [24627] pop local 12
M=D                                                          // [24628] pop local 12
@LCL                                                         // [24629] push local 2
D=M                                                          // [24630] push local 2
@2                                                           // [24631] push local 2
A=D+A                                                        // [24632] push local 2
D=M                                                          // [24633] push local 2
@SP                                                          // [24634] push local 2
M=M+1                                                        // [24635] push local 2
A=M-1                                                        // [24636] push local 2
M=D                                                          // [24637] push local 2
@SP                                                          // [24638] push constant 0
M=M+1                                                        // [24639] push constant 0
A=M-1                                                        // [24640] push constant 0
M=0                                                          // [24641] push constant 0
@CONTINUE_GT_21                                              // [24642] gt
D=A                                                          // [24643] gt
@R13                                                         // [24644] gt
M=D                                                          // [24645] gt
@SP                                                          // [24646] gt
AM=M-1                                                       // [24647] gt
D=M                                                          // [24648] gt
A=A-1                                                        // [24649] gt
D=D-M                                                        // [24650] gt
@INTERNAL_GT                                                 // [24651] gt
0;JEQ                                                        // [24652] gt
(CONTINUE_GT_21)                                             // [     ] gt
@LCL                                                         // [24653] push local 3
D=M                                                          // [24654] push local 3
@3                                                           // [24655] push local 3
A=D+A                                                        // [24656] push local 3
D=M                                                          // [24657] push local 3
@SP                                                          // [24658] push local 3
M=M+1                                                        // [24659] push local 3
A=M-1                                                        // [24660] push local 3
M=D                                                          // [24661] push local 3
@SP                                                          // [24662] push constant 0
M=M+1                                                        // [24663] push constant 0
A=M-1                                                        // [24664] push constant 0
M=0                                                          // [24665] push constant 0
@CONTINUE_GT_22                                              // [24666] gt
D=A                                                          // [24667] gt
@R13                                                         // [24668] gt
M=D                                                          // [24669] gt
@SP                                                          // [24670] gt
AM=M-1                                                       // [24671] gt
D=M                                                          // [24672] gt
A=A-1                                                        // [24673] gt
D=D-M                                                        // [24674] gt
@INTERNAL_GT                                                 // [24675] gt
0;JEQ                                                        // [24676] gt
(CONTINUE_GT_22)                                             // [     ] gt
@SP                                                          // [24677] and
AM=M-1                                                       // [24678] and
D=M                                                          // [24679] and
A=A-1                                                        // [24680] and
M=D&M                                                        // [24681] and
@SP                                                          // [24682] pop local 13
AM=M-1                                                       // [24683] pop local 13
D=M                                                          // [24684] pop local 13
@R13                                                         // [24685] pop local 13
M=D                                                          // [24686] pop local 13
@LCL                                                         // [24687] pop local 13
D=M                                                          // [24688] pop local 13
@13                                                          // [24689] pop local 13
D=D+A                                                        // [24690] pop local 13
@R14                                                         // [24691] pop local 13
M=D                                                          // [24692] pop local 13
@R13                                                         // [24693] pop local 13
D=M                                                          // [24694] pop local 13
@R14                                                         // [24695] pop local 13
A=M                                                          // [24696] pop local 13
M=D                                                          // [24697] pop local 13
@LCL                                                         // [24698] push local 11
D=M                                                          // [24699] push local 11
@11                                                          // [24700] push local 11
A=D+A                                                        // [24701] push local 11
D=M                                                          // [24702] push local 11
@SP                                                          // [24703] push local 11
M=M+1                                                        // [24704] push local 11
A=M-1                                                        // [24705] push local 11
M=D                                                          // [24706] push local 11
@SP                                                          // [24707] if-goto IF_TRUE2
AM=M-1                                                       // [24708] if-goto IF_TRUE2
D=M                                                          // [24709] if-goto IF_TRUE2
@Screen.drawLine$IF_TRUE2                                    // [24710] if-goto IF_TRUE2
D;JNE                                                        // [24711] if-goto IF_TRUE2
@Screen.drawLine$IF_FALSE2                                   // [24712] goto IF_FALSE2
0;JEQ                                                        // [24713] goto IF_FALSE2
(Screen.drawLine$IF_TRUE2)                                   // [     ] label IF_TRUE2
@SP                                                          // [24714] push constant 0
M=M+1                                                        // [24715] push constant 0
A=M-1                                                        // [24716] push constant 0
M=0                                                          // [24717] push constant 0
@SP                                                          // [24718] not
A=M-1                                                        // [24719] not
D=M                                                          // [24720] not
M=!D                                                         // [24721] not
@SP                                                          // [24722] pop local 14
AM=M-1                                                       // [24723] pop local 14
D=M                                                          // [24724] pop local 14
@R13                                                         // [24725] pop local 14
M=D                                                          // [24726] pop local 14
@LCL                                                         // [24727] pop local 14
D=M                                                          // [24728] pop local 14
@14                                                          // [24729] pop local 14
D=D+A                                                        // [24730] pop local 14
@R14                                                         // [24731] pop local 14
M=D                                                          // [24732] pop local 14
@R13                                                         // [24733] pop local 14
D=M                                                          // [24734] pop local 14
@R14                                                         // [24735] pop local 14
A=M                                                          // [24736] pop local 14
M=D                                                          // [24737] pop local 14
@Screen.drawLine$IF_END2                                     // [24738] goto IF_END2
0;JEQ                                                        // [24739] goto IF_END2
(Screen.drawLine$IF_FALSE2)                                  // [     ] label IF_FALSE2
@LCL                                                         // [24740] push local 12
D=M                                                          // [24741] push local 12
@12                                                          // [24742] push local 12
A=D+A                                                        // [24743] push local 12
D=M                                                          // [24744] push local 12
@SP                                                          // [24745] push local 12
M=M+1                                                        // [24746] push local 12
A=M-1                                                        // [24747] push local 12
M=D                                                          // [24748] push local 12
@SP                                                          // [24749] if-goto IF_TRUE3
AM=M-1                                                       // [24750] if-goto IF_TRUE3
D=M                                                          // [24751] if-goto IF_TRUE3
@Screen.drawLine$IF_TRUE3                                    // [24752] if-goto IF_TRUE3
D;JNE                                                        // [24753] if-goto IF_TRUE3
@Screen.drawLine$IF_FALSE3                                   // [24754] goto IF_FALSE3
0;JEQ                                                        // [24755] goto IF_FALSE3
(Screen.drawLine$IF_TRUE3)                                   // [     ] label IF_TRUE3
@SP                                                          // [24756] push constant 0
M=M+1                                                        // [24757] push constant 0
A=M-1                                                        // [24758] push constant 0
M=0                                                          // [24759] push constant 0
@SP                                                          // [24760] pop local 14
AM=M-1                                                       // [24761] pop local 14
D=M                                                          // [24762] pop local 14
@R13                                                         // [24763] pop local 14
M=D                                                          // [24764] pop local 14
@LCL                                                         // [24765] pop local 14
D=M                                                          // [24766] pop local 14
@14                                                          // [24767] pop local 14
D=D+A                                                        // [24768] pop local 14
@R14                                                         // [24769] pop local 14
M=D                                                          // [24770] pop local 14
@R13                                                         // [24771] pop local 14
D=M                                                          // [24772] pop local 14
@R14                                                         // [24773] pop local 14
A=M                                                          // [24774] pop local 14
M=D                                                          // [24775] pop local 14
(Screen.drawLine$IF_FALSE3)                                  // [     ] label IF_FALSE3
(Screen.drawLine$IF_END2)                                    // [     ] label IF_END2
@SP                                                          // [24776] push constant 0
M=M+1                                                        // [24777] push constant 0
A=M-1                                                        // [24778] push constant 0
M=0                                                          // [24779] push constant 0
@SP                                                          // [24780] pop local 10
AM=M-1                                                       // [24781] pop local 10
D=M                                                          // [24782] pop local 10
@R13                                                         // [24783] pop local 10
M=D                                                          // [24784] pop local 10
@LCL                                                         // [24785] pop local 10
D=M                                                          // [24786] pop local 10
@10                                                          // [24787] pop local 10
D=D+A                                                        // [24788] pop local 10
@R14                                                         // [24789] pop local 10
M=D                                                          // [24790] pop local 10
@R13                                                         // [24791] pop local 10
D=M                                                          // [24792] pop local 10
@R14                                                         // [24793] pop local 10
A=M                                                          // [24794] pop local 10
M=D                                                          // [24795] pop local 10
(Screen.drawLine$WHILE_EXP0)                                 // [     ] label WHILE_EXP0
@LCL                                                         // [24796] push local 6
D=M                                                          // [24797] push local 6
@6                                                           // [24798] push local 6
A=D+A                                                        // [24799] push local 6
D=M                                                          // [24800] push local 6
@SP                                                          // [24801] push local 6
M=M+1                                                        // [24802] push local 6
A=M-1                                                        // [24803] push local 6
M=D                                                          // [24804] push local 6
@LCL                                                         // [24805] push local 2
D=M                                                          // [24806] push local 2
@2                                                           // [24807] push local 2
A=D+A                                                        // [24808] push local 2
D=M                                                          // [24809] push local 2
@SP                                                          // [24810] push local 2
M=M+1                                                        // [24811] push local 2
A=M-1                                                        // [24812] push local 2
M=D                                                          // [24813] push local 2
@CONTINUE_GT_23                                              // [24814] gt
D=A                                                          // [24815] gt
@R13                                                         // [24816] gt
M=D                                                          // [24817] gt
@SP                                                          // [24818] gt
AM=M-1                                                       // [24819] gt
D=M                                                          // [24820] gt
A=A-1                                                        // [24821] gt
D=D-M                                                        // [24822] gt
@INTERNAL_GT                                                 // [24823] gt
0;JEQ                                                        // [24824] gt
(CONTINUE_GT_23)                                             // [     ] gt
@SP                                                          // [24825] not
A=M-1                                                        // [24826] not
D=M                                                          // [24827] not
M=!D                                                         // [24828] not
@LCL                                                         // [24829] push local 7
D=M                                                          // [24830] push local 7
@7                                                           // [24831] push local 7
A=D+A                                                        // [24832] push local 7
D=M                                                          // [24833] push local 7
@SP                                                          // [24834] push local 7
M=M+1                                                        // [24835] push local 7
A=M-1                                                        // [24836] push local 7
M=D                                                          // [24837] push local 7
@LCL                                                         // [24838] push local 3
D=M                                                          // [24839] push local 3
@3                                                           // [24840] push local 3
A=D+A                                                        // [24841] push local 3
D=M                                                          // [24842] push local 3
@SP                                                          // [24843] push local 3
M=M+1                                                        // [24844] push local 3
A=M-1                                                        // [24845] push local 3
M=D                                                          // [24846] push local 3
@CONTINUE_GT_24                                              // [24847] gt
D=A                                                          // [24848] gt
@R13                                                         // [24849] gt
M=D                                                          // [24850] gt
@SP                                                          // [24851] gt
AM=M-1                                                       // [24852] gt
D=M                                                          // [24853] gt
A=A-1                                                        // [24854] gt
D=D-M                                                        // [24855] gt
@INTERNAL_GT                                                 // [24856] gt
0;JEQ                                                        // [24857] gt
(CONTINUE_GT_24)                                             // [     ] gt
@SP                                                          // [24858] not
A=M-1                                                        // [24859] not
D=M                                                          // [24860] not
M=!D                                                         // [24861] not
@SP                                                          // [24862] and
AM=M-1                                                       // [24863] and
D=M                                                          // [24864] and
A=A-1                                                        // [24865] and
M=D&M                                                        // [24866] and
@SP                                                          // [24867] not
A=M-1                                                        // [24868] not
D=M                                                          // [24869] not
M=!D                                                         // [24870] not
@SP                                                          // [24871] if-goto WHILE_END0
AM=M-1                                                       // [24872] if-goto WHILE_END0
D=M                                                          // [24873] if-goto WHILE_END0
@Screen.drawLine$WHILE_END0                                  // [24874] if-goto WHILE_END0
D;JNE                                                        // [24875] if-goto WHILE_END0
@ARG                                                         // [24876] push argument 0
D=M                                                          // [24877] push argument 0
@0                                                           // [24878] push argument 0
A=D+A                                                        // [24879] push argument 0
D=M                                                          // [24880] push argument 0
@SP                                                          // [24881] push argument 0
M=M+1                                                        // [24882] push argument 0
A=M-1                                                        // [24883] push argument 0
M=D                                                          // [24884] push argument 0
@LCL                                                         // [24885] push local 4
D=M                                                          // [24886] push local 4
@4                                                           // [24887] push local 4
A=D+A                                                        // [24888] push local 4
D=M                                                          // [24889] push local 4
@SP                                                          // [24890] push local 4
M=M+1                                                        // [24891] push local 4
A=M-1                                                        // [24892] push local 4
M=D                                                          // [24893] push local 4
@SP                                                          // [24894] add
AM=M-1                                                       // [24895] add
D=M                                                          // [24896] add
A=A-1                                                        // [24897] add
M=D+M                                                        // [24898] add
@ARG                                                         // [24899] push argument 1
D=M                                                          // [24900] push argument 1
@1                                                           // [24901] push argument 1
A=D+A                                                        // [24902] push argument 1
D=M                                                          // [24903] push argument 1
@SP                                                          // [24904] push argument 1
M=M+1                                                        // [24905] push argument 1
A=M-1                                                        // [24906] push argument 1
M=D                                                          // [24907] push argument 1
@LCL                                                         // [24908] push local 5
D=M                                                          // [24909] push local 5
@5                                                           // [24910] push local 5
A=D+A                                                        // [24911] push local 5
D=M                                                          // [24912] push local 5
@SP                                                          // [24913] push local 5
M=M+1                                                        // [24914] push local 5
A=M-1                                                        // [24915] push local 5
M=D                                                          // [24916] push local 5
@SP                                                          // [24917] add
AM=M-1                                                       // [24918] add
D=M                                                          // [24919] add
A=A-1                                                        // [24920] add
M=D+M                                                        // [24921] add
@2                                                           // [24922] call Screen.drawPixel 2
D=A                                                          // [24923] call Screen.drawPixel 2
@R13                                                         // [24924] call Screen.drawPixel 2
M=D                                                          // [24925] call Screen.drawPixel 2
@Screen.drawPixel                                            // [24926] call Screen.drawPixel 2
D=A                                                          // [24927] call Screen.drawPixel 2
@R14                                                         // [24928] call Screen.drawPixel 2
M=D                                                          // [24929] call Screen.drawPixel 2
@return-263                                                  // [24930] call Screen.drawPixel 2
D=A                                                          // [24931] call Screen.drawPixel 2
@CALL                                                        // [24932] call Screen.drawPixel 2
0;JEQ                                                        // [24933] call Screen.drawPixel 2
(return-263)                                                 // [     ] call Screen.drawPixel 2
@SP                                                          // [24934] pop temp 0
AM=M-1                                                       // [24935] pop temp 0
D=M                                                          // [24936] pop temp 0
@5                                                           // [24937] pop temp 0
M=D                                                          // [24938] pop temp 0
@LCL                                                         // [24939] push local 13
D=M                                                          // [24940] push local 13
@13                                                          // [24941] push local 13
A=D+A                                                        // [24942] push local 13
D=M                                                          // [24943] push local 13
@SP                                                          // [24944] push local 13
M=M+1                                                        // [24945] push local 13
A=M-1                                                        // [24946] push local 13
M=D                                                          // [24947] push local 13
@SP                                                          // [24948] if-goto IF_TRUE4
AM=M-1                                                       // [24949] if-goto IF_TRUE4
D=M                                                          // [24950] if-goto IF_TRUE4
@Screen.drawLine$IF_TRUE4                                    // [24951] if-goto IF_TRUE4
D;JNE                                                        // [24952] if-goto IF_TRUE4
@Screen.drawLine$IF_FALSE4                                   // [24953] goto IF_FALSE4
0;JEQ                                                        // [24954] goto IF_FALSE4
(Screen.drawLine$IF_TRUE4)                                   // [     ] label IF_TRUE4
@LCL                                                         // [24955] push local 10
D=M                                                          // [24956] push local 10
@10                                                          // [24957] push local 10
A=D+A                                                        // [24958] push local 10
D=M                                                          // [24959] push local 10
@SP                                                          // [24960] push local 10
M=M+1                                                        // [24961] push local 10
A=M-1                                                        // [24962] push local 10
M=D                                                          // [24963] push local 10
@SP                                                          // [24964] push constant 0
M=M+1                                                        // [24965] push constant 0
A=M-1                                                        // [24966] push constant 0
M=0                                                          // [24967] push constant 0
@CONTINUE_LT_34                                              // [24968] lt
D=A                                                          // [24969] lt
@R13                                                         // [24970] lt
M=D                                                          // [24971] lt
@SP                                                          // [24972] lt
AM=M-1                                                       // [24973] lt
D=M                                                          // [24974] lt
A=A-1                                                        // [24975] lt
D=D-M                                                        // [24976] lt
@INTERNAL_LT                                                 // [24977] lt
0;JEQ                                                        // [24978] lt
(CONTINUE_LT_34)                                             // [     ] lt
@SP                                                          // [24979] pop local 14
AM=M-1                                                       // [24980] pop local 14
D=M                                                          // [24981] pop local 14
@R13                                                         // [24982] pop local 14
M=D                                                          // [24983] pop local 14
@LCL                                                         // [24984] pop local 14
D=M                                                          // [24985] pop local 14
@14                                                          // [24986] pop local 14
D=D+A                                                        // [24987] pop local 14
@R14                                                         // [24988] pop local 14
M=D                                                          // [24989] pop local 14
@R13                                                         // [24990] pop local 14
D=M                                                          // [24991] pop local 14
@R14                                                         // [24992] pop local 14
A=M                                                          // [24993] pop local 14
M=D                                                          // [24994] pop local 14
(Screen.drawLine$IF_FALSE4)                                  // [     ] label IF_FALSE4
@LCL                                                         // [24995] push local 14
D=M                                                          // [24996] push local 14
@14                                                          // [24997] push local 14
A=D+A                                                        // [24998] push local 14
D=M                                                          // [24999] push local 14
@SP                                                          // [25000] push local 14
M=M+1                                                        // [25001] push local 14
A=M-1                                                        // [25002] push local 14
M=D                                                          // [25003] push local 14
@SP                                                          // [25004] if-goto IF_TRUE5
AM=M-1                                                       // [25005] if-goto IF_TRUE5
D=M                                                          // [25006] if-goto IF_TRUE5
@Screen.drawLine$IF_TRUE5                                    // [25007] if-goto IF_TRUE5
D;JNE                                                        // [25008] if-goto IF_TRUE5
@Screen.drawLine$IF_FALSE5                                   // [25009] goto IF_FALSE5
0;JEQ                                                        // [25010] goto IF_FALSE5
(Screen.drawLine$IF_TRUE5)                                   // [     ] label IF_TRUE5
@LCL                                                         // [25011] push local 4
D=M                                                          // [25012] push local 4
@4                                                           // [25013] push local 4
A=D+A                                                        // [25014] push local 4
D=M                                                          // [25015] push local 4
@SP                                                          // [25016] push local 4
M=M+1                                                        // [25017] push local 4
A=M-1                                                        // [25018] push local 4
M=D                                                          // [25019] push local 4
@LCL                                                         // [25020] push local 8
D=M                                                          // [25021] push local 8
@8                                                           // [25022] push local 8
A=D+A                                                        // [25023] push local 8
D=M                                                          // [25024] push local 8
@SP                                                          // [25025] push local 8
M=M+1                                                        // [25026] push local 8
A=M-1                                                        // [25027] push local 8
M=D                                                          // [25028] push local 8
@SP                                                          // [25029] add
AM=M-1                                                       // [25030] add
D=M                                                          // [25031] add
A=A-1                                                        // [25032] add
M=D+M                                                        // [25033] add
@SP                                                          // [25034] pop local 4
AM=M-1                                                       // [25035] pop local 4
D=M                                                          // [25036] pop local 4
@R13                                                         // [25037] pop local 4
M=D                                                          // [25038] pop local 4
@LCL                                                         // [25039] pop local 4
D=M                                                          // [25040] pop local 4
@4                                                           // [25041] pop local 4
D=D+A                                                        // [25042] pop local 4
@R14                                                         // [25043] pop local 4
M=D                                                          // [25044] pop local 4
@R13                                                         // [25045] pop local 4
D=M                                                          // [25046] pop local 4
@R14                                                         // [25047] pop local 4
A=M                                                          // [25048] pop local 4
M=D                                                          // [25049] pop local 4
@LCL                                                         // [25050] push local 4
D=M                                                          // [25051] push local 4
@4                                                           // [25052] push local 4
A=D+A                                                        // [25053] push local 4
D=M                                                          // [25054] push local 4
@SP                                                          // [25055] push local 4
M=M+1                                                        // [25056] push local 4
A=M-1                                                        // [25057] push local 4
M=D                                                          // [25058] push local 4
@1                                                           // [25059] call Math.abs 1
D=A                                                          // [25060] call Math.abs 1
@R13                                                         // [25061] call Math.abs 1
M=D                                                          // [25062] call Math.abs 1
@Math.abs                                                    // [25063] call Math.abs 1
D=A                                                          // [25064] call Math.abs 1
@R14                                                         // [25065] call Math.abs 1
M=D                                                          // [25066] call Math.abs 1
@return-264                                                  // [25067] call Math.abs 1
D=A                                                          // [25068] call Math.abs 1
@CALL                                                        // [25069] call Math.abs 1
0;JEQ                                                        // [25070] call Math.abs 1
(return-264)                                                 // [     ] call Math.abs 1
@SP                                                          // [25071] pop local 6
AM=M-1                                                       // [25072] pop local 6
D=M                                                          // [25073] pop local 6
@R13                                                         // [25074] pop local 6
M=D                                                          // [25075] pop local 6
@LCL                                                         // [25076] pop local 6
D=M                                                          // [25077] pop local 6
@6                                                           // [25078] pop local 6
D=D+A                                                        // [25079] pop local 6
@R14                                                         // [25080] pop local 6
M=D                                                          // [25081] pop local 6
@R13                                                         // [25082] pop local 6
D=M                                                          // [25083] pop local 6
@R14                                                         // [25084] pop local 6
A=M                                                          // [25085] pop local 6
M=D                                                          // [25086] pop local 6
@LCL                                                         // [25087] push local 10
D=M                                                          // [25088] push local 10
@10                                                          // [25089] push local 10
A=D+A                                                        // [25090] push local 10
D=M                                                          // [25091] push local 10
@SP                                                          // [25092] push local 10
M=M+1                                                        // [25093] push local 10
A=M-1                                                        // [25094] push local 10
M=D                                                          // [25095] push local 10
@LCL                                                         // [25096] push local 3
D=M                                                          // [25097] push local 3
@3                                                           // [25098] push local 3
A=D+A                                                        // [25099] push local 3
D=M                                                          // [25100] push local 3
@SP                                                          // [25101] push local 3
M=M+1                                                        // [25102] push local 3
A=M-1                                                        // [25103] push local 3
M=D                                                          // [25104] push local 3
@SP                                                          // [25105] add
AM=M-1                                                       // [25106] add
D=M                                                          // [25107] add
A=A-1                                                        // [25108] add
M=D+M                                                        // [25109] add
@SP                                                          // [25110] pop local 10
AM=M-1                                                       // [25111] pop local 10
D=M                                                          // [25112] pop local 10
@R13                                                         // [25113] pop local 10
M=D                                                          // [25114] pop local 10
@LCL                                                         // [25115] pop local 10
D=M                                                          // [25116] pop local 10
@10                                                          // [25117] pop local 10
D=D+A                                                        // [25118] pop local 10
@R14                                                         // [25119] pop local 10
M=D                                                          // [25120] pop local 10
@R13                                                         // [25121] pop local 10
D=M                                                          // [25122] pop local 10
@R14                                                         // [25123] pop local 10
A=M                                                          // [25124] pop local 10
M=D                                                          // [25125] pop local 10
@Screen.drawLine$IF_END5                                     // [25126] goto IF_END5
0;JEQ                                                        // [25127] goto IF_END5
(Screen.drawLine$IF_FALSE5)                                  // [     ] label IF_FALSE5
@LCL                                                         // [25128] push local 5
D=M                                                          // [25129] push local 5
@5                                                           // [25130] push local 5
A=D+A                                                        // [25131] push local 5
D=M                                                          // [25132] push local 5
@SP                                                          // [25133] push local 5
M=M+1                                                        // [25134] push local 5
A=M-1                                                        // [25135] push local 5
M=D                                                          // [25136] push local 5
@LCL                                                         // [25137] push local 9
D=M                                                          // [25138] push local 9
@9                                                           // [25139] push local 9
A=D+A                                                        // [25140] push local 9
D=M                                                          // [25141] push local 9
@SP                                                          // [25142] push local 9
M=M+1                                                        // [25143] push local 9
A=M-1                                                        // [25144] push local 9
M=D                                                          // [25145] push local 9
@SP                                                          // [25146] add
AM=M-1                                                       // [25147] add
D=M                                                          // [25148] add
A=A-1                                                        // [25149] add
M=D+M                                                        // [25150] add
@SP                                                          // [25151] pop local 5
AM=M-1                                                       // [25152] pop local 5
D=M                                                          // [25153] pop local 5
@R13                                                         // [25154] pop local 5
M=D                                                          // [25155] pop local 5
@LCL                                                         // [25156] pop local 5
D=M                                                          // [25157] pop local 5
@5                                                           // [25158] pop local 5
D=D+A                                                        // [25159] pop local 5
@R14                                                         // [25160] pop local 5
M=D                                                          // [25161] pop local 5
@R13                                                         // [25162] pop local 5
D=M                                                          // [25163] pop local 5
@R14                                                         // [25164] pop local 5
A=M                                                          // [25165] pop local 5
M=D                                                          // [25166] pop local 5
@LCL                                                         // [25167] push local 5
D=M                                                          // [25168] push local 5
@5                                                           // [25169] push local 5
A=D+A                                                        // [25170] push local 5
D=M                                                          // [25171] push local 5
@SP                                                          // [25172] push local 5
M=M+1                                                        // [25173] push local 5
A=M-1                                                        // [25174] push local 5
M=D                                                          // [25175] push local 5
@1                                                           // [25176] call Math.abs 1
D=A                                                          // [25177] call Math.abs 1
@R13                                                         // [25178] call Math.abs 1
M=D                                                          // [25179] call Math.abs 1
@Math.abs                                                    // [25180] call Math.abs 1
D=A                                                          // [25181] call Math.abs 1
@R14                                                         // [25182] call Math.abs 1
M=D                                                          // [25183] call Math.abs 1
@return-265                                                  // [25184] call Math.abs 1
D=A                                                          // [25185] call Math.abs 1
@CALL                                                        // [25186] call Math.abs 1
0;JEQ                                                        // [25187] call Math.abs 1
(return-265)                                                 // [     ] call Math.abs 1
@SP                                                          // [25188] pop local 7
AM=M-1                                                       // [25189] pop local 7
D=M                                                          // [25190] pop local 7
@R13                                                         // [25191] pop local 7
M=D                                                          // [25192] pop local 7
@LCL                                                         // [25193] pop local 7
D=M                                                          // [25194] pop local 7
@7                                                           // [25195] pop local 7
D=D+A                                                        // [25196] pop local 7
@R14                                                         // [25197] pop local 7
M=D                                                          // [25198] pop local 7
@R13                                                         // [25199] pop local 7
D=M                                                          // [25200] pop local 7
@R14                                                         // [25201] pop local 7
A=M                                                          // [25202] pop local 7
M=D                                                          // [25203] pop local 7
@LCL                                                         // [25204] push local 10
D=M                                                          // [25205] push local 10
@10                                                          // [25206] push local 10
A=D+A                                                        // [25207] push local 10
D=M                                                          // [25208] push local 10
@SP                                                          // [25209] push local 10
M=M+1                                                        // [25210] push local 10
A=M-1                                                        // [25211] push local 10
M=D                                                          // [25212] push local 10
@LCL                                                         // [25213] push local 2
D=M                                                          // [25214] push local 2
@2                                                           // [25215] push local 2
A=D+A                                                        // [25216] push local 2
D=M                                                          // [25217] push local 2
@SP                                                          // [25218] push local 2
M=M+1                                                        // [25219] push local 2
A=M-1                                                        // [25220] push local 2
M=D                                                          // [25221] push local 2
@SP                                                          // [25222] sub
AM=M-1                                                       // [25223] sub
D=M                                                          // [25224] sub
A=A-1                                                        // [25225] sub
M=M-D                                                        // [25226] sub
@SP                                                          // [25227] pop local 10
AM=M-1                                                       // [25228] pop local 10
D=M                                                          // [25229] pop local 10
@R13                                                         // [25230] pop local 10
M=D                                                          // [25231] pop local 10
@LCL                                                         // [25232] pop local 10
D=M                                                          // [25233] pop local 10
@10                                                          // [25234] pop local 10
D=D+A                                                        // [25235] pop local 10
@R14                                                         // [25236] pop local 10
M=D                                                          // [25237] pop local 10
@R13                                                         // [25238] pop local 10
D=M                                                          // [25239] pop local 10
@R14                                                         // [25240] pop local 10
A=M                                                          // [25241] pop local 10
M=D                                                          // [25242] pop local 10
(Screen.drawLine$IF_END5)                                    // [     ] label IF_END5
@Screen.drawLine$WHILE_EXP0                                  // [25243] goto WHILE_EXP0
0;JEQ                                                        // [25244] goto WHILE_EXP0
(Screen.drawLine$WHILE_END0)                                 // [     ] label WHILE_END0
@SP                                                          // [25245] push constant 0
M=M+1                                                        // [25246] push constant 0
A=M-1                                                        // [25247] push constant 0
M=0                                                          // [25248] push constant 0
@RETURN                                                      // [25249] return
0;JEQ                                                        // [25250] return
(Screen.drawRectangle)                                       // [     ] function Screen.drawRectangle 20
@SP                                                          // [25251] function Screen.drawRectangle 20
A=M                                                          // [25252] function Screen.drawRectangle 20
M=0                                                          // [25253] function Screen.drawRectangle 20
@SP                                                          // [25254] function Screen.drawRectangle 20
M=M+1                                                        // [25255] function Screen.drawRectangle 20
@SP                                                          // [25256] function Screen.drawRectangle 20
A=M                                                          // [25257] function Screen.drawRectangle 20
M=0                                                          // [25258] function Screen.drawRectangle 20
@SP                                                          // [25259] function Screen.drawRectangle 20
M=M+1                                                        // [25260] function Screen.drawRectangle 20
@SP                                                          // [25261] function Screen.drawRectangle 20
A=M                                                          // [25262] function Screen.drawRectangle 20
M=0                                                          // [25263] function Screen.drawRectangle 20
@SP                                                          // [25264] function Screen.drawRectangle 20
M=M+1                                                        // [25265] function Screen.drawRectangle 20
@SP                                                          // [25266] function Screen.drawRectangle 20
A=M                                                          // [25267] function Screen.drawRectangle 20
M=0                                                          // [25268] function Screen.drawRectangle 20
@SP                                                          // [25269] function Screen.drawRectangle 20
M=M+1                                                        // [25270] function Screen.drawRectangle 20
@SP                                                          // [25271] function Screen.drawRectangle 20
A=M                                                          // [25272] function Screen.drawRectangle 20
M=0                                                          // [25273] function Screen.drawRectangle 20
@SP                                                          // [25274] function Screen.drawRectangle 20
M=M+1                                                        // [25275] function Screen.drawRectangle 20
@SP                                                          // [25276] function Screen.drawRectangle 20
A=M                                                          // [25277] function Screen.drawRectangle 20
M=0                                                          // [25278] function Screen.drawRectangle 20
@SP                                                          // [25279] function Screen.drawRectangle 20
M=M+1                                                        // [25280] function Screen.drawRectangle 20
@SP                                                          // [25281] function Screen.drawRectangle 20
A=M                                                          // [25282] function Screen.drawRectangle 20
M=0                                                          // [25283] function Screen.drawRectangle 20
@SP                                                          // [25284] function Screen.drawRectangle 20
M=M+1                                                        // [25285] function Screen.drawRectangle 20
@SP                                                          // [25286] function Screen.drawRectangle 20
A=M                                                          // [25287] function Screen.drawRectangle 20
M=0                                                          // [25288] function Screen.drawRectangle 20
@SP                                                          // [25289] function Screen.drawRectangle 20
M=M+1                                                        // [25290] function Screen.drawRectangle 20
@SP                                                          // [25291] function Screen.drawRectangle 20
A=M                                                          // [25292] function Screen.drawRectangle 20
M=0                                                          // [25293] function Screen.drawRectangle 20
@SP                                                          // [25294] function Screen.drawRectangle 20
M=M+1                                                        // [25295] function Screen.drawRectangle 20
@SP                                                          // [25296] function Screen.drawRectangle 20
A=M                                                          // [25297] function Screen.drawRectangle 20
M=0                                                          // [25298] function Screen.drawRectangle 20
@SP                                                          // [25299] function Screen.drawRectangle 20
M=M+1                                                        // [25300] function Screen.drawRectangle 20
@SP                                                          // [25301] function Screen.drawRectangle 20
A=M                                                          // [25302] function Screen.drawRectangle 20
M=0                                                          // [25303] function Screen.drawRectangle 20
@SP                                                          // [25304] function Screen.drawRectangle 20
M=M+1                                                        // [25305] function Screen.drawRectangle 20
@SP                                                          // [25306] function Screen.drawRectangle 20
A=M                                                          // [25307] function Screen.drawRectangle 20
M=0                                                          // [25308] function Screen.drawRectangle 20
@SP                                                          // [25309] function Screen.drawRectangle 20
M=M+1                                                        // [25310] function Screen.drawRectangle 20
@SP                                                          // [25311] function Screen.drawRectangle 20
A=M                                                          // [25312] function Screen.drawRectangle 20
M=0                                                          // [25313] function Screen.drawRectangle 20
@SP                                                          // [25314] function Screen.drawRectangle 20
M=M+1                                                        // [25315] function Screen.drawRectangle 20
@SP                                                          // [25316] function Screen.drawRectangle 20
A=M                                                          // [25317] function Screen.drawRectangle 20
M=0                                                          // [25318] function Screen.drawRectangle 20
@SP                                                          // [25319] function Screen.drawRectangle 20
M=M+1                                                        // [25320] function Screen.drawRectangle 20
@SP                                                          // [25321] function Screen.drawRectangle 20
A=M                                                          // [25322] function Screen.drawRectangle 20
M=0                                                          // [25323] function Screen.drawRectangle 20
@SP                                                          // [25324] function Screen.drawRectangle 20
M=M+1                                                        // [25325] function Screen.drawRectangle 20
@SP                                                          // [25326] function Screen.drawRectangle 20
A=M                                                          // [25327] function Screen.drawRectangle 20
M=0                                                          // [25328] function Screen.drawRectangle 20
@SP                                                          // [25329] function Screen.drawRectangle 20
M=M+1                                                        // [25330] function Screen.drawRectangle 20
@SP                                                          // [25331] function Screen.drawRectangle 20
A=M                                                          // [25332] function Screen.drawRectangle 20
M=0                                                          // [25333] function Screen.drawRectangle 20
@SP                                                          // [25334] function Screen.drawRectangle 20
M=M+1                                                        // [25335] function Screen.drawRectangle 20
@SP                                                          // [25336] function Screen.drawRectangle 20
A=M                                                          // [25337] function Screen.drawRectangle 20
M=0                                                          // [25338] function Screen.drawRectangle 20
@SP                                                          // [25339] function Screen.drawRectangle 20
M=M+1                                                        // [25340] function Screen.drawRectangle 20
@SP                                                          // [25341] function Screen.drawRectangle 20
A=M                                                          // [25342] function Screen.drawRectangle 20
M=0                                                          // [25343] function Screen.drawRectangle 20
@SP                                                          // [25344] function Screen.drawRectangle 20
M=M+1                                                        // [25345] function Screen.drawRectangle 20
@SP                                                          // [25346] function Screen.drawRectangle 20
A=M                                                          // [25347] function Screen.drawRectangle 20
M=0                                                          // [25348] function Screen.drawRectangle 20
@SP                                                          // [25349] function Screen.drawRectangle 20
M=M+1                                                        // [25350] function Screen.drawRectangle 20
@ARG                                                         // [25351] push argument 0
D=M                                                          // [25352] push argument 0
@0                                                           // [25353] push argument 0
A=D+A                                                        // [25354] push argument 0
D=M                                                          // [25355] push argument 0
@SP                                                          // [25356] push argument 0
M=M+1                                                        // [25357] push argument 0
A=M-1                                                        // [25358] push argument 0
M=D                                                          // [25359] push argument 0
@SP                                                          // [25360] push constant 0
M=M+1                                                        // [25361] push constant 0
A=M-1                                                        // [25362] push constant 0
M=0                                                          // [25363] push constant 0
@CONTINUE_LT_35                                              // [25364] lt
D=A                                                          // [25365] lt
@R13                                                         // [25366] lt
M=D                                                          // [25367] lt
@SP                                                          // [25368] lt
AM=M-1                                                       // [25369] lt
D=M                                                          // [25370] lt
A=A-1                                                        // [25371] lt
D=D-M                                                        // [25372] lt
@INTERNAL_LT                                                 // [25373] lt
0;JEQ                                                        // [25374] lt
(CONTINUE_LT_35)                                             // [     ] lt
@ARG                                                         // [25375] push argument 2
D=M                                                          // [25376] push argument 2
@2                                                           // [25377] push argument 2
A=D+A                                                        // [25378] push argument 2
D=M                                                          // [25379] push argument 2
@SP                                                          // [25380] push argument 2
M=M+1                                                        // [25381] push argument 2
A=M-1                                                        // [25382] push argument 2
M=D                                                          // [25383] push argument 2
@511                                                         // [25384] push constant 511
D=A                                                          // [25385] push constant 511
@SP                                                          // [25386] push constant 511
M=M+1                                                        // [25387] push constant 511
A=M-1                                                        // [25388] push constant 511
M=D                                                          // [25389] push constant 511
@CONTINUE_GT_25                                              // [25390] gt
D=A                                                          // [25391] gt
@R13                                                         // [25392] gt
M=D                                                          // [25393] gt
@SP                                                          // [25394] gt
AM=M-1                                                       // [25395] gt
D=M                                                          // [25396] gt
A=A-1                                                        // [25397] gt
D=D-M                                                        // [25398] gt
@INTERNAL_GT                                                 // [25399] gt
0;JEQ                                                        // [25400] gt
(CONTINUE_GT_25)                                             // [     ] gt
@SP                                                          // [25401] or
AM=M-1                                                       // [25402] or
D=M                                                          // [25403] or
A=A-1                                                        // [25404] or
M=D|M                                                        // [25405] or
@ARG                                                         // [25406] push argument 0
D=M                                                          // [25407] push argument 0
@0                                                           // [25408] push argument 0
A=D+A                                                        // [25409] push argument 0
D=M                                                          // [25410] push argument 0
@SP                                                          // [25411] push argument 0
M=M+1                                                        // [25412] push argument 0
A=M-1                                                        // [25413] push argument 0
M=D                                                          // [25414] push argument 0
@ARG                                                         // [25415] push argument 2
D=M                                                          // [25416] push argument 2
@2                                                           // [25417] push argument 2
A=D+A                                                        // [25418] push argument 2
D=M                                                          // [25419] push argument 2
@SP                                                          // [25420] push argument 2
M=M+1                                                        // [25421] push argument 2
A=M-1                                                        // [25422] push argument 2
M=D                                                          // [25423] push argument 2
@CONTINUE_GT_26                                              // [25424] gt
D=A                                                          // [25425] gt
@R13                                                         // [25426] gt
M=D                                                          // [25427] gt
@SP                                                          // [25428] gt
AM=M-1                                                       // [25429] gt
D=M                                                          // [25430] gt
A=A-1                                                        // [25431] gt
D=D-M                                                        // [25432] gt
@INTERNAL_GT                                                 // [25433] gt
0;JEQ                                                        // [25434] gt
(CONTINUE_GT_26)                                             // [     ] gt
@SP                                                          // [25435] or
AM=M-1                                                       // [25436] or
D=M                                                          // [25437] or
A=A-1                                                        // [25438] or
M=D|M                                                        // [25439] or
@ARG                                                         // [25440] push argument 1
D=M                                                          // [25441] push argument 1
@1                                                           // [25442] push argument 1
A=D+A                                                        // [25443] push argument 1
D=M                                                          // [25444] push argument 1
@SP                                                          // [25445] push argument 1
M=M+1                                                        // [25446] push argument 1
A=M-1                                                        // [25447] push argument 1
M=D                                                          // [25448] push argument 1
@SP                                                          // [25449] push constant 0
M=M+1                                                        // [25450] push constant 0
A=M-1                                                        // [25451] push constant 0
M=0                                                          // [25452] push constant 0
@CONTINUE_LT_36                                              // [25453] lt
D=A                                                          // [25454] lt
@R13                                                         // [25455] lt
M=D                                                          // [25456] lt
@SP                                                          // [25457] lt
AM=M-1                                                       // [25458] lt
D=M                                                          // [25459] lt
A=A-1                                                        // [25460] lt
D=D-M                                                        // [25461] lt
@INTERNAL_LT                                                 // [25462] lt
0;JEQ                                                        // [25463] lt
(CONTINUE_LT_36)                                             // [     ] lt
@SP                                                          // [25464] or
AM=M-1                                                       // [25465] or
D=M                                                          // [25466] or
A=A-1                                                        // [25467] or
M=D|M                                                        // [25468] or
@ARG                                                         // [25469] push argument 3
D=M                                                          // [25470] push argument 3
@3                                                           // [25471] push argument 3
A=D+A                                                        // [25472] push argument 3
D=M                                                          // [25473] push argument 3
@SP                                                          // [25474] push argument 3
M=M+1                                                        // [25475] push argument 3
A=M-1                                                        // [25476] push argument 3
M=D                                                          // [25477] push argument 3
@255                                                         // [25478] push constant 255
D=A                                                          // [25479] push constant 255
@SP                                                          // [25480] push constant 255
M=M+1                                                        // [25481] push constant 255
A=M-1                                                        // [25482] push constant 255
M=D                                                          // [25483] push constant 255
@CONTINUE_GT_27                                              // [25484] gt
D=A                                                          // [25485] gt
@R13                                                         // [25486] gt
M=D                                                          // [25487] gt
@SP                                                          // [25488] gt
AM=M-1                                                       // [25489] gt
D=M                                                          // [25490] gt
A=A-1                                                        // [25491] gt
D=D-M                                                        // [25492] gt
@INTERNAL_GT                                                 // [25493] gt
0;JEQ                                                        // [25494] gt
(CONTINUE_GT_27)                                             // [     ] gt
@SP                                                          // [25495] or
AM=M-1                                                       // [25496] or
D=M                                                          // [25497] or
A=A-1                                                        // [25498] or
M=D|M                                                        // [25499] or
@ARG                                                         // [25500] push argument 1
D=M                                                          // [25501] push argument 1
@1                                                           // [25502] push argument 1
A=D+A                                                        // [25503] push argument 1
D=M                                                          // [25504] push argument 1
@SP                                                          // [25505] push argument 1
M=M+1                                                        // [25506] push argument 1
A=M-1                                                        // [25507] push argument 1
M=D                                                          // [25508] push argument 1
@ARG                                                         // [25509] push argument 3
D=M                                                          // [25510] push argument 3
@3                                                           // [25511] push argument 3
A=D+A                                                        // [25512] push argument 3
D=M                                                          // [25513] push argument 3
@SP                                                          // [25514] push argument 3
M=M+1                                                        // [25515] push argument 3
A=M-1                                                        // [25516] push argument 3
M=D                                                          // [25517] push argument 3
@CONTINUE_GT_28                                              // [25518] gt
D=A                                                          // [25519] gt
@R13                                                         // [25520] gt
M=D                                                          // [25521] gt
@SP                                                          // [25522] gt
AM=M-1                                                       // [25523] gt
D=M                                                          // [25524] gt
A=A-1                                                        // [25525] gt
D=D-M                                                        // [25526] gt
@INTERNAL_GT                                                 // [25527] gt
0;JEQ                                                        // [25528] gt
(CONTINUE_GT_28)                                             // [     ] gt
@SP                                                          // [25529] or
AM=M-1                                                       // [25530] or
D=M                                                          // [25531] or
A=A-1                                                        // [25532] or
M=D|M                                                        // [25533] or
@SP                                                          // [25534] if-goto IF_TRUE0
AM=M-1                                                       // [25535] if-goto IF_TRUE0
D=M                                                          // [25536] if-goto IF_TRUE0
@Screen.drawRectangle$IF_TRUE0                               // [25537] if-goto IF_TRUE0
D;JNE                                                        // [25538] if-goto IF_TRUE0
@Screen.drawRectangle$IF_FALSE0                              // [25539] goto IF_FALSE0
0;JEQ                                                        // [25540] goto IF_FALSE0
(Screen.drawRectangle$IF_TRUE0)                              // [     ] label IF_TRUE0
@15                                                          // [25541] push constant 15
D=A                                                          // [25542] push constant 15
@SP                                                          // [25543] push constant 15
M=M+1                                                        // [25544] push constant 15
A=M-1                                                        // [25545] push constant 15
M=D                                                          // [25546] push constant 15
@1                                                           // [25547] call Sys.error 1
D=A                                                          // [25548] call Sys.error 1
@R13                                                         // [25549] call Sys.error 1
M=D                                                          // [25550] call Sys.error 1
@Sys.error                                                   // [25551] call Sys.error 1
D=A                                                          // [25552] call Sys.error 1
@R14                                                         // [25553] call Sys.error 1
M=D                                                          // [25554] call Sys.error 1
@return-266                                                  // [25555] call Sys.error 1
D=A                                                          // [25556] call Sys.error 1
@CALL                                                        // [25557] call Sys.error 1
0;JEQ                                                        // [25558] call Sys.error 1
(return-266)                                                 // [     ] call Sys.error 1
@SP                                                          // [25559] pop temp 0
AM=M-1                                                       // [25560] pop temp 0
D=M                                                          // [25561] pop temp 0
@5                                                           // [25562] pop temp 0
M=D                                                          // [25563] pop temp 0
(Screen.drawRectangle$IF_FALSE0)                             // [     ] label IF_FALSE0
@ARG                                                         // [25564] push argument 0
D=M                                                          // [25565] push argument 0
@0                                                           // [25566] push argument 0
A=D+A                                                        // [25567] push argument 0
D=M                                                          // [25568] push argument 0
@SP                                                          // [25569] push argument 0
M=M+1                                                        // [25570] push argument 0
A=M-1                                                        // [25571] push argument 0
M=D                                                          // [25572] push argument 0
@16                                                          // [25573] push constant 16
D=A                                                          // [25574] push constant 16
@SP                                                          // [25575] push constant 16
M=M+1                                                        // [25576] push constant 16
A=M-1                                                        // [25577] push constant 16
M=D                                                          // [25578] push constant 16
@2                                                           // [25579] call Math.divide 2
D=A                                                          // [25580] call Math.divide 2
@R13                                                         // [25581] call Math.divide 2
M=D                                                          // [25582] call Math.divide 2
@Math.divide                                                 // [25583] call Math.divide 2
D=A                                                          // [25584] call Math.divide 2
@R14                                                         // [25585] call Math.divide 2
M=D                                                          // [25586] call Math.divide 2
@return-267                                                  // [25587] call Math.divide 2
D=A                                                          // [25588] call Math.divide 2
@CALL                                                        // [25589] call Math.divide 2
0;JEQ                                                        // [25590] call Math.divide 2
(return-267)                                                 // [     ] call Math.divide 2
@SP                                                          // [25591] pop local 4
AM=M-1                                                       // [25592] pop local 4
D=M                                                          // [25593] pop local 4
@R13                                                         // [25594] pop local 4
M=D                                                          // [25595] pop local 4
@LCL                                                         // [25596] pop local 4
D=M                                                          // [25597] pop local 4
@4                                                           // [25598] pop local 4
D=D+A                                                        // [25599] pop local 4
@R14                                                         // [25600] pop local 4
M=D                                                          // [25601] pop local 4
@R13                                                         // [25602] pop local 4
D=M                                                          // [25603] pop local 4
@R14                                                         // [25604] pop local 4
A=M                                                          // [25605] pop local 4
M=D                                                          // [25606] pop local 4
@ARG                                                         // [25607] push argument 2
D=M                                                          // [25608] push argument 2
@2                                                           // [25609] push argument 2
A=D+A                                                        // [25610] push argument 2
D=M                                                          // [25611] push argument 2
@SP                                                          // [25612] push argument 2
M=M+1                                                        // [25613] push argument 2
A=M-1                                                        // [25614] push argument 2
M=D                                                          // [25615] push argument 2
@16                                                          // [25616] push constant 16
D=A                                                          // [25617] push constant 16
@SP                                                          // [25618] push constant 16
M=M+1                                                        // [25619] push constant 16
A=M-1                                                        // [25620] push constant 16
M=D                                                          // [25621] push constant 16
@2                                                           // [25622] call Math.divide 2
D=A                                                          // [25623] call Math.divide 2
@R13                                                         // [25624] call Math.divide 2
M=D                                                          // [25625] call Math.divide 2
@Math.divide                                                 // [25626] call Math.divide 2
D=A                                                          // [25627] call Math.divide 2
@R14                                                         // [25628] call Math.divide 2
M=D                                                          // [25629] call Math.divide 2
@return-268                                                  // [25630] call Math.divide 2
D=A                                                          // [25631] call Math.divide 2
@CALL                                                        // [25632] call Math.divide 2
0;JEQ                                                        // [25633] call Math.divide 2
(return-268)                                                 // [     ] call Math.divide 2
@SP                                                          // [25634] pop local 5
AM=M-1                                                       // [25635] pop local 5
D=M                                                          // [25636] pop local 5
@R13                                                         // [25637] pop local 5
M=D                                                          // [25638] pop local 5
@LCL                                                         // [25639] pop local 5
D=M                                                          // [25640] pop local 5
@5                                                           // [25641] pop local 5
D=D+A                                                        // [25642] pop local 5
@R14                                                         // [25643] pop local 5
M=D                                                          // [25644] pop local 5
@R13                                                         // [25645] pop local 5
D=M                                                          // [25646] pop local 5
@R14                                                         // [25647] pop local 5
A=M                                                          // [25648] pop local 5
M=D                                                          // [25649] pop local 5
@ARG                                                         // [25650] push argument 2
D=M                                                          // [25651] push argument 2
@2                                                           // [25652] push argument 2
A=D+A                                                        // [25653] push argument 2
D=M                                                          // [25654] push argument 2
@SP                                                          // [25655] push argument 2
M=M+1                                                        // [25656] push argument 2
A=M-1                                                        // [25657] push argument 2
M=D                                                          // [25658] push argument 2
@LCL                                                         // [25659] push local 5
D=M                                                          // [25660] push local 5
@5                                                           // [25661] push local 5
A=D+A                                                        // [25662] push local 5
D=M                                                          // [25663] push local 5
@SP                                                          // [25664] push local 5
M=M+1                                                        // [25665] push local 5
A=M-1                                                        // [25666] push local 5
M=D                                                          // [25667] push local 5
@16                                                          // [25668] push constant 16
D=A                                                          // [25669] push constant 16
@SP                                                          // [25670] push constant 16
M=M+1                                                        // [25671] push constant 16
A=M-1                                                        // [25672] push constant 16
M=D                                                          // [25673] push constant 16
@2                                                           // [25674] call Math.multiply 2
D=A                                                          // [25675] call Math.multiply 2
@R13                                                         // [25676] call Math.multiply 2
M=D                                                          // [25677] call Math.multiply 2
@Math.multiply                                               // [25678] call Math.multiply 2
D=A                                                          // [25679] call Math.multiply 2
@R14                                                         // [25680] call Math.multiply 2
M=D                                                          // [25681] call Math.multiply 2
@return-269                                                  // [25682] call Math.multiply 2
D=A                                                          // [25683] call Math.multiply 2
@CALL                                                        // [25684] call Math.multiply 2
0;JEQ                                                        // [25685] call Math.multiply 2
(return-269)                                                 // [     ] call Math.multiply 2
@SP                                                          // [25686] sub
AM=M-1                                                       // [25687] sub
D=M                                                          // [25688] sub
A=A-1                                                        // [25689] sub
M=M-D                                                        // [25690] sub
@SP                                                          // [25691] pop local 6
AM=M-1                                                       // [25692] pop local 6
D=M                                                          // [25693] pop local 6
@R13                                                         // [25694] pop local 6
M=D                                                          // [25695] pop local 6
@LCL                                                         // [25696] pop local 6
D=M                                                          // [25697] pop local 6
@6                                                           // [25698] pop local 6
D=D+A                                                        // [25699] pop local 6
@R14                                                         // [25700] pop local 6
M=D                                                          // [25701] pop local 6
@R13                                                         // [25702] pop local 6
D=M                                                          // [25703] pop local 6
@R14                                                         // [25704] pop local 6
A=M                                                          // [25705] pop local 6
M=D                                                          // [25706] pop local 6
@LCL                                                         // [25707] push local 6
D=M                                                          // [25708] push local 6
@6                                                           // [25709] push local 6
A=D+A                                                        // [25710] push local 6
D=M                                                          // [25711] push local 6
@SP                                                          // [25712] push local 6
M=M+1                                                        // [25713] push local 6
A=M-1                                                        // [25714] push local 6
M=D                                                          // [25715] push local 6
@SP                                                          // [25716] push constant 0
M=M+1                                                        // [25717] push constant 0
A=M-1                                                        // [25718] push constant 0
M=0                                                          // [25719] push constant 0
@CONTINUE_GT_29                                              // [25720] gt
D=A                                                          // [25721] gt
@R13                                                         // [25722] gt
M=D                                                          // [25723] gt
@SP                                                          // [25724] gt
AM=M-1                                                       // [25725] gt
D=M                                                          // [25726] gt
A=A-1                                                        // [25727] gt
D=D-M                                                        // [25728] gt
@INTERNAL_GT                                                 // [25729] gt
0;JEQ                                                        // [25730] gt
(CONTINUE_GT_29)                                             // [     ] gt
@SP                                                          // [25731] if-goto IF_TRUE1
AM=M-1                                                       // [25732] if-goto IF_TRUE1
D=M                                                          // [25733] if-goto IF_TRUE1
@Screen.drawRectangle$IF_TRUE1                               // [25734] if-goto IF_TRUE1
D;JNE                                                        // [25735] if-goto IF_TRUE1
@Screen.drawRectangle$IF_FALSE1                              // [25736] goto IF_FALSE1
0;JEQ                                                        // [25737] goto IF_FALSE1
(Screen.drawRectangle$IF_TRUE1)                              // [     ] label IF_TRUE1
@LCL                                                         // [25738] push local 5
D=M                                                          // [25739] push local 5
@5                                                           // [25740] push local 5
A=D+A                                                        // [25741] push local 5
D=M                                                          // [25742] push local 5
@SP                                                          // [25743] push local 5
M=M+1                                                        // [25744] push local 5
A=M-1                                                        // [25745] push local 5
M=D                                                          // [25746] push local 5
@SP                                                          // [25747] push constant 1
M=M+1                                                        // [25748] push constant 1
A=M-1                                                        // [25749] push constant 1
M=1                                                          // [25750] push constant 1
@SP                                                          // [25751] add
AM=M-1                                                       // [25752] add
D=M                                                          // [25753] add
A=A-1                                                        // [25754] add
M=D+M                                                        // [25755] add
@SP                                                          // [25756] pop local 5
AM=M-1                                                       // [25757] pop local 5
D=M                                                          // [25758] pop local 5
@R13                                                         // [25759] pop local 5
M=D                                                          // [25760] pop local 5
@LCL                                                         // [25761] pop local 5
D=M                                                          // [25762] pop local 5
@5                                                           // [25763] pop local 5
D=D+A                                                        // [25764] pop local 5
@R14                                                         // [25765] pop local 5
M=D                                                          // [25766] pop local 5
@R13                                                         // [25767] pop local 5
D=M                                                          // [25768] pop local 5
@R14                                                         // [25769] pop local 5
A=M                                                          // [25770] pop local 5
M=D                                                          // [25771] pop local 5
(Screen.drawRectangle$IF_FALSE1)                             // [     ] label IF_FALSE1
@LCL                                                         // [25772] push local 4
D=M                                                          // [25773] push local 4
@4                                                           // [25774] push local 4
A=D+A                                                        // [25775] push local 4
D=M                                                          // [25776] push local 4
@SP                                                          // [25777] push local 4
M=M+1                                                        // [25778] push local 4
A=M-1                                                        // [25779] push local 4
M=D                                                          // [25780] push local 4
@SP                                                          // [25781] pop local 11
AM=M-1                                                       // [25782] pop local 11
D=M                                                          // [25783] pop local 11
@R13                                                         // [25784] pop local 11
M=D                                                          // [25785] pop local 11
@LCL                                                         // [25786] pop local 11
D=M                                                          // [25787] pop local 11
@11                                                          // [25788] pop local 11
D=D+A                                                        // [25789] pop local 11
@R14                                                         // [25790] pop local 11
M=D                                                          // [25791] pop local 11
@R13                                                         // [25792] pop local 11
D=M                                                          // [25793] pop local 11
@R14                                                         // [25794] pop local 11
A=M                                                          // [25795] pop local 11
M=D                                                          // [25796] pop local 11
@LCL                                                         // [25797] push local 11
D=M                                                          // [25798] push local 11
@11                                                          // [25799] push local 11
A=D+A                                                        // [25800] push local 11
D=M                                                          // [25801] push local 11
@SP                                                          // [25802] push local 11
M=M+1                                                        // [25803] push local 11
A=M-1                                                        // [25804] push local 11
M=D                                                          // [25805] push local 11
@16                                                          // [25806] push constant 16
D=A                                                          // [25807] push constant 16
@SP                                                          // [25808] push constant 16
M=M+1                                                        // [25809] push constant 16
A=M-1                                                        // [25810] push constant 16
M=D                                                          // [25811] push constant 16
@2                                                           // [25812] call Math.multiply 2
D=A                                                          // [25813] call Math.multiply 2
@R13                                                         // [25814] call Math.multiply 2
M=D                                                          // [25815] call Math.multiply 2
@Math.multiply                                               // [25816] call Math.multiply 2
D=A                                                          // [25817] call Math.multiply 2
@R14                                                         // [25818] call Math.multiply 2
M=D                                                          // [25819] call Math.multiply 2
@return-270                                                  // [25820] call Math.multiply 2
D=A                                                          // [25821] call Math.multiply 2
@CALL                                                        // [25822] call Math.multiply 2
0;JEQ                                                        // [25823] call Math.multiply 2
(return-270)                                                 // [     ] call Math.multiply 2
@SP                                                          // [25824] pop local 13
AM=M-1                                                       // [25825] pop local 13
D=M                                                          // [25826] pop local 13
@R13                                                         // [25827] pop local 13
M=D                                                          // [25828] pop local 13
@LCL                                                         // [25829] pop local 13
D=M                                                          // [25830] pop local 13
@13                                                          // [25831] pop local 13
D=D+A                                                        // [25832] pop local 13
@R14                                                         // [25833] pop local 13
M=D                                                          // [25834] pop local 13
@R13                                                         // [25835] pop local 13
D=M                                                          // [25836] pop local 13
@R14                                                         // [25837] pop local 13
A=M                                                          // [25838] pop local 13
M=D                                                          // [25839] pop local 13
@LCL                                                         // [25840] push local 13
D=M                                                          // [25841] push local 13
@13                                                          // [25842] push local 13
A=D+A                                                        // [25843] push local 13
D=M                                                          // [25844] push local 13
@SP                                                          // [25845] push local 13
M=M+1                                                        // [25846] push local 13
A=M-1                                                        // [25847] push local 13
M=D                                                          // [25848] push local 13
@15                                                          // [25849] push constant 15
D=A                                                          // [25850] push constant 15
@SP                                                          // [25851] push constant 15
M=M+1                                                        // [25852] push constant 15
A=M-1                                                        // [25853] push constant 15
M=D                                                          // [25854] push constant 15
@SP                                                          // [25855] add
AM=M-1                                                       // [25856] add
D=M                                                          // [25857] add
A=A-1                                                        // [25858] add
M=D+M                                                        // [25859] add
@SP                                                          // [25860] pop local 14
AM=M-1                                                       // [25861] pop local 14
D=M                                                          // [25862] pop local 14
@R13                                                         // [25863] pop local 14
M=D                                                          // [25864] pop local 14
@LCL                                                         // [25865] pop local 14
D=M                                                          // [25866] pop local 14
@14                                                          // [25867] pop local 14
D=D+A                                                        // [25868] pop local 14
@R14                                                         // [25869] pop local 14
M=D                                                          // [25870] pop local 14
@R13                                                         // [25871] pop local 14
D=M                                                          // [25872] pop local 14
@R14                                                         // [25873] pop local 14
A=M                                                          // [25874] pop local 14
M=D                                                          // [25875] pop local 14
(Screen.drawRectangle$WHILE_EXP0)                            // [     ] label WHILE_EXP0
@LCL                                                         // [25876] push local 11
D=M                                                          // [25877] push local 11
@11                                                          // [25878] push local 11
A=D+A                                                        // [25879] push local 11
D=M                                                          // [25880] push local 11
@SP                                                          // [25881] push local 11
M=M+1                                                        // [25882] push local 11
A=M-1                                                        // [25883] push local 11
M=D                                                          // [25884] push local 11
@LCL                                                         // [25885] push local 5
D=M                                                          // [25886] push local 5
@5                                                           // [25887] push local 5
A=D+A                                                        // [25888] push local 5
D=M                                                          // [25889] push local 5
@SP                                                          // [25890] push local 5
M=M+1                                                        // [25891] push local 5
A=M-1                                                        // [25892] push local 5
M=D                                                          // [25893] push local 5
@CONTINUE_LT_37                                              // [25894] lt
D=A                                                          // [25895] lt
@R13                                                         // [25896] lt
M=D                                                          // [25897] lt
@SP                                                          // [25898] lt
AM=M-1                                                       // [25899] lt
D=M                                                          // [25900] lt
A=A-1                                                        // [25901] lt
D=D-M                                                        // [25902] lt
@INTERNAL_LT                                                 // [25903] lt
0;JEQ                                                        // [25904] lt
(CONTINUE_LT_37)                                             // [     ] lt
@LCL                                                         // [25905] push local 11
D=M                                                          // [25906] push local 11
@11                                                          // [25907] push local 11
A=D+A                                                        // [25908] push local 11
D=M                                                          // [25909] push local 11
@SP                                                          // [25910] push local 11
M=M+1                                                        // [25911] push local 11
A=M-1                                                        // [25912] push local 11
M=D                                                          // [25913] push local 11
@LCL                                                         // [25914] push local 5
D=M                                                          // [25915] push local 5
@5                                                           // [25916] push local 5
A=D+A                                                        // [25917] push local 5
D=M                                                          // [25918] push local 5
@SP                                                          // [25919] push local 5
M=M+1                                                        // [25920] push local 5
A=M-1                                                        // [25921] push local 5
M=D                                                          // [25922] push local 5
@CONTINUE_EQ_24                                              // [25923] eq
D=A                                                          // [25924] eq
@R13                                                         // [25925] eq
M=D                                                          // [25926] eq
@SP                                                          // [25927] eq
AM=M-1                                                       // [25928] eq
D=M                                                          // [25929] eq
A=A-1                                                        // [25930] eq
D=D-M                                                        // [25931] eq
@INTERNAL_EQ                                                 // [25932] eq
0;JEQ                                                        // [25933] eq
(CONTINUE_EQ_24)                                             // [     ] eq
@SP                                                          // [25934] or
AM=M-1                                                       // [25935] or
D=M                                                          // [25936] or
A=A-1                                                        // [25937] or
M=D|M                                                        // [25938] or
@SP                                                          // [25939] not
A=M-1                                                        // [25940] not
D=M                                                          // [25941] not
M=!D                                                         // [25942] not
@SP                                                          // [25943] if-goto WHILE_END0
AM=M-1                                                       // [25944] if-goto WHILE_END0
D=M                                                          // [25945] if-goto WHILE_END0
@Screen.drawRectangle$WHILE_END0                             // [25946] if-goto WHILE_END0
D;JNE                                                        // [25947] if-goto WHILE_END0
@ARG                                                         // [25948] push argument 0
D=M                                                          // [25949] push argument 0
@0                                                           // [25950] push argument 0
A=D+A                                                        // [25951] push argument 0
D=M                                                          // [25952] push argument 0
@SP                                                          // [25953] push argument 0
M=M+1                                                        // [25954] push argument 0
A=M-1                                                        // [25955] push argument 0
M=D                                                          // [25956] push argument 0
@LCL                                                         // [25957] push local 13
D=M                                                          // [25958] push local 13
@13                                                          // [25959] push local 13
A=D+A                                                        // [25960] push local 13
D=M                                                          // [25961] push local 13
@SP                                                          // [25962] push local 13
M=M+1                                                        // [25963] push local 13
A=M-1                                                        // [25964] push local 13
M=D                                                          // [25965] push local 13
@CONTINUE_LT_38                                              // [25966] lt
D=A                                                          // [25967] lt
@R13                                                         // [25968] lt
M=D                                                          // [25969] lt
@SP                                                          // [25970] lt
AM=M-1                                                       // [25971] lt
D=M                                                          // [25972] lt
A=A-1                                                        // [25973] lt
D=D-M                                                        // [25974] lt
@INTERNAL_LT                                                 // [25975] lt
0;JEQ                                                        // [25976] lt
(CONTINUE_LT_38)                                             // [     ] lt
@ARG                                                         // [25977] push argument 2
D=M                                                          // [25978] push argument 2
@2                                                           // [25979] push argument 2
A=D+A                                                        // [25980] push argument 2
D=M                                                          // [25981] push argument 2
@SP                                                          // [25982] push argument 2
M=M+1                                                        // [25983] push argument 2
A=M-1                                                        // [25984] push argument 2
M=D                                                          // [25985] push argument 2
@LCL                                                         // [25986] push local 13
D=M                                                          // [25987] push local 13
@13                                                          // [25988] push local 13
A=D+A                                                        // [25989] push local 13
D=M                                                          // [25990] push local 13
@SP                                                          // [25991] push local 13
M=M+1                                                        // [25992] push local 13
A=M-1                                                        // [25993] push local 13
M=D                                                          // [25994] push local 13
@CONTINUE_LT_39                                              // [25995] lt
D=A                                                          // [25996] lt
@R13                                                         // [25997] lt
M=D                                                          // [25998] lt
@SP                                                          // [25999] lt
AM=M-1                                                       // [26000] lt
D=M                                                          // [26001] lt
A=A-1                                                        // [26002] lt
D=D-M                                                        // [26003] lt
@INTERNAL_LT                                                 // [26004] lt
0;JEQ                                                        // [26005] lt
(CONTINUE_LT_39)                                             // [     ] lt
@SP                                                          // [26006] and
AM=M-1                                                       // [26007] and
D=M                                                          // [26008] and
A=A-1                                                        // [26009] and
M=D&M                                                        // [26010] and
@ARG                                                         // [26011] push argument 0
D=M                                                          // [26012] push argument 0
@0                                                           // [26013] push argument 0
A=D+A                                                        // [26014] push argument 0
D=M                                                          // [26015] push argument 0
@SP                                                          // [26016] push argument 0
M=M+1                                                        // [26017] push argument 0
A=M-1                                                        // [26018] push argument 0
M=D                                                          // [26019] push argument 0
@LCL                                                         // [26020] push local 14
D=M                                                          // [26021] push local 14
@14                                                          // [26022] push local 14
A=D+A                                                        // [26023] push local 14
D=M                                                          // [26024] push local 14
@SP                                                          // [26025] push local 14
M=M+1                                                        // [26026] push local 14
A=M-1                                                        // [26027] push local 14
M=D                                                          // [26028] push local 14
@CONTINUE_GT_30                                              // [26029] gt
D=A                                                          // [26030] gt
@R13                                                         // [26031] gt
M=D                                                          // [26032] gt
@SP                                                          // [26033] gt
AM=M-1                                                       // [26034] gt
D=M                                                          // [26035] gt
A=A-1                                                        // [26036] gt
D=D-M                                                        // [26037] gt
@INTERNAL_GT                                                 // [26038] gt
0;JEQ                                                        // [26039] gt
(CONTINUE_GT_30)                                             // [     ] gt
@ARG                                                         // [26040] push argument 2
D=M                                                          // [26041] push argument 2
@2                                                           // [26042] push argument 2
A=D+A                                                        // [26043] push argument 2
D=M                                                          // [26044] push argument 2
@SP                                                          // [26045] push argument 2
M=M+1                                                        // [26046] push argument 2
A=M-1                                                        // [26047] push argument 2
M=D                                                          // [26048] push argument 2
@LCL                                                         // [26049] push local 14
D=M                                                          // [26050] push local 14
@14                                                          // [26051] push local 14
A=D+A                                                        // [26052] push local 14
D=M                                                          // [26053] push local 14
@SP                                                          // [26054] push local 14
M=M+1                                                        // [26055] push local 14
A=M-1                                                        // [26056] push local 14
M=D                                                          // [26057] push local 14
@CONTINUE_GT_31                                              // [26058] gt
D=A                                                          // [26059] gt
@R13                                                         // [26060] gt
M=D                                                          // [26061] gt
@SP                                                          // [26062] gt
AM=M-1                                                       // [26063] gt
D=M                                                          // [26064] gt
A=A-1                                                        // [26065] gt
D=D-M                                                        // [26066] gt
@INTERNAL_GT                                                 // [26067] gt
0;JEQ                                                        // [26068] gt
(CONTINUE_GT_31)                                             // [     ] gt
@SP                                                          // [26069] and
AM=M-1                                                       // [26070] and
D=M                                                          // [26071] and
A=A-1                                                        // [26072] and
M=D&M                                                        // [26073] and
@SP                                                          // [26074] or
AM=M-1                                                       // [26075] or
D=M                                                          // [26076] or
A=A-1                                                        // [26077] or
M=D|M                                                        // [26078] or
@SP                                                          // [26079] if-goto IF_TRUE2
AM=M-1                                                       // [26080] if-goto IF_TRUE2
D=M                                                          // [26081] if-goto IF_TRUE2
@Screen.drawRectangle$IF_TRUE2                               // [26082] if-goto IF_TRUE2
D;JNE                                                        // [26083] if-goto IF_TRUE2
@Screen.drawRectangle$IF_FALSE2                              // [26084] goto IF_FALSE2
0;JEQ                                                        // [26085] goto IF_FALSE2
(Screen.drawRectangle$IF_TRUE2)                              // [     ] label IF_TRUE2
@SP                                                          // [26086] push constant 0
M=M+1                                                        // [26087] push constant 0
A=M-1                                                        // [26088] push constant 0
M=0                                                          // [26089] push constant 0
@SP                                                          // [26090] pop local 18
AM=M-1                                                       // [26091] pop local 18
D=M                                                          // [26092] pop local 18
@R13                                                         // [26093] pop local 18
M=D                                                          // [26094] pop local 18
@LCL                                                         // [26095] pop local 18
D=M                                                          // [26096] pop local 18
@18                                                          // [26097] pop local 18
D=D+A                                                        // [26098] pop local 18
@R14                                                         // [26099] pop local 18
M=D                                                          // [26100] pop local 18
@R13                                                         // [26101] pop local 18
D=M                                                          // [26102] pop local 18
@R14                                                         // [26103] pop local 18
A=M                                                          // [26104] pop local 18
M=D                                                          // [26105] pop local 18
@Screen.drawRectangle$IF_END2                                // [26106] goto IF_END2
0;JEQ                                                        // [26107] goto IF_END2
(Screen.drawRectangle$IF_FALSE2)                             // [     ] label IF_FALSE2
@ARG                                                         // [26108] push argument 0
D=M                                                          // [26109] push argument 0
@0                                                           // [26110] push argument 0
A=D+A                                                        // [26111] push argument 0
D=M                                                          // [26112] push argument 0
@SP                                                          // [26113] push argument 0
M=M+1                                                        // [26114] push argument 0
A=M-1                                                        // [26115] push argument 0
M=D                                                          // [26116] push argument 0
@LCL                                                         // [26117] push local 13
D=M                                                          // [26118] push local 13
@13                                                          // [26119] push local 13
A=D+A                                                        // [26120] push local 13
D=M                                                          // [26121] push local 13
@SP                                                          // [26122] push local 13
M=M+1                                                        // [26123] push local 13
A=M-1                                                        // [26124] push local 13
M=D                                                          // [26125] push local 13
@CONTINUE_LT_40                                              // [26126] lt
D=A                                                          // [26127] lt
@R13                                                         // [26128] lt
M=D                                                          // [26129] lt
@SP                                                          // [26130] lt
AM=M-1                                                       // [26131] lt
D=M                                                          // [26132] lt
A=A-1                                                        // [26133] lt
D=D-M                                                        // [26134] lt
@INTERNAL_LT                                                 // [26135] lt
0;JEQ                                                        // [26136] lt
(CONTINUE_LT_40)                                             // [     ] lt
@ARG                                                         // [26137] push argument 2
D=M                                                          // [26138] push argument 2
@2                                                           // [26139] push argument 2
A=D+A                                                        // [26140] push argument 2
D=M                                                          // [26141] push argument 2
@SP                                                          // [26142] push argument 2
M=M+1                                                        // [26143] push argument 2
A=M-1                                                        // [26144] push argument 2
M=D                                                          // [26145] push argument 2
@LCL                                                         // [26146] push local 14
D=M                                                          // [26147] push local 14
@14                                                          // [26148] push local 14
A=D+A                                                        // [26149] push local 14
D=M                                                          // [26150] push local 14
@SP                                                          // [26151] push local 14
M=M+1                                                        // [26152] push local 14
A=M-1                                                        // [26153] push local 14
M=D                                                          // [26154] push local 14
@CONTINUE_GT_32                                              // [26155] gt
D=A                                                          // [26156] gt
@R13                                                         // [26157] gt
M=D                                                          // [26158] gt
@SP                                                          // [26159] gt
AM=M-1                                                       // [26160] gt
D=M                                                          // [26161] gt
A=A-1                                                        // [26162] gt
D=D-M                                                        // [26163] gt
@INTERNAL_GT                                                 // [26164] gt
0;JEQ                                                        // [26165] gt
(CONTINUE_GT_32)                                             // [     ] gt
@SP                                                          // [26166] and
AM=M-1                                                       // [26167] and
D=M                                                          // [26168] and
A=A-1                                                        // [26169] and
M=D&M                                                        // [26170] and
@SP                                                          // [26171] if-goto IF_TRUE3
AM=M-1                                                       // [26172] if-goto IF_TRUE3
D=M                                                          // [26173] if-goto IF_TRUE3
@Screen.drawRectangle$IF_TRUE3                               // [26174] if-goto IF_TRUE3
D;JNE                                                        // [26175] if-goto IF_TRUE3
@Screen.drawRectangle$IF_FALSE3                              // [26176] goto IF_FALSE3
0;JEQ                                                        // [26177] goto IF_FALSE3
(Screen.drawRectangle$IF_TRUE3)                              // [     ] label IF_TRUE3
@SP                                                          // [26178] push constant 1
M=M+1                                                        // [26179] push constant 1
A=M-1                                                        // [26180] push constant 1
M=1                                                          // [26181] push constant 1
@SP                                                          // [26182] neg
A=M-1                                                        // [26183] neg
D=M                                                          // [26184] neg
M=-D                                                         // [26185] neg
@SP                                                          // [26186] pop local 18
AM=M-1                                                       // [26187] pop local 18
D=M                                                          // [26188] pop local 18
@R13                                                         // [26189] pop local 18
M=D                                                          // [26190] pop local 18
@LCL                                                         // [26191] pop local 18
D=M                                                          // [26192] pop local 18
@18                                                          // [26193] pop local 18
D=D+A                                                        // [26194] pop local 18
@R14                                                         // [26195] pop local 18
M=D                                                          // [26196] pop local 18
@R13                                                         // [26197] pop local 18
D=M                                                          // [26198] pop local 18
@R14                                                         // [26199] pop local 18
A=M                                                          // [26200] pop local 18
M=D                                                          // [26201] pop local 18
@Screen.drawRectangle$IF_END3                                // [26202] goto IF_END3
0;JEQ                                                        // [26203] goto IF_END3
(Screen.drawRectangle$IF_FALSE3)                             // [     ] label IF_FALSE3
@LCL                                                         // [26204] push local 13
D=M                                                          // [26205] push local 13
@13                                                          // [26206] push local 13
A=D+A                                                        // [26207] push local 13
D=M                                                          // [26208] push local 13
@SP                                                          // [26209] push local 13
M=M+1                                                        // [26210] push local 13
A=M-1                                                        // [26211] push local 13
M=D                                                          // [26212] push local 13
@ARG                                                         // [26213] push argument 0
D=M                                                          // [26214] push argument 0
@0                                                           // [26215] push argument 0
A=D+A                                                        // [26216] push argument 0
D=M                                                          // [26217] push argument 0
@SP                                                          // [26218] push argument 0
M=M+1                                                        // [26219] push argument 0
A=M-1                                                        // [26220] push argument 0
M=D                                                          // [26221] push argument 0
@2                                                           // [26222] call Math.max 2
D=A                                                          // [26223] call Math.max 2
@R13                                                         // [26224] call Math.max 2
M=D                                                          // [26225] call Math.max 2
@Math.max                                                    // [26226] call Math.max 2
D=A                                                          // [26227] call Math.max 2
@R14                                                         // [26228] call Math.max 2
M=D                                                          // [26229] call Math.max 2
@return-271                                                  // [26230] call Math.max 2
D=A                                                          // [26231] call Math.max 2
@CALL                                                        // [26232] call Math.max 2
0;JEQ                                                        // [26233] call Math.max 2
(return-271)                                                 // [     ] call Math.max 2
@SP                                                          // [26234] pop local 16
AM=M-1                                                       // [26235] pop local 16
D=M                                                          // [26236] pop local 16
@R13                                                         // [26237] pop local 16
M=D                                                          // [26238] pop local 16
@LCL                                                         // [26239] pop local 16
D=M                                                          // [26240] pop local 16
@16                                                          // [26241] pop local 16
D=D+A                                                        // [26242] pop local 16
@R14                                                         // [26243] pop local 16
M=D                                                          // [26244] pop local 16
@R13                                                         // [26245] pop local 16
D=M                                                          // [26246] pop local 16
@R14                                                         // [26247] pop local 16
A=M                                                          // [26248] pop local 16
M=D                                                          // [26249] pop local 16
@LCL                                                         // [26250] push local 14
D=M                                                          // [26251] push local 14
@14                                                          // [26252] push local 14
A=D+A                                                        // [26253] push local 14
D=M                                                          // [26254] push local 14
@SP                                                          // [26255] push local 14
M=M+1                                                        // [26256] push local 14
A=M-1                                                        // [26257] push local 14
M=D                                                          // [26258] push local 14
@LCL                                                         // [26259] push local 16
D=M                                                          // [26260] push local 16
@16                                                          // [26261] push local 16
A=D+A                                                        // [26262] push local 16
D=M                                                          // [26263] push local 16
@SP                                                          // [26264] push local 16
M=M+1                                                        // [26265] push local 16
A=M-1                                                        // [26266] push local 16
M=D                                                          // [26267] push local 16
@2                                                           // [26268] call Math.min 2
D=A                                                          // [26269] call Math.min 2
@R13                                                         // [26270] call Math.min 2
M=D                                                          // [26271] call Math.min 2
@Math.min                                                    // [26272] call Math.min 2
D=A                                                          // [26273] call Math.min 2
@R14                                                         // [26274] call Math.min 2
M=D                                                          // [26275] call Math.min 2
@return-272                                                  // [26276] call Math.min 2
D=A                                                          // [26277] call Math.min 2
@CALL                                                        // [26278] call Math.min 2
0;JEQ                                                        // [26279] call Math.min 2
(return-272)                                                 // [     ] call Math.min 2
@SP                                                          // [26280] pop local 16
AM=M-1                                                       // [26281] pop local 16
D=M                                                          // [26282] pop local 16
@R13                                                         // [26283] pop local 16
M=D                                                          // [26284] pop local 16
@LCL                                                         // [26285] pop local 16
D=M                                                          // [26286] pop local 16
@16                                                          // [26287] pop local 16
D=D+A                                                        // [26288] pop local 16
@R14                                                         // [26289] pop local 16
M=D                                                          // [26290] pop local 16
@R13                                                         // [26291] pop local 16
D=M                                                          // [26292] pop local 16
@R14                                                         // [26293] pop local 16
A=M                                                          // [26294] pop local 16
M=D                                                          // [26295] pop local 16
@LCL                                                         // [26296] push local 16
D=M                                                          // [26297] push local 16
@16                                                          // [26298] push local 16
A=D+A                                                        // [26299] push local 16
D=M                                                          // [26300] push local 16
@SP                                                          // [26301] push local 16
M=M+1                                                        // [26302] push local 16
A=M-1                                                        // [26303] push local 16
M=D                                                          // [26304] push local 16
@LCL                                                         // [26305] push local 13
D=M                                                          // [26306] push local 13
@13                                                          // [26307] push local 13
A=D+A                                                        // [26308] push local 13
D=M                                                          // [26309] push local 13
@SP                                                          // [26310] push local 13
M=M+1                                                        // [26311] push local 13
A=M-1                                                        // [26312] push local 13
M=D                                                          // [26313] push local 13
@SP                                                          // [26314] sub
AM=M-1                                                       // [26315] sub
D=M                                                          // [26316] sub
A=A-1                                                        // [26317] sub
M=M-D                                                        // [26318] sub
@SP                                                          // [26319] pop local 16
AM=M-1                                                       // [26320] pop local 16
D=M                                                          // [26321] pop local 16
@R13                                                         // [26322] pop local 16
M=D                                                          // [26323] pop local 16
@LCL                                                         // [26324] pop local 16
D=M                                                          // [26325] pop local 16
@16                                                          // [26326] pop local 16
D=D+A                                                        // [26327] pop local 16
@R14                                                         // [26328] pop local 16
M=D                                                          // [26329] pop local 16
@R13                                                         // [26330] pop local 16
D=M                                                          // [26331] pop local 16
@R14                                                         // [26332] pop local 16
A=M                                                          // [26333] pop local 16
M=D                                                          // [26334] pop local 16
@LCL                                                         // [26335] push local 13
D=M                                                          // [26336] push local 13
@13                                                          // [26337] push local 13
A=D+A                                                        // [26338] push local 13
D=M                                                          // [26339] push local 13
@SP                                                          // [26340] push local 13
M=M+1                                                        // [26341] push local 13
A=M-1                                                        // [26342] push local 13
M=D                                                          // [26343] push local 13
@ARG                                                         // [26344] push argument 2
D=M                                                          // [26345] push argument 2
@2                                                           // [26346] push argument 2
A=D+A                                                        // [26347] push argument 2
D=M                                                          // [26348] push argument 2
@SP                                                          // [26349] push argument 2
M=M+1                                                        // [26350] push argument 2
A=M-1                                                        // [26351] push argument 2
M=D                                                          // [26352] push argument 2
@2                                                           // [26353] call Math.max 2
D=A                                                          // [26354] call Math.max 2
@R13                                                         // [26355] call Math.max 2
M=D                                                          // [26356] call Math.max 2
@Math.max                                                    // [26357] call Math.max 2
D=A                                                          // [26358] call Math.max 2
@R14                                                         // [26359] call Math.max 2
M=D                                                          // [26360] call Math.max 2
@return-273                                                  // [26361] call Math.max 2
D=A                                                          // [26362] call Math.max 2
@CALL                                                        // [26363] call Math.max 2
0;JEQ                                                        // [26364] call Math.max 2
(return-273)                                                 // [     ] call Math.max 2
@SP                                                          // [26365] pop local 17
AM=M-1                                                       // [26366] pop local 17
D=M                                                          // [26367] pop local 17
@R13                                                         // [26368] pop local 17
M=D                                                          // [26369] pop local 17
@LCL                                                         // [26370] pop local 17
D=M                                                          // [26371] pop local 17
@17                                                          // [26372] pop local 17
D=D+A                                                        // [26373] pop local 17
@R14                                                         // [26374] pop local 17
M=D                                                          // [26375] pop local 17
@R13                                                         // [26376] pop local 17
D=M                                                          // [26377] pop local 17
@R14                                                         // [26378] pop local 17
A=M                                                          // [26379] pop local 17
M=D                                                          // [26380] pop local 17
@LCL                                                         // [26381] push local 14
D=M                                                          // [26382] push local 14
@14                                                          // [26383] push local 14
A=D+A                                                        // [26384] push local 14
D=M                                                          // [26385] push local 14
@SP                                                          // [26386] push local 14
M=M+1                                                        // [26387] push local 14
A=M-1                                                        // [26388] push local 14
M=D                                                          // [26389] push local 14
@LCL                                                         // [26390] push local 17
D=M                                                          // [26391] push local 17
@17                                                          // [26392] push local 17
A=D+A                                                        // [26393] push local 17
D=M                                                          // [26394] push local 17
@SP                                                          // [26395] push local 17
M=M+1                                                        // [26396] push local 17
A=M-1                                                        // [26397] push local 17
M=D                                                          // [26398] push local 17
@2                                                           // [26399] call Math.min 2
D=A                                                          // [26400] call Math.min 2
@R13                                                         // [26401] call Math.min 2
M=D                                                          // [26402] call Math.min 2
@Math.min                                                    // [26403] call Math.min 2
D=A                                                          // [26404] call Math.min 2
@R14                                                         // [26405] call Math.min 2
M=D                                                          // [26406] call Math.min 2
@return-274                                                  // [26407] call Math.min 2
D=A                                                          // [26408] call Math.min 2
@CALL                                                        // [26409] call Math.min 2
0;JEQ                                                        // [26410] call Math.min 2
(return-274)                                                 // [     ] call Math.min 2
@SP                                                          // [26411] pop local 17
AM=M-1                                                       // [26412] pop local 17
D=M                                                          // [26413] pop local 17
@R13                                                         // [26414] pop local 17
M=D                                                          // [26415] pop local 17
@LCL                                                         // [26416] pop local 17
D=M                                                          // [26417] pop local 17
@17                                                          // [26418] pop local 17
D=D+A                                                        // [26419] pop local 17
@R14                                                         // [26420] pop local 17
M=D                                                          // [26421] pop local 17
@R13                                                         // [26422] pop local 17
D=M                                                          // [26423] pop local 17
@R14                                                         // [26424] pop local 17
A=M                                                          // [26425] pop local 17
M=D                                                          // [26426] pop local 17
@LCL                                                         // [26427] push local 17
D=M                                                          // [26428] push local 17
@17                                                          // [26429] push local 17
A=D+A                                                        // [26430] push local 17
D=M                                                          // [26431] push local 17
@SP                                                          // [26432] push local 17
M=M+1                                                        // [26433] push local 17
A=M-1                                                        // [26434] push local 17
M=D                                                          // [26435] push local 17
@LCL                                                         // [26436] push local 13
D=M                                                          // [26437] push local 13
@13                                                          // [26438] push local 13
A=D+A                                                        // [26439] push local 13
D=M                                                          // [26440] push local 13
@SP                                                          // [26441] push local 13
M=M+1                                                        // [26442] push local 13
A=M-1                                                        // [26443] push local 13
M=D                                                          // [26444] push local 13
@SP                                                          // [26445] sub
AM=M-1                                                       // [26446] sub
D=M                                                          // [26447] sub
A=A-1                                                        // [26448] sub
M=M-D                                                        // [26449] sub
@SP                                                          // [26450] pop local 17
AM=M-1                                                       // [26451] pop local 17
D=M                                                          // [26452] pop local 17
@R13                                                         // [26453] pop local 17
M=D                                                          // [26454] pop local 17
@LCL                                                         // [26455] pop local 17
D=M                                                          // [26456] pop local 17
@17                                                          // [26457] pop local 17
D=D+A                                                        // [26458] pop local 17
@R14                                                         // [26459] pop local 17
M=D                                                          // [26460] pop local 17
@R13                                                         // [26461] pop local 17
D=M                                                          // [26462] pop local 17
@R14                                                         // [26463] pop local 17
A=M                                                          // [26464] pop local 17
M=D                                                          // [26465] pop local 17
@SP                                                          // [26466] push constant 0
M=M+1                                                        // [26467] push constant 0
A=M-1                                                        // [26468] push constant 0
M=0                                                          // [26469] push constant 0
@SP                                                          // [26470] pop local 18
AM=M-1                                                       // [26471] pop local 18
D=M                                                          // [26472] pop local 18
@R13                                                         // [26473] pop local 18
M=D                                                          // [26474] pop local 18
@LCL                                                         // [26475] pop local 18
D=M                                                          // [26476] pop local 18
@18                                                          // [26477] pop local 18
D=D+A                                                        // [26478] pop local 18
@R14                                                         // [26479] pop local 18
M=D                                                          // [26480] pop local 18
@R13                                                         // [26481] pop local 18
D=M                                                          // [26482] pop local 18
@R14                                                         // [26483] pop local 18
A=M                                                          // [26484] pop local 18
M=D                                                          // [26485] pop local 18
@LCL                                                         // [26486] push local 16
D=M                                                          // [26487] push local 16
@16                                                          // [26488] push local 16
A=D+A                                                        // [26489] push local 16
D=M                                                          // [26490] push local 16
@SP                                                          // [26491] push local 16
M=M+1                                                        // [26492] push local 16
A=M-1                                                        // [26493] push local 16
M=D                                                          // [26494] push local 16
@SP                                                          // [26495] pop local 15
AM=M-1                                                       // [26496] pop local 15
D=M                                                          // [26497] pop local 15
@R13                                                         // [26498] pop local 15
M=D                                                          // [26499] pop local 15
@LCL                                                         // [26500] pop local 15
D=M                                                          // [26501] pop local 15
@15                                                          // [26502] pop local 15
D=D+A                                                        // [26503] pop local 15
@R14                                                         // [26504] pop local 15
M=D                                                          // [26505] pop local 15
@R13                                                         // [26506] pop local 15
D=M                                                          // [26507] pop local 15
@R14                                                         // [26508] pop local 15
A=M                                                          // [26509] pop local 15
M=D                                                          // [26510] pop local 15
(Screen.drawRectangle$WHILE_EXP1)                            // [     ] label WHILE_EXP1
@LCL                                                         // [26511] push local 15
D=M                                                          // [26512] push local 15
@15                                                          // [26513] push local 15
A=D+A                                                        // [26514] push local 15
D=M                                                          // [26515] push local 15
@SP                                                          // [26516] push local 15
M=M+1                                                        // [26517] push local 15
A=M-1                                                        // [26518] push local 15
M=D                                                          // [26519] push local 15
@LCL                                                         // [26520] push local 17
D=M                                                          // [26521] push local 17
@17                                                          // [26522] push local 17
A=D+A                                                        // [26523] push local 17
D=M                                                          // [26524] push local 17
@SP                                                          // [26525] push local 17
M=M+1                                                        // [26526] push local 17
A=M-1                                                        // [26527] push local 17
M=D                                                          // [26528] push local 17
@CONTINUE_LT_41                                              // [26529] lt
D=A                                                          // [26530] lt
@R13                                                         // [26531] lt
M=D                                                          // [26532] lt
@SP                                                          // [26533] lt
AM=M-1                                                       // [26534] lt
D=M                                                          // [26535] lt
A=A-1                                                        // [26536] lt
D=D-M                                                        // [26537] lt
@INTERNAL_LT                                                 // [26538] lt
0;JEQ                                                        // [26539] lt
(CONTINUE_LT_41)                                             // [     ] lt
@LCL                                                         // [26540] push local 15
D=M                                                          // [26541] push local 15
@15                                                          // [26542] push local 15
A=D+A                                                        // [26543] push local 15
D=M                                                          // [26544] push local 15
@SP                                                          // [26545] push local 15
M=M+1                                                        // [26546] push local 15
A=M-1                                                        // [26547] push local 15
M=D                                                          // [26548] push local 15
@LCL                                                         // [26549] push local 17
D=M                                                          // [26550] push local 17
@17                                                          // [26551] push local 17
A=D+A                                                        // [26552] push local 17
D=M                                                          // [26553] push local 17
@SP                                                          // [26554] push local 17
M=M+1                                                        // [26555] push local 17
A=M-1                                                        // [26556] push local 17
M=D                                                          // [26557] push local 17
@CONTINUE_EQ_25                                              // [26558] eq
D=A                                                          // [26559] eq
@R13                                                         // [26560] eq
M=D                                                          // [26561] eq
@SP                                                          // [26562] eq
AM=M-1                                                       // [26563] eq
D=M                                                          // [26564] eq
A=A-1                                                        // [26565] eq
D=D-M                                                        // [26566] eq
@INTERNAL_EQ                                                 // [26567] eq
0;JEQ                                                        // [26568] eq
(CONTINUE_EQ_25)                                             // [     ] eq
@SP                                                          // [26569] or
AM=M-1                                                       // [26570] or
D=M                                                          // [26571] or
A=A-1                                                        // [26572] or
M=D|M                                                        // [26573] or
@SP                                                          // [26574] not
A=M-1                                                        // [26575] not
D=M                                                          // [26576] not
M=!D                                                         // [26577] not
@SP                                                          // [26578] if-goto WHILE_END1
AM=M-1                                                       // [26579] if-goto WHILE_END1
D=M                                                          // [26580] if-goto WHILE_END1
@Screen.drawRectangle$WHILE_END1                             // [26581] if-goto WHILE_END1
D;JNE                                                        // [26582] if-goto WHILE_END1
@LCL                                                         // [26583] push local 18
D=M                                                          // [26584] push local 18
@18                                                          // [26585] push local 18
A=D+A                                                        // [26586] push local 18
D=M                                                          // [26587] push local 18
@SP                                                          // [26588] push local 18
M=M+1                                                        // [26589] push local 18
A=M-1                                                        // [26590] push local 18
M=D                                                          // [26591] push local 18
@LCL                                                         // [26592] push local 15
D=M                                                          // [26593] push local 15
@15                                                          // [26594] push local 15
A=D+A                                                        // [26595] push local 15
D=M                                                          // [26596] push local 15
@SP                                                          // [26597] push local 15
M=M+1                                                        // [26598] push local 15
A=M-1                                                        // [26599] push local 15
M=D                                                          // [26600] push local 15
@Screen.2                                                    // [26601] push static 2
D=M                                                          // [26602] push static 2
@SP                                                          // [26603] push static 2
M=M+1                                                        // [26604] push static 2
A=M-1                                                        // [26605] push static 2
M=D                                                          // [26606] push static 2
@SP                                                          // [26607] add
AM=M-1                                                       // [26608] add
D=M                                                          // [26609] add
A=A-1                                                        // [26610] add
M=D+M                                                        // [26611] add
@SP                                                          // [26612] pop pointer 1
AM=M-1                                                       // [26613] pop pointer 1
D=M                                                          // [26614] pop pointer 1
@4                                                           // [26615] pop pointer 1
M=D                                                          // [26616] pop pointer 1
@THAT                                                        // [26617] push that 0
D=M                                                          // [26618] push that 0
@0                                                           // [26619] push that 0
A=D+A                                                        // [26620] push that 0
D=M                                                          // [26621] push that 0
@SP                                                          // [26622] push that 0
M=M+1                                                        // [26623] push that 0
A=M-1                                                        // [26624] push that 0
M=D                                                          // [26625] push that 0
@SP                                                          // [26626] or
AM=M-1                                                       // [26627] or
D=M                                                          // [26628] or
A=A-1                                                        // [26629] or
M=D|M                                                        // [26630] or
@SP                                                          // [26631] pop local 18
AM=M-1                                                       // [26632] pop local 18
D=M                                                          // [26633] pop local 18
@R13                                                         // [26634] pop local 18
M=D                                                          // [26635] pop local 18
@LCL                                                         // [26636] pop local 18
D=M                                                          // [26637] pop local 18
@18                                                          // [26638] pop local 18
D=D+A                                                        // [26639] pop local 18
@R14                                                         // [26640] pop local 18
M=D                                                          // [26641] pop local 18
@R13                                                         // [26642] pop local 18
D=M                                                          // [26643] pop local 18
@R14                                                         // [26644] pop local 18
A=M                                                          // [26645] pop local 18
M=D                                                          // [26646] pop local 18
@LCL                                                         // [26647] push local 15
D=M                                                          // [26648] push local 15
@15                                                          // [26649] push local 15
A=D+A                                                        // [26650] push local 15
D=M                                                          // [26651] push local 15
@SP                                                          // [26652] push local 15
M=M+1                                                        // [26653] push local 15
A=M-1                                                        // [26654] push local 15
M=D                                                          // [26655] push local 15
@SP                                                          // [26656] push constant 1
M=M+1                                                        // [26657] push constant 1
A=M-1                                                        // [26658] push constant 1
M=1                                                          // [26659] push constant 1
@SP                                                          // [26660] add
AM=M-1                                                       // [26661] add
D=M                                                          // [26662] add
A=A-1                                                        // [26663] add
M=D+M                                                        // [26664] add
@SP                                                          // [26665] pop local 15
AM=M-1                                                       // [26666] pop local 15
D=M                                                          // [26667] pop local 15
@R13                                                         // [26668] pop local 15
M=D                                                          // [26669] pop local 15
@LCL                                                         // [26670] pop local 15
D=M                                                          // [26671] pop local 15
@15                                                          // [26672] pop local 15
D=D+A                                                        // [26673] pop local 15
@R14                                                         // [26674] pop local 15
M=D                                                          // [26675] pop local 15
@R13                                                         // [26676] pop local 15
D=M                                                          // [26677] pop local 15
@R14                                                         // [26678] pop local 15
A=M                                                          // [26679] pop local 15
M=D                                                          // [26680] pop local 15
@Screen.drawRectangle$WHILE_EXP1                             // [26681] goto WHILE_EXP1
0;JEQ                                                        // [26682] goto WHILE_EXP1
(Screen.drawRectangle$WHILE_END1)                            // [     ] label WHILE_END1
(Screen.drawRectangle$IF_END3)                               // [     ] label IF_END3
(Screen.drawRectangle$IF_END2)                               // [     ] label IF_END2
@LCL                                                         // [26683] push local 11
D=M                                                          // [26684] push local 11
@11                                                          // [26685] push local 11
A=D+A                                                        // [26686] push local 11
D=M                                                          // [26687] push local 11
@SP                                                          // [26688] push local 11
M=M+1                                                        // [26689] push local 11
A=M-1                                                        // [26690] push local 11
M=D                                                          // [26691] push local 11
@Screen.3                                                    // [26692] push static 3
D=M                                                          // [26693] push static 3
@SP                                                          // [26694] push static 3
M=M+1                                                        // [26695] push static 3
A=M-1                                                        // [26696] push static 3
M=D                                                          // [26697] push static 3
@SP                                                          // [26698] add
AM=M-1                                                       // [26699] add
D=M                                                          // [26700] add
A=A-1                                                        // [26701] add
M=D+M                                                        // [26702] add
@LCL                                                         // [26703] push local 18
D=M                                                          // [26704] push local 18
@18                                                          // [26705] push local 18
A=D+A                                                        // [26706] push local 18
D=M                                                          // [26707] push local 18
@SP                                                          // [26708] push local 18
M=M+1                                                        // [26709] push local 18
A=M-1                                                        // [26710] push local 18
M=D                                                          // [26711] push local 18
@SP                                                          // [26712] pop temp 0
AM=M-1                                                       // [26713] pop temp 0
D=M                                                          // [26714] pop temp 0
@5                                                           // [26715] pop temp 0
M=D                                                          // [26716] pop temp 0
@SP                                                          // [26717] pop pointer 1
AM=M-1                                                       // [26718] pop pointer 1
D=M                                                          // [26719] pop pointer 1
@4                                                           // [26720] pop pointer 1
M=D                                                          // [26721] pop pointer 1
@5                                                           // [26722] push temp 0
D=M                                                          // [26723] push temp 0
@SP                                                          // [26724] push temp 0
M=M+1                                                        // [26725] push temp 0
A=M-1                                                        // [26726] push temp 0
M=D                                                          // [26727] push temp 0
@SP                                                          // [26728] pop that 0
AM=M-1                                                       // [26729] pop that 0
D=M                                                          // [26730] pop that 0
@R13                                                         // [26731] pop that 0
M=D                                                          // [26732] pop that 0
@THAT                                                        // [26733] pop that 0
D=M                                                          // [26734] pop that 0
@0                                                           // [26735] pop that 0
D=D+A                                                        // [26736] pop that 0
@R14                                                         // [26737] pop that 0
M=D                                                          // [26738] pop that 0
@R13                                                         // [26739] pop that 0
D=M                                                          // [26740] pop that 0
@R14                                                         // [26741] pop that 0
A=M                                                          // [26742] pop that 0
M=D                                                          // [26743] pop that 0
@LCL                                                         // [26744] push local 11
D=M                                                          // [26745] push local 11
@11                                                          // [26746] push local 11
A=D+A                                                        // [26747] push local 11
D=M                                                          // [26748] push local 11
@SP                                                          // [26749] push local 11
M=M+1                                                        // [26750] push local 11
A=M-1                                                        // [26751] push local 11
M=D                                                          // [26752] push local 11
@SP                                                          // [26753] push constant 1
M=M+1                                                        // [26754] push constant 1
A=M-1                                                        // [26755] push constant 1
M=1                                                          // [26756] push constant 1
@SP                                                          // [26757] add
AM=M-1                                                       // [26758] add
D=M                                                          // [26759] add
A=A-1                                                        // [26760] add
M=D+M                                                        // [26761] add
@SP                                                          // [26762] pop local 11
AM=M-1                                                       // [26763] pop local 11
D=M                                                          // [26764] pop local 11
@R13                                                         // [26765] pop local 11
M=D                                                          // [26766] pop local 11
@LCL                                                         // [26767] pop local 11
D=M                                                          // [26768] pop local 11
@11                                                          // [26769] pop local 11
D=D+A                                                        // [26770] pop local 11
@R14                                                         // [26771] pop local 11
M=D                                                          // [26772] pop local 11
@R13                                                         // [26773] pop local 11
D=M                                                          // [26774] pop local 11
@R14                                                         // [26775] pop local 11
A=M                                                          // [26776] pop local 11
M=D                                                          // [26777] pop local 11
@LCL                                                         // [26778] push local 13
D=M                                                          // [26779] push local 13
@13                                                          // [26780] push local 13
A=D+A                                                        // [26781] push local 13
D=M                                                          // [26782] push local 13
@SP                                                          // [26783] push local 13
M=M+1                                                        // [26784] push local 13
A=M-1                                                        // [26785] push local 13
M=D                                                          // [26786] push local 13
@16                                                          // [26787] push constant 16
D=A                                                          // [26788] push constant 16
@SP                                                          // [26789] push constant 16
M=M+1                                                        // [26790] push constant 16
A=M-1                                                        // [26791] push constant 16
M=D                                                          // [26792] push constant 16
@SP                                                          // [26793] add
AM=M-1                                                       // [26794] add
D=M                                                          // [26795] add
A=A-1                                                        // [26796] add
M=D+M                                                        // [26797] add
@SP                                                          // [26798] pop local 13
AM=M-1                                                       // [26799] pop local 13
D=M                                                          // [26800] pop local 13
@R13                                                         // [26801] pop local 13
M=D                                                          // [26802] pop local 13
@LCL                                                         // [26803] pop local 13
D=M                                                          // [26804] pop local 13
@13                                                          // [26805] pop local 13
D=D+A                                                        // [26806] pop local 13
@R14                                                         // [26807] pop local 13
M=D                                                          // [26808] pop local 13
@R13                                                         // [26809] pop local 13
D=M                                                          // [26810] pop local 13
@R14                                                         // [26811] pop local 13
A=M                                                          // [26812] pop local 13
M=D                                                          // [26813] pop local 13
@LCL                                                         // [26814] push local 13
D=M                                                          // [26815] push local 13
@13                                                          // [26816] push local 13
A=D+A                                                        // [26817] push local 13
D=M                                                          // [26818] push local 13
@SP                                                          // [26819] push local 13
M=M+1                                                        // [26820] push local 13
A=M-1                                                        // [26821] push local 13
M=D                                                          // [26822] push local 13
@15                                                          // [26823] push constant 15
D=A                                                          // [26824] push constant 15
@SP                                                          // [26825] push constant 15
M=M+1                                                        // [26826] push constant 15
A=M-1                                                        // [26827] push constant 15
M=D                                                          // [26828] push constant 15
@SP                                                          // [26829] add
AM=M-1                                                       // [26830] add
D=M                                                          // [26831] add
A=A-1                                                        // [26832] add
M=D+M                                                        // [26833] add
@SP                                                          // [26834] pop local 14
AM=M-1                                                       // [26835] pop local 14
D=M                                                          // [26836] pop local 14
@R13                                                         // [26837] pop local 14
M=D                                                          // [26838] pop local 14
@LCL                                                         // [26839] pop local 14
D=M                                                          // [26840] pop local 14
@14                                                          // [26841] pop local 14
D=D+A                                                        // [26842] pop local 14
@R14                                                         // [26843] pop local 14
M=D                                                          // [26844] pop local 14
@R13                                                         // [26845] pop local 14
D=M                                                          // [26846] pop local 14
@R14                                                         // [26847] pop local 14
A=M                                                          // [26848] pop local 14
M=D                                                          // [26849] pop local 14
@Screen.drawRectangle$WHILE_EXP0                             // [26850] goto WHILE_EXP0
0;JEQ                                                        // [26851] goto WHILE_EXP0
(Screen.drawRectangle$WHILE_END0)                            // [     ] label WHILE_END0
@ARG                                                         // [26852] push argument 1
D=M                                                          // [26853] push argument 1
@1                                                           // [26854] push argument 1
A=D+A                                                        // [26855] push argument 1
D=M                                                          // [26856] push argument 1
@SP                                                          // [26857] push argument 1
M=M+1                                                        // [26858] push argument 1
A=M-1                                                        // [26859] push argument 1
M=D                                                          // [26860] push argument 1
@SP                                                          // [26861] pop local 0
AM=M-1                                                       // [26862] pop local 0
D=M                                                          // [26863] pop local 0
@R13                                                         // [26864] pop local 0
M=D                                                          // [26865] pop local 0
@LCL                                                         // [26866] pop local 0
D=M                                                          // [26867] pop local 0
@0                                                           // [26868] pop local 0
D=D+A                                                        // [26869] pop local 0
@R14                                                         // [26870] pop local 0
M=D                                                          // [26871] pop local 0
@R13                                                         // [26872] pop local 0
D=M                                                          // [26873] pop local 0
@R14                                                         // [26874] pop local 0
A=M                                                          // [26875] pop local 0
M=D                                                          // [26876] pop local 0
@ARG                                                         // [26877] push argument 1
D=M                                                          // [26878] push argument 1
@1                                                           // [26879] push argument 1
A=D+A                                                        // [26880] push argument 1
D=M                                                          // [26881] push argument 1
@SP                                                          // [26882] push argument 1
M=M+1                                                        // [26883] push argument 1
A=M-1                                                        // [26884] push argument 1
M=D                                                          // [26885] push argument 1
@32                                                          // [26886] push constant 32
D=A                                                          // [26887] push constant 32
@SP                                                          // [26888] push constant 32
M=M+1                                                        // [26889] push constant 32
A=M-1                                                        // [26890] push constant 32
M=D                                                          // [26891] push constant 32
@2                                                           // [26892] call Math.multiply 2
D=A                                                          // [26893] call Math.multiply 2
@R13                                                         // [26894] call Math.multiply 2
M=D                                                          // [26895] call Math.multiply 2
@Math.multiply                                               // [26896] call Math.multiply 2
D=A                                                          // [26897] call Math.multiply 2
@R14                                                         // [26898] call Math.multiply 2
M=D                                                          // [26899] call Math.multiply 2
@return-275                                                  // [26900] call Math.multiply 2
D=A                                                          // [26901] call Math.multiply 2
@CALL                                                        // [26902] call Math.multiply 2
0;JEQ                                                        // [26903] call Math.multiply 2
(return-275)                                                 // [     ] call Math.multiply 2
@SP                                                          // [26904] pop local 19
AM=M-1                                                       // [26905] pop local 19
D=M                                                          // [26906] pop local 19
@R13                                                         // [26907] pop local 19
M=D                                                          // [26908] pop local 19
@LCL                                                         // [26909] pop local 19
D=M                                                          // [26910] pop local 19
@19                                                          // [26911] pop local 19
D=D+A                                                        // [26912] pop local 19
@R14                                                         // [26913] pop local 19
M=D                                                          // [26914] pop local 19
@R13                                                         // [26915] pop local 19
D=M                                                          // [26916] pop local 19
@R14                                                         // [26917] pop local 19
A=M                                                          // [26918] pop local 19
M=D                                                          // [26919] pop local 19
(Screen.drawRectangle$WHILE_EXP2)                            // [     ] label WHILE_EXP2
@LCL                                                         // [26920] push local 0
D=M                                                          // [26921] push local 0
@0                                                           // [26922] push local 0
A=D+A                                                        // [26923] push local 0
D=M                                                          // [26924] push local 0
@SP                                                          // [26925] push local 0
M=M+1                                                        // [26926] push local 0
A=M-1                                                        // [26927] push local 0
M=D                                                          // [26928] push local 0
@ARG                                                         // [26929] push argument 3
D=M                                                          // [26930] push argument 3
@3                                                           // [26931] push argument 3
A=D+A                                                        // [26932] push argument 3
D=M                                                          // [26933] push argument 3
@SP                                                          // [26934] push argument 3
M=M+1                                                        // [26935] push argument 3
A=M-1                                                        // [26936] push argument 3
M=D                                                          // [26937] push argument 3
@CONTINUE_LT_42                                              // [26938] lt
D=A                                                          // [26939] lt
@R13                                                         // [26940] lt
M=D                                                          // [26941] lt
@SP                                                          // [26942] lt
AM=M-1                                                       // [26943] lt
D=M                                                          // [26944] lt
A=A-1                                                        // [26945] lt
D=D-M                                                        // [26946] lt
@INTERNAL_LT                                                 // [26947] lt
0;JEQ                                                        // [26948] lt
(CONTINUE_LT_42)                                             // [     ] lt
@SP                                                          // [26949] not
A=M-1                                                        // [26950] not
D=M                                                          // [26951] not
M=!D                                                         // [26952] not
@SP                                                          // [26953] if-goto WHILE_END2
AM=M-1                                                       // [26954] if-goto WHILE_END2
D=M                                                          // [26955] if-goto WHILE_END2
@Screen.drawRectangle$WHILE_END2                             // [26956] if-goto WHILE_END2
D;JNE                                                        // [26957] if-goto WHILE_END2
@LCL                                                         // [26958] push local 4
D=M                                                          // [26959] push local 4
@4                                                           // [26960] push local 4
A=D+A                                                        // [26961] push local 4
D=M                                                          // [26962] push local 4
@SP                                                          // [26963] push local 4
M=M+1                                                        // [26964] push local 4
A=M-1                                                        // [26965] push local 4
M=D                                                          // [26966] push local 4
@SP                                                          // [26967] pop local 3
AM=M-1                                                       // [26968] pop local 3
D=M                                                          // [26969] pop local 3
@R13                                                         // [26970] pop local 3
M=D                                                          // [26971] pop local 3
@LCL                                                         // [26972] pop local 3
D=M                                                          // [26973] pop local 3
@3                                                           // [26974] pop local 3
D=D+A                                                        // [26975] pop local 3
@R14                                                         // [26976] pop local 3
M=D                                                          // [26977] pop local 3
@R13                                                         // [26978] pop local 3
D=M                                                          // [26979] pop local 3
@R14                                                         // [26980] pop local 3
A=M                                                          // [26981] pop local 3
M=D                                                          // [26982] pop local 3
(Screen.drawRectangle$WHILE_EXP3)                            // [     ] label WHILE_EXP3
@LCL                                                         // [26983] push local 3
D=M                                                          // [26984] push local 3
@3                                                           // [26985] push local 3
A=D+A                                                        // [26986] push local 3
D=M                                                          // [26987] push local 3
@SP                                                          // [26988] push local 3
M=M+1                                                        // [26989] push local 3
A=M-1                                                        // [26990] push local 3
M=D                                                          // [26991] push local 3
@LCL                                                         // [26992] push local 5
D=M                                                          // [26993] push local 5
@5                                                           // [26994] push local 5
A=D+A                                                        // [26995] push local 5
D=M                                                          // [26996] push local 5
@SP                                                          // [26997] push local 5
M=M+1                                                        // [26998] push local 5
A=M-1                                                        // [26999] push local 5
M=D                                                          // [27000] push local 5
@CONTINUE_LT_43                                              // [27001] lt
D=A                                                          // [27002] lt
@R13                                                         // [27003] lt
M=D                                                          // [27004] lt
@SP                                                          // [27005] lt
AM=M-1                                                       // [27006] lt
D=M                                                          // [27007] lt
A=A-1                                                        // [27008] lt
D=D-M                                                        // [27009] lt
@INTERNAL_LT                                                 // [27010] lt
0;JEQ                                                        // [27011] lt
(CONTINUE_LT_43)                                             // [     ] lt
@LCL                                                         // [27012] push local 3
D=M                                                          // [27013] push local 3
@3                                                           // [27014] push local 3
A=D+A                                                        // [27015] push local 3
D=M                                                          // [27016] push local 3
@SP                                                          // [27017] push local 3
M=M+1                                                        // [27018] push local 3
A=M-1                                                        // [27019] push local 3
M=D                                                          // [27020] push local 3
@LCL                                                         // [27021] push local 5
D=M                                                          // [27022] push local 5
@5                                                           // [27023] push local 5
A=D+A                                                        // [27024] push local 5
D=M                                                          // [27025] push local 5
@SP                                                          // [27026] push local 5
M=M+1                                                        // [27027] push local 5
A=M-1                                                        // [27028] push local 5
M=D                                                          // [27029] push local 5
@CONTINUE_EQ_26                                              // [27030] eq
D=A                                                          // [27031] eq
@R13                                                         // [27032] eq
M=D                                                          // [27033] eq
@SP                                                          // [27034] eq
AM=M-1                                                       // [27035] eq
D=M                                                          // [27036] eq
A=A-1                                                        // [27037] eq
D=D-M                                                        // [27038] eq
@INTERNAL_EQ                                                 // [27039] eq
0;JEQ                                                        // [27040] eq
(CONTINUE_EQ_26)                                             // [     ] eq
@SP                                                          // [27041] or
AM=M-1                                                       // [27042] or
D=M                                                          // [27043] or
A=A-1                                                        // [27044] or
M=D|M                                                        // [27045] or
@SP                                                          // [27046] not
A=M-1                                                        // [27047] not
D=M                                                          // [27048] not
M=!D                                                         // [27049] not
@SP                                                          // [27050] if-goto WHILE_END3
AM=M-1                                                       // [27051] if-goto WHILE_END3
D=M                                                          // [27052] if-goto WHILE_END3
@Screen.drawRectangle$WHILE_END3                             // [27053] if-goto WHILE_END3
D;JNE                                                        // [27054] if-goto WHILE_END3
@Screen.0                                                    // [27055] push static 0
D=M                                                          // [27056] push static 0
@SP                                                          // [27057] push static 0
M=M+1                                                        // [27058] push static 0
A=M-1                                                        // [27059] push static 0
M=D                                                          // [27060] push static 0
@SP                                                          // [27061] if-goto IF_TRUE4
AM=M-1                                                       // [27062] if-goto IF_TRUE4
D=M                                                          // [27063] if-goto IF_TRUE4
@Screen.drawRectangle$IF_TRUE4                               // [27064] if-goto IF_TRUE4
D;JNE                                                        // [27065] if-goto IF_TRUE4
@Screen.drawRectangle$IF_FALSE4                              // [27066] goto IF_FALSE4
0;JEQ                                                        // [27067] goto IF_FALSE4
(Screen.drawRectangle$IF_TRUE4)                              // [     ] label IF_TRUE4
@LCL                                                         // [27068] push local 19
D=M                                                          // [27069] push local 19
@19                                                          // [27070] push local 19
A=D+A                                                        // [27071] push local 19
D=M                                                          // [27072] push local 19
@SP                                                          // [27073] push local 19
M=M+1                                                        // [27074] push local 19
A=M-1                                                        // [27075] push local 19
M=D                                                          // [27076] push local 19
@LCL                                                         // [27077] push local 3
D=M                                                          // [27078] push local 3
@3                                                           // [27079] push local 3
A=D+A                                                        // [27080] push local 3
D=M                                                          // [27081] push local 3
@SP                                                          // [27082] push local 3
M=M+1                                                        // [27083] push local 3
A=M-1                                                        // [27084] push local 3
M=D                                                          // [27085] push local 3
@SP                                                          // [27086] add
AM=M-1                                                       // [27087] add
D=M                                                          // [27088] add
A=A-1                                                        // [27089] add
M=D+M                                                        // [27090] add
@Screen.1                                                    // [27091] push static 1
D=M                                                          // [27092] push static 1
@SP                                                          // [27093] push static 1
M=M+1                                                        // [27094] push static 1
A=M-1                                                        // [27095] push static 1
M=D                                                          // [27096] push static 1
@SP                                                          // [27097] add
AM=M-1                                                       // [27098] add
D=M                                                          // [27099] add
A=A-1                                                        // [27100] add
M=D+M                                                        // [27101] add
@LCL                                                         // [27102] push local 19
D=M                                                          // [27103] push local 19
@19                                                          // [27104] push local 19
A=D+A                                                        // [27105] push local 19
D=M                                                          // [27106] push local 19
@SP                                                          // [27107] push local 19
M=M+1                                                        // [27108] push local 19
A=M-1                                                        // [27109] push local 19
M=D                                                          // [27110] push local 19
@LCL                                                         // [27111] push local 3
D=M                                                          // [27112] push local 3
@3                                                           // [27113] push local 3
A=D+A                                                        // [27114] push local 3
D=M                                                          // [27115] push local 3
@SP                                                          // [27116] push local 3
M=M+1                                                        // [27117] push local 3
A=M-1                                                        // [27118] push local 3
M=D                                                          // [27119] push local 3
@SP                                                          // [27120] add
AM=M-1                                                       // [27121] add
D=M                                                          // [27122] add
A=A-1                                                        // [27123] add
M=D+M                                                        // [27124] add
@Screen.1                                                    // [27125] push static 1
D=M                                                          // [27126] push static 1
@SP                                                          // [27127] push static 1
M=M+1                                                        // [27128] push static 1
A=M-1                                                        // [27129] push static 1
M=D                                                          // [27130] push static 1
@SP                                                          // [27131] add
AM=M-1                                                       // [27132] add
D=M                                                          // [27133] add
A=A-1                                                        // [27134] add
M=D+M                                                        // [27135] add
@SP                                                          // [27136] pop pointer 1
AM=M-1                                                       // [27137] pop pointer 1
D=M                                                          // [27138] pop pointer 1
@4                                                           // [27139] pop pointer 1
M=D                                                          // [27140] pop pointer 1
@THAT                                                        // [27141] push that 0
D=M                                                          // [27142] push that 0
@0                                                           // [27143] push that 0
A=D+A                                                        // [27144] push that 0
D=M                                                          // [27145] push that 0
@SP                                                          // [27146] push that 0
M=M+1                                                        // [27147] push that 0
A=M-1                                                        // [27148] push that 0
M=D                                                          // [27149] push that 0
@LCL                                                         // [27150] push local 3
D=M                                                          // [27151] push local 3
@3                                                           // [27152] push local 3
A=D+A                                                        // [27153] push local 3
D=M                                                          // [27154] push local 3
@SP                                                          // [27155] push local 3
M=M+1                                                        // [27156] push local 3
A=M-1                                                        // [27157] push local 3
M=D                                                          // [27158] push local 3
@Screen.3                                                    // [27159] push static 3
D=M                                                          // [27160] push static 3
@SP                                                          // [27161] push static 3
M=M+1                                                        // [27162] push static 3
A=M-1                                                        // [27163] push static 3
M=D                                                          // [27164] push static 3
@SP                                                          // [27165] add
AM=M-1                                                       // [27166] add
D=M                                                          // [27167] add
A=A-1                                                        // [27168] add
M=D+M                                                        // [27169] add
@SP                                                          // [27170] pop pointer 1
AM=M-1                                                       // [27171] pop pointer 1
D=M                                                          // [27172] pop pointer 1
@4                                                           // [27173] pop pointer 1
M=D                                                          // [27174] pop pointer 1
@THAT                                                        // [27175] push that 0
D=M                                                          // [27176] push that 0
@0                                                           // [27177] push that 0
A=D+A                                                        // [27178] push that 0
D=M                                                          // [27179] push that 0
@SP                                                          // [27180] push that 0
M=M+1                                                        // [27181] push that 0
A=M-1                                                        // [27182] push that 0
M=D                                                          // [27183] push that 0
@SP                                                          // [27184] or
AM=M-1                                                       // [27185] or
D=M                                                          // [27186] or
A=A-1                                                        // [27187] or
M=D|M                                                        // [27188] or
@SP                                                          // [27189] pop temp 0
AM=M-1                                                       // [27190] pop temp 0
D=M                                                          // [27191] pop temp 0
@5                                                           // [27192] pop temp 0
M=D                                                          // [27193] pop temp 0
@SP                                                          // [27194] pop pointer 1
AM=M-1                                                       // [27195] pop pointer 1
D=M                                                          // [27196] pop pointer 1
@4                                                           // [27197] pop pointer 1
M=D                                                          // [27198] pop pointer 1
@5                                                           // [27199] push temp 0
D=M                                                          // [27200] push temp 0
@SP                                                          // [27201] push temp 0
M=M+1                                                        // [27202] push temp 0
A=M-1                                                        // [27203] push temp 0
M=D                                                          // [27204] push temp 0
@SP                                                          // [27205] pop that 0
AM=M-1                                                       // [27206] pop that 0
D=M                                                          // [27207] pop that 0
@R13                                                         // [27208] pop that 0
M=D                                                          // [27209] pop that 0
@THAT                                                        // [27210] pop that 0
D=M                                                          // [27211] pop that 0
@0                                                           // [27212] pop that 0
D=D+A                                                        // [27213] pop that 0
@R14                                                         // [27214] pop that 0
M=D                                                          // [27215] pop that 0
@R13                                                         // [27216] pop that 0
D=M                                                          // [27217] pop that 0
@R14                                                         // [27218] pop that 0
A=M                                                          // [27219] pop that 0
M=D                                                          // [27220] pop that 0
@Screen.drawRectangle$IF_END4                                // [27221] goto IF_END4
0;JEQ                                                        // [27222] goto IF_END4
(Screen.drawRectangle$IF_FALSE4)                             // [     ] label IF_FALSE4
@LCL                                                         // [27223] push local 19
D=M                                                          // [27224] push local 19
@19                                                          // [27225] push local 19
A=D+A                                                        // [27226] push local 19
D=M                                                          // [27227] push local 19
@SP                                                          // [27228] push local 19
M=M+1                                                        // [27229] push local 19
A=M-1                                                        // [27230] push local 19
M=D                                                          // [27231] push local 19
@LCL                                                         // [27232] push local 3
D=M                                                          // [27233] push local 3
@3                                                           // [27234] push local 3
A=D+A                                                        // [27235] push local 3
D=M                                                          // [27236] push local 3
@SP                                                          // [27237] push local 3
M=M+1                                                        // [27238] push local 3
A=M-1                                                        // [27239] push local 3
M=D                                                          // [27240] push local 3
@SP                                                          // [27241] add
AM=M-1                                                       // [27242] add
D=M                                                          // [27243] add
A=A-1                                                        // [27244] add
M=D+M                                                        // [27245] add
@Screen.1                                                    // [27246] push static 1
D=M                                                          // [27247] push static 1
@SP                                                          // [27248] push static 1
M=M+1                                                        // [27249] push static 1
A=M-1                                                        // [27250] push static 1
M=D                                                          // [27251] push static 1
@SP                                                          // [27252] add
AM=M-1                                                       // [27253] add
D=M                                                          // [27254] add
A=A-1                                                        // [27255] add
M=D+M                                                        // [27256] add
@LCL                                                         // [27257] push local 19
D=M                                                          // [27258] push local 19
@19                                                          // [27259] push local 19
A=D+A                                                        // [27260] push local 19
D=M                                                          // [27261] push local 19
@SP                                                          // [27262] push local 19
M=M+1                                                        // [27263] push local 19
A=M-1                                                        // [27264] push local 19
M=D                                                          // [27265] push local 19
@LCL                                                         // [27266] push local 3
D=M                                                          // [27267] push local 3
@3                                                           // [27268] push local 3
A=D+A                                                        // [27269] push local 3
D=M                                                          // [27270] push local 3
@SP                                                          // [27271] push local 3
M=M+1                                                        // [27272] push local 3
A=M-1                                                        // [27273] push local 3
M=D                                                          // [27274] push local 3
@SP                                                          // [27275] add
AM=M-1                                                       // [27276] add
D=M                                                          // [27277] add
A=A-1                                                        // [27278] add
M=D+M                                                        // [27279] add
@Screen.1                                                    // [27280] push static 1
D=M                                                          // [27281] push static 1
@SP                                                          // [27282] push static 1
M=M+1                                                        // [27283] push static 1
A=M-1                                                        // [27284] push static 1
M=D                                                          // [27285] push static 1
@SP                                                          // [27286] add
AM=M-1                                                       // [27287] add
D=M                                                          // [27288] add
A=A-1                                                        // [27289] add
M=D+M                                                        // [27290] add
@SP                                                          // [27291] pop pointer 1
AM=M-1                                                       // [27292] pop pointer 1
D=M                                                          // [27293] pop pointer 1
@4                                                           // [27294] pop pointer 1
M=D                                                          // [27295] pop pointer 1
@THAT                                                        // [27296] push that 0
D=M                                                          // [27297] push that 0
@0                                                           // [27298] push that 0
A=D+A                                                        // [27299] push that 0
D=M                                                          // [27300] push that 0
@SP                                                          // [27301] push that 0
M=M+1                                                        // [27302] push that 0
A=M-1                                                        // [27303] push that 0
M=D                                                          // [27304] push that 0
@LCL                                                         // [27305] push local 3
D=M                                                          // [27306] push local 3
@3                                                           // [27307] push local 3
A=D+A                                                        // [27308] push local 3
D=M                                                          // [27309] push local 3
@SP                                                          // [27310] push local 3
M=M+1                                                        // [27311] push local 3
A=M-1                                                        // [27312] push local 3
M=D                                                          // [27313] push local 3
@Screen.3                                                    // [27314] push static 3
D=M                                                          // [27315] push static 3
@SP                                                          // [27316] push static 3
M=M+1                                                        // [27317] push static 3
A=M-1                                                        // [27318] push static 3
M=D                                                          // [27319] push static 3
@SP                                                          // [27320] add
AM=M-1                                                       // [27321] add
D=M                                                          // [27322] add
A=A-1                                                        // [27323] add
M=D+M                                                        // [27324] add
@SP                                                          // [27325] pop pointer 1
AM=M-1                                                       // [27326] pop pointer 1
D=M                                                          // [27327] pop pointer 1
@4                                                           // [27328] pop pointer 1
M=D                                                          // [27329] pop pointer 1
@THAT                                                        // [27330] push that 0
D=M                                                          // [27331] push that 0
@0                                                           // [27332] push that 0
A=D+A                                                        // [27333] push that 0
D=M                                                          // [27334] push that 0
@SP                                                          // [27335] push that 0
M=M+1                                                        // [27336] push that 0
A=M-1                                                        // [27337] push that 0
M=D                                                          // [27338] push that 0
@SP                                                          // [27339] not
A=M-1                                                        // [27340] not
D=M                                                          // [27341] not
M=!D                                                         // [27342] not
@SP                                                          // [27343] and
AM=M-1                                                       // [27344] and
D=M                                                          // [27345] and
A=A-1                                                        // [27346] and
M=D&M                                                        // [27347] and
@SP                                                          // [27348] pop temp 0
AM=M-1                                                       // [27349] pop temp 0
D=M                                                          // [27350] pop temp 0
@5                                                           // [27351] pop temp 0
M=D                                                          // [27352] pop temp 0
@SP                                                          // [27353] pop pointer 1
AM=M-1                                                       // [27354] pop pointer 1
D=M                                                          // [27355] pop pointer 1
@4                                                           // [27356] pop pointer 1
M=D                                                          // [27357] pop pointer 1
@5                                                           // [27358] push temp 0
D=M                                                          // [27359] push temp 0
@SP                                                          // [27360] push temp 0
M=M+1                                                        // [27361] push temp 0
A=M-1                                                        // [27362] push temp 0
M=D                                                          // [27363] push temp 0
@SP                                                          // [27364] pop that 0
AM=M-1                                                       // [27365] pop that 0
D=M                                                          // [27366] pop that 0
@R13                                                         // [27367] pop that 0
M=D                                                          // [27368] pop that 0
@THAT                                                        // [27369] pop that 0
D=M                                                          // [27370] pop that 0
@0                                                           // [27371] pop that 0
D=D+A                                                        // [27372] pop that 0
@R14                                                         // [27373] pop that 0
M=D                                                          // [27374] pop that 0
@R13                                                         // [27375] pop that 0
D=M                                                          // [27376] pop that 0
@R14                                                         // [27377] pop that 0
A=M                                                          // [27378] pop that 0
M=D                                                          // [27379] pop that 0
(Screen.drawRectangle$IF_END4)                               // [     ] label IF_END4
@LCL                                                         // [27380] push local 3
D=M                                                          // [27381] push local 3
@3                                                           // [27382] push local 3
A=D+A                                                        // [27383] push local 3
D=M                                                          // [27384] push local 3
@SP                                                          // [27385] push local 3
M=M+1                                                        // [27386] push local 3
A=M-1                                                        // [27387] push local 3
M=D                                                          // [27388] push local 3
@SP                                                          // [27389] push constant 1
M=M+1                                                        // [27390] push constant 1
A=M-1                                                        // [27391] push constant 1
M=1                                                          // [27392] push constant 1
@SP                                                          // [27393] add
AM=M-1                                                       // [27394] add
D=M                                                          // [27395] add
A=A-1                                                        // [27396] add
M=D+M                                                        // [27397] add
@SP                                                          // [27398] pop local 3
AM=M-1                                                       // [27399] pop local 3
D=M                                                          // [27400] pop local 3
@R13                                                         // [27401] pop local 3
M=D                                                          // [27402] pop local 3
@LCL                                                         // [27403] pop local 3
D=M                                                          // [27404] pop local 3
@3                                                           // [27405] pop local 3
D=D+A                                                        // [27406] pop local 3
@R14                                                         // [27407] pop local 3
M=D                                                          // [27408] pop local 3
@R13                                                         // [27409] pop local 3
D=M                                                          // [27410] pop local 3
@R14                                                         // [27411] pop local 3
A=M                                                          // [27412] pop local 3
M=D                                                          // [27413] pop local 3
@Screen.drawRectangle$WHILE_EXP3                             // [27414] goto WHILE_EXP3
0;JEQ                                                        // [27415] goto WHILE_EXP3
(Screen.drawRectangle$WHILE_END3)                            // [     ] label WHILE_END3
@LCL                                                         // [27416] push local 19
D=M                                                          // [27417] push local 19
@19                                                          // [27418] push local 19
A=D+A                                                        // [27419] push local 19
D=M                                                          // [27420] push local 19
@SP                                                          // [27421] push local 19
M=M+1                                                        // [27422] push local 19
A=M-1                                                        // [27423] push local 19
M=D                                                          // [27424] push local 19
@32                                                          // [27425] push constant 32
D=A                                                          // [27426] push constant 32
@SP                                                          // [27427] push constant 32
M=M+1                                                        // [27428] push constant 32
A=M-1                                                        // [27429] push constant 32
M=D                                                          // [27430] push constant 32
@SP                                                          // [27431] add
AM=M-1                                                       // [27432] add
D=M                                                          // [27433] add
A=A-1                                                        // [27434] add
M=D+M                                                        // [27435] add
@SP                                                          // [27436] pop local 19
AM=M-1                                                       // [27437] pop local 19
D=M                                                          // [27438] pop local 19
@R13                                                         // [27439] pop local 19
M=D                                                          // [27440] pop local 19
@LCL                                                         // [27441] pop local 19
D=M                                                          // [27442] pop local 19
@19                                                          // [27443] pop local 19
D=D+A                                                        // [27444] pop local 19
@R14                                                         // [27445] pop local 19
M=D                                                          // [27446] pop local 19
@R13                                                         // [27447] pop local 19
D=M                                                          // [27448] pop local 19
@R14                                                         // [27449] pop local 19
A=M                                                          // [27450] pop local 19
M=D                                                          // [27451] pop local 19
@LCL                                                         // [27452] push local 0
D=M                                                          // [27453] push local 0
@0                                                           // [27454] push local 0
A=D+A                                                        // [27455] push local 0
D=M                                                          // [27456] push local 0
@SP                                                          // [27457] push local 0
M=M+1                                                        // [27458] push local 0
A=M-1                                                        // [27459] push local 0
M=D                                                          // [27460] push local 0
@SP                                                          // [27461] push constant 1
M=M+1                                                        // [27462] push constant 1
A=M-1                                                        // [27463] push constant 1
M=1                                                          // [27464] push constant 1
@SP                                                          // [27465] add
AM=M-1                                                       // [27466] add
D=M                                                          // [27467] add
A=A-1                                                        // [27468] add
M=D+M                                                        // [27469] add
@SP                                                          // [27470] pop local 0
AM=M-1                                                       // [27471] pop local 0
D=M                                                          // [27472] pop local 0
@R13                                                         // [27473] pop local 0
M=D                                                          // [27474] pop local 0
@LCL                                                         // [27475] pop local 0
D=M                                                          // [27476] pop local 0
@0                                                           // [27477] pop local 0
D=D+A                                                        // [27478] pop local 0
@R14                                                         // [27479] pop local 0
M=D                                                          // [27480] pop local 0
@R13                                                         // [27481] pop local 0
D=M                                                          // [27482] pop local 0
@R14                                                         // [27483] pop local 0
A=M                                                          // [27484] pop local 0
M=D                                                          // [27485] pop local 0
@Screen.drawRectangle$WHILE_EXP2                             // [27486] goto WHILE_EXP2
0;JEQ                                                        // [27487] goto WHILE_EXP2
(Screen.drawRectangle$WHILE_END2)                            // [     ] label WHILE_END2
@SP                                                          // [27488] push constant 0
M=M+1                                                        // [27489] push constant 0
A=M-1                                                        // [27490] push constant 0
M=0                                                          // [27491] push constant 0
@RETURN                                                      // [27492] return
0;JEQ                                                        // [27493] return
(Screen.drawCircle)                                          // [     ] function Screen.drawCircle 5
@SP                                                          // [27494] function Screen.drawCircle 5
A=M                                                          // [27495] function Screen.drawCircle 5
M=0                                                          // [27496] function Screen.drawCircle 5
@SP                                                          // [27497] function Screen.drawCircle 5
M=M+1                                                        // [27498] function Screen.drawCircle 5
@SP                                                          // [27499] function Screen.drawCircle 5
A=M                                                          // [27500] function Screen.drawCircle 5
M=0                                                          // [27501] function Screen.drawCircle 5
@SP                                                          // [27502] function Screen.drawCircle 5
M=M+1                                                        // [27503] function Screen.drawCircle 5
@SP                                                          // [27504] function Screen.drawCircle 5
A=M                                                          // [27505] function Screen.drawCircle 5
M=0                                                          // [27506] function Screen.drawCircle 5
@SP                                                          // [27507] function Screen.drawCircle 5
M=M+1                                                        // [27508] function Screen.drawCircle 5
@SP                                                          // [27509] function Screen.drawCircle 5
A=M                                                          // [27510] function Screen.drawCircle 5
M=0                                                          // [27511] function Screen.drawCircle 5
@SP                                                          // [27512] function Screen.drawCircle 5
M=M+1                                                        // [27513] function Screen.drawCircle 5
@SP                                                          // [27514] function Screen.drawCircle 5
A=M                                                          // [27515] function Screen.drawCircle 5
M=0                                                          // [27516] function Screen.drawCircle 5
@SP                                                          // [27517] function Screen.drawCircle 5
M=M+1                                                        // [27518] function Screen.drawCircle 5
@ARG                                                         // [27519] push argument 2
D=M                                                          // [27520] push argument 2
@2                                                           // [27521] push argument 2
A=D+A                                                        // [27522] push argument 2
D=M                                                          // [27523] push argument 2
@SP                                                          // [27524] push argument 2
M=M+1                                                        // [27525] push argument 2
A=M-1                                                        // [27526] push argument 2
M=D                                                          // [27527] push argument 2
@SP                                                          // [27528] neg
A=M-1                                                        // [27529] neg
D=M                                                          // [27530] neg
M=-D                                                         // [27531] neg
@SP                                                          // [27532] pop local 0
AM=M-1                                                       // [27533] pop local 0
D=M                                                          // [27534] pop local 0
@R13                                                         // [27535] pop local 0
M=D                                                          // [27536] pop local 0
@LCL                                                         // [27537] pop local 0
D=M                                                          // [27538] pop local 0
@0                                                           // [27539] pop local 0
D=D+A                                                        // [27540] pop local 0
@R14                                                         // [27541] pop local 0
M=D                                                          // [27542] pop local 0
@R13                                                         // [27543] pop local 0
D=M                                                          // [27544] pop local 0
@R14                                                         // [27545] pop local 0
A=M                                                          // [27546] pop local 0
M=D                                                          // [27547] pop local 0
(Screen.drawCircle$WHILE_EXP0)                               // [     ] label WHILE_EXP0
@LCL                                                         // [27548] push local 0
D=M                                                          // [27549] push local 0
@0                                                           // [27550] push local 0
A=D+A                                                        // [27551] push local 0
D=M                                                          // [27552] push local 0
@SP                                                          // [27553] push local 0
M=M+1                                                        // [27554] push local 0
A=M-1                                                        // [27555] push local 0
M=D                                                          // [27556] push local 0
@ARG                                                         // [27557] push argument 2
D=M                                                          // [27558] push argument 2
@2                                                           // [27559] push argument 2
A=D+A                                                        // [27560] push argument 2
D=M                                                          // [27561] push argument 2
@SP                                                          // [27562] push argument 2
M=M+1                                                        // [27563] push argument 2
A=M-1                                                        // [27564] push argument 2
M=D                                                          // [27565] push argument 2
@SP                                                          // [27566] push constant 1
M=M+1                                                        // [27567] push constant 1
A=M-1                                                        // [27568] push constant 1
M=1                                                          // [27569] push constant 1
@SP                                                          // [27570] add
AM=M-1                                                       // [27571] add
D=M                                                          // [27572] add
A=A-1                                                        // [27573] add
M=D+M                                                        // [27574] add
@CONTINUE_LT_44                                              // [27575] lt
D=A                                                          // [27576] lt
@R13                                                         // [27577] lt
M=D                                                          // [27578] lt
@SP                                                          // [27579] lt
AM=M-1                                                       // [27580] lt
D=M                                                          // [27581] lt
A=A-1                                                        // [27582] lt
D=D-M                                                        // [27583] lt
@INTERNAL_LT                                                 // [27584] lt
0;JEQ                                                        // [27585] lt
(CONTINUE_LT_44)                                             // [     ] lt
@SP                                                          // [27586] not
A=M-1                                                        // [27587] not
D=M                                                          // [27588] not
M=!D                                                         // [27589] not
@SP                                                          // [27590] if-goto WHILE_END0
AM=M-1                                                       // [27591] if-goto WHILE_END0
D=M                                                          // [27592] if-goto WHILE_END0
@Screen.drawCircle$WHILE_END0                                // [27593] if-goto WHILE_END0
D;JNE                                                        // [27594] if-goto WHILE_END0
@ARG                                                         // [27595] push argument 2
D=M                                                          // [27596] push argument 2
@2                                                           // [27597] push argument 2
A=D+A                                                        // [27598] push argument 2
D=M                                                          // [27599] push argument 2
@SP                                                          // [27600] push argument 2
M=M+1                                                        // [27601] push argument 2
A=M-1                                                        // [27602] push argument 2
M=D                                                          // [27603] push argument 2
@ARG                                                         // [27604] push argument 2
D=M                                                          // [27605] push argument 2
@2                                                           // [27606] push argument 2
A=D+A                                                        // [27607] push argument 2
D=M                                                          // [27608] push argument 2
@SP                                                          // [27609] push argument 2
M=M+1                                                        // [27610] push argument 2
A=M-1                                                        // [27611] push argument 2
M=D                                                          // [27612] push argument 2
@2                                                           // [27613] call Math.multiply 2
D=A                                                          // [27614] call Math.multiply 2
@R13                                                         // [27615] call Math.multiply 2
M=D                                                          // [27616] call Math.multiply 2
@Math.multiply                                               // [27617] call Math.multiply 2
D=A                                                          // [27618] call Math.multiply 2
@R14                                                         // [27619] call Math.multiply 2
M=D                                                          // [27620] call Math.multiply 2
@return-276                                                  // [27621] call Math.multiply 2
D=A                                                          // [27622] call Math.multiply 2
@CALL                                                        // [27623] call Math.multiply 2
0;JEQ                                                        // [27624] call Math.multiply 2
(return-276)                                                 // [     ] call Math.multiply 2
@LCL                                                         // [27625] push local 0
D=M                                                          // [27626] push local 0
@0                                                           // [27627] push local 0
A=D+A                                                        // [27628] push local 0
D=M                                                          // [27629] push local 0
@SP                                                          // [27630] push local 0
M=M+1                                                        // [27631] push local 0
A=M-1                                                        // [27632] push local 0
M=D                                                          // [27633] push local 0
@LCL                                                         // [27634] push local 0
D=M                                                          // [27635] push local 0
@0                                                           // [27636] push local 0
A=D+A                                                        // [27637] push local 0
D=M                                                          // [27638] push local 0
@SP                                                          // [27639] push local 0
M=M+1                                                        // [27640] push local 0
A=M-1                                                        // [27641] push local 0
M=D                                                          // [27642] push local 0
@2                                                           // [27643] call Math.multiply 2
D=A                                                          // [27644] call Math.multiply 2
@R13                                                         // [27645] call Math.multiply 2
M=D                                                          // [27646] call Math.multiply 2
@Math.multiply                                               // [27647] call Math.multiply 2
D=A                                                          // [27648] call Math.multiply 2
@R14                                                         // [27649] call Math.multiply 2
M=D                                                          // [27650] call Math.multiply 2
@return-277                                                  // [27651] call Math.multiply 2
D=A                                                          // [27652] call Math.multiply 2
@CALL                                                        // [27653] call Math.multiply 2
0;JEQ                                                        // [27654] call Math.multiply 2
(return-277)                                                 // [     ] call Math.multiply 2
@SP                                                          // [27655] sub
AM=M-1                                                       // [27656] sub
D=M                                                          // [27657] sub
A=A-1                                                        // [27658] sub
M=M-D                                                        // [27659] sub
@1                                                           // [27660] call Math.sqrt 1
D=A                                                          // [27661] call Math.sqrt 1
@R13                                                         // [27662] call Math.sqrt 1
M=D                                                          // [27663] call Math.sqrt 1
@Math.sqrt                                                   // [27664] call Math.sqrt 1
D=A                                                          // [27665] call Math.sqrt 1
@R14                                                         // [27666] call Math.sqrt 1
M=D                                                          // [27667] call Math.sqrt 1
@return-278                                                  // [27668] call Math.sqrt 1
D=A                                                          // [27669] call Math.sqrt 1
@CALL                                                        // [27670] call Math.sqrt 1
0;JEQ                                                        // [27671] call Math.sqrt 1
(return-278)                                                 // [     ] call Math.sqrt 1
@SP                                                          // [27672] pop local 4
AM=M-1                                                       // [27673] pop local 4
D=M                                                          // [27674] pop local 4
@R13                                                         // [27675] pop local 4
M=D                                                          // [27676] pop local 4
@LCL                                                         // [27677] pop local 4
D=M                                                          // [27678] pop local 4
@4                                                           // [27679] pop local 4
D=D+A                                                        // [27680] pop local 4
@R14                                                         // [27681] pop local 4
M=D                                                          // [27682] pop local 4
@R13                                                         // [27683] pop local 4
D=M                                                          // [27684] pop local 4
@R14                                                         // [27685] pop local 4
A=M                                                          // [27686] pop local 4
M=D                                                          // [27687] pop local 4
@ARG                                                         // [27688] push argument 0
D=M                                                          // [27689] push argument 0
@0                                                           // [27690] push argument 0
A=D+A                                                        // [27691] push argument 0
D=M                                                          // [27692] push argument 0
@SP                                                          // [27693] push argument 0
M=M+1                                                        // [27694] push argument 0
A=M-1                                                        // [27695] push argument 0
M=D                                                          // [27696] push argument 0
@LCL                                                         // [27697] push local 4
D=M                                                          // [27698] push local 4
@4                                                           // [27699] push local 4
A=D+A                                                        // [27700] push local 4
D=M                                                          // [27701] push local 4
@SP                                                          // [27702] push local 4
M=M+1                                                        // [27703] push local 4
A=M-1                                                        // [27704] push local 4
M=D                                                          // [27705] push local 4
@SP                                                          // [27706] sub
AM=M-1                                                       // [27707] sub
D=M                                                          // [27708] sub
A=A-1                                                        // [27709] sub
M=M-D                                                        // [27710] sub
@SP                                                          // [27711] pop local 1
AM=M-1                                                       // [27712] pop local 1
D=M                                                          // [27713] pop local 1
@R13                                                         // [27714] pop local 1
M=D                                                          // [27715] pop local 1
@LCL                                                         // [27716] pop local 1
D=M                                                          // [27717] pop local 1
@1                                                           // [27718] pop local 1
D=D+A                                                        // [27719] pop local 1
@R14                                                         // [27720] pop local 1
M=D                                                          // [27721] pop local 1
@R13                                                         // [27722] pop local 1
D=M                                                          // [27723] pop local 1
@R14                                                         // [27724] pop local 1
A=M                                                          // [27725] pop local 1
M=D                                                          // [27726] pop local 1
@ARG                                                         // [27727] push argument 0
D=M                                                          // [27728] push argument 0
@0                                                           // [27729] push argument 0
A=D+A                                                        // [27730] push argument 0
D=M                                                          // [27731] push argument 0
@SP                                                          // [27732] push argument 0
M=M+1                                                        // [27733] push argument 0
A=M-1                                                        // [27734] push argument 0
M=D                                                          // [27735] push argument 0
@LCL                                                         // [27736] push local 4
D=M                                                          // [27737] push local 4
@4                                                           // [27738] push local 4
A=D+A                                                        // [27739] push local 4
D=M                                                          // [27740] push local 4
@SP                                                          // [27741] push local 4
M=M+1                                                        // [27742] push local 4
A=M-1                                                        // [27743] push local 4
M=D                                                          // [27744] push local 4
@SP                                                          // [27745] add
AM=M-1                                                       // [27746] add
D=M                                                          // [27747] add
A=A-1                                                        // [27748] add
M=D+M                                                        // [27749] add
@SP                                                          // [27750] pop local 2
AM=M-1                                                       // [27751] pop local 2
D=M                                                          // [27752] pop local 2
@R13                                                         // [27753] pop local 2
M=D                                                          // [27754] pop local 2
@LCL                                                         // [27755] pop local 2
D=M                                                          // [27756] pop local 2
@2                                                           // [27757] pop local 2
D=D+A                                                        // [27758] pop local 2
@R14                                                         // [27759] pop local 2
M=D                                                          // [27760] pop local 2
@R13                                                         // [27761] pop local 2
D=M                                                          // [27762] pop local 2
@R14                                                         // [27763] pop local 2
A=M                                                          // [27764] pop local 2
M=D                                                          // [27765] pop local 2
@ARG                                                         // [27766] push argument 1
D=M                                                          // [27767] push argument 1
@1                                                           // [27768] push argument 1
A=D+A                                                        // [27769] push argument 1
D=M                                                          // [27770] push argument 1
@SP                                                          // [27771] push argument 1
M=M+1                                                        // [27772] push argument 1
A=M-1                                                        // [27773] push argument 1
M=D                                                          // [27774] push argument 1
@LCL                                                         // [27775] push local 0
D=M                                                          // [27776] push local 0
@0                                                           // [27777] push local 0
A=D+A                                                        // [27778] push local 0
D=M                                                          // [27779] push local 0
@SP                                                          // [27780] push local 0
M=M+1                                                        // [27781] push local 0
A=M-1                                                        // [27782] push local 0
M=D                                                          // [27783] push local 0
@SP                                                          // [27784] add
AM=M-1                                                       // [27785] add
D=M                                                          // [27786] add
A=A-1                                                        // [27787] add
M=D+M                                                        // [27788] add
@SP                                                          // [27789] pop local 3
AM=M-1                                                       // [27790] pop local 3
D=M                                                          // [27791] pop local 3
@R13                                                         // [27792] pop local 3
M=D                                                          // [27793] pop local 3
@LCL                                                         // [27794] pop local 3
D=M                                                          // [27795] pop local 3
@3                                                           // [27796] pop local 3
D=D+A                                                        // [27797] pop local 3
@R14                                                         // [27798] pop local 3
M=D                                                          // [27799] pop local 3
@R13                                                         // [27800] pop local 3
D=M                                                          // [27801] pop local 3
@R14                                                         // [27802] pop local 3
A=M                                                          // [27803] pop local 3
M=D                                                          // [27804] pop local 3
@LCL                                                         // [27805] push local 1
D=M                                                          // [27806] push local 1
@1                                                           // [27807] push local 1
A=D+A                                                        // [27808] push local 1
D=M                                                          // [27809] push local 1
@SP                                                          // [27810] push local 1
M=M+1                                                        // [27811] push local 1
A=M-1                                                        // [27812] push local 1
M=D                                                          // [27813] push local 1
@LCL                                                         // [27814] push local 3
D=M                                                          // [27815] push local 3
@3                                                           // [27816] push local 3
A=D+A                                                        // [27817] push local 3
D=M                                                          // [27818] push local 3
@SP                                                          // [27819] push local 3
M=M+1                                                        // [27820] push local 3
A=M-1                                                        // [27821] push local 3
M=D                                                          // [27822] push local 3
@LCL                                                         // [27823] push local 2
D=M                                                          // [27824] push local 2
@2                                                           // [27825] push local 2
A=D+A                                                        // [27826] push local 2
D=M                                                          // [27827] push local 2
@SP                                                          // [27828] push local 2
M=M+1                                                        // [27829] push local 2
A=M-1                                                        // [27830] push local 2
M=D                                                          // [27831] push local 2
@LCL                                                         // [27832] push local 3
D=M                                                          // [27833] push local 3
@3                                                           // [27834] push local 3
A=D+A                                                        // [27835] push local 3
D=M                                                          // [27836] push local 3
@SP                                                          // [27837] push local 3
M=M+1                                                        // [27838] push local 3
A=M-1                                                        // [27839] push local 3
M=D                                                          // [27840] push local 3
@SP                                                          // [27841] push constant 1
M=M+1                                                        // [27842] push constant 1
A=M-1                                                        // [27843] push constant 1
M=1                                                          // [27844] push constant 1
@SP                                                          // [27845] add
AM=M-1                                                       // [27846] add
D=M                                                          // [27847] add
A=A-1                                                        // [27848] add
M=D+M                                                        // [27849] add
@4                                                           // [27850] call Screen.drawRectangle 4
D=A                                                          // [27851] call Screen.drawRectangle 4
@R13                                                         // [27852] call Screen.drawRectangle 4
M=D                                                          // [27853] call Screen.drawRectangle 4
@Screen.drawRectangle                                        // [27854] call Screen.drawRectangle 4
D=A                                                          // [27855] call Screen.drawRectangle 4
@R14                                                         // [27856] call Screen.drawRectangle 4
M=D                                                          // [27857] call Screen.drawRectangle 4
@return-279                                                  // [27858] call Screen.drawRectangle 4
D=A                                                          // [27859] call Screen.drawRectangle 4
@CALL                                                        // [27860] call Screen.drawRectangle 4
0;JEQ                                                        // [27861] call Screen.drawRectangle 4
(return-279)                                                 // [     ] call Screen.drawRectangle 4
@SP                                                          // [27862] pop temp 0
AM=M-1                                                       // [27863] pop temp 0
D=M                                                          // [27864] pop temp 0
@5                                                           // [27865] pop temp 0
M=D                                                          // [27866] pop temp 0
@LCL                                                         // [27867] push local 0
D=M                                                          // [27868] push local 0
@0                                                           // [27869] push local 0
A=D+A                                                        // [27870] push local 0
D=M                                                          // [27871] push local 0
@SP                                                          // [27872] push local 0
M=M+1                                                        // [27873] push local 0
A=M-1                                                        // [27874] push local 0
M=D                                                          // [27875] push local 0
@SP                                                          // [27876] push constant 1
M=M+1                                                        // [27877] push constant 1
A=M-1                                                        // [27878] push constant 1
M=1                                                          // [27879] push constant 1
@SP                                                          // [27880] add
AM=M-1                                                       // [27881] add
D=M                                                          // [27882] add
A=A-1                                                        // [27883] add
M=D+M                                                        // [27884] add
@SP                                                          // [27885] pop local 0
AM=M-1                                                       // [27886] pop local 0
D=M                                                          // [27887] pop local 0
@R13                                                         // [27888] pop local 0
M=D                                                          // [27889] pop local 0
@LCL                                                         // [27890] pop local 0
D=M                                                          // [27891] pop local 0
@0                                                           // [27892] pop local 0
D=D+A                                                        // [27893] pop local 0
@R14                                                         // [27894] pop local 0
M=D                                                          // [27895] pop local 0
@R13                                                         // [27896] pop local 0
D=M                                                          // [27897] pop local 0
@R14                                                         // [27898] pop local 0
A=M                                                          // [27899] pop local 0
M=D                                                          // [27900] pop local 0
@Screen.drawCircle$WHILE_EXP0                                // [27901] goto WHILE_EXP0
0;JEQ                                                        // [27902] goto WHILE_EXP0
(Screen.drawCircle$WHILE_END0)                               // [     ] label WHILE_END0
@SP                                                          // [27903] push constant 0
M=M+1                                                        // [27904] push constant 0
A=M-1                                                        // [27905] push constant 0
M=0                                                          // [27906] push constant 0
@RETURN                                                      // [27907] return
0;JEQ                                                        // [27908] return
(String.new)                                                 // [     ] function String.new 0
@3                                                           // [27909] push constant 3
D=A                                                          // [27910] push constant 3
@SP                                                          // [27911] push constant 3
M=M+1                                                        // [27912] push constant 3
A=M-1                                                        // [27913] push constant 3
M=D                                                          // [27914] push constant 3
@1                                                           // [27915] call Memory.alloc 1
D=A                                                          // [27916] call Memory.alloc 1
@R13                                                         // [27917] call Memory.alloc 1
M=D                                                          // [27918] call Memory.alloc 1
@Memory.alloc                                                // [27919] call Memory.alloc 1
D=A                                                          // [27920] call Memory.alloc 1
@R14                                                         // [27921] call Memory.alloc 1
M=D                                                          // [27922] call Memory.alloc 1
@return-280                                                  // [27923] call Memory.alloc 1
D=A                                                          // [27924] call Memory.alloc 1
@CALL                                                        // [27925] call Memory.alloc 1
0;JEQ                                                        // [27926] call Memory.alloc 1
(return-280)                                                 // [     ] call Memory.alloc 1
@SP                                                          // [27927] pop pointer 0
AM=M-1                                                       // [27928] pop pointer 0
D=M                                                          // [27929] pop pointer 0
@3                                                           // [27930] pop pointer 0
M=D                                                          // [27931] pop pointer 0
@ARG                                                         // [27932] push argument 0
D=M                                                          // [27933] push argument 0
@0                                                           // [27934] push argument 0
A=D+A                                                        // [27935] push argument 0
D=M                                                          // [27936] push argument 0
@SP                                                          // [27937] push argument 0
M=M+1                                                        // [27938] push argument 0
A=M-1                                                        // [27939] push argument 0
M=D                                                          // [27940] push argument 0
@SP                                                          // [27941] push constant 0
M=M+1                                                        // [27942] push constant 0
A=M-1                                                        // [27943] push constant 0
M=0                                                          // [27944] push constant 0
@CONTINUE_GT_33                                              // [27945] gt
D=A                                                          // [27946] gt
@R13                                                         // [27947] gt
M=D                                                          // [27948] gt
@SP                                                          // [27949] gt
AM=M-1                                                       // [27950] gt
D=M                                                          // [27951] gt
A=A-1                                                        // [27952] gt
D=D-M                                                        // [27953] gt
@INTERNAL_GT                                                 // [27954] gt
0;JEQ                                                        // [27955] gt
(CONTINUE_GT_33)                                             // [     ] gt
@SP                                                          // [27956] if-goto IF_TRUE0
AM=M-1                                                       // [27957] if-goto IF_TRUE0
D=M                                                          // [27958] if-goto IF_TRUE0
@String.new$IF_TRUE0                                         // [27959] if-goto IF_TRUE0
D;JNE                                                        // [27960] if-goto IF_TRUE0
@String.new$IF_FALSE0                                        // [27961] goto IF_FALSE0
0;JEQ                                                        // [27962] goto IF_FALSE0
(String.new$IF_TRUE0)                                        // [     ] label IF_TRUE0
@ARG                                                         // [27963] push argument 0
D=M                                                          // [27964] push argument 0
@0                                                           // [27965] push argument 0
A=D+A                                                        // [27966] push argument 0
D=M                                                          // [27967] push argument 0
@SP                                                          // [27968] push argument 0
M=M+1                                                        // [27969] push argument 0
A=M-1                                                        // [27970] push argument 0
M=D                                                          // [27971] push argument 0
@1                                                           // [27972] call Array.new 1
D=A                                                          // [27973] call Array.new 1
@R13                                                         // [27974] call Array.new 1
M=D                                                          // [27975] call Array.new 1
@Array.new                                                   // [27976] call Array.new 1
D=A                                                          // [27977] call Array.new 1
@R14                                                         // [27978] call Array.new 1
M=D                                                          // [27979] call Array.new 1
@return-281                                                  // [27980] call Array.new 1
D=A                                                          // [27981] call Array.new 1
@CALL                                                        // [27982] call Array.new 1
0;JEQ                                                        // [27983] call Array.new 1
(return-281)                                                 // [     ] call Array.new 1
@SP                                                          // [27984] pop this 2
AM=M-1                                                       // [27985] pop this 2
D=M                                                          // [27986] pop this 2
@R13                                                         // [27987] pop this 2
M=D                                                          // [27988] pop this 2
@THIS                                                        // [27989] pop this 2
D=M                                                          // [27990] pop this 2
@2                                                           // [27991] pop this 2
D=D+A                                                        // [27992] pop this 2
@R14                                                         // [27993] pop this 2
M=D                                                          // [27994] pop this 2
@R13                                                         // [27995] pop this 2
D=M                                                          // [27996] pop this 2
@R14                                                         // [27997] pop this 2
A=M                                                          // [27998] pop this 2
M=D                                                          // [27999] pop this 2
@String.new$IF_END0                                          // [28000] goto IF_END0
0;JEQ                                                        // [28001] goto IF_END0
(String.new$IF_FALSE0)                                       // [     ] label IF_FALSE0
@SP                                                          // [28002] push constant 0
M=M+1                                                        // [28003] push constant 0
A=M-1                                                        // [28004] push constant 0
M=0                                                          // [28005] push constant 0
@SP                                                          // [28006] pop this 2
AM=M-1                                                       // [28007] pop this 2
D=M                                                          // [28008] pop this 2
@R13                                                         // [28009] pop this 2
M=D                                                          // [28010] pop this 2
@THIS                                                        // [28011] pop this 2
D=M                                                          // [28012] pop this 2
@2                                                           // [28013] pop this 2
D=D+A                                                        // [28014] pop this 2
@R14                                                         // [28015] pop this 2
M=D                                                          // [28016] pop this 2
@R13                                                         // [28017] pop this 2
D=M                                                          // [28018] pop this 2
@R14                                                         // [28019] pop this 2
A=M                                                          // [28020] pop this 2
M=D                                                          // [28021] pop this 2
(String.new$IF_END0)                                         // [     ] label IF_END0
@SP                                                          // [28022] push constant 0
M=M+1                                                        // [28023] push constant 0
A=M-1                                                        // [28024] push constant 0
M=0                                                          // [28025] push constant 0
@SP                                                          // [28026] pop this 0
AM=M-1                                                       // [28027] pop this 0
D=M                                                          // [28028] pop this 0
@R13                                                         // [28029] pop this 0
M=D                                                          // [28030] pop this 0
@THIS                                                        // [28031] pop this 0
D=M                                                          // [28032] pop this 0
@0                                                           // [28033] pop this 0
D=D+A                                                        // [28034] pop this 0
@R14                                                         // [28035] pop this 0
M=D                                                          // [28036] pop this 0
@R13                                                         // [28037] pop this 0
D=M                                                          // [28038] pop this 0
@R14                                                         // [28039] pop this 0
A=M                                                          // [28040] pop this 0
M=D                                                          // [28041] pop this 0
@ARG                                                         // [28042] push argument 0
D=M                                                          // [28043] push argument 0
@0                                                           // [28044] push argument 0
A=D+A                                                        // [28045] push argument 0
D=M                                                          // [28046] push argument 0
@SP                                                          // [28047] push argument 0
M=M+1                                                        // [28048] push argument 0
A=M-1                                                        // [28049] push argument 0
M=D                                                          // [28050] push argument 0
@SP                                                          // [28051] pop this 1
AM=M-1                                                       // [28052] pop this 1
D=M                                                          // [28053] pop this 1
@R13                                                         // [28054] pop this 1
M=D                                                          // [28055] pop this 1
@THIS                                                        // [28056] pop this 1
D=M                                                          // [28057] pop this 1
@1                                                           // [28058] pop this 1
D=D+A                                                        // [28059] pop this 1
@R14                                                         // [28060] pop this 1
M=D                                                          // [28061] pop this 1
@R13                                                         // [28062] pop this 1
D=M                                                          // [28063] pop this 1
@R14                                                         // [28064] pop this 1
A=M                                                          // [28065] pop this 1
M=D                                                          // [28066] pop this 1
@3                                                           // [28067] push pointer 0
D=M                                                          // [28068] push pointer 0
@SP                                                          // [28069] push pointer 0
M=M+1                                                        // [28070] push pointer 0
A=M-1                                                        // [28071] push pointer 0
M=D                                                          // [28072] push pointer 0
@RETURN                                                      // [28073] return
0;JEQ                                                        // [28074] return
(String.dispose)                                             // [     ] function String.dispose 0
@ARG                                                         // [28075] push argument 0
D=M                                                          // [28076] push argument 0
@0                                                           // [28077] push argument 0
A=D+A                                                        // [28078] push argument 0
D=M                                                          // [28079] push argument 0
@SP                                                          // [28080] push argument 0
M=M+1                                                        // [28081] push argument 0
A=M-1                                                        // [28082] push argument 0
M=D                                                          // [28083] push argument 0
@SP                                                          // [28084] pop pointer 0
AM=M-1                                                       // [28085] pop pointer 0
D=M                                                          // [28086] pop pointer 0
@3                                                           // [28087] pop pointer 0
M=D                                                          // [28088] pop pointer 0
@THIS                                                        // [28089] push this 2
D=M                                                          // [28090] push this 2
@2                                                           // [28091] push this 2
A=D+A                                                        // [28092] push this 2
D=M                                                          // [28093] push this 2
@SP                                                          // [28094] push this 2
M=M+1                                                        // [28095] push this 2
A=M-1                                                        // [28096] push this 2
M=D                                                          // [28097] push this 2
@SP                                                          // [28098] push constant 0
M=M+1                                                        // [28099] push constant 0
A=M-1                                                        // [28100] push constant 0
M=0                                                          // [28101] push constant 0
@CONTINUE_EQ_27                                              // [28102] eq
D=A                                                          // [28103] eq
@R13                                                         // [28104] eq
M=D                                                          // [28105] eq
@SP                                                          // [28106] eq
AM=M-1                                                       // [28107] eq
D=M                                                          // [28108] eq
A=A-1                                                        // [28109] eq
D=D-M                                                        // [28110] eq
@INTERNAL_EQ                                                 // [28111] eq
0;JEQ                                                        // [28112] eq
(CONTINUE_EQ_27)                                             // [     ] eq
@SP                                                          // [28113] not
A=M-1                                                        // [28114] not
D=M                                                          // [28115] not
M=!D                                                         // [28116] not
@SP                                                          // [28117] if-goto IF_TRUE0
AM=M-1                                                       // [28118] if-goto IF_TRUE0
D=M                                                          // [28119] if-goto IF_TRUE0
@String.dispose$IF_TRUE0                                     // [28120] if-goto IF_TRUE0
D;JNE                                                        // [28121] if-goto IF_TRUE0
@String.dispose$IF_FALSE0                                    // [28122] goto IF_FALSE0
0;JEQ                                                        // [28123] goto IF_FALSE0
(String.dispose$IF_TRUE0)                                    // [     ] label IF_TRUE0
@THIS                                                        // [28124] push this 2
D=M                                                          // [28125] push this 2
@2                                                           // [28126] push this 2
A=D+A                                                        // [28127] push this 2
D=M                                                          // [28128] push this 2
@SP                                                          // [28129] push this 2
M=M+1                                                        // [28130] push this 2
A=M-1                                                        // [28131] push this 2
M=D                                                          // [28132] push this 2
@1                                                           // [28133] call Array.dispose 1
D=A                                                          // [28134] call Array.dispose 1
@R13                                                         // [28135] call Array.dispose 1
M=D                                                          // [28136] call Array.dispose 1
@Array.dispose                                               // [28137] call Array.dispose 1
D=A                                                          // [28138] call Array.dispose 1
@R14                                                         // [28139] call Array.dispose 1
M=D                                                          // [28140] call Array.dispose 1
@return-282                                                  // [28141] call Array.dispose 1
D=A                                                          // [28142] call Array.dispose 1
@CALL                                                        // [28143] call Array.dispose 1
0;JEQ                                                        // [28144] call Array.dispose 1
(return-282)                                                 // [     ] call Array.dispose 1
@SP                                                          // [28145] pop temp 0
AM=M-1                                                       // [28146] pop temp 0
D=M                                                          // [28147] pop temp 0
@5                                                           // [28148] pop temp 0
M=D                                                          // [28149] pop temp 0
(String.dispose$IF_FALSE0)                                   // [     ] label IF_FALSE0
@3                                                           // [28150] push pointer 0
D=M                                                          // [28151] push pointer 0
@SP                                                          // [28152] push pointer 0
M=M+1                                                        // [28153] push pointer 0
A=M-1                                                        // [28154] push pointer 0
M=D                                                          // [28155] push pointer 0
@1                                                           // [28156] call Memory.deAlloc 1
D=A                                                          // [28157] call Memory.deAlloc 1
@R13                                                         // [28158] call Memory.deAlloc 1
M=D                                                          // [28159] call Memory.deAlloc 1
@Memory.deAlloc                                              // [28160] call Memory.deAlloc 1
D=A                                                          // [28161] call Memory.deAlloc 1
@R14                                                         // [28162] call Memory.deAlloc 1
M=D                                                          // [28163] call Memory.deAlloc 1
@return-283                                                  // [28164] call Memory.deAlloc 1
D=A                                                          // [28165] call Memory.deAlloc 1
@CALL                                                        // [28166] call Memory.deAlloc 1
0;JEQ                                                        // [28167] call Memory.deAlloc 1
(return-283)                                                 // [     ] call Memory.deAlloc 1
@SP                                                          // [28168] pop temp 0
AM=M-1                                                       // [28169] pop temp 0
D=M                                                          // [28170] pop temp 0
@5                                                           // [28171] pop temp 0
M=D                                                          // [28172] pop temp 0
@SP                                                          // [28173] push constant 0
M=M+1                                                        // [28174] push constant 0
A=M-1                                                        // [28175] push constant 0
M=0                                                          // [28176] push constant 0
@RETURN                                                      // [28177] return
0;JEQ                                                        // [28178] return
(String.length)                                              // [     ] function String.length 0
@ARG                                                         // [28179] push argument 0
D=M                                                          // [28180] push argument 0
@0                                                           // [28181] push argument 0
A=D+A                                                        // [28182] push argument 0
D=M                                                          // [28183] push argument 0
@SP                                                          // [28184] push argument 0
M=M+1                                                        // [28185] push argument 0
A=M-1                                                        // [28186] push argument 0
M=D                                                          // [28187] push argument 0
@SP                                                          // [28188] pop pointer 0
AM=M-1                                                       // [28189] pop pointer 0
D=M                                                          // [28190] pop pointer 0
@3                                                           // [28191] pop pointer 0
M=D                                                          // [28192] pop pointer 0
@THIS                                                        // [28193] push this 0
D=M                                                          // [28194] push this 0
@0                                                           // [28195] push this 0
A=D+A                                                        // [28196] push this 0
D=M                                                          // [28197] push this 0
@SP                                                          // [28198] push this 0
M=M+1                                                        // [28199] push this 0
A=M-1                                                        // [28200] push this 0
M=D                                                          // [28201] push this 0
@RETURN                                                      // [28202] return
0;JEQ                                                        // [28203] return
(String.charAt)                                              // [     ] function String.charAt 0
@ARG                                                         // [28204] push argument 0
D=M                                                          // [28205] push argument 0
@0                                                           // [28206] push argument 0
A=D+A                                                        // [28207] push argument 0
D=M                                                          // [28208] push argument 0
@SP                                                          // [28209] push argument 0
M=M+1                                                        // [28210] push argument 0
A=M-1                                                        // [28211] push argument 0
M=D                                                          // [28212] push argument 0
@SP                                                          // [28213] pop pointer 0
AM=M-1                                                       // [28214] pop pointer 0
D=M                                                          // [28215] pop pointer 0
@3                                                           // [28216] pop pointer 0
M=D                                                          // [28217] pop pointer 0
@ARG                                                         // [28218] push argument 1
D=M                                                          // [28219] push argument 1
@1                                                           // [28220] push argument 1
A=D+A                                                        // [28221] push argument 1
D=M                                                          // [28222] push argument 1
@SP                                                          // [28223] push argument 1
M=M+1                                                        // [28224] push argument 1
A=M-1                                                        // [28225] push argument 1
M=D                                                          // [28226] push argument 1
@SP                                                          // [28227] push constant 0
M=M+1                                                        // [28228] push constant 0
A=M-1                                                        // [28229] push constant 0
M=0                                                          // [28230] push constant 0
@CONTINUE_LT_45                                              // [28231] lt
D=A                                                          // [28232] lt
@R13                                                         // [28233] lt
M=D                                                          // [28234] lt
@SP                                                          // [28235] lt
AM=M-1                                                       // [28236] lt
D=M                                                          // [28237] lt
A=A-1                                                        // [28238] lt
D=D-M                                                        // [28239] lt
@INTERNAL_LT                                                 // [28240] lt
0;JEQ                                                        // [28241] lt
(CONTINUE_LT_45)                                             // [     ] lt
@ARG                                                         // [28242] push argument 1
D=M                                                          // [28243] push argument 1
@1                                                           // [28244] push argument 1
A=D+A                                                        // [28245] push argument 1
D=M                                                          // [28246] push argument 1
@SP                                                          // [28247] push argument 1
M=M+1                                                        // [28248] push argument 1
A=M-1                                                        // [28249] push argument 1
M=D                                                          // [28250] push argument 1
@THIS                                                        // [28251] push this 0
D=M                                                          // [28252] push this 0
@0                                                           // [28253] push this 0
A=D+A                                                        // [28254] push this 0
D=M                                                          // [28255] push this 0
@SP                                                          // [28256] push this 0
M=M+1                                                        // [28257] push this 0
A=M-1                                                        // [28258] push this 0
M=D                                                          // [28259] push this 0
@SP                                                          // [28260] push constant 1
M=M+1                                                        // [28261] push constant 1
A=M-1                                                        // [28262] push constant 1
M=1                                                          // [28263] push constant 1
@SP                                                          // [28264] sub
AM=M-1                                                       // [28265] sub
D=M                                                          // [28266] sub
A=A-1                                                        // [28267] sub
M=M-D                                                        // [28268] sub
@CONTINUE_GT_34                                              // [28269] gt
D=A                                                          // [28270] gt
@R13                                                         // [28271] gt
M=D                                                          // [28272] gt
@SP                                                          // [28273] gt
AM=M-1                                                       // [28274] gt
D=M                                                          // [28275] gt
A=A-1                                                        // [28276] gt
D=D-M                                                        // [28277] gt
@INTERNAL_GT                                                 // [28278] gt
0;JEQ                                                        // [28279] gt
(CONTINUE_GT_34)                                             // [     ] gt
@SP                                                          // [28280] or
AM=M-1                                                       // [28281] or
D=M                                                          // [28282] or
A=A-1                                                        // [28283] or
M=D|M                                                        // [28284] or
@SP                                                          // [28285] if-goto IF_TRUE0
AM=M-1                                                       // [28286] if-goto IF_TRUE0
D=M                                                          // [28287] if-goto IF_TRUE0
@String.charAt$IF_TRUE0                                      // [28288] if-goto IF_TRUE0
D;JNE                                                        // [28289] if-goto IF_TRUE0
@String.charAt$IF_FALSE0                                     // [28290] goto IF_FALSE0
0;JEQ                                                        // [28291] goto IF_FALSE0
(String.charAt$IF_TRUE0)                                     // [     ] label IF_TRUE0
@SP                                                          // [28292] push constant 1
M=M+1                                                        // [28293] push constant 1
A=M-1                                                        // [28294] push constant 1
M=1                                                          // [28295] push constant 1
@1                                                           // [28296] call Sys.error 1
D=A                                                          // [28297] call Sys.error 1
@R13                                                         // [28298] call Sys.error 1
M=D                                                          // [28299] call Sys.error 1
@Sys.error                                                   // [28300] call Sys.error 1
D=A                                                          // [28301] call Sys.error 1
@R14                                                         // [28302] call Sys.error 1
M=D                                                          // [28303] call Sys.error 1
@return-284                                                  // [28304] call Sys.error 1
D=A                                                          // [28305] call Sys.error 1
@CALL                                                        // [28306] call Sys.error 1
0;JEQ                                                        // [28307] call Sys.error 1
(return-284)                                                 // [     ] call Sys.error 1
@SP                                                          // [28308] pop temp 0
AM=M-1                                                       // [28309] pop temp 0
D=M                                                          // [28310] pop temp 0
@5                                                           // [28311] pop temp 0
M=D                                                          // [28312] pop temp 0
(String.charAt$IF_FALSE0)                                    // [     ] label IF_FALSE0
@ARG                                                         // [28313] push argument 1
D=M                                                          // [28314] push argument 1
@1                                                           // [28315] push argument 1
A=D+A                                                        // [28316] push argument 1
D=M                                                          // [28317] push argument 1
@SP                                                          // [28318] push argument 1
M=M+1                                                        // [28319] push argument 1
A=M-1                                                        // [28320] push argument 1
M=D                                                          // [28321] push argument 1
@THIS                                                        // [28322] push this 2
D=M                                                          // [28323] push this 2
@2                                                           // [28324] push this 2
A=D+A                                                        // [28325] push this 2
D=M                                                          // [28326] push this 2
@SP                                                          // [28327] push this 2
M=M+1                                                        // [28328] push this 2
A=M-1                                                        // [28329] push this 2
M=D                                                          // [28330] push this 2
@SP                                                          // [28331] add
AM=M-1                                                       // [28332] add
D=M                                                          // [28333] add
A=A-1                                                        // [28334] add
M=D+M                                                        // [28335] add
@SP                                                          // [28336] pop pointer 1
AM=M-1                                                       // [28337] pop pointer 1
D=M                                                          // [28338] pop pointer 1
@4                                                           // [28339] pop pointer 1
M=D                                                          // [28340] pop pointer 1
@THAT                                                        // [28341] push that 0
D=M                                                          // [28342] push that 0
@0                                                           // [28343] push that 0
A=D+A                                                        // [28344] push that 0
D=M                                                          // [28345] push that 0
@SP                                                          // [28346] push that 0
M=M+1                                                        // [28347] push that 0
A=M-1                                                        // [28348] push that 0
M=D                                                          // [28349] push that 0
@RETURN                                                      // [28350] return
0;JEQ                                                        // [28351] return
(String.setCharAt)                                           // [     ] function String.setCharAt 0
@ARG                                                         // [28352] push argument 0
D=M                                                          // [28353] push argument 0
@0                                                           // [28354] push argument 0
A=D+A                                                        // [28355] push argument 0
D=M                                                          // [28356] push argument 0
@SP                                                          // [28357] push argument 0
M=M+1                                                        // [28358] push argument 0
A=M-1                                                        // [28359] push argument 0
M=D                                                          // [28360] push argument 0
@SP                                                          // [28361] pop pointer 0
AM=M-1                                                       // [28362] pop pointer 0
D=M                                                          // [28363] pop pointer 0
@3                                                           // [28364] pop pointer 0
M=D                                                          // [28365] pop pointer 0
@ARG                                                         // [28366] push argument 1
D=M                                                          // [28367] push argument 1
@1                                                           // [28368] push argument 1
A=D+A                                                        // [28369] push argument 1
D=M                                                          // [28370] push argument 1
@SP                                                          // [28371] push argument 1
M=M+1                                                        // [28372] push argument 1
A=M-1                                                        // [28373] push argument 1
M=D                                                          // [28374] push argument 1
@SP                                                          // [28375] push constant 0
M=M+1                                                        // [28376] push constant 0
A=M-1                                                        // [28377] push constant 0
M=0                                                          // [28378] push constant 0
@CONTINUE_GT_35                                              // [28379] gt
D=A                                                          // [28380] gt
@R13                                                         // [28381] gt
M=D                                                          // [28382] gt
@SP                                                          // [28383] gt
AM=M-1                                                       // [28384] gt
D=M                                                          // [28385] gt
A=A-1                                                        // [28386] gt
D=D-M                                                        // [28387] gt
@INTERNAL_GT                                                 // [28388] gt
0;JEQ                                                        // [28389] gt
(CONTINUE_GT_35)                                             // [     ] gt
@ARG                                                         // [28390] push argument 1
D=M                                                          // [28391] push argument 1
@1                                                           // [28392] push argument 1
A=D+A                                                        // [28393] push argument 1
D=M                                                          // [28394] push argument 1
@SP                                                          // [28395] push argument 1
M=M+1                                                        // [28396] push argument 1
A=M-1                                                        // [28397] push argument 1
M=D                                                          // [28398] push argument 1
@THIS                                                        // [28399] push this 0
D=M                                                          // [28400] push this 0
@0                                                           // [28401] push this 0
A=D+A                                                        // [28402] push this 0
D=M                                                          // [28403] push this 0
@SP                                                          // [28404] push this 0
M=M+1                                                        // [28405] push this 0
A=M-1                                                        // [28406] push this 0
M=D                                                          // [28407] push this 0
@CONTINUE_LT_46                                              // [28408] lt
D=A                                                          // [28409] lt
@R13                                                         // [28410] lt
M=D                                                          // [28411] lt
@SP                                                          // [28412] lt
AM=M-1                                                       // [28413] lt
D=M                                                          // [28414] lt
A=A-1                                                        // [28415] lt
D=D-M                                                        // [28416] lt
@INTERNAL_LT                                                 // [28417] lt
0;JEQ                                                        // [28418] lt
(CONTINUE_LT_46)                                             // [     ] lt
@SP                                                          // [28419] and
AM=M-1                                                       // [28420] and
D=M                                                          // [28421] and
A=A-1                                                        // [28422] and
M=D&M                                                        // [28423] and
@SP                                                          // [28424] not
A=M-1                                                        // [28425] not
D=M                                                          // [28426] not
M=!D                                                         // [28427] not
@SP                                                          // [28428] if-goto IF_TRUE0
AM=M-1                                                       // [28429] if-goto IF_TRUE0
D=M                                                          // [28430] if-goto IF_TRUE0
@String.setCharAt$IF_TRUE0                                   // [28431] if-goto IF_TRUE0
D;JNE                                                        // [28432] if-goto IF_TRUE0
@String.setCharAt$IF_FALSE0                                  // [28433] goto IF_FALSE0
0;JEQ                                                        // [28434] goto IF_FALSE0
(String.setCharAt$IF_TRUE0)                                  // [     ] label IF_TRUE0
@SP                                                          // [28435] push constant 1
M=M+1                                                        // [28436] push constant 1
A=M-1                                                        // [28437] push constant 1
M=1                                                          // [28438] push constant 1
@1                                                           // [28439] call Sys.error 1
D=A                                                          // [28440] call Sys.error 1
@R13                                                         // [28441] call Sys.error 1
M=D                                                          // [28442] call Sys.error 1
@Sys.error                                                   // [28443] call Sys.error 1
D=A                                                          // [28444] call Sys.error 1
@R14                                                         // [28445] call Sys.error 1
M=D                                                          // [28446] call Sys.error 1
@return-285                                                  // [28447] call Sys.error 1
D=A                                                          // [28448] call Sys.error 1
@CALL                                                        // [28449] call Sys.error 1
0;JEQ                                                        // [28450] call Sys.error 1
(return-285)                                                 // [     ] call Sys.error 1
@SP                                                          // [28451] pop temp 0
AM=M-1                                                       // [28452] pop temp 0
D=M                                                          // [28453] pop temp 0
@5                                                           // [28454] pop temp 0
M=D                                                          // [28455] pop temp 0
(String.setCharAt$IF_FALSE0)                                 // [     ] label IF_FALSE0
@ARG                                                         // [28456] push argument 1
D=M                                                          // [28457] push argument 1
@1                                                           // [28458] push argument 1
A=D+A                                                        // [28459] push argument 1
D=M                                                          // [28460] push argument 1
@SP                                                          // [28461] push argument 1
M=M+1                                                        // [28462] push argument 1
A=M-1                                                        // [28463] push argument 1
M=D                                                          // [28464] push argument 1
@THIS                                                        // [28465] push this 2
D=M                                                          // [28466] push this 2
@2                                                           // [28467] push this 2
A=D+A                                                        // [28468] push this 2
D=M                                                          // [28469] push this 2
@SP                                                          // [28470] push this 2
M=M+1                                                        // [28471] push this 2
A=M-1                                                        // [28472] push this 2
M=D                                                          // [28473] push this 2
@SP                                                          // [28474] add
AM=M-1                                                       // [28475] add
D=M                                                          // [28476] add
A=A-1                                                        // [28477] add
M=D+M                                                        // [28478] add
@ARG                                                         // [28479] push argument 2
D=M                                                          // [28480] push argument 2
@2                                                           // [28481] push argument 2
A=D+A                                                        // [28482] push argument 2
D=M                                                          // [28483] push argument 2
@SP                                                          // [28484] push argument 2
M=M+1                                                        // [28485] push argument 2
A=M-1                                                        // [28486] push argument 2
M=D                                                          // [28487] push argument 2
@SP                                                          // [28488] pop temp 0
AM=M-1                                                       // [28489] pop temp 0
D=M                                                          // [28490] pop temp 0
@5                                                           // [28491] pop temp 0
M=D                                                          // [28492] pop temp 0
@SP                                                          // [28493] pop pointer 1
AM=M-1                                                       // [28494] pop pointer 1
D=M                                                          // [28495] pop pointer 1
@4                                                           // [28496] pop pointer 1
M=D                                                          // [28497] pop pointer 1
@5                                                           // [28498] push temp 0
D=M                                                          // [28499] push temp 0
@SP                                                          // [28500] push temp 0
M=M+1                                                        // [28501] push temp 0
A=M-1                                                        // [28502] push temp 0
M=D                                                          // [28503] push temp 0
@SP                                                          // [28504] pop that 0
AM=M-1                                                       // [28505] pop that 0
D=M                                                          // [28506] pop that 0
@R13                                                         // [28507] pop that 0
M=D                                                          // [28508] pop that 0
@THAT                                                        // [28509] pop that 0
D=M                                                          // [28510] pop that 0
@0                                                           // [28511] pop that 0
D=D+A                                                        // [28512] pop that 0
@R14                                                         // [28513] pop that 0
M=D                                                          // [28514] pop that 0
@R13                                                         // [28515] pop that 0
D=M                                                          // [28516] pop that 0
@R14                                                         // [28517] pop that 0
A=M                                                          // [28518] pop that 0
M=D                                                          // [28519] pop that 0
@SP                                                          // [28520] push constant 0
M=M+1                                                        // [28521] push constant 0
A=M-1                                                        // [28522] push constant 0
M=0                                                          // [28523] push constant 0
@RETURN                                                      // [28524] return
0;JEQ                                                        // [28525] return
(String.appendChar)                                          // [     ] function String.appendChar 0
@ARG                                                         // [28526] push argument 0
D=M                                                          // [28527] push argument 0
@0                                                           // [28528] push argument 0
A=D+A                                                        // [28529] push argument 0
D=M                                                          // [28530] push argument 0
@SP                                                          // [28531] push argument 0
M=M+1                                                        // [28532] push argument 0
A=M-1                                                        // [28533] push argument 0
M=D                                                          // [28534] push argument 0
@SP                                                          // [28535] pop pointer 0
AM=M-1                                                       // [28536] pop pointer 0
D=M                                                          // [28537] pop pointer 0
@3                                                           // [28538] pop pointer 0
M=D                                                          // [28539] pop pointer 0
@THIS                                                        // [28540] push this 0
D=M                                                          // [28541] push this 0
@0                                                           // [28542] push this 0
A=D+A                                                        // [28543] push this 0
D=M                                                          // [28544] push this 0
@SP                                                          // [28545] push this 0
M=M+1                                                        // [28546] push this 0
A=M-1                                                        // [28547] push this 0
M=D                                                          // [28548] push this 0
@THIS                                                        // [28549] push this 1
D=M                                                          // [28550] push this 1
@1                                                           // [28551] push this 1
A=D+A                                                        // [28552] push this 1
D=M                                                          // [28553] push this 1
@SP                                                          // [28554] push this 1
M=M+1                                                        // [28555] push this 1
A=M-1                                                        // [28556] push this 1
M=D                                                          // [28557] push this 1
@CONTINUE_EQ_28                                              // [28558] eq
D=A                                                          // [28559] eq
@R13                                                         // [28560] eq
M=D                                                          // [28561] eq
@SP                                                          // [28562] eq
AM=M-1                                                       // [28563] eq
D=M                                                          // [28564] eq
A=A-1                                                        // [28565] eq
D=D-M                                                        // [28566] eq
@INTERNAL_EQ                                                 // [28567] eq
0;JEQ                                                        // [28568] eq
(CONTINUE_EQ_28)                                             // [     ] eq
@SP                                                          // [28569] if-goto IF_TRUE0
AM=M-1                                                       // [28570] if-goto IF_TRUE0
D=M                                                          // [28571] if-goto IF_TRUE0
@String.appendChar$IF_TRUE0                                  // [28572] if-goto IF_TRUE0
D;JNE                                                        // [28573] if-goto IF_TRUE0
@String.appendChar$IF_FALSE0                                 // [28574] goto IF_FALSE0
0;JEQ                                                        // [28575] goto IF_FALSE0
(String.appendChar$IF_TRUE0)                                 // [     ] label IF_TRUE0
@SP                                                          // [28576] push constant 1
M=M+1                                                        // [28577] push constant 1
A=M-1                                                        // [28578] push constant 1
M=1                                                          // [28579] push constant 1
@1                                                           // [28580] call Sys.error 1
D=A                                                          // [28581] call Sys.error 1
@R13                                                         // [28582] call Sys.error 1
M=D                                                          // [28583] call Sys.error 1
@Sys.error                                                   // [28584] call Sys.error 1
D=A                                                          // [28585] call Sys.error 1
@R14                                                         // [28586] call Sys.error 1
M=D                                                          // [28587] call Sys.error 1
@return-286                                                  // [28588] call Sys.error 1
D=A                                                          // [28589] call Sys.error 1
@CALL                                                        // [28590] call Sys.error 1
0;JEQ                                                        // [28591] call Sys.error 1
(return-286)                                                 // [     ] call Sys.error 1
@SP                                                          // [28592] pop temp 0
AM=M-1                                                       // [28593] pop temp 0
D=M                                                          // [28594] pop temp 0
@5                                                           // [28595] pop temp 0
M=D                                                          // [28596] pop temp 0
(String.appendChar$IF_FALSE0)                                // [     ] label IF_FALSE0
@THIS                                                        // [28597] push this 0
D=M                                                          // [28598] push this 0
@0                                                           // [28599] push this 0
A=D+A                                                        // [28600] push this 0
D=M                                                          // [28601] push this 0
@SP                                                          // [28602] push this 0
M=M+1                                                        // [28603] push this 0
A=M-1                                                        // [28604] push this 0
M=D                                                          // [28605] push this 0
@THIS                                                        // [28606] push this 2
D=M                                                          // [28607] push this 2
@2                                                           // [28608] push this 2
A=D+A                                                        // [28609] push this 2
D=M                                                          // [28610] push this 2
@SP                                                          // [28611] push this 2
M=M+1                                                        // [28612] push this 2
A=M-1                                                        // [28613] push this 2
M=D                                                          // [28614] push this 2
@SP                                                          // [28615] add
AM=M-1                                                       // [28616] add
D=M                                                          // [28617] add
A=A-1                                                        // [28618] add
M=D+M                                                        // [28619] add
@ARG                                                         // [28620] push argument 1
D=M                                                          // [28621] push argument 1
@1                                                           // [28622] push argument 1
A=D+A                                                        // [28623] push argument 1
D=M                                                          // [28624] push argument 1
@SP                                                          // [28625] push argument 1
M=M+1                                                        // [28626] push argument 1
A=M-1                                                        // [28627] push argument 1
M=D                                                          // [28628] push argument 1
@SP                                                          // [28629] pop temp 0
AM=M-1                                                       // [28630] pop temp 0
D=M                                                          // [28631] pop temp 0
@5                                                           // [28632] pop temp 0
M=D                                                          // [28633] pop temp 0
@SP                                                          // [28634] pop pointer 1
AM=M-1                                                       // [28635] pop pointer 1
D=M                                                          // [28636] pop pointer 1
@4                                                           // [28637] pop pointer 1
M=D                                                          // [28638] pop pointer 1
@5                                                           // [28639] push temp 0
D=M                                                          // [28640] push temp 0
@SP                                                          // [28641] push temp 0
M=M+1                                                        // [28642] push temp 0
A=M-1                                                        // [28643] push temp 0
M=D                                                          // [28644] push temp 0
@SP                                                          // [28645] pop that 0
AM=M-1                                                       // [28646] pop that 0
D=M                                                          // [28647] pop that 0
@R13                                                         // [28648] pop that 0
M=D                                                          // [28649] pop that 0
@THAT                                                        // [28650] pop that 0
D=M                                                          // [28651] pop that 0
@0                                                           // [28652] pop that 0
D=D+A                                                        // [28653] pop that 0
@R14                                                         // [28654] pop that 0
M=D                                                          // [28655] pop that 0
@R13                                                         // [28656] pop that 0
D=M                                                          // [28657] pop that 0
@R14                                                         // [28658] pop that 0
A=M                                                          // [28659] pop that 0
M=D                                                          // [28660] pop that 0
@THIS                                                        // [28661] push this 0
D=M                                                          // [28662] push this 0
@0                                                           // [28663] push this 0
A=D+A                                                        // [28664] push this 0
D=M                                                          // [28665] push this 0
@SP                                                          // [28666] push this 0
M=M+1                                                        // [28667] push this 0
A=M-1                                                        // [28668] push this 0
M=D                                                          // [28669] push this 0
@SP                                                          // [28670] push constant 1
M=M+1                                                        // [28671] push constant 1
A=M-1                                                        // [28672] push constant 1
M=1                                                          // [28673] push constant 1
@SP                                                          // [28674] add
AM=M-1                                                       // [28675] add
D=M                                                          // [28676] add
A=A-1                                                        // [28677] add
M=D+M                                                        // [28678] add
@SP                                                          // [28679] pop this 0
AM=M-1                                                       // [28680] pop this 0
D=M                                                          // [28681] pop this 0
@R13                                                         // [28682] pop this 0
M=D                                                          // [28683] pop this 0
@THIS                                                        // [28684] pop this 0
D=M                                                          // [28685] pop this 0
@0                                                           // [28686] pop this 0
D=D+A                                                        // [28687] pop this 0
@R14                                                         // [28688] pop this 0
M=D                                                          // [28689] pop this 0
@R13                                                         // [28690] pop this 0
D=M                                                          // [28691] pop this 0
@R14                                                         // [28692] pop this 0
A=M                                                          // [28693] pop this 0
M=D                                                          // [28694] pop this 0
@3                                                           // [28695] push pointer 0
D=M                                                          // [28696] push pointer 0
@SP                                                          // [28697] push pointer 0
M=M+1                                                        // [28698] push pointer 0
A=M-1                                                        // [28699] push pointer 0
M=D                                                          // [28700] push pointer 0
@RETURN                                                      // [28701] return
0;JEQ                                                        // [28702] return
(String.eraseLastChar)                                       // [     ] function String.eraseLastChar 0
@ARG                                                         // [28703] push argument 0
D=M                                                          // [28704] push argument 0
@0                                                           // [28705] push argument 0
A=D+A                                                        // [28706] push argument 0
D=M                                                          // [28707] push argument 0
@SP                                                          // [28708] push argument 0
M=M+1                                                        // [28709] push argument 0
A=M-1                                                        // [28710] push argument 0
M=D                                                          // [28711] push argument 0
@SP                                                          // [28712] pop pointer 0
AM=M-1                                                       // [28713] pop pointer 0
D=M                                                          // [28714] pop pointer 0
@3                                                           // [28715] pop pointer 0
M=D                                                          // [28716] pop pointer 0
@THIS                                                        // [28717] push this 0
D=M                                                          // [28718] push this 0
@0                                                           // [28719] push this 0
A=D+A                                                        // [28720] push this 0
D=M                                                          // [28721] push this 0
@SP                                                          // [28722] push this 0
M=M+1                                                        // [28723] push this 0
A=M-1                                                        // [28724] push this 0
M=D                                                          // [28725] push this 0
@SP                                                          // [28726] push constant 0
M=M+1                                                        // [28727] push constant 0
A=M-1                                                        // [28728] push constant 0
M=0                                                          // [28729] push constant 0
@CONTINUE_GT_36                                              // [28730] gt
D=A                                                          // [28731] gt
@R13                                                         // [28732] gt
M=D                                                          // [28733] gt
@SP                                                          // [28734] gt
AM=M-1                                                       // [28735] gt
D=M                                                          // [28736] gt
A=A-1                                                        // [28737] gt
D=D-M                                                        // [28738] gt
@INTERNAL_GT                                                 // [28739] gt
0;JEQ                                                        // [28740] gt
(CONTINUE_GT_36)                                             // [     ] gt
@SP                                                          // [28741] not
A=M-1                                                        // [28742] not
D=M                                                          // [28743] not
M=!D                                                         // [28744] not
@SP                                                          // [28745] if-goto IF_TRUE0
AM=M-1                                                       // [28746] if-goto IF_TRUE0
D=M                                                          // [28747] if-goto IF_TRUE0
@String.eraseLastChar$IF_TRUE0                               // [28748] if-goto IF_TRUE0
D;JNE                                                        // [28749] if-goto IF_TRUE0
@String.eraseLastChar$IF_FALSE0                              // [28750] goto IF_FALSE0
0;JEQ                                                        // [28751] goto IF_FALSE0
(String.eraseLastChar$IF_TRUE0)                              // [     ] label IF_TRUE0
@SP                                                          // [28752] push constant 1
M=M+1                                                        // [28753] push constant 1
A=M-1                                                        // [28754] push constant 1
M=1                                                          // [28755] push constant 1
@1                                                           // [28756] call Sys.error 1
D=A                                                          // [28757] call Sys.error 1
@R13                                                         // [28758] call Sys.error 1
M=D                                                          // [28759] call Sys.error 1
@Sys.error                                                   // [28760] call Sys.error 1
D=A                                                          // [28761] call Sys.error 1
@R14                                                         // [28762] call Sys.error 1
M=D                                                          // [28763] call Sys.error 1
@return-287                                                  // [28764] call Sys.error 1
D=A                                                          // [28765] call Sys.error 1
@CALL                                                        // [28766] call Sys.error 1
0;JEQ                                                        // [28767] call Sys.error 1
(return-287)                                                 // [     ] call Sys.error 1
@SP                                                          // [28768] pop temp 0
AM=M-1                                                       // [28769] pop temp 0
D=M                                                          // [28770] pop temp 0
@5                                                           // [28771] pop temp 0
M=D                                                          // [28772] pop temp 0
(String.eraseLastChar$IF_FALSE0)                             // [     ] label IF_FALSE0
@THIS                                                        // [28773] push this 0
D=M                                                          // [28774] push this 0
@0                                                           // [28775] push this 0
A=D+A                                                        // [28776] push this 0
D=M                                                          // [28777] push this 0
@SP                                                          // [28778] push this 0
M=M+1                                                        // [28779] push this 0
A=M-1                                                        // [28780] push this 0
M=D                                                          // [28781] push this 0
@SP                                                          // [28782] push constant 1
M=M+1                                                        // [28783] push constant 1
A=M-1                                                        // [28784] push constant 1
M=1                                                          // [28785] push constant 1
@SP                                                          // [28786] sub
AM=M-1                                                       // [28787] sub
D=M                                                          // [28788] sub
A=A-1                                                        // [28789] sub
M=M-D                                                        // [28790] sub
@SP                                                          // [28791] pop this 0
AM=M-1                                                       // [28792] pop this 0
D=M                                                          // [28793] pop this 0
@R13                                                         // [28794] pop this 0
M=D                                                          // [28795] pop this 0
@THIS                                                        // [28796] pop this 0
D=M                                                          // [28797] pop this 0
@0                                                           // [28798] pop this 0
D=D+A                                                        // [28799] pop this 0
@R14                                                         // [28800] pop this 0
M=D                                                          // [28801] pop this 0
@R13                                                         // [28802] pop this 0
D=M                                                          // [28803] pop this 0
@R14                                                         // [28804] pop this 0
A=M                                                          // [28805] pop this 0
M=D                                                          // [28806] pop this 0
@SP                                                          // [28807] push constant 0
M=M+1                                                        // [28808] push constant 0
A=M-1                                                        // [28809] push constant 0
M=0                                                          // [28810] push constant 0
@RETURN                                                      // [28811] return
0;JEQ                                                        // [28812] return
(String.intValue)                                            // [     ] function String.intValue 6
@SP                                                          // [28813] function String.intValue 6
A=M                                                          // [28814] function String.intValue 6
M=0                                                          // [28815] function String.intValue 6
@SP                                                          // [28816] function String.intValue 6
M=M+1                                                        // [28817] function String.intValue 6
@SP                                                          // [28818] function String.intValue 6
A=M                                                          // [28819] function String.intValue 6
M=0                                                          // [28820] function String.intValue 6
@SP                                                          // [28821] function String.intValue 6
M=M+1                                                        // [28822] function String.intValue 6
@SP                                                          // [28823] function String.intValue 6
A=M                                                          // [28824] function String.intValue 6
M=0                                                          // [28825] function String.intValue 6
@SP                                                          // [28826] function String.intValue 6
M=M+1                                                        // [28827] function String.intValue 6
@SP                                                          // [28828] function String.intValue 6
A=M                                                          // [28829] function String.intValue 6
M=0                                                          // [28830] function String.intValue 6
@SP                                                          // [28831] function String.intValue 6
M=M+1                                                        // [28832] function String.intValue 6
@SP                                                          // [28833] function String.intValue 6
A=M                                                          // [28834] function String.intValue 6
M=0                                                          // [28835] function String.intValue 6
@SP                                                          // [28836] function String.intValue 6
M=M+1                                                        // [28837] function String.intValue 6
@SP                                                          // [28838] function String.intValue 6
A=M                                                          // [28839] function String.intValue 6
M=0                                                          // [28840] function String.intValue 6
@SP                                                          // [28841] function String.intValue 6
M=M+1                                                        // [28842] function String.intValue 6
@ARG                                                         // [28843] push argument 0
D=M                                                          // [28844] push argument 0
@0                                                           // [28845] push argument 0
A=D+A                                                        // [28846] push argument 0
D=M                                                          // [28847] push argument 0
@SP                                                          // [28848] push argument 0
M=M+1                                                        // [28849] push argument 0
A=M-1                                                        // [28850] push argument 0
M=D                                                          // [28851] push argument 0
@SP                                                          // [28852] pop pointer 0
AM=M-1                                                       // [28853] pop pointer 0
D=M                                                          // [28854] pop pointer 0
@3                                                           // [28855] pop pointer 0
M=D                                                          // [28856] pop pointer 0
@SP                                                          // [28857] push constant 0
M=M+1                                                        // [28858] push constant 0
A=M-1                                                        // [28859] push constant 0
M=0                                                          // [28860] push constant 0
@SP                                                          // [28861] pop local 1
AM=M-1                                                       // [28862] pop local 1
D=M                                                          // [28863] pop local 1
@R13                                                         // [28864] pop local 1
M=D                                                          // [28865] pop local 1
@LCL                                                         // [28866] pop local 1
D=M                                                          // [28867] pop local 1
@1                                                           // [28868] pop local 1
D=D+A                                                        // [28869] pop local 1
@R14                                                         // [28870] pop local 1
M=D                                                          // [28871] pop local 1
@R13                                                         // [28872] pop local 1
D=M                                                          // [28873] pop local 1
@R14                                                         // [28874] pop local 1
A=M                                                          // [28875] pop local 1
M=D                                                          // [28876] pop local 1
@THIS                                                        // [28877] push this 0
D=M                                                          // [28878] push this 0
@0                                                           // [28879] push this 0
A=D+A                                                        // [28880] push this 0
D=M                                                          // [28881] push this 0
@SP                                                          // [28882] push this 0
M=M+1                                                        // [28883] push this 0
A=M-1                                                        // [28884] push this 0
M=D                                                          // [28885] push this 0
@SP                                                          // [28886] push constant 0
M=M+1                                                        // [28887] push constant 0
A=M-1                                                        // [28888] push constant 0
M=0                                                          // [28889] push constant 0
@CONTINUE_GT_37                                              // [28890] gt
D=A                                                          // [28891] gt
@R13                                                         // [28892] gt
M=D                                                          // [28893] gt
@SP                                                          // [28894] gt
AM=M-1                                                       // [28895] gt
D=M                                                          // [28896] gt
A=A-1                                                        // [28897] gt
D=D-M                                                        // [28898] gt
@INTERNAL_GT                                                 // [28899] gt
0;JEQ                                                        // [28900] gt
(CONTINUE_GT_37)                                             // [     ] gt
@SP                                                          // [28901] push constant 0
M=M+1                                                        // [28902] push constant 0
A=M-1                                                        // [28903] push constant 0
M=0                                                          // [28904] push constant 0
@THIS                                                        // [28905] push this 2
D=M                                                          // [28906] push this 2
@2                                                           // [28907] push this 2
A=D+A                                                        // [28908] push this 2
D=M                                                          // [28909] push this 2
@SP                                                          // [28910] push this 2
M=M+1                                                        // [28911] push this 2
A=M-1                                                        // [28912] push this 2
M=D                                                          // [28913] push this 2
@SP                                                          // [28914] add
AM=M-1                                                       // [28915] add
D=M                                                          // [28916] add
A=A-1                                                        // [28917] add
M=D+M                                                        // [28918] add
@SP                                                          // [28919] pop pointer 1
AM=M-1                                                       // [28920] pop pointer 1
D=M                                                          // [28921] pop pointer 1
@4                                                           // [28922] pop pointer 1
M=D                                                          // [28923] pop pointer 1
@THAT                                                        // [28924] push that 0
D=M                                                          // [28925] push that 0
@0                                                           // [28926] push that 0
A=D+A                                                        // [28927] push that 0
D=M                                                          // [28928] push that 0
@SP                                                          // [28929] push that 0
M=M+1                                                        // [28930] push that 0
A=M-1                                                        // [28931] push that 0
M=D                                                          // [28932] push that 0
@45                                                          // [28933] push constant 45
D=A                                                          // [28934] push constant 45
@SP                                                          // [28935] push constant 45
M=M+1                                                        // [28936] push constant 45
A=M-1                                                        // [28937] push constant 45
M=D                                                          // [28938] push constant 45
@CONTINUE_EQ_29                                              // [28939] eq
D=A                                                          // [28940] eq
@R13                                                         // [28941] eq
M=D                                                          // [28942] eq
@SP                                                          // [28943] eq
AM=M-1                                                       // [28944] eq
D=M                                                          // [28945] eq
A=A-1                                                        // [28946] eq
D=D-M                                                        // [28947] eq
@INTERNAL_EQ                                                 // [28948] eq
0;JEQ                                                        // [28949] eq
(CONTINUE_EQ_29)                                             // [     ] eq
@SP                                                          // [28950] and
AM=M-1                                                       // [28951] and
D=M                                                          // [28952] and
A=A-1                                                        // [28953] and
M=D&M                                                        // [28954] and
@SP                                                          // [28955] if-goto IF_TRUE0
AM=M-1                                                       // [28956] if-goto IF_TRUE0
D=M                                                          // [28957] if-goto IF_TRUE0
@String.intValue$IF_TRUE0                                    // [28958] if-goto IF_TRUE0
D;JNE                                                        // [28959] if-goto IF_TRUE0
@String.intValue$IF_FALSE0                                   // [28960] goto IF_FALSE0
0;JEQ                                                        // [28961] goto IF_FALSE0
(String.intValue$IF_TRUE0)                                   // [     ] label IF_TRUE0
@SP                                                          // [28962] push constant 1
M=M+1                                                        // [28963] push constant 1
A=M-1                                                        // [28964] push constant 1
M=1                                                          // [28965] push constant 1
@SP                                                          // [28966] pop local 0
AM=M-1                                                       // [28967] pop local 0
D=M                                                          // [28968] pop local 0
@R13                                                         // [28969] pop local 0
M=D                                                          // [28970] pop local 0
@LCL                                                         // [28971] pop local 0
D=M                                                          // [28972] pop local 0
@0                                                           // [28973] pop local 0
D=D+A                                                        // [28974] pop local 0
@R14                                                         // [28975] pop local 0
M=D                                                          // [28976] pop local 0
@R13                                                         // [28977] pop local 0
D=M                                                          // [28978] pop local 0
@R14                                                         // [28979] pop local 0
A=M                                                          // [28980] pop local 0
M=D                                                          // [28981] pop local 0
@SP                                                          // [28982] push constant 0
M=M+1                                                        // [28983] push constant 0
A=M-1                                                        // [28984] push constant 0
M=0                                                          // [28985] push constant 0
@SP                                                          // [28986] not
A=M-1                                                        // [28987] not
D=M                                                          // [28988] not
M=!D                                                         // [28989] not
@SP                                                          // [28990] pop local 4
AM=M-1                                                       // [28991] pop local 4
D=M                                                          // [28992] pop local 4
@R13                                                         // [28993] pop local 4
M=D                                                          // [28994] pop local 4
@LCL                                                         // [28995] pop local 4
D=M                                                          // [28996] pop local 4
@4                                                           // [28997] pop local 4
D=D+A                                                        // [28998] pop local 4
@R14                                                         // [28999] pop local 4
M=D                                                          // [29000] pop local 4
@R13                                                         // [29001] pop local 4
D=M                                                          // [29002] pop local 4
@R14                                                         // [29003] pop local 4
A=M                                                          // [29004] pop local 4
M=D                                                          // [29005] pop local 4
@String.intValue$IF_END0                                     // [29006] goto IF_END0
0;JEQ                                                        // [29007] goto IF_END0
(String.intValue$IF_FALSE0)                                  // [     ] label IF_FALSE0
@SP                                                          // [29008] push constant 0
M=M+1                                                        // [29009] push constant 0
A=M-1                                                        // [29010] push constant 0
M=0                                                          // [29011] push constant 0
@SP                                                          // [29012] pop local 0
AM=M-1                                                       // [29013] pop local 0
D=M                                                          // [29014] pop local 0
@R13                                                         // [29015] pop local 0
M=D                                                          // [29016] pop local 0
@LCL                                                         // [29017] pop local 0
D=M                                                          // [29018] pop local 0
@0                                                           // [29019] pop local 0
D=D+A                                                        // [29020] pop local 0
@R14                                                         // [29021] pop local 0
M=D                                                          // [29022] pop local 0
@R13                                                         // [29023] pop local 0
D=M                                                          // [29024] pop local 0
@R14                                                         // [29025] pop local 0
A=M                                                          // [29026] pop local 0
M=D                                                          // [29027] pop local 0
@SP                                                          // [29028] push constant 0
M=M+1                                                        // [29029] push constant 0
A=M-1                                                        // [29030] push constant 0
M=0                                                          // [29031] push constant 0
@SP                                                          // [29032] pop local 4
AM=M-1                                                       // [29033] pop local 4
D=M                                                          // [29034] pop local 4
@R13                                                         // [29035] pop local 4
M=D                                                          // [29036] pop local 4
@LCL                                                         // [29037] pop local 4
D=M                                                          // [29038] pop local 4
@4                                                           // [29039] pop local 4
D=D+A                                                        // [29040] pop local 4
@R14                                                         // [29041] pop local 4
M=D                                                          // [29042] pop local 4
@R13                                                         // [29043] pop local 4
D=M                                                          // [29044] pop local 4
@R14                                                         // [29045] pop local 4
A=M                                                          // [29046] pop local 4
M=D                                                          // [29047] pop local 4
(String.intValue$IF_END0)                                    // [     ] label IF_END0
@SP                                                          // [29048] push constant 0
M=M+1                                                        // [29049] push constant 0
A=M-1                                                        // [29050] push constant 0
M=0                                                          // [29051] push constant 0
@SP                                                          // [29052] pop local 5
AM=M-1                                                       // [29053] pop local 5
D=M                                                          // [29054] pop local 5
@R13                                                         // [29055] pop local 5
M=D                                                          // [29056] pop local 5
@LCL                                                         // [29057] pop local 5
D=M                                                          // [29058] pop local 5
@5                                                           // [29059] pop local 5
D=D+A                                                        // [29060] pop local 5
@R14                                                         // [29061] pop local 5
M=D                                                          // [29062] pop local 5
@R13                                                         // [29063] pop local 5
D=M                                                          // [29064] pop local 5
@R14                                                         // [29065] pop local 5
A=M                                                          // [29066] pop local 5
M=D                                                          // [29067] pop local 5
(String.intValue$WHILE_EXP0)                                 // [     ] label WHILE_EXP0
@LCL                                                         // [29068] push local 0
D=M                                                          // [29069] push local 0
@0                                                           // [29070] push local 0
A=D+A                                                        // [29071] push local 0
D=M                                                          // [29072] push local 0
@SP                                                          // [29073] push local 0
M=M+1                                                        // [29074] push local 0
A=M-1                                                        // [29075] push local 0
M=D                                                          // [29076] push local 0
@THIS                                                        // [29077] push this 0
D=M                                                          // [29078] push this 0
@0                                                           // [29079] push this 0
A=D+A                                                        // [29080] push this 0
D=M                                                          // [29081] push this 0
@SP                                                          // [29082] push this 0
M=M+1                                                        // [29083] push this 0
A=M-1                                                        // [29084] push this 0
M=D                                                          // [29085] push this 0
@CONTINUE_LT_47                                              // [29086] lt
D=A                                                          // [29087] lt
@R13                                                         // [29088] lt
M=D                                                          // [29089] lt
@SP                                                          // [29090] lt
AM=M-1                                                       // [29091] lt
D=M                                                          // [29092] lt
A=A-1                                                        // [29093] lt
D=D-M                                                        // [29094] lt
@INTERNAL_LT                                                 // [29095] lt
0;JEQ                                                        // [29096] lt
(CONTINUE_LT_47)                                             // [     ] lt
@LCL                                                         // [29097] push local 5
D=M                                                          // [29098] push local 5
@5                                                           // [29099] push local 5
A=D+A                                                        // [29100] push local 5
D=M                                                          // [29101] push local 5
@SP                                                          // [29102] push local 5
M=M+1                                                        // [29103] push local 5
A=M-1                                                        // [29104] push local 5
M=D                                                          // [29105] push local 5
@SP                                                          // [29106] not
A=M-1                                                        // [29107] not
D=M                                                          // [29108] not
M=!D                                                         // [29109] not
@SP                                                          // [29110] and
AM=M-1                                                       // [29111] and
D=M                                                          // [29112] and
A=A-1                                                        // [29113] and
M=D&M                                                        // [29114] and
@SP                                                          // [29115] not
A=M-1                                                        // [29116] not
D=M                                                          // [29117] not
M=!D                                                         // [29118] not
@SP                                                          // [29119] if-goto WHILE_END0
AM=M-1                                                       // [29120] if-goto WHILE_END0
D=M                                                          // [29121] if-goto WHILE_END0
@String.intValue$WHILE_END0                                  // [29122] if-goto WHILE_END0
D;JNE                                                        // [29123] if-goto WHILE_END0
@LCL                                                         // [29124] push local 0
D=M                                                          // [29125] push local 0
@0                                                           // [29126] push local 0
A=D+A                                                        // [29127] push local 0
D=M                                                          // [29128] push local 0
@SP                                                          // [29129] push local 0
M=M+1                                                        // [29130] push local 0
A=M-1                                                        // [29131] push local 0
M=D                                                          // [29132] push local 0
@THIS                                                        // [29133] push this 2
D=M                                                          // [29134] push this 2
@2                                                           // [29135] push this 2
A=D+A                                                        // [29136] push this 2
D=M                                                          // [29137] push this 2
@SP                                                          // [29138] push this 2
M=M+1                                                        // [29139] push this 2
A=M-1                                                        // [29140] push this 2
M=D                                                          // [29141] push this 2
@SP                                                          // [29142] add
AM=M-1                                                       // [29143] add
D=M                                                          // [29144] add
A=A-1                                                        // [29145] add
M=D+M                                                        // [29146] add
@SP                                                          // [29147] pop pointer 1
AM=M-1                                                       // [29148] pop pointer 1
D=M                                                          // [29149] pop pointer 1
@4                                                           // [29150] pop pointer 1
M=D                                                          // [29151] pop pointer 1
@THAT                                                        // [29152] push that 0
D=M                                                          // [29153] push that 0
@0                                                           // [29154] push that 0
A=D+A                                                        // [29155] push that 0
D=M                                                          // [29156] push that 0
@SP                                                          // [29157] push that 0
M=M+1                                                        // [29158] push that 0
A=M-1                                                        // [29159] push that 0
M=D                                                          // [29160] push that 0
@SP                                                          // [29161] pop local 2
AM=M-1                                                       // [29162] pop local 2
D=M                                                          // [29163] pop local 2
@R13                                                         // [29164] pop local 2
M=D                                                          // [29165] pop local 2
@LCL                                                         // [29166] pop local 2
D=M                                                          // [29167] pop local 2
@2                                                           // [29168] pop local 2
D=D+A                                                        // [29169] pop local 2
@R14                                                         // [29170] pop local 2
M=D                                                          // [29171] pop local 2
@R13                                                         // [29172] pop local 2
D=M                                                          // [29173] pop local 2
@R14                                                         // [29174] pop local 2
A=M                                                          // [29175] pop local 2
M=D                                                          // [29176] pop local 2
@LCL                                                         // [29177] push local 2
D=M                                                          // [29178] push local 2
@2                                                           // [29179] push local 2
A=D+A                                                        // [29180] push local 2
D=M                                                          // [29181] push local 2
@SP                                                          // [29182] push local 2
M=M+1                                                        // [29183] push local 2
A=M-1                                                        // [29184] push local 2
M=D                                                          // [29185] push local 2
@48                                                          // [29186] push constant 48
D=A                                                          // [29187] push constant 48
@SP                                                          // [29188] push constant 48
M=M+1                                                        // [29189] push constant 48
A=M-1                                                        // [29190] push constant 48
M=D                                                          // [29191] push constant 48
@CONTINUE_GT_38                                              // [29192] gt
D=A                                                          // [29193] gt
@R13                                                         // [29194] gt
M=D                                                          // [29195] gt
@SP                                                          // [29196] gt
AM=M-1                                                       // [29197] gt
D=M                                                          // [29198] gt
A=A-1                                                        // [29199] gt
D=D-M                                                        // [29200] gt
@INTERNAL_GT                                                 // [29201] gt
0;JEQ                                                        // [29202] gt
(CONTINUE_GT_38)                                             // [     ] gt
@LCL                                                         // [29203] push local 2
D=M                                                          // [29204] push local 2
@2                                                           // [29205] push local 2
A=D+A                                                        // [29206] push local 2
D=M                                                          // [29207] push local 2
@SP                                                          // [29208] push local 2
M=M+1                                                        // [29209] push local 2
A=M-1                                                        // [29210] push local 2
M=D                                                          // [29211] push local 2
@57                                                          // [29212] push constant 57
D=A                                                          // [29213] push constant 57
@SP                                                          // [29214] push constant 57
M=M+1                                                        // [29215] push constant 57
A=M-1                                                        // [29216] push constant 57
M=D                                                          // [29217] push constant 57
@CONTINUE_LT_48                                              // [29218] lt
D=A                                                          // [29219] lt
@R13                                                         // [29220] lt
M=D                                                          // [29221] lt
@SP                                                          // [29222] lt
AM=M-1                                                       // [29223] lt
D=M                                                          // [29224] lt
A=A-1                                                        // [29225] lt
D=D-M                                                        // [29226] lt
@INTERNAL_LT                                                 // [29227] lt
0;JEQ                                                        // [29228] lt
(CONTINUE_LT_48)                                             // [     ] lt
@SP                                                          // [29229] and
AM=M-1                                                       // [29230] and
D=M                                                          // [29231] and
A=A-1                                                        // [29232] and
M=D&M                                                        // [29233] and
@SP                                                          // [29234] if-goto IF_TRUE1
AM=M-1                                                       // [29235] if-goto IF_TRUE1
D=M                                                          // [29236] if-goto IF_TRUE1
@String.intValue$IF_TRUE1                                    // [29237] if-goto IF_TRUE1
D;JNE                                                        // [29238] if-goto IF_TRUE1
@String.intValue$IF_FALSE1                                   // [29239] goto IF_FALSE1
0;JEQ                                                        // [29240] goto IF_FALSE1
(String.intValue$IF_TRUE1)                                   // [     ] label IF_TRUE1
@LCL                                                         // [29241] push local 2
D=M                                                          // [29242] push local 2
@2                                                           // [29243] push local 2
A=D+A                                                        // [29244] push local 2
D=M                                                          // [29245] push local 2
@SP                                                          // [29246] push local 2
M=M+1                                                        // [29247] push local 2
A=M-1                                                        // [29248] push local 2
M=D                                                          // [29249] push local 2
@48                                                          // [29250] push constant 48
D=A                                                          // [29251] push constant 48
@SP                                                          // [29252] push constant 48
M=M+1                                                        // [29253] push constant 48
A=M-1                                                        // [29254] push constant 48
M=D                                                          // [29255] push constant 48
@SP                                                          // [29256] sub
AM=M-1                                                       // [29257] sub
D=M                                                          // [29258] sub
A=A-1                                                        // [29259] sub
M=M-D                                                        // [29260] sub
@SP                                                          // [29261] pop local 3
AM=M-1                                                       // [29262] pop local 3
D=M                                                          // [29263] pop local 3
@R13                                                         // [29264] pop local 3
M=D                                                          // [29265] pop local 3
@LCL                                                         // [29266] pop local 3
D=M                                                          // [29267] pop local 3
@3                                                           // [29268] pop local 3
D=D+A                                                        // [29269] pop local 3
@R14                                                         // [29270] pop local 3
M=D                                                          // [29271] pop local 3
@R13                                                         // [29272] pop local 3
D=M                                                          // [29273] pop local 3
@R14                                                         // [29274] pop local 3
A=M                                                          // [29275] pop local 3
M=D                                                          // [29276] pop local 3
@LCL                                                         // [29277] push local 1
D=M                                                          // [29278] push local 1
@1                                                           // [29279] push local 1
A=D+A                                                        // [29280] push local 1
D=M                                                          // [29281] push local 1
@SP                                                          // [29282] push local 1
M=M+1                                                        // [29283] push local 1
A=M-1                                                        // [29284] push local 1
M=D                                                          // [29285] push local 1
@10                                                          // [29286] push constant 10
D=A                                                          // [29287] push constant 10
@SP                                                          // [29288] push constant 10
M=M+1                                                        // [29289] push constant 10
A=M-1                                                        // [29290] push constant 10
M=D                                                          // [29291] push constant 10
@2                                                           // [29292] call Math.multiply 2
D=A                                                          // [29293] call Math.multiply 2
@R13                                                         // [29294] call Math.multiply 2
M=D                                                          // [29295] call Math.multiply 2
@Math.multiply                                               // [29296] call Math.multiply 2
D=A                                                          // [29297] call Math.multiply 2
@R14                                                         // [29298] call Math.multiply 2
M=D                                                          // [29299] call Math.multiply 2
@return-288                                                  // [29300] call Math.multiply 2
D=A                                                          // [29301] call Math.multiply 2
@CALL                                                        // [29302] call Math.multiply 2
0;JEQ                                                        // [29303] call Math.multiply 2
(return-288)                                                 // [     ] call Math.multiply 2
@LCL                                                         // [29304] push local 3
D=M                                                          // [29305] push local 3
@3                                                           // [29306] push local 3
A=D+A                                                        // [29307] push local 3
D=M                                                          // [29308] push local 3
@SP                                                          // [29309] push local 3
M=M+1                                                        // [29310] push local 3
A=M-1                                                        // [29311] push local 3
M=D                                                          // [29312] push local 3
@SP                                                          // [29313] add
AM=M-1                                                       // [29314] add
D=M                                                          // [29315] add
A=A-1                                                        // [29316] add
M=D+M                                                        // [29317] add
@SP                                                          // [29318] pop local 1
AM=M-1                                                       // [29319] pop local 1
D=M                                                          // [29320] pop local 1
@R13                                                         // [29321] pop local 1
M=D                                                          // [29322] pop local 1
@LCL                                                         // [29323] pop local 1
D=M                                                          // [29324] pop local 1
@1                                                           // [29325] pop local 1
D=D+A                                                        // [29326] pop local 1
@R14                                                         // [29327] pop local 1
M=D                                                          // [29328] pop local 1
@R13                                                         // [29329] pop local 1
D=M                                                          // [29330] pop local 1
@R14                                                         // [29331] pop local 1
A=M                                                          // [29332] pop local 1
M=D                                                          // [29333] pop local 1
@String.intValue$IF_END1                                     // [29334] goto IF_END1
0;JEQ                                                        // [29335] goto IF_END1
(String.intValue$IF_FALSE1)                                  // [     ] label IF_FALSE1
@SP                                                          // [29336] push constant 0
M=M+1                                                        // [29337] push constant 0
A=M-1                                                        // [29338] push constant 0
M=0                                                          // [29339] push constant 0
@SP                                                          // [29340] not
A=M-1                                                        // [29341] not
D=M                                                          // [29342] not
M=!D                                                         // [29343] not
@SP                                                          // [29344] pop local 5
AM=M-1                                                       // [29345] pop local 5
D=M                                                          // [29346] pop local 5
@R13                                                         // [29347] pop local 5
M=D                                                          // [29348] pop local 5
@LCL                                                         // [29349] pop local 5
D=M                                                          // [29350] pop local 5
@5                                                           // [29351] pop local 5
D=D+A                                                        // [29352] pop local 5
@R14                                                         // [29353] pop local 5
M=D                                                          // [29354] pop local 5
@R13                                                         // [29355] pop local 5
D=M                                                          // [29356] pop local 5
@R14                                                         // [29357] pop local 5
A=M                                                          // [29358] pop local 5
M=D                                                          // [29359] pop local 5
(String.intValue$IF_END1)                                    // [     ] label IF_END1
@LCL                                                         // [29360] push local 0
D=M                                                          // [29361] push local 0
@0                                                           // [29362] push local 0
A=D+A                                                        // [29363] push local 0
D=M                                                          // [29364] push local 0
@SP                                                          // [29365] push local 0
M=M+1                                                        // [29366] push local 0
A=M-1                                                        // [29367] push local 0
M=D                                                          // [29368] push local 0
@SP                                                          // [29369] push constant 1
M=M+1                                                        // [29370] push constant 1
A=M-1                                                        // [29371] push constant 1
M=1                                                          // [29372] push constant 1
@SP                                                          // [29373] add
AM=M-1                                                       // [29374] add
D=M                                                          // [29375] add
A=A-1                                                        // [29376] add
M=D+M                                                        // [29377] add
@SP                                                          // [29378] pop local 0
AM=M-1                                                       // [29379] pop local 0
D=M                                                          // [29380] pop local 0
@R13                                                         // [29381] pop local 0
M=D                                                          // [29382] pop local 0
@LCL                                                         // [29383] pop local 0
D=M                                                          // [29384] pop local 0
@0                                                           // [29385] pop local 0
D=D+A                                                        // [29386] pop local 0
@R14                                                         // [29387] pop local 0
M=D                                                          // [29388] pop local 0
@R13                                                         // [29389] pop local 0
D=M                                                          // [29390] pop local 0
@R14                                                         // [29391] pop local 0
A=M                                                          // [29392] pop local 0
M=D                                                          // [29393] pop local 0
@String.intValue$WHILE_EXP0                                  // [29394] goto WHILE_EXP0
0;JEQ                                                        // [29395] goto WHILE_EXP0
(String.intValue$WHILE_END0)                                 // [     ] label WHILE_END0
@LCL                                                         // [29396] push local 4
D=M                                                          // [29397] push local 4
@4                                                           // [29398] push local 4
A=D+A                                                        // [29399] push local 4
D=M                                                          // [29400] push local 4
@SP                                                          // [29401] push local 4
M=M+1                                                        // [29402] push local 4
A=M-1                                                        // [29403] push local 4
M=D                                                          // [29404] push local 4
@SP                                                          // [29405] if-goto IF_TRUE2
AM=M-1                                                       // [29406] if-goto IF_TRUE2
D=M                                                          // [29407] if-goto IF_TRUE2
@String.intValue$IF_TRUE2                                    // [29408] if-goto IF_TRUE2
D;JNE                                                        // [29409] if-goto IF_TRUE2
@String.intValue$IF_FALSE2                                   // [29410] goto IF_FALSE2
0;JEQ                                                        // [29411] goto IF_FALSE2
(String.intValue$IF_TRUE2)                                   // [     ] label IF_TRUE2
@LCL                                                         // [29412] push local 1
D=M                                                          // [29413] push local 1
@1                                                           // [29414] push local 1
A=D+A                                                        // [29415] push local 1
D=M                                                          // [29416] push local 1
@SP                                                          // [29417] push local 1
M=M+1                                                        // [29418] push local 1
A=M-1                                                        // [29419] push local 1
M=D                                                          // [29420] push local 1
@SP                                                          // [29421] neg
A=M-1                                                        // [29422] neg
D=M                                                          // [29423] neg
M=-D                                                         // [29424] neg
@SP                                                          // [29425] pop local 1
AM=M-1                                                       // [29426] pop local 1
D=M                                                          // [29427] pop local 1
@R13                                                         // [29428] pop local 1
M=D                                                          // [29429] pop local 1
@LCL                                                         // [29430] pop local 1
D=M                                                          // [29431] pop local 1
@1                                                           // [29432] pop local 1
D=D+A                                                        // [29433] pop local 1
@R14                                                         // [29434] pop local 1
M=D                                                          // [29435] pop local 1
@R13                                                         // [29436] pop local 1
D=M                                                          // [29437] pop local 1
@R14                                                         // [29438] pop local 1
A=M                                                          // [29439] pop local 1
M=D                                                          // [29440] pop local 1
(String.intValue$IF_FALSE2)                                  // [     ] label IF_FALSE2
@LCL                                                         // [29441] push local 1
D=M                                                          // [29442] push local 1
@1                                                           // [29443] push local 1
A=D+A                                                        // [29444] push local 1
D=M                                                          // [29445] push local 1
@SP                                                          // [29446] push local 1
M=M+1                                                        // [29447] push local 1
A=M-1                                                        // [29448] push local 1
M=D                                                          // [29449] push local 1
@RETURN                                                      // [29450] return
0;JEQ                                                        // [29451] return
(String.setInt)                                              // [     ] function String.setInt 0
@ARG                                                         // [29452] push argument 0
D=M                                                          // [29453] push argument 0
@0                                                           // [29454] push argument 0
A=D+A                                                        // [29455] push argument 0
D=M                                                          // [29456] push argument 0
@SP                                                          // [29457] push argument 0
M=M+1                                                        // [29458] push argument 0
A=M-1                                                        // [29459] push argument 0
M=D                                                          // [29460] push argument 0
@SP                                                          // [29461] pop pointer 0
AM=M-1                                                       // [29462] pop pointer 0
D=M                                                          // [29463] pop pointer 0
@3                                                           // [29464] pop pointer 0
M=D                                                          // [29465] pop pointer 0
@SP                                                          // [29466] push constant 0
M=M+1                                                        // [29467] push constant 0
A=M-1                                                        // [29468] push constant 0
M=0                                                          // [29469] push constant 0
@SP                                                          // [29470] pop this 0
AM=M-1                                                       // [29471] pop this 0
D=M                                                          // [29472] pop this 0
@R13                                                         // [29473] pop this 0
M=D                                                          // [29474] pop this 0
@THIS                                                        // [29475] pop this 0
D=M                                                          // [29476] pop this 0
@0                                                           // [29477] pop this 0
D=D+A                                                        // [29478] pop this 0
@R14                                                         // [29479] pop this 0
M=D                                                          // [29480] pop this 0
@R13                                                         // [29481] pop this 0
D=M                                                          // [29482] pop this 0
@R14                                                         // [29483] pop this 0
A=M                                                          // [29484] pop this 0
M=D                                                          // [29485] pop this 0
@ARG                                                         // [29486] push argument 1
D=M                                                          // [29487] push argument 1
@1                                                           // [29488] push argument 1
A=D+A                                                        // [29489] push argument 1
D=M                                                          // [29490] push argument 1
@SP                                                          // [29491] push argument 1
M=M+1                                                        // [29492] push argument 1
A=M-1                                                        // [29493] push argument 1
M=D                                                          // [29494] push argument 1
@SP                                                          // [29495] push constant 0
M=M+1                                                        // [29496] push constant 0
A=M-1                                                        // [29497] push constant 0
M=0                                                          // [29498] push constant 0
@CONTINUE_LT_49                                              // [29499] lt
D=A                                                          // [29500] lt
@R13                                                         // [29501] lt
M=D                                                          // [29502] lt
@SP                                                          // [29503] lt
AM=M-1                                                       // [29504] lt
D=M                                                          // [29505] lt
A=A-1                                                        // [29506] lt
D=D-M                                                        // [29507] lt
@INTERNAL_LT                                                 // [29508] lt
0;JEQ                                                        // [29509] lt
(CONTINUE_LT_49)                                             // [     ] lt
@SP                                                          // [29510] if-goto IF_TRUE0
AM=M-1                                                       // [29511] if-goto IF_TRUE0
D=M                                                          // [29512] if-goto IF_TRUE0
@String.setInt$IF_TRUE0                                      // [29513] if-goto IF_TRUE0
D;JNE                                                        // [29514] if-goto IF_TRUE0
@String.setInt$IF_FALSE0                                     // [29515] goto IF_FALSE0
0;JEQ                                                        // [29516] goto IF_FALSE0
(String.setInt$IF_TRUE0)                                     // [     ] label IF_TRUE0
@3                                                           // [29517] push pointer 0
D=M                                                          // [29518] push pointer 0
@SP                                                          // [29519] push pointer 0
M=M+1                                                        // [29520] push pointer 0
A=M-1                                                        // [29521] push pointer 0
M=D                                                          // [29522] push pointer 0
@45                                                          // [29523] push constant 45
D=A                                                          // [29524] push constant 45
@SP                                                          // [29525] push constant 45
M=M+1                                                        // [29526] push constant 45
A=M-1                                                        // [29527] push constant 45
M=D                                                          // [29528] push constant 45
@2                                                           // [29529] call String.appendChar 2
D=A                                                          // [29530] call String.appendChar 2
@R13                                                         // [29531] call String.appendChar 2
M=D                                                          // [29532] call String.appendChar 2
@String.appendChar                                           // [29533] call String.appendChar 2
D=A                                                          // [29534] call String.appendChar 2
@R14                                                         // [29535] call String.appendChar 2
M=D                                                          // [29536] call String.appendChar 2
@return-289                                                  // [29537] call String.appendChar 2
D=A                                                          // [29538] call String.appendChar 2
@CALL                                                        // [29539] call String.appendChar 2
0;JEQ                                                        // [29540] call String.appendChar 2
(return-289)                                                 // [     ] call String.appendChar 2
@SP                                                          // [29541] pop temp 0
AM=M-1                                                       // [29542] pop temp 0
D=M                                                          // [29543] pop temp 0
@5                                                           // [29544] pop temp 0
M=D                                                          // [29545] pop temp 0
(String.setInt$IF_FALSE0)                                    // [     ] label IF_FALSE0
@3                                                           // [29546] push pointer 0
D=M                                                          // [29547] push pointer 0
@SP                                                          // [29548] push pointer 0
M=M+1                                                        // [29549] push pointer 0
A=M-1                                                        // [29550] push pointer 0
M=D                                                          // [29551] push pointer 0
@ARG                                                         // [29552] push argument 1
D=M                                                          // [29553] push argument 1
@1                                                           // [29554] push argument 1
A=D+A                                                        // [29555] push argument 1
D=M                                                          // [29556] push argument 1
@SP                                                          // [29557] push argument 1
M=M+1                                                        // [29558] push argument 1
A=M-1                                                        // [29559] push argument 1
M=D                                                          // [29560] push argument 1
@1                                                           // [29561] call Math.abs 1
D=A                                                          // [29562] call Math.abs 1
@R13                                                         // [29563] call Math.abs 1
M=D                                                          // [29564] call Math.abs 1
@Math.abs                                                    // [29565] call Math.abs 1
D=A                                                          // [29566] call Math.abs 1
@R14                                                         // [29567] call Math.abs 1
M=D                                                          // [29568] call Math.abs 1
@return-290                                                  // [29569] call Math.abs 1
D=A                                                          // [29570] call Math.abs 1
@CALL                                                        // [29571] call Math.abs 1
0;JEQ                                                        // [29572] call Math.abs 1
(return-290)                                                 // [     ] call Math.abs 1
@2                                                           // [29573] call String.internalSetInt 2
D=A                                                          // [29574] call String.internalSetInt 2
@R13                                                         // [29575] call String.internalSetInt 2
M=D                                                          // [29576] call String.internalSetInt 2
@String.internalSetInt                                       // [29577] call String.internalSetInt 2
D=A                                                          // [29578] call String.internalSetInt 2
@R14                                                         // [29579] call String.internalSetInt 2
M=D                                                          // [29580] call String.internalSetInt 2
@return-291                                                  // [29581] call String.internalSetInt 2
D=A                                                          // [29582] call String.internalSetInt 2
@CALL                                                        // [29583] call String.internalSetInt 2
0;JEQ                                                        // [29584] call String.internalSetInt 2
(return-291)                                                 // [     ] call String.internalSetInt 2
@SP                                                          // [29585] pop temp 0
AM=M-1                                                       // [29586] pop temp 0
D=M                                                          // [29587] pop temp 0
@5                                                           // [29588] pop temp 0
M=D                                                          // [29589] pop temp 0
@SP                                                          // [29590] push constant 0
M=M+1                                                        // [29591] push constant 0
A=M-1                                                        // [29592] push constant 0
M=0                                                          // [29593] push constant 0
@RETURN                                                      // [29594] return
0;JEQ                                                        // [29595] return
(String.internalSetInt)                                      // [     ] function String.internalSetInt 2
@SP                                                          // [29596] function String.internalSetInt 2
A=M                                                          // [29597] function String.internalSetInt 2
M=0                                                          // [29598] function String.internalSetInt 2
@SP                                                          // [29599] function String.internalSetInt 2
M=M+1                                                        // [29600] function String.internalSetInt 2
@SP                                                          // [29601] function String.internalSetInt 2
A=M                                                          // [29602] function String.internalSetInt 2
M=0                                                          // [29603] function String.internalSetInt 2
@SP                                                          // [29604] function String.internalSetInt 2
M=M+1                                                        // [29605] function String.internalSetInt 2
@ARG                                                         // [29606] push argument 0
D=M                                                          // [29607] push argument 0
@0                                                           // [29608] push argument 0
A=D+A                                                        // [29609] push argument 0
D=M                                                          // [29610] push argument 0
@SP                                                          // [29611] push argument 0
M=M+1                                                        // [29612] push argument 0
A=M-1                                                        // [29613] push argument 0
M=D                                                          // [29614] push argument 0
@SP                                                          // [29615] pop pointer 0
AM=M-1                                                       // [29616] pop pointer 0
D=M                                                          // [29617] pop pointer 0
@3                                                           // [29618] pop pointer 0
M=D                                                          // [29619] pop pointer 0
@ARG                                                         // [29620] push argument 1
D=M                                                          // [29621] push argument 1
@1                                                           // [29622] push argument 1
A=D+A                                                        // [29623] push argument 1
D=M                                                          // [29624] push argument 1
@SP                                                          // [29625] push argument 1
M=M+1                                                        // [29626] push argument 1
A=M-1                                                        // [29627] push argument 1
M=D                                                          // [29628] push argument 1
@10                                                          // [29629] push constant 10
D=A                                                          // [29630] push constant 10
@SP                                                          // [29631] push constant 10
M=M+1                                                        // [29632] push constant 10
A=M-1                                                        // [29633] push constant 10
M=D                                                          // [29634] push constant 10
@CONTINUE_LT_50                                              // [29635] lt
D=A                                                          // [29636] lt
@R13                                                         // [29637] lt
M=D                                                          // [29638] lt
@SP                                                          // [29639] lt
AM=M-1                                                       // [29640] lt
D=M                                                          // [29641] lt
A=A-1                                                        // [29642] lt
D=D-M                                                        // [29643] lt
@INTERNAL_LT                                                 // [29644] lt
0;JEQ                                                        // [29645] lt
(CONTINUE_LT_50)                                             // [     ] lt
@SP                                                          // [29646] if-goto IF_TRUE0
AM=M-1                                                       // [29647] if-goto IF_TRUE0
D=M                                                          // [29648] if-goto IF_TRUE0
@String.internalSetInt$IF_TRUE0                              // [29649] if-goto IF_TRUE0
D;JNE                                                        // [29650] if-goto IF_TRUE0
@String.internalSetInt$IF_FALSE0                             // [29651] goto IF_FALSE0
0;JEQ                                                        // [29652] goto IF_FALSE0
(String.internalSetInt$IF_TRUE0)                             // [     ] label IF_TRUE0
@3                                                           // [29653] push pointer 0
D=M                                                          // [29654] push pointer 0
@SP                                                          // [29655] push pointer 0
M=M+1                                                        // [29656] push pointer 0
A=M-1                                                        // [29657] push pointer 0
M=D                                                          // [29658] push pointer 0
@ARG                                                         // [29659] push argument 1
D=M                                                          // [29660] push argument 1
@1                                                           // [29661] push argument 1
A=D+A                                                        // [29662] push argument 1
D=M                                                          // [29663] push argument 1
@SP                                                          // [29664] push argument 1
M=M+1                                                        // [29665] push argument 1
A=M-1                                                        // [29666] push argument 1
M=D                                                          // [29667] push argument 1
@48                                                          // [29668] push constant 48
D=A                                                          // [29669] push constant 48
@SP                                                          // [29670] push constant 48
M=M+1                                                        // [29671] push constant 48
A=M-1                                                        // [29672] push constant 48
M=D                                                          // [29673] push constant 48
@SP                                                          // [29674] add
AM=M-1                                                       // [29675] add
D=M                                                          // [29676] add
A=A-1                                                        // [29677] add
M=D+M                                                        // [29678] add
@2                                                           // [29679] call String.appendChar 2
D=A                                                          // [29680] call String.appendChar 2
@R13                                                         // [29681] call String.appendChar 2
M=D                                                          // [29682] call String.appendChar 2
@String.appendChar                                           // [29683] call String.appendChar 2
D=A                                                          // [29684] call String.appendChar 2
@R14                                                         // [29685] call String.appendChar 2
M=D                                                          // [29686] call String.appendChar 2
@return-292                                                  // [29687] call String.appendChar 2
D=A                                                          // [29688] call String.appendChar 2
@CALL                                                        // [29689] call String.appendChar 2
0;JEQ                                                        // [29690] call String.appendChar 2
(return-292)                                                 // [     ] call String.appendChar 2
@SP                                                          // [29691] pop temp 0
AM=M-1                                                       // [29692] pop temp 0
D=M                                                          // [29693] pop temp 0
@5                                                           // [29694] pop temp 0
M=D                                                          // [29695] pop temp 0
@String.internalSetInt$IF_END0                               // [29696] goto IF_END0
0;JEQ                                                        // [29697] goto IF_END0
(String.internalSetInt$IF_FALSE0)                            // [     ] label IF_FALSE0
@ARG                                                         // [29698] push argument 1
D=M                                                          // [29699] push argument 1
@1                                                           // [29700] push argument 1
A=D+A                                                        // [29701] push argument 1
D=M                                                          // [29702] push argument 1
@SP                                                          // [29703] push argument 1
M=M+1                                                        // [29704] push argument 1
A=M-1                                                        // [29705] push argument 1
M=D                                                          // [29706] push argument 1
@10                                                          // [29707] push constant 10
D=A                                                          // [29708] push constant 10
@SP                                                          // [29709] push constant 10
M=M+1                                                        // [29710] push constant 10
A=M-1                                                        // [29711] push constant 10
M=D                                                          // [29712] push constant 10
@2                                                           // [29713] call Math.divide 2
D=A                                                          // [29714] call Math.divide 2
@R13                                                         // [29715] call Math.divide 2
M=D                                                          // [29716] call Math.divide 2
@Math.divide                                                 // [29717] call Math.divide 2
D=A                                                          // [29718] call Math.divide 2
@R14                                                         // [29719] call Math.divide 2
M=D                                                          // [29720] call Math.divide 2
@return-293                                                  // [29721] call Math.divide 2
D=A                                                          // [29722] call Math.divide 2
@CALL                                                        // [29723] call Math.divide 2
0;JEQ                                                        // [29724] call Math.divide 2
(return-293)                                                 // [     ] call Math.divide 2
@SP                                                          // [29725] pop local 1
AM=M-1                                                       // [29726] pop local 1
D=M                                                          // [29727] pop local 1
@R13                                                         // [29728] pop local 1
M=D                                                          // [29729] pop local 1
@LCL                                                         // [29730] pop local 1
D=M                                                          // [29731] pop local 1
@1                                                           // [29732] pop local 1
D=D+A                                                        // [29733] pop local 1
@R14                                                         // [29734] pop local 1
M=D                                                          // [29735] pop local 1
@R13                                                         // [29736] pop local 1
D=M                                                          // [29737] pop local 1
@R14                                                         // [29738] pop local 1
A=M                                                          // [29739] pop local 1
M=D                                                          // [29740] pop local 1
@3                                                           // [29741] push pointer 0
D=M                                                          // [29742] push pointer 0
@SP                                                          // [29743] push pointer 0
M=M+1                                                        // [29744] push pointer 0
A=M-1                                                        // [29745] push pointer 0
M=D                                                          // [29746] push pointer 0
@LCL                                                         // [29747] push local 1
D=M                                                          // [29748] push local 1
@1                                                           // [29749] push local 1
A=D+A                                                        // [29750] push local 1
D=M                                                          // [29751] push local 1
@SP                                                          // [29752] push local 1
M=M+1                                                        // [29753] push local 1
A=M-1                                                        // [29754] push local 1
M=D                                                          // [29755] push local 1
@2                                                           // [29756] call String.internalSetInt 2
D=A                                                          // [29757] call String.internalSetInt 2
@R13                                                         // [29758] call String.internalSetInt 2
M=D                                                          // [29759] call String.internalSetInt 2
@String.internalSetInt                                       // [29760] call String.internalSetInt 2
D=A                                                          // [29761] call String.internalSetInt 2
@R14                                                         // [29762] call String.internalSetInt 2
M=D                                                          // [29763] call String.internalSetInt 2
@return-294                                                  // [29764] call String.internalSetInt 2
D=A                                                          // [29765] call String.internalSetInt 2
@CALL                                                        // [29766] call String.internalSetInt 2
0;JEQ                                                        // [29767] call String.internalSetInt 2
(return-294)                                                 // [     ] call String.internalSetInt 2
@SP                                                          // [29768] pop temp 0
AM=M-1                                                       // [29769] pop temp 0
D=M                                                          // [29770] pop temp 0
@5                                                           // [29771] pop temp 0
M=D                                                          // [29772] pop temp 0
@ARG                                                         // [29773] push argument 1
D=M                                                          // [29774] push argument 1
@1                                                           // [29775] push argument 1
A=D+A                                                        // [29776] push argument 1
D=M                                                          // [29777] push argument 1
@SP                                                          // [29778] push argument 1
M=M+1                                                        // [29779] push argument 1
A=M-1                                                        // [29780] push argument 1
M=D                                                          // [29781] push argument 1
@LCL                                                         // [29782] push local 1
D=M                                                          // [29783] push local 1
@1                                                           // [29784] push local 1
A=D+A                                                        // [29785] push local 1
D=M                                                          // [29786] push local 1
@SP                                                          // [29787] push local 1
M=M+1                                                        // [29788] push local 1
A=M-1                                                        // [29789] push local 1
M=D                                                          // [29790] push local 1
@10                                                          // [29791] push constant 10
D=A                                                          // [29792] push constant 10
@SP                                                          // [29793] push constant 10
M=M+1                                                        // [29794] push constant 10
A=M-1                                                        // [29795] push constant 10
M=D                                                          // [29796] push constant 10
@2                                                           // [29797] call Math.multiply 2
D=A                                                          // [29798] call Math.multiply 2
@R13                                                         // [29799] call Math.multiply 2
M=D                                                          // [29800] call Math.multiply 2
@Math.multiply                                               // [29801] call Math.multiply 2
D=A                                                          // [29802] call Math.multiply 2
@R14                                                         // [29803] call Math.multiply 2
M=D                                                          // [29804] call Math.multiply 2
@return-295                                                  // [29805] call Math.multiply 2
D=A                                                          // [29806] call Math.multiply 2
@CALL                                                        // [29807] call Math.multiply 2
0;JEQ                                                        // [29808] call Math.multiply 2
(return-295)                                                 // [     ] call Math.multiply 2
@SP                                                          // [29809] sub
AM=M-1                                                       // [29810] sub
D=M                                                          // [29811] sub
A=A-1                                                        // [29812] sub
M=M-D                                                        // [29813] sub
@SP                                                          // [29814] pop local 0
AM=M-1                                                       // [29815] pop local 0
D=M                                                          // [29816] pop local 0
@R13                                                         // [29817] pop local 0
M=D                                                          // [29818] pop local 0
@LCL                                                         // [29819] pop local 0
D=M                                                          // [29820] pop local 0
@0                                                           // [29821] pop local 0
D=D+A                                                        // [29822] pop local 0
@R14                                                         // [29823] pop local 0
M=D                                                          // [29824] pop local 0
@R13                                                         // [29825] pop local 0
D=M                                                          // [29826] pop local 0
@R14                                                         // [29827] pop local 0
A=M                                                          // [29828] pop local 0
M=D                                                          // [29829] pop local 0
@3                                                           // [29830] push pointer 0
D=M                                                          // [29831] push pointer 0
@SP                                                          // [29832] push pointer 0
M=M+1                                                        // [29833] push pointer 0
A=M-1                                                        // [29834] push pointer 0
M=D                                                          // [29835] push pointer 0
@LCL                                                         // [29836] push local 0
D=M                                                          // [29837] push local 0
@0                                                           // [29838] push local 0
A=D+A                                                        // [29839] push local 0
D=M                                                          // [29840] push local 0
@SP                                                          // [29841] push local 0
M=M+1                                                        // [29842] push local 0
A=M-1                                                        // [29843] push local 0
M=D                                                          // [29844] push local 0
@48                                                          // [29845] push constant 48
D=A                                                          // [29846] push constant 48
@SP                                                          // [29847] push constant 48
M=M+1                                                        // [29848] push constant 48
A=M-1                                                        // [29849] push constant 48
M=D                                                          // [29850] push constant 48
@SP                                                          // [29851] add
AM=M-1                                                       // [29852] add
D=M                                                          // [29853] add
A=A-1                                                        // [29854] add
M=D+M                                                        // [29855] add
@2                                                           // [29856] call String.appendChar 2
D=A                                                          // [29857] call String.appendChar 2
@R13                                                         // [29858] call String.appendChar 2
M=D                                                          // [29859] call String.appendChar 2
@String.appendChar                                           // [29860] call String.appendChar 2
D=A                                                          // [29861] call String.appendChar 2
@R14                                                         // [29862] call String.appendChar 2
M=D                                                          // [29863] call String.appendChar 2
@return-296                                                  // [29864] call String.appendChar 2
D=A                                                          // [29865] call String.appendChar 2
@CALL                                                        // [29866] call String.appendChar 2
0;JEQ                                                        // [29867] call String.appendChar 2
(return-296)                                                 // [     ] call String.appendChar 2
@SP                                                          // [29868] pop temp 0
AM=M-1                                                       // [29869] pop temp 0
D=M                                                          // [29870] pop temp 0
@5                                                           // [29871] pop temp 0
M=D                                                          // [29872] pop temp 0
(String.internalSetInt$IF_END0)                              // [     ] label IF_END0
@SP                                                          // [29873] push constant 0
M=M+1                                                        // [29874] push constant 0
A=M-1                                                        // [29875] push constant 0
M=0                                                          // [29876] push constant 0
@RETURN                                                      // [29877] return
0;JEQ                                                        // [29878] return
(String.newLine)                                             // [     ] function String.newLine 0
@128                                                         // [29879] push constant 128
D=A                                                          // [29880] push constant 128
@SP                                                          // [29881] push constant 128
M=M+1                                                        // [29882] push constant 128
A=M-1                                                        // [29883] push constant 128
M=D                                                          // [29884] push constant 128
@RETURN                                                      // [29885] return
0;JEQ                                                        // [29886] return
(String.backSpace)                                           // [     ] function String.backSpace 0
@129                                                         // [29887] push constant 129
D=A                                                          // [29888] push constant 129
@SP                                                          // [29889] push constant 129
M=M+1                                                        // [29890] push constant 129
A=M-1                                                        // [29891] push constant 129
M=D                                                          // [29892] push constant 129
@RETURN                                                      // [29893] return
0;JEQ                                                        // [29894] return
(String.doubleQuote)                                         // [     ] function String.doubleQuote 0
@34                                                          // [29895] push constant 34
D=A                                                          // [29896] push constant 34
@SP                                                          // [29897] push constant 34
M=M+1                                                        // [29898] push constant 34
A=M-1                                                        // [29899] push constant 34
M=D                                                          // [29900] push constant 34
@RETURN                                                      // [29901] return
0;JEQ                                                        // [29902] return
(Sys.init)                                                   // [     ] function Sys.init 0
@0                                                           // [29903] call Memory.init 0
D=A                                                          // [29904] call Memory.init 0
@R13                                                         // [29905] call Memory.init 0
M=D                                                          // [29906] call Memory.init 0
@Memory.init                                                 // [29907] call Memory.init 0
D=A                                                          // [29908] call Memory.init 0
@R14                                                         // [29909] call Memory.init 0
M=D                                                          // [29910] call Memory.init 0
@return-297                                                  // [29911] call Memory.init 0
D=A                                                          // [29912] call Memory.init 0
@CALL                                                        // [29913] call Memory.init 0
0;JEQ                                                        // [29914] call Memory.init 0
(return-297)                                                 // [     ] call Memory.init 0
@SP                                                          // [29915] pop temp 0
AM=M-1                                                       // [29916] pop temp 0
D=M                                                          // [29917] pop temp 0
@5                                                           // [29918] pop temp 0
M=D                                                          // [29919] pop temp 0
@0                                                           // [29920] call Math.init 0
D=A                                                          // [29921] call Math.init 0
@R13                                                         // [29922] call Math.init 0
M=D                                                          // [29923] call Math.init 0
@Math.init                                                   // [29924] call Math.init 0
D=A                                                          // [29925] call Math.init 0
@R14                                                         // [29926] call Math.init 0
M=D                                                          // [29927] call Math.init 0
@return-298                                                  // [29928] call Math.init 0
D=A                                                          // [29929] call Math.init 0
@CALL                                                        // [29930] call Math.init 0
0;JEQ                                                        // [29931] call Math.init 0
(return-298)                                                 // [     ] call Math.init 0
@SP                                                          // [29932] pop temp 0
AM=M-1                                                       // [29933] pop temp 0
D=M                                                          // [29934] pop temp 0
@5                                                           // [29935] pop temp 0
M=D                                                          // [29936] pop temp 0
@0                                                           // [29937] call Screen.init 0
D=A                                                          // [29938] call Screen.init 0
@R13                                                         // [29939] call Screen.init 0
M=D                                                          // [29940] call Screen.init 0
@Screen.init                                                 // [29941] call Screen.init 0
D=A                                                          // [29942] call Screen.init 0
@R14                                                         // [29943] call Screen.init 0
M=D                                                          // [29944] call Screen.init 0
@return-299                                                  // [29945] call Screen.init 0
D=A                                                          // [29946] call Screen.init 0
@CALL                                                        // [29947] call Screen.init 0
0;JEQ                                                        // [29948] call Screen.init 0
(return-299)                                                 // [     ] call Screen.init 0
@SP                                                          // [29949] pop temp 0
AM=M-1                                                       // [29950] pop temp 0
D=M                                                          // [29951] pop temp 0
@5                                                           // [29952] pop temp 0
M=D                                                          // [29953] pop temp 0
@0                                                           // [29954] call Keyboard.init 0
D=A                                                          // [29955] call Keyboard.init 0
@R13                                                         // [29956] call Keyboard.init 0
M=D                                                          // [29957] call Keyboard.init 0
@Keyboard.init                                               // [29958] call Keyboard.init 0
D=A                                                          // [29959] call Keyboard.init 0
@R14                                                         // [29960] call Keyboard.init 0
M=D                                                          // [29961] call Keyboard.init 0
@return-300                                                  // [29962] call Keyboard.init 0
D=A                                                          // [29963] call Keyboard.init 0
@CALL                                                        // [29964] call Keyboard.init 0
0;JEQ                                                        // [29965] call Keyboard.init 0
(return-300)                                                 // [     ] call Keyboard.init 0
@SP                                                          // [29966] pop temp 0
AM=M-1                                                       // [29967] pop temp 0
D=M                                                          // [29968] pop temp 0
@5                                                           // [29969] pop temp 0
M=D                                                          // [29970] pop temp 0
@0                                                           // [29971] call Output.init 0
D=A                                                          // [29972] call Output.init 0
@R13                                                         // [29973] call Output.init 0
M=D                                                          // [29974] call Output.init 0
@Output.init                                                 // [29975] call Output.init 0
D=A                                                          // [29976] call Output.init 0
@R14                                                         // [29977] call Output.init 0
M=D                                                          // [29978] call Output.init 0
@return-301                                                  // [29979] call Output.init 0
D=A                                                          // [29980] call Output.init 0
@CALL                                                        // [29981] call Output.init 0
0;JEQ                                                        // [29982] call Output.init 0
(return-301)                                                 // [     ] call Output.init 0
@SP                                                          // [29983] pop temp 0
AM=M-1                                                       // [29984] pop temp 0
D=M                                                          // [29985] pop temp 0
@5                                                           // [29986] pop temp 0
M=D                                                          // [29987] pop temp 0
@0                                                           // [29988] call Main.main 0
D=A                                                          // [29989] call Main.main 0
@R13                                                         // [29990] call Main.main 0
M=D                                                          // [29991] call Main.main 0
@Main.main                                                   // [29992] call Main.main 0
D=A                                                          // [29993] call Main.main 0
@R14                                                         // [29994] call Main.main 0
M=D                                                          // [29995] call Main.main 0
@return-302                                                  // [29996] call Main.main 0
D=A                                                          // [29997] call Main.main 0
@CALL                                                        // [29998] call Main.main 0
0;JEQ                                                        // [29999] call Main.main 0
(return-302)                                                 // [     ] call Main.main 0
@SP                                                          // [30000] pop temp 0
AM=M-1                                                       // [30001] pop temp 0
D=M                                                          // [30002] pop temp 0
@5                                                           // [30003] pop temp 0
M=D                                                          // [30004] pop temp 0
@0                                                           // [30005] call Sys.halt 0
D=A                                                          // [30006] call Sys.halt 0
@R13                                                         // [30007] call Sys.halt 0
M=D                                                          // [30008] call Sys.halt 0
@Sys.halt                                                    // [30009] call Sys.halt 0
D=A                                                          // [30010] call Sys.halt 0
@R14                                                         // [30011] call Sys.halt 0
M=D                                                          // [30012] call Sys.halt 0
@return-303                                                  // [30013] call Sys.halt 0
D=A                                                          // [30014] call Sys.halt 0
@CALL                                                        // [30015] call Sys.halt 0
0;JEQ                                                        // [30016] call Sys.halt 0
(return-303)                                                 // [     ] call Sys.halt 0
@SP                                                          // [30017] pop temp 0
AM=M-1                                                       // [30018] pop temp 0
D=M                                                          // [30019] pop temp 0
@5                                                           // [30020] pop temp 0
M=D                                                          // [30021] pop temp 0
@SP                                                          // [30022] push constant 0
M=M+1                                                        // [30023] push constant 0
A=M-1                                                        // [30024] push constant 0
M=0                                                          // [30025] push constant 0
@RETURN                                                      // [30026] return
0;JEQ                                                        // [30027] return
(Sys.halt)                                                   // [     ] function Sys.halt 0
(Sys.halt$WHILE_EXP0)                                        // [     ] label WHILE_EXP0
@SP                                                          // [30028] push constant 0
M=M+1                                                        // [30029] push constant 0
A=M-1                                                        // [30030] push constant 0
M=0                                                          // [30031] push constant 0
@SP                                                          // [30032] not
A=M-1                                                        // [30033] not
D=M                                                          // [30034] not
M=!D                                                         // [30035] not
@SP                                                          // [30036] not
A=M-1                                                        // [30037] not
D=M                                                          // [30038] not
M=!D                                                         // [30039] not
@SP                                                          // [30040] if-goto WHILE_END0
AM=M-1                                                       // [30041] if-goto WHILE_END0
D=M                                                          // [30042] if-goto WHILE_END0
@Sys.halt$WHILE_END0                                         // [30043] if-goto WHILE_END0
D;JNE                                                        // [30044] if-goto WHILE_END0
@Sys.halt$WHILE_EXP0                                         // [30045] goto WHILE_EXP0
0;JEQ                                                        // [30046] goto WHILE_EXP0
(Sys.halt$WHILE_END0)                                        // [     ] label WHILE_END0
@SP                                                          // [30047] push constant 0
M=M+1                                                        // [30048] push constant 0
A=M-1                                                        // [30049] push constant 0
M=0                                                          // [30050] push constant 0
@RETURN                                                      // [30051] return
0;JEQ                                                        // [30052] return
(Sys.wait)                                                   // [     ] function Sys.wait 1
@SP                                                          // [30053] function Sys.wait 1
A=M                                                          // [30054] function Sys.wait 1
M=0                                                          // [30055] function Sys.wait 1
@SP                                                          // [30056] function Sys.wait 1
M=M+1                                                        // [30057] function Sys.wait 1
@SP                                                          // [30058] push constant 0
M=M+1                                                        // [30059] push constant 0
A=M-1                                                        // [30060] push constant 0
M=0                                                          // [30061] push constant 0
@SP                                                          // [30062] pop local 0
AM=M-1                                                       // [30063] pop local 0
D=M                                                          // [30064] pop local 0
@R13                                                         // [30065] pop local 0
M=D                                                          // [30066] pop local 0
@LCL                                                         // [30067] pop local 0
D=M                                                          // [30068] pop local 0
@0                                                           // [30069] pop local 0
D=D+A                                                        // [30070] pop local 0
@R14                                                         // [30071] pop local 0
M=D                                                          // [30072] pop local 0
@R13                                                         // [30073] pop local 0
D=M                                                          // [30074] pop local 0
@R14                                                         // [30075] pop local 0
A=M                                                          // [30076] pop local 0
M=D                                                          // [30077] pop local 0
(Sys.wait$WHILE_EXP0)                                        // [     ] label WHILE_EXP0
@LCL                                                         // [30078] push local 0
D=M                                                          // [30079] push local 0
@0                                                           // [30080] push local 0
A=D+A                                                        // [30081] push local 0
D=M                                                          // [30082] push local 0
@SP                                                          // [30083] push local 0
M=M+1                                                        // [30084] push local 0
A=M-1                                                        // [30085] push local 0
M=D                                                          // [30086] push local 0
@ARG                                                         // [30087] push argument 0
D=M                                                          // [30088] push argument 0
@0                                                           // [30089] push argument 0
A=D+A                                                        // [30090] push argument 0
D=M                                                          // [30091] push argument 0
@SP                                                          // [30092] push argument 0
M=M+1                                                        // [30093] push argument 0
A=M-1                                                        // [30094] push argument 0
M=D                                                          // [30095] push argument 0
@CONTINUE_LT_51                                              // [30096] lt
D=A                                                          // [30097] lt
@R13                                                         // [30098] lt
M=D                                                          // [30099] lt
@SP                                                          // [30100] lt
AM=M-1                                                       // [30101] lt
D=M                                                          // [30102] lt
A=A-1                                                        // [30103] lt
D=D-M                                                        // [30104] lt
@INTERNAL_LT                                                 // [30105] lt
0;JEQ                                                        // [30106] lt
(CONTINUE_LT_51)                                             // [     ] lt
@SP                                                          // [30107] not
A=M-1                                                        // [30108] not
D=M                                                          // [30109] not
M=!D                                                         // [30110] not
@SP                                                          // [30111] if-goto WHILE_END0
AM=M-1                                                       // [30112] if-goto WHILE_END0
D=M                                                          // [30113] if-goto WHILE_END0
@Sys.wait$WHILE_END0                                         // [30114] if-goto WHILE_END0
D;JNE                                                        // [30115] if-goto WHILE_END0
@2500                                                        // [30116] push constant 2500
D=A                                                          // [30117] push constant 2500
@SP                                                          // [30118] push constant 2500
M=M+1                                                        // [30119] push constant 2500
A=M-1                                                        // [30120] push constant 2500
M=D                                                          // [30121] push constant 2500
@1                                                           // [30122] call Math.sqrt 1
D=A                                                          // [30123] call Math.sqrt 1
@R13                                                         // [30124] call Math.sqrt 1
M=D                                                          // [30125] call Math.sqrt 1
@Math.sqrt                                                   // [30126] call Math.sqrt 1
D=A                                                          // [30127] call Math.sqrt 1
@R14                                                         // [30128] call Math.sqrt 1
M=D                                                          // [30129] call Math.sqrt 1
@return-304                                                  // [30130] call Math.sqrt 1
D=A                                                          // [30131] call Math.sqrt 1
@CALL                                                        // [30132] call Math.sqrt 1
0;JEQ                                                        // [30133] call Math.sqrt 1
(return-304)                                                 // [     ] call Math.sqrt 1
@SP                                                          // [30134] pop temp 0
AM=M-1                                                       // [30135] pop temp 0
D=M                                                          // [30136] pop temp 0
@5                                                           // [30137] pop temp 0
M=D                                                          // [30138] pop temp 0
@LCL                                                         // [30139] push local 0
D=M                                                          // [30140] push local 0
@0                                                           // [30141] push local 0
A=D+A                                                        // [30142] push local 0
D=M                                                          // [30143] push local 0
@SP                                                          // [30144] push local 0
M=M+1                                                        // [30145] push local 0
A=M-1                                                        // [30146] push local 0
M=D                                                          // [30147] push local 0
@SP                                                          // [30148] push constant 1
M=M+1                                                        // [30149] push constant 1
A=M-1                                                        // [30150] push constant 1
M=1                                                          // [30151] push constant 1
@SP                                                          // [30152] add
AM=M-1                                                       // [30153] add
D=M                                                          // [30154] add
A=A-1                                                        // [30155] add
M=D+M                                                        // [30156] add
@SP                                                          // [30157] pop local 0
AM=M-1                                                       // [30158] pop local 0
D=M                                                          // [30159] pop local 0
@R13                                                         // [30160] pop local 0
M=D                                                          // [30161] pop local 0
@LCL                                                         // [30162] pop local 0
D=M                                                          // [30163] pop local 0
@0                                                           // [30164] pop local 0
D=D+A                                                        // [30165] pop local 0
@R14                                                         // [30166] pop local 0
M=D                                                          // [30167] pop local 0
@R13                                                         // [30168] pop local 0
D=M                                                          // [30169] pop local 0
@R14                                                         // [30170] pop local 0
A=M                                                          // [30171] pop local 0
M=D                                                          // [30172] pop local 0
@Sys.wait$WHILE_EXP0                                         // [30173] goto WHILE_EXP0
0;JEQ                                                        // [30174] goto WHILE_EXP0
(Sys.wait$WHILE_END0)                                        // [     ] label WHILE_END0
@SP                                                          // [30175] push constant 0
M=M+1                                                        // [30176] push constant 0
A=M-1                                                        // [30177] push constant 0
M=0                                                          // [30178] push constant 0
@RETURN                                                      // [30179] return
0;JEQ                                                        // [30180] return
(Sys.error)                                                  // [     ] function Sys.error 0
@3                                                           // [30181] push constant 3
D=A                                                          // [30182] push constant 3
@SP                                                          // [30183] push constant 3
M=M+1                                                        // [30184] push constant 3
A=M-1                                                        // [30185] push constant 3
M=D                                                          // [30186] push constant 3
@1                                                           // [30187] call String.new 1
D=A                                                          // [30188] call String.new 1
@R13                                                         // [30189] call String.new 1
M=D                                                          // [30190] call String.new 1
@String.new                                                  // [30191] call String.new 1
D=A                                                          // [30192] call String.new 1
@R14                                                         // [30193] call String.new 1
M=D                                                          // [30194] call String.new 1
@return-305                                                  // [30195] call String.new 1
D=A                                                          // [30196] call String.new 1
@CALL                                                        // [30197] call String.new 1
0;JEQ                                                        // [30198] call String.new 1
(return-305)                                                 // [     ] call String.new 1
@69                                                          // [30199] push constant 69
D=A                                                          // [30200] push constant 69
@SP                                                          // [30201] push constant 69
M=M+1                                                        // [30202] push constant 69
A=M-1                                                        // [30203] push constant 69
M=D                                                          // [30204] push constant 69
@2                                                           // [30205] call String.appendChar 2
D=A                                                          // [30206] call String.appendChar 2
@R13                                                         // [30207] call String.appendChar 2
M=D                                                          // [30208] call String.appendChar 2
@String.appendChar                                           // [30209] call String.appendChar 2
D=A                                                          // [30210] call String.appendChar 2
@R14                                                         // [30211] call String.appendChar 2
M=D                                                          // [30212] call String.appendChar 2
@return-306                                                  // [30213] call String.appendChar 2
D=A                                                          // [30214] call String.appendChar 2
@CALL                                                        // [30215] call String.appendChar 2
0;JEQ                                                        // [30216] call String.appendChar 2
(return-306)                                                 // [     ] call String.appendChar 2
@82                                                          // [30217] push constant 82
D=A                                                          // [30218] push constant 82
@SP                                                          // [30219] push constant 82
M=M+1                                                        // [30220] push constant 82
A=M-1                                                        // [30221] push constant 82
M=D                                                          // [30222] push constant 82
@2                                                           // [30223] call String.appendChar 2
D=A                                                          // [30224] call String.appendChar 2
@R13                                                         // [30225] call String.appendChar 2
M=D                                                          // [30226] call String.appendChar 2
@String.appendChar                                           // [30227] call String.appendChar 2
D=A                                                          // [30228] call String.appendChar 2
@R14                                                         // [30229] call String.appendChar 2
M=D                                                          // [30230] call String.appendChar 2
@return-307                                                  // [30231] call String.appendChar 2
D=A                                                          // [30232] call String.appendChar 2
@CALL                                                        // [30233] call String.appendChar 2
0;JEQ                                                        // [30234] call String.appendChar 2
(return-307)                                                 // [     ] call String.appendChar 2
@82                                                          // [30235] push constant 82
D=A                                                          // [30236] push constant 82
@SP                                                          // [30237] push constant 82
M=M+1                                                        // [30238] push constant 82
A=M-1                                                        // [30239] push constant 82
M=D                                                          // [30240] push constant 82
@2                                                           // [30241] call String.appendChar 2
D=A                                                          // [30242] call String.appendChar 2
@R13                                                         // [30243] call String.appendChar 2
M=D                                                          // [30244] call String.appendChar 2
@String.appendChar                                           // [30245] call String.appendChar 2
D=A                                                          // [30246] call String.appendChar 2
@R14                                                         // [30247] call String.appendChar 2
M=D                                                          // [30248] call String.appendChar 2
@return-308                                                  // [30249] call String.appendChar 2
D=A                                                          // [30250] call String.appendChar 2
@CALL                                                        // [30251] call String.appendChar 2
0;JEQ                                                        // [30252] call String.appendChar 2
(return-308)                                                 // [     ] call String.appendChar 2
@1                                                           // [30253] call Output.printString 1
D=A                                                          // [30254] call Output.printString 1
@R13                                                         // [30255] call Output.printString 1
M=D                                                          // [30256] call Output.printString 1
@Output.printString                                          // [30257] call Output.printString 1
D=A                                                          // [30258] call Output.printString 1
@R14                                                         // [30259] call Output.printString 1
M=D                                                          // [30260] call Output.printString 1
@return-309                                                  // [30261] call Output.printString 1
D=A                                                          // [30262] call Output.printString 1
@CALL                                                        // [30263] call Output.printString 1
0;JEQ                                                        // [30264] call Output.printString 1
(return-309)                                                 // [     ] call Output.printString 1
@SP                                                          // [30265] pop temp 0
AM=M-1                                                       // [30266] pop temp 0
D=M                                                          // [30267] pop temp 0
@5                                                           // [30268] pop temp 0
M=D                                                          // [30269] pop temp 0
@ARG                                                         // [30270] push argument 0
D=M                                                          // [30271] push argument 0
@0                                                           // [30272] push argument 0
A=D+A                                                        // [30273] push argument 0
D=M                                                          // [30274] push argument 0
@SP                                                          // [30275] push argument 0
M=M+1                                                        // [30276] push argument 0
A=M-1                                                        // [30277] push argument 0
M=D                                                          // [30278] push argument 0
@1                                                           // [30279] call Output.printInt 1
D=A                                                          // [30280] call Output.printInt 1
@R13                                                         // [30281] call Output.printInt 1
M=D                                                          // [30282] call Output.printInt 1
@Output.printInt                                             // [30283] call Output.printInt 1
D=A                                                          // [30284] call Output.printInt 1
@R14                                                         // [30285] call Output.printInt 1
M=D                                                          // [30286] call Output.printInt 1
@return-310                                                  // [30287] call Output.printInt 1
D=A                                                          // [30288] call Output.printInt 1
@CALL                                                        // [30289] call Output.printInt 1
0;JEQ                                                        // [30290] call Output.printInt 1
(return-310)                                                 // [     ] call Output.printInt 1
@SP                                                          // [30291] pop temp 0
AM=M-1                                                       // [30292] pop temp 0
D=M                                                          // [30293] pop temp 0
@5                                                           // [30294] pop temp 0
M=D                                                          // [30295] pop temp 0
@0                                                           // [30296] call Sys.halt 0
D=A                                                          // [30297] call Sys.halt 0
@R13                                                         // [30298] call Sys.halt 0
M=D                                                          // [30299] call Sys.halt 0
@Sys.halt                                                    // [30300] call Sys.halt 0
D=A                                                          // [30301] call Sys.halt 0
@R14                                                         // [30302] call Sys.halt 0
M=D                                                          // [30303] call Sys.halt 0
@return-311                                                  // [30304] call Sys.halt 0
D=A                                                          // [30305] call Sys.halt 0
@CALL                                                        // [30306] call Sys.halt 0
0;JEQ                                                        // [30307] call Sys.halt 0
(return-311)                                                 // [     ] call Sys.halt 0
@SP                                                          // [30308] pop temp 0
AM=M-1                                                       // [30309] pop temp 0
D=M                                                          // [30310] pop temp 0
@5                                                           // [30311] pop temp 0
M=D                                                          // [30312] pop temp 0
@SP                                                          // [30313] push constant 0
M=M+1                                                        // [30314] push constant 0
A=M-1                                                        // [30315] push constant 0
M=0                                                          // [30316] push constant 0
@RETURN                                                      // [30317] return
0;JEQ                                                        // [30318] return
