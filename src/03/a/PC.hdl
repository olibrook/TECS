// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t]==1) out[t+1] = 0
 * else if (load[t]==1)  out[t+1] = in[t]
 * else if (inc[t]==1)   out[t+1] = out[t] + 1  (integer addition)
 * else                  out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
        Not(in=load, out=notload);
        Not(in=reset, out=notreset);
        Not(in=inc, out=notinc);
        
        And(a=notreset, b=load, out=shouldload);
        
        And(a=notload, b=notreset, out=notloadorreset);
        And(a=notloadorreset, b=inc, out=shouldinc);
        
        Mux16(a[0..15]=false, b[2..15]=false, b[1]=false, b[0]=true , sel=reset, out=operation1);
        Mux16(a=operation1, b[2..15]=false, b[1]=true , b[0]=false, sel=shouldload, out=operation2);
        Mux16(a=operation2, b[2..15]=false, b[1]=true , b[0]=true , sel=shouldinc, out[0..1]=operationselect);
        
        Add16(a=feedback, b[1..15]=false, b[0]=true, out=incremented);
        
        Mux4Way16(a=feedback, b[0..15]=false, c=in, d=incremented, out=store, sel=operationselect);
                
        Or(a=load, b=inc, out=or1);
        Or(a=reset, b=or1, out=statechange);
        
        Register(in=store, load=statechange, out=out, out=feedback);
}